import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o,c as l,a as e,d as n,e as p,b as i}from"./app-DMmdIwn0.js";const r={},c=i(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>当你一个解决方案中项目太多的时候，导致加载等非常慢，所以就可以考虑一次只加载部分项目，那么就使用到了这个slngen，SlnGen 是一个 Visual Studio 解决方案文件生成器，读取一个给定项目的项目引用，按需创建一个 Visual Studio 解决方案。例如，你可以针对一个单元测试项目运行 SlnGen，并呈现一个包含单元测试项目及其所有项目引用的 Visual Studio 解决方案。你也可以针对一个有根的文件夹中的遍历项目运行 SlnGen，打开一个包含你的项目树的那个视图的 Visual Studio 解决方案。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>安装slngen工具</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>dotnet tool install <span class="token operator">--</span><span class="token keyword">global</span> Microsoft<span class="token punctuation">.</span>VisualStudio<span class="token punctuation">.</span>SlnGen<span class="token punctuation">.</span>Tool <span class="token operator">--</span><span class="token keyword">add</span><span class="token operator">-</span><span class="token class-name">source</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>api<span class="token punctuation">.</span>nuget<span class="token punctuation">.</span>org<span class="token operator">/</span>v3<span class="token operator">/</span>index<span class="token punctuation">.</span>json <span class="token operator">--</span>ignore<span class="token operator">-</span>failed<span class="token operator">-</span>sources
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后就全局安装了slngen工具，可以在任何地方使用slngen命令了</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>slngen <span class="token operator">--</span>help
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>为项目中所有需要启动的入口项目安装nuget包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.VisualStudio.SlnGen&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;9.5.2&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后比如我们有两个Api项目A、B，一个类库C，这个A、B都引用了类库C，这时候我们如果想只加载A的对应的引用项目解决方案，我们就需要这么操作</p><p>slngen 是通过驱动 Visual Studio 来生成解决方案的，因此需要在命令行中具备 MSBuild.exe 的路径。所以我们需要使用Developer Command Prompt for VS 2022(<strong>在电脑中搜索该程序，并切换到项目目录下</strong>)来运行slngen命令，比如</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>slngen A<span class="token operator">/</span>A<span class="token punctuation">.</span>csproj
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过上面的命令，我们就使用slngen加载了A项目以及对应的引用项目C，并且B项目没有被加载。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>通过 slngen，我们可以很方便地加载一个项目及其所有的项目引用。这对于我们在 Visual Studio 中打开一个项目树的视图非常有用。可惜 Rider 不行。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2>`,16),d={href:"https://mp.weixin.qq.com/s/GDI0dMLpwe2tkw_FaDhOxg",target:"_blank",rel:"noopener noreferrer"};function u(g,m){const a=t("ExternalLinkIcon");return o(),l("div",null,[c,e("p",null,[n("C## 如何部分加载“超大”解决方案中的部分项目："),e("a",d,[n("https://mp.weixin.qq.com/s/GDI0dMLpwe2tkw_FaDhOxg"),p(a)])])])}const v=s(r,[["render",u],["__file","slngenLoading.html.vue"]]),S=JSON.parse('{"path":"/soft/devTools/VisualStudio/slngenLoading.html","title":"通过Slngen加载指定项目树","lang":"zh-CN","frontmatter":{"title":"通过Slngen加载指定项目树","lang":"zh-CN","date":"2023-07-22T00:00:00.000Z","publish":true,"author":"azrng","order":8,"category":["Visual Studio"],"tag":["无"],"filename":"tongguoslngenjiazaizhidingxiangmushu","description":"前言 当你一个解决方案中项目太多的时候，导致加载等非常慢，所以就可以考虑一次只加载部分项目，那么就使用到了这个slngen，SlnGen 是一个 Visual Studio 解决方案文件生成器，读取一个给定项目的项目引用，按需创建一个 Visual Studio 解决方案。例如，你可以针对一个单元测试项目运行 SlnGen，并呈现一个包含单元测试项目及...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/soft/devTools/VisualStudio/slngenLoading.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"通过Slngen加载指定项目树"}],["meta",{"property":"og:description","content":"前言 当你一个解决方案中项目太多的时候，导致加载等非常慢，所以就可以考虑一次只加载部分项目，那么就使用到了这个slngen，SlnGen 是一个 Visual Studio 解决方案文件生成器，读取一个给定项目的项目引用，按需创建一个 Visual Studio 解决方案。例如，你可以针对一个单元测试项目运行 SlnGen，并呈现一个包含单元测试项目及..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-18T15:34:08.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-07-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-18T15:34:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"通过Slngen加载指定项目树\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-18T15:34:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1690010917000,"updatedTime":1695051248000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.83,"words":549},"filePathRelative":"soft/devTools/VisualStudio/slngenLoading.md","localizedDate":"2023年7月22日","excerpt":"<h2>前言</h2>\\n<p>当你一个解决方案中项目太多的时候，导致加载等非常慢，所以就可以考虑一次只加载部分项目，那么就使用到了这个slngen，SlnGen 是一个 Visual Studio 解决方案文件生成器，读取一个给定项目的项目引用，按需创建一个 Visual Studio 解决方案。例如，你可以针对一个单元测试项目运行 SlnGen，并呈现一个包含单元测试项目及其所有项目引用的 Visual Studio 解决方案。你也可以针对一个有根的文件夹中的遍历项目运行 SlnGen，打开一个包含你的项目树的那个视图的 Visual Studio 解决方案。</p>\\n<h2>操作</h2>","autoDesc":true}');export{v as comp,S as data};
