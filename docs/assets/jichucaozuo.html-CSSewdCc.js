import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as a,b as t}from"./app-Bw62I61B.js";const o={},e=t(`<h2 id="布局" tabindex="-1"><a class="header-anchor" href="#布局"><span>布局</span></a></h2><ul><li>布局原则 <ul><li>一个窗口只能包含一个布局元素，可以使用布局元素嵌套多个元素</li><li>一应该显式设置元素尺寸</li><li>不应该使用坐标设置元素的位置</li><li>可以嵌套布局容器</li></ul></li></ul><h3 id="grid" tabindex="-1"><a class="header-anchor" href="#grid"><span>Grid</span></a></h3><p>Grid通过自定义行列来进行布局，类似于表格。通过定义Grid的RowDifinitions和ColumnDifinitions来实现对于表格行和列的定义，元素根据附加属性Grid.Row和Grid.Column确定自己的位置。</p><h4 id="行列定义" tabindex="-1"><a class="header-anchor" href="#行列定义"><span>行列定义</span></a></h4><p>两行两列的布局</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">Window</span>
    x<span class="token punctuation">:</span>Class<span class="token operator">=</span><span class="token string">&quot;WpfApp1.MainWindow&quot;</span>
    xmlns<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>
    xmlns<span class="token punctuation">:</span>x<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>
    xmlns<span class="token punctuation">:</span>d<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span>
    xmlns<span class="token punctuation">:</span>local<span class="token operator">=</span><span class="token string">&quot;clr-namespace:WpfApp1&quot;</span>
    xmlns<span class="token punctuation">:</span>mc<span class="token operator">=</span><span class="token string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span>
    Title<span class="token operator">=</span><span class="token string">&quot;MainWindow&quot;</span>
    Width<span class="token operator">=</span><span class="token string">&quot;800&quot;</span>
    Height<span class="token operator">=</span><span class="token string">&quot;450&quot;</span>
    mc<span class="token punctuation">:</span>Ignorable<span class="token operator">=</span><span class="token string">&quot;d&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Grid<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Grid<span class="token punctuation">.</span>RowDefinitions<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>RowDefinition <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>RowDefinition <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token punctuation">.</span>RowDefinitions<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Grid<span class="token punctuation">.</span>ColumnDefinitions<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>ColumnDefinition <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>ColumnDefinition <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token punctuation">.</span>ColumnDefinitions<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Border
            Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;0&quot;</span>
            Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;0&quot;</span>
            Background<span class="token operator">=</span><span class="token string">&quot;Red&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Border
            Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;0&quot;</span>
            Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;1&quot;</span>
            Background<span class="token operator">=</span><span class="token string">&quot;Yellow&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Border
            Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;1&quot;</span>
            Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;0&quot;</span>
            Background<span class="token operator">=</span><span class="token string">&quot;Blue&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Border
            Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;1&quot;</span>
            Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;1&quot;</span>
            Background<span class="token operator">=</span><span class="token string">&quot;Green&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Window<span class="token operator">&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="行高和列宽的定义" tabindex="-1"><a class="header-anchor" href="#行高和列宽的定义"><span>行高和列宽的定义</span></a></h4><p>固定长度：值为一个确定的数字 自动长度：值为Auto，取实际控件所需的最小值 比例长度：表示占用剩余的全部宽度；两行都是，将平分剩余宽度；一个2*，一个*，则前者占剩余全部宽度的2/3，后者占1/3；</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>Grid<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Grid<span class="token punctuation">.</span>ColumnDefinitions<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">ColumnDefinition</span> Width<span class="token operator">=</span><span class="token string">&quot;40&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">ColumnDefinition</span> Width<span class="token operator">=</span><span class="token string">&quot;*&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">ColumnDefinition</span> Width<span class="token operator">=</span><span class="token string">&quot;2*&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">ColumnDefinition</span> Width<span class="token operator">=</span><span class="token string">&quot;Auto&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token punctuation">.</span>ColumnDefinitions<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn&quot;</span> Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;0&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn&quot;</span> Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;1&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn&quot;</span> Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;2&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn&quot;</span> Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;3&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="合并行和列" tabindex="-1"><a class="header-anchor" href="#合并行和列"><span>合并行和列</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>Grid Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;0&quot;</span> Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;1&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Grid<span class="token punctuation">.</span>ColumnDefinitions<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">ColumnDefinition</span> Width<span class="token operator">=</span><span class="token string">&quot;40&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">ColumnDefinition</span> Width<span class="token operator">=</span><span class="token string">&quot;*&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">ColumnDefinition</span> Width<span class="token operator">=</span><span class="token string">&quot;2*&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">ColumnDefinition</span> Width<span class="token operator">=</span><span class="token string">&quot;Auto&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token punctuation">.</span>ColumnDefinitions<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Grid<span class="token punctuation">.</span>RowDefinitions<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>RowDefinition <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>RowDefinition <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token punctuation">.</span>RowDefinitions<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Button
        Grid<span class="token punctuation">.</span>RowSpan<span class="token operator">=</span><span class="token string">&quot;2&quot;</span>
        Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;0&quot;</span>
        Content<span class="token operator">=</span><span class="token string">&quot;btn1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Button
        Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;1&quot;</span>
        Grid<span class="token punctuation">.</span>ColumnSpan<span class="token operator">=</span><span class="token string">&quot;2&quot;</span>
        Content<span class="token operator">=</span><span class="token string">&quot;btn2&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Button Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;3&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn3&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Button
        Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;2&quot;</span>
        Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;1&quot;</span>
        Grid<span class="token punctuation">.</span>ColumnSpan<span class="token operator">=</span><span class="token string">&quot;3&quot;</span>
        Content<span class="token operator">=</span><span class="token string">&quot;btn4&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="uniformgrid" tabindex="-1"><a class="header-anchor" href="#uniformgrid"><span>UniformGrid</span></a></h3><p>UniformGrid是Grid的简化版，每个单元格的大小相同，不需要定义行列集合。每个单元格始终具有相同的大小，每个单元格只能容纳一个控件。 注意：UniformGrid中没有Row和Column附加属性，也没有空白单元格。</p><p>如果没有设置Rows或者Colums，则按照定义在其内部的元素个数，自动创建行列，并通常保持相同的行列数。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>UniformGrid Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;0&quot;</span> Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;2&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn2&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn3&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn4&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn5&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn6&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn7&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn8&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn9&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>UniformGrid<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在指定行和列的数量，均分有限的容器空间，比如下面的三行三列</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>UniformGrid Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;3&quot;</span> Columns<span class="token operator">=</span><span class="token string">&quot;3&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn2&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn3&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn4&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn5&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn6&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn7&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn8&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn9&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>UniformGrid<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stackpanel" tabindex="-1"><a class="header-anchor" href="#stackpanel"><span>StackPanel</span></a></h3><p>StackPanel将控件按照行或列来顺序排列，但不会换行。通过设置面板的Orientation属性设置了两种排列方式：横排（Horizontal默认的）和竖排（Vertical），默认为竖排（Vertical）。 注意：如果遇到空间不够的情况就显示不全了</p><p>竖排</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">Grid</span> Width<span class="token operator">=</span><span class="token string">&quot;200&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">StackPanel</span> Orientation<span class="token operator">=</span><span class="token string">&quot;Horizontal&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Height<span class="token operator">=</span><span class="token string">&quot;40&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Height<span class="token operator">=</span><span class="token string">&quot;40&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Height<span class="token operator">=</span><span class="token string">&quot;40&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Height<span class="token operator">=</span><span class="token string">&quot;40&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Height<span class="token operator">=</span><span class="token string">&quot;40&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Height<span class="token operator">=</span><span class="token string">&quot;40&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Height<span class="token operator">=</span><span class="token string">&quot;40&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>横排(从左向右，从右向左)</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>  横排，从左到右  <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>StackPanel
    Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;2&quot;</span>
    Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;2&quot;</span>
    Orientation<span class="token operator">=</span><span class="token string">&quot;Horizontal&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn2&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn3&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn4&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn5&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn6&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn7&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn8&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn9&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>


<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>  横排，从右到左  <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>StackPanel
    Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;2&quot;</span>
    Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;3&quot;</span>
    FlowDirection<span class="token operator">=</span><span class="token string">&quot;RightToLeft&quot;</span>
    Orientation<span class="token operator">=</span><span class="token string">&quot;Horizontal&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn2&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn3&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn4&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn5&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn6&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn7&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn8&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn9&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="wrappanel" tabindex="-1"><a class="header-anchor" href="#wrappanel"><span>WrapPanel</span></a></h3><p>WrapPanel布局面板将各个控件按照一定方向罗列，当长度或高度不够时自动调整进行换行换列。</p><p>注意WrapPanel的两个属性： ItemHeight——所有子元素都一致的高度，任何比ItemHeight高的元素都将被截断。ItemWidth——所有子元素都一致的宽度，任何比ItemWidth高的元素都将被截断。</p><p>Orientation=&quot;Horizontal&quot;时各控件从左至右罗列，当面板长度不够时，子控件就会自动换行，继续按照从左至右的顺序排列。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>WrapPanel
    Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;4&quot;</span>
    Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;1&quot;</span>
    Orientation<span class="token operator">=</span><span class="token string">&quot;Horizontal&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn2&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn3&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn4&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn5&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn6&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn7&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn8&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn9&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>WrapPanel<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Orientation=&quot; Vertical&quot;时各控件从上至下罗列，当面板高度不够时，子控件就会自动换列，继续按照从上至下的顺序排列。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>WrapPanel
    Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;4&quot;</span>
    Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;2&quot;</span>
    Orientation<span class="token operator">=</span><span class="token string">&quot;Vertical&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn2&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn3&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn4&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn5&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn6&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn7&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn8&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;btn9&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>WrapPanel<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dockpanel" tabindex="-1"><a class="header-anchor" href="#dockpanel"><span>DockPanel</span></a></h3><p>DockPanel支持让元素简单地停靠在整个面板的某一条边上，然后拉伸元素以填满全部宽度或高度。它也支持让一个元素填充其他已停靠元素没有占用的剩余空间（设置LastChildFill后就不用填充）。DockPanel有一个Dock附加属性，因此子元素用4个值来控制它们的停靠：Left、Top、Right、Bottom.</p><p>场景：左上右下，占完整个内容</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>  左上右下，占完整个内容  <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>DockPanel Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;3&quot;</span> Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;1&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn1&quot;</span> DockPanel<span class="token punctuation">.</span>Dock<span class="token operator">=</span><span class="token string">&quot;Left&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn2&quot;</span> DockPanel<span class="token punctuation">.</span>Dock<span class="token operator">=</span><span class="token string">&quot;Top&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn3&quot;</span> DockPanel<span class="token punctuation">.</span>Dock<span class="token operator">=</span><span class="token string">&quot;Right&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn4&quot;</span> DockPanel<span class="token punctuation">.</span>Dock<span class="token operator">=</span><span class="token string">&quot;Bottom&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>DockPanel<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置LastChildFill属性为false，最后一个元素不填充</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>  左上右下，最后一个元素不填充  <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>DockPanel
    Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;3&quot;</span>
    Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;2&quot;</span>
    LastChildFill<span class="token operator">=</span><span class="token string">&quot;False&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn1&quot;</span> DockPanel<span class="token punctuation">.</span>Dock<span class="token operator">=</span><span class="token string">&quot;Left&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn2&quot;</span> DockPanel<span class="token punctuation">.</span>Dock<span class="token operator">=</span><span class="token string">&quot;Top&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn3&quot;</span> DockPanel<span class="token punctuation">.</span>Dock<span class="token operator">=</span><span class="token string">&quot;Right&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;btn4&quot;</span> DockPanel<span class="token punctuation">.</span>Dock<span class="token operator">=</span><span class="token string">&quot;Bottom&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>DockPanel<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scrollviewer" tabindex="-1"><a class="header-anchor" href="#scrollviewer"><span>ScrollViewer</span></a></h3><p>ScrollViewer是带有滚动条的面板。在ScrollViewer中只能有一个子控件，若要显示多个子控件，需要将一个附加的 Panel控件放置在父 ScrollViewer中，然后可以将子控件放置在该panel控件中。 HorizontalScrollBarVisibility水平滚动条是否显示（默认：Hidden） VerticalScrollBarVisibility垂直滚动条是否显示（默认：Visible）</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>ScrollViewer
    Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;5&quot;</span>
    Grid<span class="token punctuation">.</span>Column<span class="token operator">=</span><span class="token string">&quot;1&quot;</span>
    HorizontalScrollBarVisibility<span class="token operator">=</span><span class="token string">&quot;Auto&quot;</span>
    VerticalScrollBarVisibility<span class="token operator">=</span><span class="token string">&quot;Visible&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span>
        Width<span class="token operator">=</span><span class="token string">&quot;1000&quot;</span>
        Height<span class="token operator">=</span><span class="token string">&quot;460&quot;</span>
        Content<span class="token operator">=</span><span class="token string">&quot;btn1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ScrollViewer<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通常设置HorizontalScrollBarVisibility=&quot;Auto&quot;和VerticalScrollBarVisibility=“Auto”(当内容超出可视范围时，才显示横向/纵向滚动条)</p><h3 id="tabpanel" tabindex="-1"><a class="header-anchor" href="#tabpanel"><span>TabPanel</span></a></h3><h3 id="toolbarpanel" tabindex="-1"><a class="header-anchor" href="#toolbarpanel"><span>ToolBarPanel</span></a></h3><h2 id="模板" tabindex="-1"><a class="header-anchor" href="#模板"><span>模板</span></a></h2><h3 id="数据模板" tabindex="-1"><a class="header-anchor" href="#数据模板"><span>数据模板</span></a></h3><p>DataTemplate的应用</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>Grid<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">ListBox</span> x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;list&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>ListBox<span class="token punctuation">.</span>ItemTemplate<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>DataTemplate<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>StackPanel<span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span><span class="token class-name">Border</span>
                        Width<span class="token operator">=</span><span class="token string">&quot;10&quot;</span>
                        Height<span class="token operator">=</span><span class="token string">&quot;10&quot;</span>
                        Background<span class="token operator">=</span><span class="token string">&quot;{Binding Code}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span><span class="token class-name">TextBlock</span> Margin<span class="token operator">=</span><span class="token string">&quot;10,0&quot;</span> Text<span class="token operator">=</span><span class="token string">&quot;{Binding Name}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>DataTemplate<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>ListBox<span class="token punctuation">.</span>ItemTemplate<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ListBox<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后台逻辑</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">MainWindow</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Window</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">MainWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> testList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Color<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">new</span>  <span class="token constructor-invocation class-name">Color</span><span class="token punctuation">(</span><span class="token string">&quot;浅粉色&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;#FFB6C1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span>  <span class="token constructor-invocation class-name">Color</span><span class="token punctuation">(</span><span class="token string">&quot;粉红&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;#FFC0CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span>  <span class="token constructor-invocation class-name">Color</span><span class="token punctuation">(</span><span class="token string">&quot;猩红&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;#DC143C&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span>ItemsSource <span class="token operator">=</span> testList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Color</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">Color</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> code<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        Code <span class="token operator">=</span> code<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Code <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="样式" tabindex="-1"><a class="header-anchor" href="#样式"><span>样式</span></a></h2><ul><li>字体：FontFamily</li><li>字体大小：FontSize</li><li>背景颜色：Backgroud</li><li>字体颜色：Foregound</li><li>边距：Margin</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">Window</span>
    x<span class="token punctuation">:</span>Class<span class="token operator">=</span><span class="token string">&quot;WpfApp1.MainWindow&quot;</span>
    xmlns<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>
    xmlns<span class="token punctuation">:</span>x<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>
    xmlns<span class="token punctuation">:</span>d<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span>
    xmlns<span class="token punctuation">:</span>local<span class="token operator">=</span><span class="token string">&quot;clr-namespace:WpfApp1&quot;</span>
    xmlns<span class="token punctuation">:</span>mc<span class="token operator">=</span><span class="token string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span>
    Title<span class="token operator">=</span><span class="token string">&quot;MainWindow&quot;</span>
    Width<span class="token operator">=</span><span class="token string">&quot;800&quot;</span>
    Height<span class="token operator">=</span><span class="token string">&quot;450&quot;</span>
    mc<span class="token punctuation">:</span>Ignorable<span class="token operator">=</span><span class="token string">&quot;d&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Window<span class="token punctuation">.</span>Resources<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Style</span> x<span class="token punctuation">:</span>Key<span class="token operator">=</span><span class="token string">&quot;BaseButtonStyle&quot;</span> TargetType<span class="token operator">=</span><span class="token string">&quot;Button&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;FontSize&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;18&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;Foreground&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;White&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;Background&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;Red&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Style<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Style</span>
            x<span class="token punctuation">:</span>Key<span class="token operator">=</span><span class="token string">&quot;ButtonStyle&quot;</span>
            BasedOn<span class="token operator">=</span><span class="token string">&quot;{StaticResource BaseButtonStyle}&quot;</span>
            TargetType<span class="token operator">=</span><span class="token string">&quot;Button&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;Content&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;按钮xxx&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;Background&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;Green&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Style<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Window<span class="token punctuation">.</span>Resources<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Grid<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>StackPanel<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;你好1&quot;</span> Style<span class="token operator">=</span><span class="token string">&quot;{StaticResource ButtonStyle}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;傻子1&quot;</span> Style<span class="token operator">=</span><span class="token string">&quot;{StaticResource ButtonStyle}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;小伙子1&quot;</span> Style<span class="token operator">=</span><span class="token string">&quot;{StaticResource ButtonStyle}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">Button</span> Content<span class="token operator">=</span><span class="token string">&quot;垃圾1&quot;</span> Style<span class="token operator">=</span><span class="token string">&quot;{StaticResource ButtonStyle}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Window<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="触发器" tabindex="-1"><a class="header-anchor" href="#触发器"><span>触发器</span></a></h2><p>当达到触发的条件，就执行预期内的响应，可以的样式、数据变化、动画等。</p><h3 id="trigger" tabindex="-1"><a class="header-anchor" href="#trigger"><span>Trigger</span></a></h3><p>检测依赖属性的变化，触发器生效</p><p>实现效果：鼠标移入移出改变背景颜色</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">Window</span>
    x<span class="token punctuation">:</span>Class<span class="token operator">=</span><span class="token string">&quot;WpfAppSample.MainWindow&quot;</span>
    xmlns<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>
    xmlns<span class="token punctuation">:</span>x<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>
    xmlns<span class="token punctuation">:</span>d<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span>
    xmlns<span class="token punctuation">:</span>local<span class="token operator">=</span><span class="token string">&quot;clr-namespace:WpfAppSample&quot;</span>
    xmlns<span class="token punctuation">:</span>mc<span class="token operator">=</span><span class="token string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span>
    Title<span class="token operator">=</span><span class="token string">&quot;MainWindow&quot;</span>
    Width<span class="token operator">=</span><span class="token string">&quot;800&quot;</span>
    Height<span class="token operator">=</span><span class="token string">&quot;450&quot;</span>
    mc<span class="token punctuation">:</span>Ignorable<span class="token operator">=</span><span class="token string">&quot;d&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Window<span class="token punctuation">.</span>Resources<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Style</span> x<span class="token punctuation">:</span>Key<span class="token operator">=</span><span class="token string">&quot;BorderStyle&quot;</span> TargetType<span class="token operator">=</span><span class="token string">&quot;Border&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;BorderThickness&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;5&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Style<span class="token punctuation">.</span>Triggers<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token class-name">Trigger</span> Property<span class="token operator">=</span><span class="token string">&quot;IsMouseOver&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;True&quot;</span><span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;Background&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;Blue&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;BorderBrush&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;Red&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>Trigger<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token class-name">Trigger</span> Property<span class="token operator">=</span><span class="token string">&quot;IsMouseOver&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;False&quot;</span><span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;Background&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;Red&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;BorderBrush&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;Blue&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>Trigger<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>Style<span class="token punctuation">.</span>Triggers<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Style<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Window<span class="token punctuation">.</span>Resources<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Grid<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Border</span>
            Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span>
            Height<span class="token operator">=</span><span class="token string">&quot;100&quot;</span>
            Style<span class="token operator">=</span><span class="token string">&quot;{StaticResource BorderStyle}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Window<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="multitrigger" tabindex="-1"><a class="header-anchor" href="#multitrigger"><span>MultiTrigger</span></a></h3><p>可以设置当多个条件满足的时候触发</p><p>实现效果，当鼠标进入文本框范围，并且光标设置到TextBox上，则把TextBox的背景颜色改为Red</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>Window<span class="token punctuation">.</span>Resources<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Style</span> x<span class="token punctuation">:</span>Key<span class="token operator">=</span><span class="token string">&quot;TextBoxStyle&quot;</span> TargetType<span class="token operator">=</span><span class="token string">&quot;{x:Type TextBox}&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;BorderThickness&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Style<span class="token punctuation">.</span>Triggers<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>MultiTrigger<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>MultiTrigger<span class="token punctuation">.</span>Conditions<span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span><span class="token class-name">Condition</span> Property<span class="token operator">=</span><span class="token string">&quot;IsMouseOver&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span><span class="token class-name">Condition</span> Property<span class="token operator">=</span><span class="token string">&quot;IsFocused&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>MultiTrigger<span class="token punctuation">.</span>Conditions<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>MultiTrigger<span class="token punctuation">.</span>Setters<span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;Background&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;Red&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>MultiTrigger<span class="token punctuation">.</span>Setters<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>MultiTrigger<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Style<span class="token punctuation">.</span>Triggers<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Style<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Window<span class="token punctuation">.</span>Resources<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>Grid<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">StackPanel</span> VerticalAlignment<span class="token operator">=</span><span class="token string">&quot;Center&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">TextBox</span>
            Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span>
            Height<span class="token operator">=</span><span class="token string">&quot;30&quot;</span>
            Style<span class="token operator">=</span><span class="token string">&quot;{DynamicResource TextBoxStyle}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Button</span>
            Height<span class="token operator">=</span><span class="token string">&quot;30&quot;</span>
            Margin<span class="token operator">=</span><span class="token string">&quot;0,10,0,0&quot;</span>
            Content<span class="token operator">=</span><span class="token string">&quot;鼠标滑动到文本框并且光标聚焦的时候修改文本框的背景色&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="eventtrigger" tabindex="-1"><a class="header-anchor" href="#eventtrigger"><span>EventTrigger</span></a></h3><p>事件触发器，当触发了某类事件，触发器执行响应操作</p><p>实现效果：当鼠标移动到按钮范围上，在0.02秒内，把按钮的字体变成18号，当鼠标离开按钮，在0.02秒内，把按钮的字体变成13号</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>Window<span class="token punctuation">.</span>Resources<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Style</span> x<span class="token punctuation">:</span>Key<span class="token operator">=</span><span class="token string">&quot;ButtonStyle&quot;</span> TargetType<span class="token operator">=</span><span class="token string">&quot;{x:Type Button}&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;BorderThickness&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Style<span class="token punctuation">.</span>Triggers<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">EventTrigger</span> RoutedEvent<span class="token operator">=</span><span class="token string">&quot;MouseMove&quot;</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>EventTrigger<span class="token punctuation">.</span>Actions<span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span>BeginStoryboard<span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span>Storyboard<span class="token operator">&gt;</span>
                            <span class="token operator">&lt;</span>DoubleAnimation
                                Storyboard<span class="token punctuation">.</span>TargetProperty<span class="token operator">=</span><span class="token string">&quot;FontSize&quot;</span>
                                To<span class="token operator">=</span><span class="token string">&quot;18&quot;</span>
                                Duration<span class="token operator">=</span><span class="token string">&quot;0:0:0.02&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span><span class="token operator">/</span>Storyboard<span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span><span class="token operator">/</span>BeginStoryboard<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>EventTrigger<span class="token punctuation">.</span>Actions<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>EventTrigger<span class="token operator">&gt;</span>

            <span class="token operator">&lt;</span><span class="token class-name">EventTrigger</span> RoutedEvent<span class="token operator">=</span><span class="token string">&quot;MouseLeave&quot;</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>EventTrigger<span class="token punctuation">.</span>Actions<span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span>BeginStoryboard<span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span>Storyboard<span class="token operator">&gt;</span>
                            <span class="token operator">&lt;</span>DoubleAnimation
                                Storyboard<span class="token punctuation">.</span>TargetProperty<span class="token operator">=</span><span class="token string">&quot;FontSize&quot;</span>
                                To<span class="token operator">=</span><span class="token string">&quot;13&quot;</span>
                                Duration<span class="token operator">=</span><span class="token string">&quot;0:0:0.02&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span><span class="token operator">/</span>Storyboard<span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span><span class="token operator">/</span>BeginStoryboard<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>EventTrigger<span class="token punctuation">.</span>Actions<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>EventTrigger<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Style<span class="token punctuation">.</span>Triggers<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Style<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Window<span class="token punctuation">.</span>Resources<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>Grid<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">StackPanel</span> VerticalAlignment<span class="token operator">=</span><span class="token string">&quot;Center&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Button</span>
            Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span>
            Height<span class="token operator">=</span><span class="token string">&quot;30&quot;</span>
            Content<span class="token operator">=</span><span class="token string">&quot;Hello&quot;</span>
            FontSize<span class="token operator">=</span><span class="token string">&quot;13&quot;</span>
            Style<span class="token operator">=</span><span class="token string">&quot;{DynamicResource ButtonStyle}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>DataTrigger/MultiDataTrigger的功能类似，只不过触发条件变成了以数据的方式为条件。</p><h2 id="绑定" tabindex="-1"><a class="header-anchor" href="#绑定"><span>绑定</span></a></h2><h3 id="元素绑定" tabindex="-1"><a class="header-anchor" href="#元素绑定"><span>元素绑定</span></a></h3><h4 id="单向绑定-oneway" tabindex="-1"><a class="header-anchor" href="#单向绑定-oneway"><span>单向绑定(OneWay)</span></a></h4><p>当源属性发生变化更新目标属性</p><p>让文本框的值跟着随滑块的滑动改变值，只允许滑块去改变文本框的值</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>StackPanel<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Slider</span>
        x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;slider&quot;</span>
        Width<span class="token operator">=</span><span class="token string">&quot;200&quot;</span>
        Value<span class="token operator">=</span><span class="token string">&quot;5&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">TextBox</span> Text<span class="token operator">=</span><span class="token string">&quot;{Binding ElementName=slider, Path=Value, Mode=OneWay}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="twoway-双向绑定-默认" tabindex="-1"><a class="header-anchor" href="#twoway-双向绑定-默认"><span>TwoWay(双向绑定)(默认)</span></a></h4><p>当源属性发生变化更新模板属性，目标属性发生变化也更新源属性</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>StackPanel<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Slider</span> Name<span class="token operator">=</span><span class="token string">&quot;slider&quot;</span> Width<span class="token operator">=</span><span class="token string">&quot;200&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">TextBox</span> Text<span class="token operator">=</span><span class="token string">&quot;{Binding Path=Value, ElementName=slider, Mode=TwoWay}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>效果还没出来</p></blockquote><h4 id="onetime-单次绑定" tabindex="-1"><a class="header-anchor" href="#onetime-单次绑定"><span>OneTime(单次绑定)</span></a></h4><p>根据第一次源属性设置目标属性，在此之后所有改变都无效。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>StackPanel<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Slider</span>
        x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;slider&quot;</span>
        Width<span class="token operator">=</span><span class="token string">&quot;200&quot;</span>
        Value<span class="token operator">=</span><span class="token string">&quot;5&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">TextBox</span> Text<span class="token operator">=</span><span class="token string">&quot;{Binding ElementName=slider, Path=Value, Mode=OneTime}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="onewaytosource" tabindex="-1"><a class="header-anchor" href="#onewaytosource"><span>OneWayToSource</span></a></h4><p>和OneWay类型相似，只不过整个过程倒置，根据文本框的值去更新滑块</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>StackPanel<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Slider</span> x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;slider&quot;</span> Width<span class="token operator">=</span><span class="token string">&quot;200&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">TextBox</span> Text<span class="token operator">=</span><span class="token string">&quot;{Binding ElementName=slider, Path=Value, Mode=OneWayToSource}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>没测试出来效果</p></blockquote><h3 id="命令" tabindex="-1"><a class="header-anchor" href="#命令"><span>命令</span></a></h3><h4 id="简单command命令" tabindex="-1"><a class="header-anchor" href="#简单command命令"><span>简单Command命令</span></a></h4><p>实现点击按钮后触发方法，编写MyCommand继承自ICommand</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyCommand</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ICommand</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">Action</span> _action<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">MyCommand</span><span class="token punctuation">(</span><span class="token class-name">Action</span> action<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _action <span class="token operator">=</span> action<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token class-name">EventHandler<span class="token punctuation">?</span></span> CanExecuteChanged<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">CanExecute</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> parameter<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Execute</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> parameter<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">_action</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写MainViewModel去编写触发的方法</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainViewModel</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">MainViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        ShowCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MyCommand</span><span class="token punctuation">(</span>Show<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">MyCommand</span> ShowCommand <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;点击了按钮&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在页面编写按钮并绑定事件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>Grid<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span>
        Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span>
        Height<span class="token operator">=</span><span class="token string">&quot;100&quot;</span>
        Command<span class="token operator">=</span><span class="token string">&quot;{Binding ShowCommand}&quot;</span>
        Content<span class="token operator">=</span><span class="token string">&quot;测试命令&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后切记需要在页面加载的方法指定上下文</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">MainWindow</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Window</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">MainWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>DataContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MainViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后启动项目点击按钮弹框提示点击了按钮。</p><h4 id="inotifypropertychanged" tabindex="-1"><a class="header-anchor" href="#inotifypropertychanged"><span>INotifyPropertyChanged</span></a></h4><p>为了省略写，封住了一个基类用于变更值通知</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ViewModelBase</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">INotifyPropertyChanged</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token class-name">PropertyChangedEventHandler<span class="token punctuation">?</span></span> PropertyChanged<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnPropertyChanged</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">CallerMemberName</span></span><span class="token punctuation">]</span> <span class="token class-name"><span class="token keyword">string</span></span> propertyName <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        PropertyChanged<span class="token punctuation">?.</span><span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyChangedEventArgs</span><span class="token punctuation">(</span>propertyName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后让我们的类继承自这个基类</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainViewModel</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ViewModelBase</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">MainViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        ShowCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MyCommand</span><span class="token punctuation">(</span>Show<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">MyCommand</span> ShowCommand <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> _name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name
    <span class="token punctuation">{</span>
        <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> _name<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">set</span>
        <span class="token punctuation">{</span>
            _name <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
            <span class="token function">OnPropertyChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Name <span class="token operator">=</span> <span class="token string">&quot;点击了&quot;</span><span class="token punctuation">;</span>
        MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;点击了按钮&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyCommand</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ICommand</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">Action</span> _action<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">MyCommand</span><span class="token punctuation">(</span><span class="token class-name">Action</span> action<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _action <span class="token operator">=</span> action<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token class-name">EventHandler<span class="token punctuation">?</span></span> CanExecuteChanged<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">CanExecute</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> parameter<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Execute</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> parameter<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">_action</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在页面的时候绑定Name的值</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>Grid<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">StackPanel</span> HorizontalAlignment<span class="token operator">=</span><span class="token string">&quot;Left&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">TextBox</span>
            x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;Name&quot;</span>
            Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span>
            Height<span class="token operator">=</span><span class="token string">&quot;50&quot;</span>
            Text<span class="token operator">=</span><span class="token string">&quot;{Binding Name}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Button</span>
            Width<span class="token operator">=</span><span class="token string">&quot;100&quot;</span>
            Height<span class="token operator">=</span><span class="token string">&quot;100&quot;</span>
            Command<span class="token operator">=</span><span class="token string">&quot;{Binding ShowCommand}&quot;</span>
            Content<span class="token operator">=</span><span class="token string">&quot;测试命令&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>记得在页面的加载方法中设置上下文</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">MainWindow</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Window</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">MainWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>DataContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MainViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以使用Nuget包实现上面的效果，例如CommunityToolkit.Mvvm</p><h3 id="binding的路径" tabindex="-1"><a class="header-anchor" href="#binding的路径"><span>Binding的路径</span></a></h3><p>默认的绑定</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>StackPanel <span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Label</span> Content<span class="token operator">=</span><span class="token string">&quot;输入值&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Label<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">TextBox</span> x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;textBox1&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>TextBox<span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token class-name">TextBox</span> x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;textBox4&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>TextBox<span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token class-name">Label</span> Content<span class="token operator">=</span><span class="token string">&quot;显示对应的值&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Label<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">TextBox</span> x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;textBox2&quot;</span> Text<span class="token operator">=</span><span class="token string">&quot;{Binding Path=Text,ElementName=textBox1}&quot;</span> BorderBrush<span class="token operator">=</span><span class="token string">&quot;Black&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>TextBox<span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token class-name">Label</span> Content<span class="token operator">=</span><span class="token string">&quot;显示值长度&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Label<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">TextBox</span> x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;textBox3&quot;</span> Text<span class="token operator">=</span><span class="token string">&quot;{Binding Path=Text.Length,ElementName=textBox1,Mode=OneWay}&quot;</span> BorderBrush<span class="token operator">=</span><span class="token string">&quot;Black&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>TextBox<span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token operator">&lt;</span><span class="token class-name">Label</span> Content<span class="token operator">=</span><span class="token string">&quot;显示值的指定索引内容&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Label<span class="token operator">&gt;</span><span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token operator">&lt;</span><span class="token class-name">TextBox</span> x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;textBox4&quot;</span> Text<span class="token operator">=</span><span class="token string">&quot;{Binding Path=Text[1],ElementName=textBox1,Mode=OneWay}&quot;</span> BorderBrush<span class="token operator">=</span><span class="token string">&quot;Black&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>TextBox<span class="token operator">&gt;</span><span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用集合作为绑定源</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token function">MainWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">var</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span> <span class="token string">&quot;Tim&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Tom&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Blog&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// 绑定第一个项</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox5<span class="token punctuation">.</span><span class="token function">SetBinding</span><span class="token punctuation">(</span>TextBox<span class="token punctuation">.</span>TextProperty<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Binding</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Source <span class="token operator">=</span> list <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 绑定长度</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox6<span class="token punctuation">.</span><span class="token function">SetBinding</span><span class="token punctuation">(</span>TextBox<span class="token punctuation">.</span>TextProperty<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Binding</span><span class="token punctuation">(</span><span class="token string">&quot;/Length&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Source <span class="token operator">=</span> list<span class="token punctuation">,</span> Mode <span class="token operator">=</span> BindingMode<span class="token punctuation">.</span>OneWay <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 绑定第一个项的第二个字母</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textBox7<span class="token punctuation">.</span><span class="token function">SetBinding</span><span class="token punctuation">(</span>TextBox<span class="token punctuation">.</span>TextProperty<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Binding</span><span class="token punctuation">(</span><span class="token string">&quot;/[1]&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Source <span class="token operator">=</span> list<span class="token punctuation">,</span> Mode <span class="token operator">=</span> BindingMode<span class="token punctuation">.</span>OneWay <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果想把子集集合的元素绑定，那么就使用多级斜线的语法，例如new Binding(&quot;/Province/CityList.Name&quot;)</p><h3 id="绑定下拉列表" tabindex="-1"><a class="header-anchor" href="#绑定下拉列表"><span>绑定下拉列表</span></a></h3><p>xaml</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">StackPanel</span> x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;stackPanel&quot;</span> Background<span class="token operator">=</span><span class="token string">&quot;LightBlue&quot;</span> <span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">TextBlock</span> Text<span class="token operator">=</span><span class="token string">&quot;学生ID:&quot;</span> FontWeight<span class="token operator">=</span><span class="token string">&quot;Bold&quot;</span> Margin<span class="token operator">=</span><span class="token string">&quot;5&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>TextBlock<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">TextBox</span> x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;textBoxId&quot;</span> Margin<span class="token operator">=</span><span class="token string">&quot;5&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>TextBox<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">TextBlock</span> Text<span class="token operator">=</span><span class="token string">&quot;列表&quot;</span> FontWeight<span class="token operator">=</span><span class="token string">&quot;Bold&quot;</span> Margin<span class="token operator">=</span><span class="token string">&quot;5&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>TextBlock<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">ListBox</span> x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;listBoxStuents&quot;</span> Height<span class="token operator">=</span><span class="token string">&quot;110&quot;</span> Margin<span class="token operator">=</span><span class="token string">&quot;5&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ListBox<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后端代码</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">MainWindow</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Window</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">MainWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Student<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Student</span><span class="token punctuation">{</span>  Id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> Name<span class="token operator">=</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> Age<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Student</span><span class="token punctuation">{</span>  Id<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> Name<span class="token operator">=</span><span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span> Age<span class="token operator">=</span><span class="token number">26</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment">// 为listBox设置Binding</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>listBoxStuents<span class="token punctuation">.</span>ItemsSource <span class="token operator">=</span> list<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>listBoxStuents<span class="token punctuation">.</span>DisplayMemberPath <span class="token operator">=</span> <span class="token string">&quot;Name&quot;</span><span class="token punctuation">;</span>

        <span class="token comment">// 为textBox设置bindind</span>
        <span class="token class-name"><span class="token keyword">var</span></span> bindind <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Binding</span><span class="token punctuation">(</span><span class="token string">&quot;SelectedItem.Id&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Source <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>listBoxStuents <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>textBoxId<span class="token punctuation">.</span><span class="token function">SetBinding</span><span class="token punctuation">(</span>TextBox<span class="token punctuation">.</span>TextProperty<span class="token punctuation">,</span> bindind<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Age <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="inputbindings" tabindex="-1"><a class="header-anchor" href="#inputbindings"><span>InputBindings</span></a></h3><p>绑定鼠标左击事件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">Border</span> Height<span class="token operator">=</span><span class="token string">&quot;50&quot;</span> Background<span class="token operator">=</span><span class="token string">&quot;Gray&quot;</span> Margin<span class="token operator">=</span><span class="token string">&quot;2 2 2 0&quot;</span><span class="token operator">&gt;</span>
       <span class="token operator">&lt;</span>Border<span class="token punctuation">.</span>InputBindings<span class="token operator">&gt;</span>
             <span class="token operator">&lt;</span><span class="token class-name">MouseBinding</span> MouseAction<span class="token operator">=</span><span class="token string">&quot;LeftClick&quot;</span> Command<span class="token operator">=</span><span class="token string">&quot;{Binding TestCommand}&quot;</span><span class="token operator">&gt;</span>
             <span class="token operator">&lt;</span><span class="token operator">/</span>MouseBinding<span class="token operator">&gt;</span>
       <span class="token operator">&lt;</span><span class="token operator">/</span>Border<span class="token punctuation">.</span>InputBindings<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Border<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>绑定按键输入事件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>Window<span class="token punctuation">.</span>InputBindings<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">KeyBinding</span> Command<span class="token operator">=</span><span class="token string">&quot;{Binding OpenRecorder}&quot;</span> CommandParameter<span class="token operator">=</span><span class="token string">&quot;{Binding Path=., ElementName=StartupWindow}&quot;</span> Modifiers<span class="token operator">=</span><span class="token string">&quot;Control&quot;</span> Key<span class="token operator">=</span><span class="token string">&quot;N&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">KeyBinding</span> Command<span class="token operator">=</span><span class="token string">&quot;{Binding OpenWebcamRecorder}&quot;</span> CommandParameter<span class="token operator">=</span><span class="token string">&quot;{Binding ElementName=StartupWindow}&quot;</span> Modifiers<span class="token operator">=</span><span class="token string">&quot;Control&quot;</span> Key<span class="token operator">=</span><span class="token string">&quot;W&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">KeyBinding</span> Command<span class="token operator">=</span><span class="token string">&quot;{Binding OpenBoardRecorder}&quot;</span> CommandParameter<span class="token operator">=</span><span class="token string">&quot;{Binding ElementName=StartupWindow}&quot;</span> Modifiers<span class="token operator">=</span><span class="token string">&quot;Control&quot;</span> Key<span class="token operator">=</span><span class="token string">&quot;B&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">KeyBinding</span> Command<span class="token operator">=</span><span class="token string">&quot;{Binding OpenEditor}&quot;</span> CommandParameter<span class="token operator">=</span><span class="token string">&quot;{Binding ElementName=StartupWindow}&quot;</span> Modifiers<span class="token operator">=</span><span class="token string">&quot;Control&quot;</span> Key<span class="token operator">=</span><span class="token string">&quot;E&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">KeyBinding</span> Command<span class="token operator">=</span><span class="token string">&quot;{Binding OpenOptions}&quot;</span> Modifiers<span class="token operator">=</span><span class="token string">&quot;Control+Alt&quot;</span> Key<span class="token operator">=</span><span class="token string">&quot;O&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">MouseBinding</span> Gesture<span class="token operator">=</span><span class="token string">&quot;LeftDoubleClick&quot;</span> Command<span class="token operator">=</span><span class="token string">&quot;{Binding DataContext.UpdateCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}&quot;</span> CommandParameter<span class="token operator">=</span><span class="token string">&quot;{Binding SelectedItem.ID, ElementName=AlarmData}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Window<span class="token punctuation">.</span>InputBindings<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用键盘和鼠标的绑定</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">TextBox</span> x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;SearchBox&quot;</span> Text<span class="token operator">=</span><span class="token string">&quot;{Binding SearchText}&quot;</span> Width<span class="token operator">=</span><span class="token string">&quot;246&quot;</span> Height<span class="token operator">=</span><span class="token string">&quot;24&quot;</span> HorizontalAlignment<span class="token operator">=</span><span class="token string">&quot;Right&quot;</span> PreviewKeyDown<span class="token operator">=</span><span class="token string">&quot;SearchBox_OnKeyDown&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>TextBox<span class="token punctuation">.</span>InputBindings<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span><span class="token class-name">KeyBinding</span> Command<span class="token operator">=</span><span class="token string">&quot;{Binding KeyEventCommand}&quot;</span> Key<span class="token operator">=</span><span class="token string">&quot;Enter&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token comment">//绑定键盘输入事件</span>
            <span class="token operator">&lt;</span>dxg<span class="token punctuation">:</span>GridControl<span class="token punctuation">.</span>InputBindings<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token class-name">MouseBinding</span> Command<span class="token operator">=</span><span class="token string">&quot;{Binding ProductDoubleClickCommand}&quot;</span> CommandParameter<span class="token operator">=</span><span class="token string">&quot;{Binding ElementName=ProductCtrl,Path=CurrentItem}&quot;</span>                                                                   MouseAction<span class="token operator">=</span><span class="token string">&quot;LeftDoubleClick&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token comment">//绑定鼠标事件</span>
           <span class="token operator">&lt;</span><span class="token operator">/</span>dxg<span class="token punctuation">:</span>GridControl<span class="token punctuation">.</span>InputBindings<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>TextBox<span class="token punctuation">.</span>InputBindings<span class="token operator">&gt;</span>
 <span class="token operator">&lt;</span><span class="token operator">/</span>TextBox<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面需要注意的是：搜索文本框的输入文本在按Enter后虽然会触发事件，但是获取不到搜索文本框的输入文本值，因此需要是搜索文本框的输入文本在按Enter后失去焦点，以添加PreviewKeyDown=&quot;SearchBox_OnKeyDown。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SearchBox_OnKeyDown</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">KeyEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Key <span class="token operator">==</span> Key<span class="token punctuation">.</span>Enter<span class="token punctuation">)</span>
     <span class="token punctuation">{</span>
         SearchBox<span class="token punctuation">.</span><span class="token function">MoveFocus</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">TraversalRequest</span><span class="token punctuation">(</span>FocusNavigationDirection<span class="token punctuation">.</span>Next<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="relativesource-findancestor" tabindex="-1"><a class="header-anchor" href="#relativesource-findancestor"><span>RelativeSource FindAncestor</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">RadioButton</span>  Style<span class="token operator">=</span><span class="token string">&quot;{DynamicResource RadioButtonStyle}&quot;</span> <span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">StackPanel</span> Orientation<span class="token operator">=</span><span class="token string">&quot;Horizontal&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">TextBlock</span> Text<span class="token operator">=</span><span class="token string">&quot;&amp;#xe61e;&quot;</span> FontFamily<span class="token operator">=</span><span class="token string">&quot;./Fonts/#iconfont&quot;</span> FontSize<span class="token operator">=</span><span class="token string">&quot;22&quot;</span> Margin<span class="token operator">=</span><span class="token string">&quot;10 0 0 0&quot;</span> Foreground<span class="token operator">=</span><span class="token string">&quot;#6074C2&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">TextBlock</span>  Margin<span class="token operator">=</span><span class="token string">&quot;10 0 0 0&quot;</span> Text<span class="token operator">=</span><span class="token string">&quot;待办事项&quot;</span>  FontSize<span class="token operator">=</span><span class="token string">&quot;14&quot;</span> VerticalAlignment<span class="token operator">=</span><span class="token string">&quot;Center&quot;</span>
                                Foreground<span class="token operator">=</span><span class="token string">&quot;{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type RadioButton}}}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>RadioButton<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>RelativeSource FindAncestor：寻找TextBlock这个元素的祖宗元素， AncestorLevel=1：向外层找1层，在上面的代码就是RadioButton AncestorType={x:Type RadioButton}：寻找的类型为RadioButton类型 Foreground=&quot;{Binding Foreground,： 当前元素TextBlock绑定目标元素的Foreground属性</p><h2 id="资源" tabindex="-1"><a class="header-anchor" href="#资源"><span>资源</span></a></h2><h3 id="静态和动态资源" tabindex="-1"><a class="header-anchor" href="#静态和动态资源"><span>静态和动态资源</span></a></h3><p>StaticResource：静态资源，设置后不会在发生变化 DynamicResource：动态资源，设置后跟随者发生变化</p><p>通过点击一个按钮，触发去更新资源来测试动态资源和静态资源</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>Window<span class="token punctuation">.</span>Resources<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">SolidColorBrush</span> x<span class="token punctuation">:</span>Key<span class="token operator">=</span><span class="token string">&quot;SolidColor&quot;</span> Color<span class="token operator">=</span><span class="token string">&quot;Red&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Window<span class="token punctuation">.</span>Resources<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>Grid<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>StackPanel<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Button</span>
            Margin<span class="token operator">=</span><span class="token string">&quot;10&quot;</span>
            Click<span class="token operator">=</span><span class="token string">&quot;Button_Click&quot;</span>
            Content<span class="token operator">=</span><span class="token string">&quot;Update&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Button</span>
            Height<span class="token operator">=</span><span class="token string">&quot;40&quot;</span>
            Margin<span class="token operator">=</span><span class="token string">&quot;10&quot;</span>
            BorderBrush<span class="token operator">=</span><span class="token string">&quot;{StaticResource SolidColor}&quot;</span>
            BorderThickness<span class="token operator">=</span><span class="token string">&quot;5&quot;</span>
            Content<span class="token operator">=</span><span class="token string">&quot;Button1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Button</span>
            Height<span class="token operator">=</span><span class="token string">&quot;40&quot;</span>
            Margin<span class="token operator">=</span><span class="token string">&quot;10&quot;</span>
            BorderBrush<span class="token operator">=</span><span class="token string">&quot;{DynamicResource SolidColor}&quot;</span>
            BorderThickness<span class="token operator">=</span><span class="token string">&quot;5&quot;</span>
            Content<span class="token operator">=</span><span class="token string">&quot;Button2&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当点击更新按钮的时候，去触发Button_Click事件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">this</span><span class="token punctuation">.</span>Resources<span class="token punctuation">[</span><span class="token string">&quot;SolidColor&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SolidColorBrush</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>Black<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="资源字典" tabindex="-1"><a class="header-anchor" href="#资源字典"><span>资源字典</span></a></h3><p>如果一个样式经常使用，那么就可以将他放到资源字典中，新建资源字典ButtonStyle.xaml</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">ResourceDictionary</span> xmlns<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span> xmlns<span class="token punctuation">:</span>x<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Style</span> x<span class="token punctuation">:</span>Key<span class="token operator">=</span><span class="token string">&quot;ButtonStyle&quot;</span> TargetType<span class="token operator">=</span><span class="token string">&quot;Button&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;FontSize&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;15&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;Background&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;Green&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;BorderThickness&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;5&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Style<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ResourceDictionary<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在App.xaml中导入字典</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">Application</span>
    x<span class="token punctuation">:</span>Class<span class="token operator">=</span><span class="token string">&quot;WpfApp1.App&quot;</span>
    xmlns<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>
    xmlns<span class="token punctuation">:</span>x<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>
    xmlns<span class="token punctuation">:</span>local<span class="token operator">=</span><span class="token string">&quot;clr-namespace:WpfApp1&quot;</span>
    StartupUri<span class="token operator">=</span><span class="token string">&quot;MainWindow.xaml&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Application<span class="token punctuation">.</span>Resources<span class="token operator">&gt;</span>

        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>  导入字典  <span class="token operator">--</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>ResourceDictionary<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>ResourceDictionary<span class="token punctuation">.</span>MergedDictionaries<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token class-name">ResourceDictionary</span> Source<span class="token operator">=</span><span class="token string">&quot;ButtonStyle.xaml&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>ResourceDictionary<span class="token punctuation">.</span>MergedDictionaries<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>ResourceDictionary<span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token operator">/</span>Application<span class="token punctuation">.</span>Resources<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Application<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就可以在页面正常使用了</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">Button</span>
    Height<span class="token operator">=</span><span class="token string">&quot;40&quot;</span>
    Margin<span class="token operator">=</span><span class="token string">&quot;10&quot;</span>
    Content<span class="token operator">=</span><span class="token string">&quot;Button1&quot;</span>
    Style<span class="token operator">=</span><span class="token string">&quot;{StaticResource ButtonStyle}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们也可以在后台代码中进行更新、查询资源</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">this</span><span class="token punctuation">.</span>Resources<span class="token punctuation">[</span><span class="token string">&quot;SolidColor&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SolidColorBrush</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>Black<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 查找资源</span>
<span class="token class-name"><span class="token keyword">var</span></span> solidColor <span class="token operator">=</span> App<span class="token punctuation">.</span>Current<span class="token punctuation">.</span><span class="token function">FindResource</span><span class="token punctuation">(</span><span class="token string">&quot;ButtonStyle&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常用资源字典加上动态资源来实现程序换肤等效果</p><h2 id="动画" tabindex="-1"><a class="header-anchor" href="#动画"><span>动画</span></a></h2><h3 id="基础操作" tabindex="-1"><a class="header-anchor" href="#基础操作"><span>基础操作</span></a></h3><p>实现点击一个按钮的时候，实现按钮的宽度先缩小后恢复原样</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">// 创建一个双精度动画</span>
<span class="token class-name"><span class="token keyword">var</span></span> animation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DoubleAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
animation<span class="token punctuation">.</span>From <span class="token operator">=</span> btn<span class="token punctuation">.</span>Width<span class="token punctuation">;</span><span class="token comment">// 设置动画初始值</span>
animation<span class="token punctuation">.</span>To <span class="token operator">=</span> btn<span class="token punctuation">.</span>Width <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">;</span><span class="token comment">// 设置动画结束值</span>
animation<span class="token punctuation">.</span>Duration <span class="token operator">=</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置动画的持续时间</span>
<span class="token comment">//animation.Completed += Animation_Completed; //完成事件</span>

<span class="token comment">// 是否往返执行</span>
animation<span class="token punctuation">.</span>AutoReverse <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token comment">// 设置执行的周期</span>
animation<span class="token punctuation">.</span>RepeatBehavior <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RepeatBehavior</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//RepeatBehavior.Forever;</span>

<span class="token comment">// 在当前按钮上执行动画</span>
btn<span class="token punctuation">.</span><span class="token function">BeginAnimation</span><span class="token punctuation">(</span>Button<span class="token punctuation">.</span>WidthProperty<span class="token punctuation">,</span> animation<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="全局异常拦截" tabindex="-1"><a class="header-anchor" href="#全局异常拦截"><span>全局异常拦截</span></a></h2><p>修改App.xaml.cs文件，增加如下代码</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Application</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnStartup</span><span class="token punctuation">(</span><span class="token class-name">StartupEventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">OnStartup</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//Task线程内未捕获异常处理事件</span>
        TaskScheduler<span class="token punctuation">.</span>UnobservedTaskException <span class="token operator">+=</span> TaskScheduler_UnobservedTaskException<span class="token punctuation">;</span>
        <span class="token comment">//UI线程未捕获异常处理事件（UI主线程）</span>
        DispatcherUnhandledException <span class="token operator">+=</span> App_DispatcherUnhandledException<span class="token punctuation">;</span>
        <span class="token comment">//非UI线程未捕获异常处理事件(例如自己创建的一个子线程)</span>
        AppDomain<span class="token punctuation">.</span>CurrentDomain<span class="token punctuation">.</span>UnhandledException <span class="token operator">+=</span> CurrentDomain_UnhandledException<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// Task线程内未捕获异常处理事件</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>e<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">TaskScheduler_UnobservedTaskException</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">UnobservedTaskExceptionEventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Exception <span class="token keyword">is</span> <span class="token class-name">Exception</span> exception<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                LocalLogHelper<span class="token punctuation">.</span><span class="token function">WriteMyLogs</span><span class="token punctuation">(</span><span class="token string">&quot;异常&quot;</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>

                MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;系统异常&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            LocalLogHelper<span class="token punctuation">.</span><span class="token function">WriteMyLogs</span><span class="token punctuation">(</span><span class="token string">&quot;异常&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">finally</span>
        <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">SetObserved</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 非UI线程未捕获异常处理事件(例如自己创建的一个子线程)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>e<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CurrentDomain_UnhandledException</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">UnhandledExceptionEventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>ExceptionObject <span class="token keyword">is</span> <span class="token class-name">Exception</span> exception<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                LocalLogHelper<span class="token punctuation">.</span><span class="token function">WriteMyLogs</span><span class="token punctuation">(</span><span class="token string">&quot;异常&quot;</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>
                MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;系统异常&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            LocalLogHelper<span class="token punctuation">.</span><span class="token function">WriteMyLogs</span><span class="token punctuation">(</span><span class="token string">&quot;异常&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">finally</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//ignore</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// UI线程未捕获异常处理事件（UI主线程）</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>e<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">App_DispatcherUnhandledException</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">DispatcherUnhandledExceptionEventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            LocalLogHelper<span class="token punctuation">.</span><span class="token function">WriteMyLogs</span><span class="token punctuation">(</span><span class="token string">&quot;异常&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>Exception<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>
            MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;系统异常&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            LocalLogHelper<span class="token punctuation">.</span><span class="token function">WriteMyLogs</span><span class="token punctuation">(</span><span class="token string">&quot;异常&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">finally</span>
        <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span>Handled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,152),p=[e];function l(c,r){return n(),a("div",null,p)}const k=s(o,[["render",l],["__file","jichucaozuo.html.vue"]]),d=JSON.parse('{"path":"/dotnet/zhuomianchengxu/wpf/jichuzhishi/jichucaozuo.html","title":"基础操作","lang":"zh-CN","frontmatter":{"title":"基础操作","lang":"zh-CN","date":"2023-07-12T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"jichucaozuo","slug":"qixnvt4uv7tszgtm","docsId":"121601196","description":"布局 布局原则 一个窗口只能包含一个布局元素，可以使用布局元素嵌套多个元素 一应该显式设置元素尺寸 不应该使用坐标设置元素的位置 可以嵌套布局容器 Grid Grid通过自定义行列来进行布局，类似于表格。通过定义Grid的RowDifinitions和ColumnDifinitions来实现对于表格行和列的定义，元素根据附加属性Grid.Row和Gri...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/zhuomianchengxu/wpf/jichuzhishi/jichucaozuo.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"基础操作"}],["meta",{"property":"og:description","content":"布局 布局原则 一个窗口只能包含一个布局元素，可以使用布局元素嵌套多个元素 一应该显式设置元素尺寸 不应该使用坐标设置元素的位置 可以嵌套布局容器 Grid Grid通过自定义行列来进行布局，类似于表格。通过定义Grid的RowDifinitions和ColumnDifinitions来实现对于表格行和列的定义，元素根据附加属性Grid.Row和Gri..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-07-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基础操作\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"布局","slug":"布局","link":"#布局","children":[{"level":3,"title":"Grid","slug":"grid","link":"#grid","children":[{"level":4,"title":"行列定义","slug":"行列定义","link":"#行列定义","children":[]},{"level":4,"title":"行高和列宽的定义","slug":"行高和列宽的定义","link":"#行高和列宽的定义","children":[]},{"level":4,"title":"合并行和列","slug":"合并行和列","link":"#合并行和列","children":[]}]},{"level":3,"title":"UniformGrid","slug":"uniformgrid","link":"#uniformgrid","children":[]},{"level":3,"title":"StackPanel","slug":"stackpanel","link":"#stackpanel","children":[]},{"level":3,"title":"WrapPanel","slug":"wrappanel","link":"#wrappanel","children":[]},{"level":3,"title":"DockPanel","slug":"dockpanel","link":"#dockpanel","children":[]},{"level":3,"title":"ScrollViewer","slug":"scrollviewer","link":"#scrollviewer","children":[]},{"level":3,"title":"TabPanel","slug":"tabpanel","link":"#tabpanel","children":[]},{"level":3,"title":"ToolBarPanel","slug":"toolbarpanel","link":"#toolbarpanel","children":[]}]},{"level":2,"title":"模板","slug":"模板","link":"#模板","children":[{"level":3,"title":"数据模板","slug":"数据模板","link":"#数据模板","children":[]}]},{"level":2,"title":"样式","slug":"样式","link":"#样式","children":[]},{"level":2,"title":"触发器","slug":"触发器","link":"#触发器","children":[{"level":3,"title":"Trigger","slug":"trigger","link":"#trigger","children":[]},{"level":3,"title":"MultiTrigger","slug":"multitrigger","link":"#multitrigger","children":[]},{"level":3,"title":"EventTrigger","slug":"eventtrigger","link":"#eventtrigger","children":[]}]},{"level":2,"title":"绑定","slug":"绑定","link":"#绑定","children":[{"level":3,"title":"元素绑定","slug":"元素绑定","link":"#元素绑定","children":[{"level":4,"title":"单向绑定(OneWay)","slug":"单向绑定-oneway","link":"#单向绑定-oneway","children":[]},{"level":4,"title":"TwoWay(双向绑定)(默认)","slug":"twoway-双向绑定-默认","link":"#twoway-双向绑定-默认","children":[]},{"level":4,"title":"OneTime(单次绑定)","slug":"onetime-单次绑定","link":"#onetime-单次绑定","children":[]},{"level":4,"title":"OneWayToSource","slug":"onewaytosource","link":"#onewaytosource","children":[]}]},{"level":3,"title":"命令","slug":"命令","link":"#命令","children":[{"level":4,"title":"简单Command命令","slug":"简单command命令","link":"#简单command命令","children":[]},{"level":4,"title":"INotifyPropertyChanged","slug":"inotifypropertychanged","link":"#inotifypropertychanged","children":[]}]},{"level":3,"title":"Binding的路径","slug":"binding的路径","link":"#binding的路径","children":[]},{"level":3,"title":"绑定下拉列表","slug":"绑定下拉列表","link":"#绑定下拉列表","children":[]},{"level":3,"title":"InputBindings","slug":"inputbindings","link":"#inputbindings","children":[]},{"level":3,"title":"RelativeSource FindAncestor","slug":"relativesource-findancestor","link":"#relativesource-findancestor","children":[]}]},{"level":2,"title":"资源","slug":"资源","link":"#资源","children":[{"level":3,"title":"静态和动态资源","slug":"静态和动态资源","link":"#静态和动态资源","children":[]},{"level":3,"title":"资源字典","slug":"资源字典","link":"#资源字典","children":[]}]},{"level":2,"title":"动画","slug":"动画","link":"#动画","children":[{"level":3,"title":"基础操作","slug":"基础操作","link":"#基础操作","children":[]}]},{"level":2,"title":"全局异常拦截","slug":"全局异常拦截","link":"#全局异常拦截","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":14.73,"words":4420},"filePathRelative":"dotnet/zhuomianchengxu/wpf/jichuzhishi/jichucaozuo.md","localizedDate":"2023年7月12日","excerpt":"<h2>布局</h2>\\n<ul>\\n<li>布局原则\\n<ul>\\n<li>一个窗口只能包含一个布局元素，可以使用布局元素嵌套多个元素</li>\\n<li>一应该显式设置元素尺寸</li>\\n<li>不应该使用坐标设置元素的位置</li>\\n<li>可以嵌套布局容器</li>\\n</ul>\\n</li>\\n</ul>\\n<h3>Grid</h3>\\n<p>Grid通过自定义行列来进行布局，类似于表格。通过定义Grid的RowDifinitions和ColumnDifinitions来实现对于表格行和列的定义，元素根据附加属性Grid.Row和Grid.Column确定自己的位置。</p>\\n<h4>行列定义</h4>","autoDesc":true}');export{k as comp,d as data};
