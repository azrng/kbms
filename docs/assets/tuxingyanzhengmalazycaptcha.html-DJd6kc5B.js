import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as e,c,a as n,d as a,e as o,b as i}from"./app-Bw62I61B.js";const l={},u=i(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>LazyCaptcha是仿EasyCaptcha和SimpleCaptcha基于.NET Standard 2.1的图形验证码模块。</p><h3 id="项目地址" tabindex="-1"><a class="header-anchor" href="#项目地址"><span>项目地址</span></a></h3><p>Gitee：https://gitee.com/pojianbing/lazy-captcha LazyCaptcha：https://gitee.com/pojianbing/lazy-captcha EasyCaptcha：https://gitee.com/ele-admin/EasyCaptcha SimpleCaptcha：https://github.com/1992w/SimpleCaptcha</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>引用组件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>Install<span class="token operator">-</span>Package Lazy<span class="token punctuation">.</span>Captcha<span class="token punctuation">.</span>Core
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="基础操作" tabindex="-1"><a class="header-anchor" href="#基础操作"><span>基础操作</span></a></h3><p>默认配置</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddDistributedMemoryCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddCaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>详细设置</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddDistributedMemoryCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddCaptcha</span><span class="token punctuation">(</span>option <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    option<span class="token punctuation">.</span>CaptchaType <span class="token operator">=</span> CaptchaType<span class="token punctuation">.</span>DEFAULT<span class="token punctuation">;</span> <span class="token comment">// 验证码类型</span>
    option<span class="token punctuation">.</span>CodeLength <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// 验证码长度, 要放在CaptchaType设置后</span>
    option<span class="token punctuation">.</span>ExpiryTime <span class="token operator">=</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 验证码过期时间</span>
    option<span class="token punctuation">.</span>IgnoreCase <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// 比较时是否忽略大小写</span>
    option<span class="token punctuation">.</span>ImageOption<span class="token punctuation">.</span>Animation <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// 是否启用动画</span>
    
    option<span class="token punctuation">.</span>ImageOption<span class="token punctuation">.</span>Width <span class="token operator">=</span> <span class="token number">130</span><span class="token punctuation">;</span> <span class="token comment">// 验证码宽度</span>
    option<span class="token punctuation">.</span>ImageOption<span class="token punctuation">.</span>Height <span class="token operator">=</span> <span class="token number">48</span><span class="token punctuation">;</span> <span class="token comment">// 验证码高度</span>
    option<span class="token punctuation">.</span>ImageOption<span class="token punctuation">.</span>BackgroundColor <span class="token operator">=</span> SixLabors<span class="token punctuation">.</span>ImageSharp<span class="token punctuation">.</span>Color<span class="token punctuation">.</span>White<span class="token punctuation">;</span> <span class="token comment">// 验证码背景色</span>
    
    option<span class="token punctuation">.</span>ImageOption<span class="token punctuation">.</span>BubbleCount <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 气泡数量</span>
    option<span class="token punctuation">.</span>ImageOption<span class="token punctuation">.</span>BubbleMinRadius <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">// 气泡最小半径</span>
    option<span class="token punctuation">.</span>ImageOption<span class="token punctuation">.</span>BubbleMaxRadius <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span> <span class="token comment">// 气泡最大半径</span>
    option<span class="token punctuation">.</span>ImageOption<span class="token punctuation">.</span>BubbleThickness <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 气泡边沿厚度</span>

    option<span class="token punctuation">.</span>ImageOption<span class="token punctuation">.</span>InterferenceLineCount <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 干扰线数量</span>

    option<span class="token punctuation">.</span>ImageOption<span class="token punctuation">.</span>FontSize <span class="token operator">=</span> <span class="token number">28</span><span class="token punctuation">;</span> <span class="token comment">// 字体大小</span>
    option<span class="token punctuation">.</span>ImageOption<span class="token punctuation">.</span>FontFamily <span class="token operator">=</span> DefaultFontFamilys<span class="token punctuation">.</span>Instance<span class="token punctuation">.</span>Actionj<span class="token punctuation">;</span> <span class="token comment">// 字体，中文使用kaiti，其他字符可根据喜好设置（可能部分转字符会出现绘制不出的情况）。</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Controller</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CaptchaController</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Controller</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ILogger<span class="token punctuation">&lt;</span>CaptchaController<span class="token punctuation">&gt;</span></span> _logger<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ICaptcha</span> _captcha<span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token function">CaptchaController</span><span class="token punctuation">(</span><span class="token class-name">ILogger<span class="token punctuation">&lt;</span>CaptchaController<span class="token punctuation">&gt;</span></span> logger<span class="token punctuation">,</span> <span class="token class-name">ICaptcha</span> captcha<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger <span class="token operator">=</span> logger<span class="token punctuation">;</span>
        _captcha <span class="token operator">=</span> captcha<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Route</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;/captcha&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">IActionResult</span> <span class="token function">Captcha</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> id<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> info <span class="token operator">=</span> _captcha<span class="token punctuation">.</span><span class="token function">Generate</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> stream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MemoryStream</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>Bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">File</span><span class="token punctuation">(</span>stream<span class="token punctuation">,</span> <span class="token string">&quot;image/gif&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Route</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;/captcha/validate&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">Validate</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> id<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> code<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>_captcha<span class="token punctuation">.</span><span class="token function">Validate</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> code<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;无效验证码&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token comment">// 具体业务</span>
    
        <span class="token comment">// 为了演示，这里仅做返回处理</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,15),r={href:"https://www.cnblogs.com/readafterme/p/15890042.html",target:"_blank",rel:"noopener noreferrer"};function d(k,m){const s=p("ExternalLinkIcon");return e(),c("div",null,[u,n("p",null,[n("a",r,[a("https://www.cnblogs.com/readafterme/p/15890042.html"),o(s)]),a(" | .NET Core 验证码 - LazyCaptcha（开源）")])])}const g=t(l,[["render",d],["__file","tuxingyanzhengmalazycaptcha.html.vue"]]),b=JSON.parse('{"path":"/middleware/tuxiangchuli/yanzhengma/tuxingyanzhengmalazycaptcha.html","title":"图形验证码LazyCaptcha","lang":"zh-CN","frontmatter":{"title":"图形验证码LazyCaptcha","lang":"zh-CN","date":"2022-09-29T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"tuxingyanzhengmalazycaptcha","slug":"goztl1","docsId":"72276157","description":"介绍 LazyCaptcha是仿EasyCaptcha和SimpleCaptcha基于.NET Standard 2.1的图形验证码模块。 项目地址 Gitee：https://gitee.com/pojianbing/lazy-captcha LazyCaptcha：https://gitee.com/pojianbing/lazy-captcha ...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/tuxiangchuli/yanzhengma/tuxingyanzhengmalazycaptcha.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"图形验证码LazyCaptcha"}],["meta",{"property":"og:description","content":"介绍 LazyCaptcha是仿EasyCaptcha和SimpleCaptcha基于.NET Standard 2.1的图形验证码模块。 项目地址 Gitee：https://gitee.com/pojianbing/lazy-captcha LazyCaptcha：https://gitee.com/pojianbing/lazy-captcha ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-09-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"图形验证码LazyCaptcha\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-29T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[{"level":3,"title":"项目地址","slug":"项目地址","link":"#项目地址","children":[]}]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"基础操作","slug":"基础操作","link":"#基础操作","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.23,"words":370},"filePathRelative":"middleware/tuxiangchuli/yanzhengma/tuxingyanzhengmalazycaptcha.md","localizedDate":"2022年9月29日","excerpt":"<h2>介绍</h2>\\n<p>LazyCaptcha是仿EasyCaptcha和SimpleCaptcha基于.NET Standard 2.1的图形验证码模块。</p>\\n<h3>项目地址</h3>\\n<p>Gitee：https://gitee.com/pojianbing/lazy-captcha\\nLazyCaptcha：https://gitee.com/pojianbing/lazy-captcha\\nEasyCaptcha：https://gitee.com/ele-admin/EasyCaptcha\\nSimpleCaptcha：https://github.com/1992w/SimpleCaptcha</p>","autoDesc":true}');export{g as comp,b as data};
