import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,b as e}from"./app-Bw62I61B.js";const t="/kbms/common/1611224018393-ce9a539d-b6b9-4bde-83cb-1021ba751c55.png",p={},o=e(`<p>实现的需求是我想在a库的user表添加数据的时候，同时自动在b库的user表中添加一条数据 相当于主库和从库，主库无论做任何操作都会自动映射到从库中，以此保持数据一致性。</p><h4 id="查询是否支持" tabindex="-1"><a class="header-anchor" href="#查询是否支持"><span>查询是否支持</span></a></h4><p>查询MySQL中是否有Federated这个引擎</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name">show</span> engines<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>FEDERATED          | NO      | Federated MySQL storage engine</p></blockquote><p>代表是有的，只不过没有开启</p><h4 id="开启federated" tabindex="-1"><a class="header-anchor" href="#开启federated"><span>开启federated</span></a></h4><p>在my.cnf中添加federated这一个属性就可开启</p><p><img src="`+t+'" alt="" loading="lazy"> 然后再查询就发现已经开启了</p><h4 id="使用federated" tabindex="-1"><a class="header-anchor" href="#使用federated"><span>使用federated</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>   声明引擎        连接属性          账号    密码      ip            port 数据库  表\nENGINE <span class="token operator">=</span><span class="token class-name">FEDERATED</span> CONNECTION<span class="token operator">=</span>&#39;mysql<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>root<span class="token punctuation">:</span>lizhenghua@<span class="token number">192.168</span><span class="token number">.137</span><span class="token number">.148</span><span class="token punctuation">:</span><span class="token number">3306</span><span class="token operator">/</span>zskdb<span class="token operator">/</span>cas_user&#39;<span class="token punctuation">;</span>\n\n<span class="token preprocessor property">#从库创建表结构的时候加入上面的引擎</span>\nCREATE TABLE `cas_user` <span class="token punctuation">(</span>\n  `id` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> NOT NULL COMMENT &#39;id&#39;<span class="token punctuation">,</span>\n  `encryid` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> DEFAULT NULL COMMENT &#39;加密后的用户id&#39;<span class="token punctuation">,</span>\n  `name` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> DEFAULT NULL COMMENT &#39;用户名&#39;<span class="token punctuation">,</span>\n  `password` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> DEFAULT NULL COMMENT &#39;密码&#39;<span class="token punctuation">,</span>\n  `mobile` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span> DEFAULT NULL COMMENT &#39;手机号码&#39;<span class="token punctuation">,</span>\n  `email` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> DEFAULT NULL COMMENT &#39;邮箱&#39;<span class="token punctuation">,</span>\n  `sex` <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> DEFAULT NULL COMMENT &#39;性别（<span class="token number">0</span>：男，<span class="token number">1</span>：女）&#39;<span class="token punctuation">,</span>\n  `credit` <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> DEFAULT &#39;<span class="token number">0.00</span>&#39;<span class="token punctuation">,</span>\n  <span class="token return-type class-name">PRIMARY</span> KEY <span class="token punctuation">(</span>`oid`<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  UNIQUE KEY `upk_user_id` <span class="token punctuation">(</span>`id`<span class="token punctuation">)</span>\n<span class="token punctuation">)</span> ENGINE<span class="token operator">=</span><span class="token class-name">InnoDB</span> AUTO_INCREMENT<span class="token operator">=</span><span class="token number">9</span> <span class="token class-name">DEFAULT</span> CHARSET<span class="token operator">=</span><span class="token class-name">utf8</span> COMMENT<span class="token operator">=</span>&#39;用户表&#39;\nENGINE <span class="token operator">=</span><span class="token class-name">FEDERATED</span> CONNECTION<span class="token operator">=</span>&#39;mysql<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>root<span class="token punctuation">:</span>zhenghua@<span class="token number">192.168</span><span class="token number">.137</span><span class="token number">.148</span><span class="token punctuation">:</span><span class="token number">3306</span><span class="token operator">/</span>zskdb<span class="token operator">/</span>cas_user&#39;<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：只要表结构就行，数据会自动从主库中映射过来。</p>',12),c=[o];function r(l,i){return a(),s("div",null,c)}const m=n(p,[["render",r],["__file","federated.html.vue"]]),k=JSON.parse('{"path":"/dataBase/mysql/jinjie/federated.html","title":"Federated","lang":"zh-CN","frontmatter":{"title":"Federated","lang":"zh-CN","date":"2021-05-14T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"filename":"federated","slug":"nkkgb5","docsId":"30515991","description":"实现的需求是我想在a库的user表添加数据的时候，同时自动在b库的user表中添加一条数据 相当于主库和从库，主库无论做任何操作都会自动映射到从库中，以此保持数据一致性。 查询是否支持 查询MySQL中是否有Federated这个引擎 FEDERATED | NO | Federated MySQL storage engine 代表是有的，只不过没有...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/mysql/jinjie/federated.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Federated"}],["meta",{"property":"og:description","content":"实现的需求是我想在a库的user表添加数据的时候，同时自动在b库的user表中添加一条数据 相当于主库和从库，主库无论做任何操作都会自动映射到从库中，以此保持数据一致性。 查询是否支持 查询MySQL中是否有Federated这个引擎 FEDERATED | NO | Federated MySQL storage engine 代表是有的，只不过没有..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1611224018393-ce9a539d-b6b9-4bde-83cb-1021ba751c55.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-18T14:41:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2021-05-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-18T14:41:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Federated\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1611224018393-ce9a539d-b6b9-4bde-83cb-1021ba751c55.png\\"],\\"datePublished\\":\\"2021-05-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-18T14:41:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":4,"title":"查询是否支持","slug":"查询是否支持","link":"#查询是否支持","children":[]},{"level":4,"title":"开启federated","slug":"开启federated","link":"#开启federated","children":[]},{"level":4,"title":"使用federated","slug":"使用federated","link":"#使用federated","children":[]}],"git":{"createdTime":1695484404000,"updatedTime":1702910488000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.15,"words":344},"filePathRelative":"dataBase/mysql/jinjie/federated.md","localizedDate":"2021年5月14日","excerpt":"<p>实现的需求是我想在a库的user表添加数据的时候，同时自动在b库的user表中添加一条数据\\n相当于主库和从库，主库无论做任何操作都会自动映射到从库中，以此保持数据一致性。</p>\\n<h4>查询是否支持</h4>\\n<p>查询MySQL中是否有Federated这个引擎</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token class-name\\">show</span> engines<span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{m as comp,k as data};
