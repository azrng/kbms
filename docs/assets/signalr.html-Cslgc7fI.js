import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as n,d as r}from"./app-BguyEeV-.js";const a="/kbms/common/1614392596148-7270f71a-b34e-4f59-a3c2-5d9e788fc0fe.png",o={},i=r('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>SinalR for ASP.Net Core 是 SignalR 的浴火重生版，允许你在 ASP.Net Core 中实现实时通讯，这里的 <code>实时</code> 意味着双方都能快速的感知对方发来的消息，比如：一旦 server 端有需要推送的内容将会直接 push 到 client，这和原始的 http 单向请求有着本质的区别。</p><p>默认采用的回落机制来进行传输和连接，也可以禁用回落机制，只采用一种传输方式 Long polling=》Server Sent Events=》Web Scoket 优先选择传输最好的 <img src="'+a+'" alt="image.png" loading="lazy"></p><h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景"><span>场景</span></a></h2><ul><li>需要从服务器进行高频率更新的应用。 示例包括游戏、社交网络、投票、拍卖、地图和 GPS 应用。</li><li>仪表板和监视应用。 示例包括公司仪表板、即时销售更新或旅行警报。</li><li>协作应用。 协作应用的示例包括白板应用和团队会议软件。</li><li>需要通知的应用。 社交网络、电子邮件、聊天、游戏、旅行警报和很多其他应用都需使用通知。</li></ul><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h2><p>RPC：远程调用，优点就是可以像调用本地方法一样调用远程服务 signalr采用rpc范式来进行客户端与服务器端之间的通信。服务端调用客户端是利用底层传输实现的。</p><p>Hub 是signalr的一个组件，运行在后台，是服务器端的一个类 Hub使用RPC接受从客户端发来的消息，也能将消息发送到客户端，所以它就是一个通信的中心。 signalr可以将参数序列化和反序列化，这个参数被序列化的格式叫做Hub协议，所以Hub协议就是一种用来序列化和反序列化的格式，这个协议默认是JSON，也可以是MessagePack(二进制，更紧凑，处理起来更快)，也可以扩展其他协议。   横向扩展 如果后台服务要搭建负载均衡，使用web socket时候并没有什么问题，但是在长轮询的情况下，需要使用Sticky Sessions (粘性会话).   安装使用JS客户端库安装singalr @microsoft/signalr@latest，选择特定文件 CDM加速：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.7/signalr.min.js&quot;&gt;&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>.NET 客户端可以安装 <strong>Microsoft.AspNetCore.SignalR.Client</strong> 这个包来支持SignalR.</p><blockquote><p>官方文档：<a href="https://docs.microsoft.com/zh-cn/aspnet/core/signalr/introduction?view=aspnetcore-3.1" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/zh-cn/aspnet/core/signalr/introduction?view=aspnetcore-3.1</a> 中心文档：<a href="https://docs.microsoft.com/zh-cn/aspnet/core/signalr/hubs?view=aspnetcore-3.1" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/zh-cn/aspnet/core/signalr/hubs?view=aspnetcore-3.1</a> 配置文件：<a href="https://docs.microsoft.com/zh-cn/aspnet/core/signalr/configuration?view=aspnetcore-3.1&amp;tabs=dotnet" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/zh-cn/aspnet/core/signalr/configuration?view=aspnetcore-3.1&amp;tabs=dotnet</a></p></blockquote><blockquote><p>系列博客推荐：<a href="https://www.cnblogs.com/qianxingmu/tag/SignalR/" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/qianxingmu/tag/SignalR/</a></p></blockquote>',12),s=[i];function l(c,p){return n(),t("div",null,s)}const m=e(o,[["render",l],["__file","signalr.html.vue"]]),d=JSON.parse('{"path":"/dotnet/signalr/signalr.html","title":"Signalr","lang":"zh-CN","frontmatter":{"title":"Signalr","lang":"zh-CN","date":"2023-10-17T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"signalr","slug":"kl3p1r","docsId":"32030064","description":"概述 SinalR for ASP.Net Core 是 SignalR 的浴火重生版，允许你在 ASP.Net Core 中实现实时通讯，这里的 实时 意味着双方都能快速的感知对方发来的消息，比如：一旦 server 端有需要推送的内容将会直接 push 到 client，这和原始的 http 单向请求有着本质的区别。 默认采用的回落机制来进行传输和...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/signalr/signalr.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Signalr"}],["meta",{"property":"og:description","content":"概述 SinalR for ASP.Net Core 是 SignalR 的浴火重生版，允许你在 ASP.Net Core 中实现实时通讯，这里的 实时 意味着双方都能快速的感知对方发来的消息，比如：一旦 server 端有需要推送的内容将会直接 push 到 client，这和原始的 http 单向请求有着本质的区别。 默认采用的回落机制来进行传输和..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1614392596148-7270f71a-b34e-4f59-a3c2-5d9e788fc0fe.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T15:13:29.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-27T15:13:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Signalr\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1614392596148-7270f71a-b34e-4f59-a3c2-5d9e788fc0fe.png\\"],\\"datePublished\\":\\"2023-10-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-27T15:13:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"场景","slug":"场景","link":"#场景","children":[]},{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1698419609000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":2.23,"words":669},"filePathRelative":"dotnet/signalr/signalr.md","localizedDate":"2023年10月17日","excerpt":"<h2>概述</h2>\\n<p>SinalR for ASP.Net Core 是 SignalR 的浴火重生版，允许你在 ASP.Net Core 中实现实时通讯，这里的&nbsp;<code>实时</code>&nbsp;意味着双方都能快速的感知对方发来的消息，比如：一旦 server 端有需要推送的内容将会直接 push 到 client，这和原始的 http 单向请求有着本质的区别。</p>\\n<p>默认采用的回落机制来进行传输和连接，也可以禁用回落机制，只采用一种传输方式\\nLong polling=》Server Sent Events=》Web Scoket\\n优先选择传输最好的\\n<img src=\\"/common/1614392596148-7270f71a-b34e-4f59-a3c2-5d9e788fc0fe.png\\" alt=\\"image.png\\" loading=\\"lazy\\"></p>","autoDesc":true}');export{m as comp,d as data};
