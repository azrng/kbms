import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as p,c as i,b as s,e as n,f as t,d as r}from"./app-Bfb6-vFH.js";const l={},c=r(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>YARP（Yet Another Reverse Proxy）是一个开源的、高性能的反向代理库，由Microsoft开发，使用C#语言编写。它旨在作为.NET平台上构建反向代理服务器的基础。YARP主要针对.NET 5及以上版本，允许开发者在.NET应用程序中轻松地实现反向代理的功能。</p><h2 id="功能和特点" tabindex="-1"><a class="header-anchor" href="#功能和特点"><span>功能和特点</span></a></h2><ol><li><strong>模块化和可扩展性：</strong> YARP设计成高度模块化的，这意味着可以根据需要替换或扩展内部组件，如HTTP请求路由、负载均衡、健康检查等。</li><li><strong>性能：</strong> YARP针对高性能进行了优化，利用了.NET的异步编程模型和高效的IO操作，以处理大量并发连接。</li><li><strong>配置驱动：</strong> YARP的行为可以通过配置来控制，支持从文件、数据库或其他来源动态加载配置。</li><li><strong>路由：</strong> 可以基于各种参数（如路径、头部、查询参数）配置请求路由规则。</li><li><strong>负载均衡：</strong> 内置多种负载均衡策略，如轮询、最少连接、随机选择等，并且可以自定义负载均衡策略。</li><li><strong>健康检查：</strong> 支持后端服务的健康检查，以确保请求只会被转发到健康的后端服务实例。</li><li><strong>转换器：</strong> 允许对请求和响应进行转换，如修改头部、路径或查询参数。</li><li><strong>会话亲和性：</strong> 支持会话亲和性（Session Affinity），确保来自同一客户端的请求被发送到相同的后端服务实例。</li></ol><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景"><span>使用场景</span></a></h2><ul><li><strong>反向代理：</strong> 在客户端和后端服务之间提供一个中间层，用于请求转发和负载均衡。</li><li><strong>API网关：</strong> 作为微服务架构中的API网关，提供路由、鉴权、监控等功能。</li><li><strong>边缘服务：</strong> 在应用程序和外部世界之间提供安全层，处理SSL终止、请求限制等任务。</li></ul><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="基础操作" tabindex="-1"><a class="header-anchor" href="#基础操作"><span>基础操作</span></a></h3><p>新建一个Api项目，引用nuget包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Yarp.ReverseProxy&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;2.0.1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在program中配置</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> WebApplication<span class="token punctuation">.</span><span class="token function">CreateBuilder</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Add services to the container.</span>
<span class="token comment">// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddEndpointsApiExplorer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddReverseProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">LoadFromConfig</span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span>Configuration<span class="token punctuation">.</span><span class="token function">GetSection</span><span class="token punctuation">(</span><span class="token string">&quot;ReverseProxy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddHealthChecks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> app <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Configure the HTTP request pipeline.</span>
app<span class="token punctuation">.</span><span class="token function">MapReverseProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">MapHealthChecks</span><span class="token punctuation">(</span><span class="token string">&quot;health&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置文件中这么配置</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;Logging&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;LogLevel&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;Default&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Information&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;Microsoft.AspNetCore&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Warning&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;ReverseProxy&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Routes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;route2&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;ClusterId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cluster_product&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;Match&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;Path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{*all}&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;Clusters&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;cluster_product&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;Destinations&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;first_destination&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;Address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost:5158&quot;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;AllowedHosts&quot;</span><span class="token operator">:</span> <span class="token string">&quot;*&quot;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),u={href:"http://localhost:5012/WeatherForecast",target:"_blank",rel:"noopener noreferrer"},d=s("h2",{id:"资料",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#资料"},[s("span",null,"资料")])],-1),k={href:"https://mp.weixin.qq.com/s/uhZZHwGrOZMNmRCjwx97YA",target:"_blank",rel:"noopener noreferrer"},m={href:"https://mp.weixin.qq.com/s/RagZltxqHXuF3h3tcc8daQ",target:"_blank",rel:"noopener noreferrer"},v={href:"https://mp.weixin.qq.com/s/NBESxU7qRx6tl7pbzPF3zg",target:"_blank",rel:"noopener noreferrer"},g={href:"https://mp.weixin.qq.com/s/fri9aT17jg1JA-bffzVlCQ",target:"_blank",rel:"noopener noreferrer"},h={href:"https://mp.weixin.qq.com/s/D1SuvWYNM0vvniKckrcabA",target:"_blank",rel:"noopener noreferrer"},b={href:"https://mp.weixin.qq.com/s/ng8JG7wmlllpjUrthXaovQ",target:"_blank",rel:"noopener noreferrer"},q={href:"https://mp.weixin.qq.com/s/Eo7yesGDxFEBRMZheDEl4Q",target:"_blank",rel:"noopener noreferrer"},f=s("p",null,[n("微软用它取代了"),s("code",null,"Nginx"),n("吞吐量提升了百分之八十：https://www.cnblogs.com/hejiale010426/p/17954360")],-1),x=s("p",null,"使用YARP作为API网关和速率限制器：https://www.codecrash.net/2024/03/01/rate-limiting-in-yarp.html",-1),_=s("p",null,"FastGateway 一个可以用于代替Nginx的网关：https://mp.weixin.qq.com/s/0uTVdDdrFXJlBxS4CCN9rg",-1);function y(A,P){const a=o("ExternalLinkIcon");return p(),i("div",null,[c,s("p",null,[n("然后我们启动该项目地址为："),s("a",u,[n("http://localhost:5012"),t(a)]),n("，这个时候就可以通过5012地址去反向代理到5158地址，访问5158服务的内容。")]),d,s("p",null,[s("a",k,[n("https://mp.weixin.qq.com/s/uhZZHwGrOZMNmRCjwx97YA"),t(a)]),n(" | 使用 Yarp 做网关+.NET 6.0 + Swagger "),s("a",m,[n("https://mp.weixin.qq.com/s/RagZltxqHXuF3h3tcc8daQ"),t(a)]),n(" | .NET 反向代理-YARP "),s("a",v,[n("https://mp.weixin.qq.com/s/NBESxU7qRx6tl7pbzPF3zg"),t(a)]),n(" | C## 开源一个基于 yarp 的 API 网关 Demo，支持绑定 Kubernetes Service "),s("a",g,[n("https://mp.weixin.qq.com/s/fri9aT17jg1JA-bffzVlCQ"),t(a)]),n(" | 使用 Yarp 做网关 "),s("a",h,[n("https://mp.weixin.qq.com/s/D1SuvWYNM0vvniKckrcabA"),t(a)]),n(" | 使用 Yarp 做网关+.NET 6.0 + Swagger "),s("a",b,[n("https://mp.weixin.qq.com/s/ng8JG7wmlllpjUrthXaovQ"),t(a)]),n(" | 基于 YARP 实现一个 Github 的反向代理 "),s("a",q,[n("https://mp.weixin.qq.com/s/Eo7yesGDxFEBRMZheDEl4Q"),t(a)]),n(" | 分享一个基于Abp 和Yarp 开发的API网关项目")]),f,x,_])}const T=e(l,[["render",y],["__file","index.html.vue"]]),w=JSON.parse('{"path":"/dotnet/commonNuget/yarp/","title":"说明","lang":"zh-CN","frontmatter":{"title":"说明","lang":"zh-CN","date":"2023-09-08T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"readme","slug":"ntog8g","docsId":"96430423","description":"概述 YARP（Yet Another Reverse Proxy）是一个开源的、高性能的反向代理库，由Microsoft开发，使用C#语言编写。它旨在作为.NET平台上构建反向代理服务器的基础。YARP主要针对.NET 5及以上版本，允许开发者在.NET应用程序中轻松地实现反向代理的功能。 功能和特点 模块化和可扩展性： YARP设计成高度模块化的，...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/commonNuget/yarp/"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"说明"}],["meta",{"property":"og:description","content":"概述 YARP（Yet Another Reverse Proxy）是一个开源的、高性能的反向代理库，由Microsoft开发，使用C#语言编写。它旨在作为.NET平台上构建反向代理服务器的基础。YARP主要针对.NET 5及以上版本，允许开发者在.NET应用程序中轻松地实现反向代理的功能。 功能和特点 模块化和可扩展性： YARP设计成高度模块化的，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-06T08:01:13.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-06T08:01:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"说明\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-06T08:01:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"功能和特点","slug":"功能和特点","link":"#功能和特点","children":[]},{"level":2,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"基础操作","slug":"基础操作","link":"#基础操作","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1712390473000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":2.79,"words":838},"filePathRelative":"dotnet/commonNuget/yarp/readme.md","localizedDate":"2023年9月8日","excerpt":"<h2>概述</h2>\\n<p>YARP（Yet Another Reverse Proxy）是一个开源的、高性能的反向代理库，由Microsoft开发，使用C#语言编写。它旨在作为.NET平台上构建反向代理服务器的基础。YARP主要针对.NET 5及以上版本，允许开发者在.NET应用程序中轻松地实现反向代理的功能。</p>\\n<h2>功能和特点</h2>\\n<ol>\\n<li><strong>模块化和可扩展性：</strong> YARP设计成高度模块化的，这意味着可以根据需要替换或扩展内部组件，如HTTP请求路由、负载均衡、健康检查等。</li>\\n<li><strong>性能：</strong> YARP针对高性能进行了优化，利用了.NET的异步编程模型和高效的IO操作，以处理大量并发连接。</li>\\n<li><strong>配置驱动：</strong> YARP的行为可以通过配置来控制，支持从文件、数据库或其他来源动态加载配置。</li>\\n<li><strong>路由：</strong> 可以基于各种参数（如路径、头部、查询参数）配置请求路由规则。</li>\\n<li><strong>负载均衡：</strong> 内置多种负载均衡策略，如轮询、最少连接、随机选择等，并且可以自定义负载均衡策略。</li>\\n<li><strong>健康检查：</strong> 支持后端服务的健康检查，以确保请求只会被转发到健康的后端服务实例。</li>\\n<li><strong>转换器：</strong> 允许对请求和响应进行转换，如修改头部、路径或查询参数。</li>\\n<li><strong>会话亲和性：</strong> 支持会话亲和性（Session Affinity），确保来自同一客户端的请求被发送到相同的后端服务实例。</li>\\n</ol>","autoDesc":true}');export{T as comp,w as data};
