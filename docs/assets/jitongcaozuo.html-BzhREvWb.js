import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as i,a as n,d as s,e,b as t}from"./app-DMmdIwn0.js";const l={},u=t(`<h2 id="判断当前程序是否有管理员权限" tabindex="-1"><a class="header-anchor" href="#判断当前程序是否有管理员权限"><span>判断当前程序是否有管理员权限</span></a></h2><p>windows系统</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;shell32.dll&quot;</span><span class="token punctuation">,</span>EntryPoint <span class="token operator">=</span><span class="token string">&quot;#680&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">IsAdmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="机器信息machineinfo" tabindex="-1"><a class="header-anchor" href="#机器信息machineinfo"><span><strong>机器信息MachineInfo</strong></span></a></h2>`,4),r={href:"https://github.com/NewLifeX/X/blob/master/NewLife.Core/Common/MachineInfo.cs",target:"_blank",rel:"noopener noreferrer"},d=t(`<p>获取机器信息</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> info <span class="token operator">=</span> MachineInfo<span class="token punctuation">.</span><span class="token function">GetCurrent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
info<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,2),k={href:"https://newlifex.com/core/machine_info",target:"_blank",rel:"noopener noreferrer"},m=t(`<h2 id="系统截图" tabindex="-1"><a class="header-anchor" href="#系统截图"><span>系统截图</span></a></h2><p>点击按钮后调用系统截图并保存</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">/// &lt;summary&gt;</span>
<span class="token comment">/// 点击按钮</span>
<span class="token comment">/// &lt;/summary&gt;</span>
<span class="token comment">/// &lt;param name=&quot;sender&quot;&gt;&lt;/param&gt;</span>
<span class="token comment">/// &lt;param name=&quot;e&quot;&gt;&lt;/param&gt;</span>
private void button1_Click(object sender<span class="token punctuation">,</span> EventArgs e)
<span class="token punctuation">{</span>
    StartCapture();
<span class="token punctuation">}</span>

<span class="token comment">/// &lt;summary&gt;</span>
<span class="token comment">/// 调用系统截图处理</span>
<span class="token comment">/// &lt;/summary&gt;</span>
private void StartCapture()
<span class="token punctuation">{</span>
    <span class="token comment">// 隐藏当前窗口</span>
    this.WindowState = FormWindowState.Minimized;
    this.Hide();

    var psi = new ProcessStartInfo()
    <span class="token punctuation">{</span>
        UseShellExecute = <span class="token boolean">true</span><span class="token punctuation">,</span>
        FileName = <span class="token string">&quot;ms-screenclip:&quot;</span>
    <span class="token punctuation">}</span>;
    Process.Start(psi);

    var snippingToolProcess = Process.GetProcessesByName(<span class="token string">&quot;ScreenClippingHost&quot;</span>)<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>;
    snippingToolProcess.EnableRaisingEvents = <span class="token boolean">true</span>;
    snippingToolProcess.Exited += SnippingToolProcess_Exited;

    <span class="token comment">/*
    Process snippingToolProcess = new Process()
    {
        StartInfo = new ProcessStartInfo(&quot;C:\\\\Windows\\\\system32\\\\SnippingTool.exe&quot;, &quot;/clip&quot;),
        EnableRaisingEvents = true,
    };
    snippingToolProcess.Exited += SnippingToolProcess_Exited;
    snippingToolProcess.Start();
    */</span>
<span class="token punctuation">}</span>

<span class="token comment">/// &lt;summary&gt;</span>
<span class="token comment">/// 截图完成</span>
<span class="token comment">/// &lt;/summary&gt;</span>
<span class="token comment">/// &lt;param name=&quot;sender&quot;&gt;&lt;/param&gt;</span>
<span class="token comment">/// &lt;param name=&quot;e&quot;&gt;&lt;/param&gt;</span>
private void SnippingToolProcess_Exited(object? sender<span class="token punctuation">,</span> EventArgs e)
<span class="token punctuation">{</span>
    Debug.WriteLine(<span class="token string">&quot;触发了已经&quot;</span>);
    this.BeginInvoke(new Action(() =&gt;
    <span class="token punctuation">{</span>
        ClipboardOCR();
    <span class="token punctuation">}</span>));
<span class="token punctuation">}</span>

private readonly string<span class="token punctuation">[</span><span class="token punctuation">]</span> ImgAllow = new string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;jpg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;png&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;gif&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;peg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bmp&quot;</span> <span class="token punctuation">}</span>;

<span class="token comment">/// &lt;summary&gt;</span>
<span class="token comment">/// 从剪切板获取图片并识别</span>
<span class="token comment">/// &lt;/summary&gt;</span>
private void ClipboardOCR()
<span class="token punctuation">{</span>
    var img = Clipboard.GetImage();

    if (img != <span class="token null keyword">null</span>)
    <span class="token punctuation">{</span>
        img.Save(<span class="token string">&quot;D:\\\\temp\\\\11.png&quot;</span>);
        <span class="token comment">//sqPhoto.Image = img;</span>
        <span class="token comment">//timeOCR_Start();</span>
        return;
    <span class="token punctuation">}</span>

    <span class="token comment">// 直接复制的图片文件</span>
    var files = Clipboard.GetFileDropList();
    if (files.Count &gt; <span class="token number">0</span>)
    <span class="token punctuation">{</span>
        string ext = files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>.ToLower().Substring(files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>.Length - <span class="token number">3</span>);
        if (ImgAllow.Contains(ext))
        <span class="token punctuation">{</span>
            var img = Image.FromFile(files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>)
            <span class="token comment">//sqPhoto.Image = Image.FromFile(files[0]);</span>
            <span class="token comment">//timeOCR_Start();</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="窗口置顶" tabindex="-1"><a class="header-anchor" href="#窗口置顶"><span>窗口置顶</span></a></h2><p>方案一： 把窗体的 ShowInTaskbar 属性设置为 false，把 TopMost 属性设置为 true，也在 load 方法里用代码指定 TopMost=true，三个条件一起满足的情况下，窗体就可以置顶了。 方案二： 使用系统动态库的方法置顶窗体（不用把 ShowInTaskbar 属性设置为 false）： 把窗体的 TopMost 属性设置为 true，同时在代码里加如下内容：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">// 设置此窗体为活动窗体：</span>
<span class="token comment">// 将创建指定窗口的线程带到前台并激活该窗口。键盘输入直接指向窗口，并为用户更改各种视觉提示。</span>
<span class="token comment">// 系统为创建前台窗口的线程分配的优先级略高于其他线程。</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> EntryPoint <span class="token operator">=</span> <span class="token string">&quot;SetForegroundWindow&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">SetForegroundWindow</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hWnd<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token comment">// 设置此窗体为活动窗体：</span>
<span class="token comment">// 激活窗口。窗口必须附加到调用线程的消息队列。</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> EntryPoint <span class="token operator">=</span> <span class="token string">&quot;SetActiveWindow&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">SetActiveWindow</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hWnd<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token comment">// 设置窗体位置</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32.dll&quot;</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">SetWindowPos</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hWnd<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> hWndInsertAfter<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> x<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> y<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> Width<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> Height<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> flags<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>窗体加载事件设置</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Form2_Load</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// 设置窗体显示在最上层</span>
    <span class="token function">SetWindowPos</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Handle<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0x0001</span> <span class="token operator">|</span> <span class="token number">0x0002</span> <span class="token operator">|</span> <span class="token number">0x0010</span> <span class="token operator">|</span> <span class="token number">0x0080</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token comment">// 设置本窗体为活动窗体</span>
    <span class="token function">SetActiveWindow</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Handle<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">SetForegroundWindow</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Handle<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token comment">// 设置窗体置顶</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>TopMost <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="获取系统最近使用记录" tabindex="-1"><a class="header-anchor" href="#获取系统最近使用记录"><span>获取系统最近使用记录</span></a></h2>`,9),v={href:"http://hi.baidu.com/ysuhy/item/b12a57d3660ccc90270ae7f9",target:"_blank",rel:"noopener noreferrer"},b=t(`<p>获取文件原始路径</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Linq</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IO</span><span class="token punctuation">;</span>              <span class="token comment">//Directory 目录 </span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Reflection</span><span class="token punctuation">;</span>      <span class="token comment">//BindingFlags 枚举</span>
 
<span class="token keyword">namespace</span> <span class="token namespace">GetPathRecent</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RecentlyFileHelper</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">GetShortcutTargetFile</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> shortcutFilename<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> type <span class="token operator">=</span> Type<span class="token punctuation">.</span><span class="token function">GetTypeFromProgID</span><span class="token punctuation">(</span><span class="token string">&quot;WScript.Shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//获取WScript.Shell类型</span>
            <span class="token class-name"><span class="token keyword">object</span></span> instance <span class="token operator">=</span> Activator<span class="token punctuation">.</span><span class="token function">CreateInstance</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//创建该类型实例</span>
            <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> type<span class="token punctuation">.</span><span class="token function">InvokeMember</span><span class="token punctuation">(</span><span class="token string">&quot;CreateShortCut&quot;</span><span class="token punctuation">,</span> BindingFlags<span class="token punctuation">.</span>InvokeMethod<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> instance<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">object</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> shortcutFilename <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> targetFile <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">GetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">InvokeMember</span><span class="token punctuation">(</span><span class="token string">&quot;TargetPath&quot;</span><span class="token punctuation">,</span> BindingFlags<span class="token punctuation">.</span>GetProperty<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> result<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name"><span class="token keyword">string</span></span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> targetFile<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
 
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetRecentlyFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> recentFolder <span class="token operator">=</span> Environment<span class="token punctuation">.</span><span class="token function">GetFolderPath</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span>SpecialFolder<span class="token punctuation">.</span>Recent<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//获取Recent路径</span>
            <span class="token keyword">return</span> <span class="token keyword">from</span> file <span class="token keyword">in</span> Directory<span class="token punctuation">.</span><span class="token function">EnumerateFiles</span><span class="token punctuation">(</span>recentFolder<span class="token punctuation">)</span>
                   <span class="token keyword">where</span> <span class="token class-name">Path</span><span class="token punctuation">.</span><span class="token function">GetExtension</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;.lnk&quot;</span>
                   <span class="token keyword">select</span> <span class="token function">GetShortcutTargetFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>向Form中添加控件listBox和fileSystemWatcher(监控文件系统更改通知,并在目录或文件更改时引发事件).具体代码如下:</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>ComponentModel</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Data</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Drawing</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Linq</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>
 
<span class="token keyword">namespace</span> <span class="token namespace">GetPathRecent</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">Form1</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Form</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token function">Form1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
 
        <span class="token comment">//载入Form </span>
        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Form1_Load</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            listBox1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            
            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> file <span class="token keyword">in</span> RecentlyFileHelper<span class="token punctuation">.</span><span class="token function">GetRecentlyFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                listBox1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
 
            <span class="token comment">//获取recent路径</span>
            <span class="token class-name"><span class="token keyword">var</span></span> recentFolder <span class="token operator">=</span> Environment<span class="token punctuation">.</span><span class="token function">GetFolderPath</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span>SpecialFolder<span class="token punctuation">.</span>Recent<span class="token punctuation">)</span><span class="token punctuation">;</span>
            fileSystemWatcher1<span class="token punctuation">.</span>Path <span class="token operator">=</span> recentFolder<span class="token punctuation">;</span>
            fileSystemWatcher1<span class="token punctuation">.</span>Created <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>IO<span class="token punctuation">.</span>FileSystemEventHandler</span><span class="token punctuation">(</span>fileSystemWatcher1_Created<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
 
        <span class="token comment">//当在指定Path(即recent路径)中创建文件和目录时增加ShortCut</span>
        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">fileSystemWatcher1_Created</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>IO<span class="token punctuation">.</span>FileSystemEventArgs</span> e<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            listBox1<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>RecentlyFileHelper<span class="token punctuation">.</span><span class="token function">GetShortcutTargetFile</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>FullPath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),g={href:"https://blog.csdn.net/eastmount/article/details/18474655/",target:"_blank",rel:"noopener noreferrer"};function h(y,w){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("p",null,[s("Nuget包：NewLife.Core 源码："),n("a",r,[s("https://github.com/NewLifeX/X/blob/master/NewLife.Core/Common/MachineInfo.cs"),e(a)])]),d,n("p",null,[s("资料："),n("a",k,[s("https://newlifex.com/core/machine_info"),e(a)])]),m,n("p",null,[s('当我们浏览文件时,它会自动的以快捷的方式存储历史记录,Windows会自动添加到该文件夹下记录系统最近使用的文件或文件夹,同样Office、Cookies等都有相对应的Recent.我们可以通过Environment.GetFolderPath(Environment.SpecialFolder.Recent)获取Windows的Recent最近历史记录的位置,我电脑中recent的路径为 "C:\\Users\\dell\\AppData\\Roaming\\Microsoft\\Windows\\Recent". 同时由于该获取较简单,就不详细叙述.补充C#获取桌面、Recent、我的文档、我的音乐、Cookies等路径参考文章'),n("a",v,[s("http://hi.baidu.com/ysuhy/item/b12a57d3660ccc90270ae7f9"),e(a)])]),b,n("p",null,[s("资料来源："),n("a",g,[s("https://blog.csdn.net/eastmount/article/details/18474655/"),e(a)])])])}const q=p(l,[["render",h],["__file","jitongcaozuo.html.vue"]]),x=JSON.parse('{"path":"/dotnet/zhuomianchengxu/jitongcaozuo/jitongcaozuo.html","title":"常用操作","lang":"zh-CN","frontmatter":{"title":"常用操作","lang":"zh-CN","date":"2023-09-10T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"jitongcaozuo","slug":"pl1a1rgaxsi0t6og","docsId":"125506642","description":"判断当前程序是否有管理员权限 windows系统 机器信息MachineInfo Nuget包：NewLife.Core 源码：https://github.com/NewLifeX/X/blob/master/NewLife.Core/Common/MachineInfo.cs 获取机器信息 资料：https://newlifex.com/core/...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/zhuomianchengxu/jitongcaozuo/jitongcaozuo.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"常用操作"}],["meta",{"property":"og:description","content":"判断当前程序是否有管理员权限 windows系统 机器信息MachineInfo Nuget包：NewLife.Core 源码：https://github.com/NewLifeX/X/blob/master/NewLife.Core/Common/MachineInfo.cs 获取机器信息 资料：https://newlifex.com/core/..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T13:49:46.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-27T13:49:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常用操作\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-10T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-27T13:49:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"判断当前程序是否有管理员权限","slug":"判断当前程序是否有管理员权限","link":"#判断当前程序是否有管理员权限","children":[]},{"level":2,"title":"机器信息MachineInfo","slug":"机器信息machineinfo","link":"#机器信息machineinfo","children":[]},{"level":2,"title":"系统截图","slug":"系统截图","link":"#系统截图","children":[]},{"level":2,"title":"窗口置顶","slug":"窗口置顶","link":"#窗口置顶","children":[]},{"level":2,"title":"获取系统最近使用记录","slug":"获取系统最近使用记录","link":"#获取系统最近使用记录","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1698414586000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":3.56,"words":1067},"filePathRelative":"dotnet/zhuomianchengxu/jitongcaozuo/jitongcaozuo.md","localizedDate":"2023年9月10日","excerpt":"<h2>判断当前程序是否有管理员权限</h2>\\n<p>windows系统</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token punctuation\\">[</span><span class=\\"token attribute\\"><span class=\\"token class-name\\">DllImport</span><span class=\\"token attribute-arguments\\"><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"shell32.dll\\"</span><span class=\\"token punctuation\\">,</span>EntryPoint <span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"#680\\"</span><span class=\\"token punctuation\\">)</span></span></span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">extern</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">bool</span></span> <span class=\\"token function\\">IsAdmin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{q as comp,x as data};
