import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,d as a,o as n}from"./app-DhDWGI3C.js";const l={};function d(r,s){return n(),e("div",null,s[0]||(s[0]=[a(`<h2 id="mysqldump说明" tabindex="-1"><a class="header-anchor" href="#mysqldump说明"><span>mysqldump说明</span></a></h2><p>mysqldump命令备份数据在MySQL中提供了命令行导出数据库数据以及文件的一种方便的工具mysqldump,我们可以通过命令行直接实现数据库内容的导出dump,首先我们简单了解一下mysqldump命令用法:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#MySQLdump常用mysqldump -u root -p --databases 数据库1 数据库2 &gt; xxx.sql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="mysqldump常用操作示例" tabindex="-1"><a class="header-anchor" href="#mysqldump常用操作示例"><span>mysqldump常用操作示例</span></a></h2><ol><li>备份全部数据库的数据和结构</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mysqldump -uroot -p123456 -A &gt; /data/mysqlDump/mydb.sql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>2.备份全部数据库的结构（加 -d 参数）</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mysqldump -uroot -p123456 -A -d &gt; /data/mysqlDump/mydb.sql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>备份全部数据库的数据(加 -t 参数)</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mysqldump -uroot -p123456 -A -t &gt; /data/mysqlDump/mydb.sql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>4.备份单个数据库的数据和结构(,数据库名mydb)</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mysqldump -uroot-p123456 mydb &gt; /data/mysqlDump/mydb.sql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="5"><li>备份单个数据库的结构</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mysqldump -uroot -p123456 mydb -d &gt; /data/mysqlDump/mydb.sql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="6"><li>备份单个数据库的数据</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mysqldump -uroot -p123456 mydb -t &gt; /data/mysqlDump/mydb.sql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="7"><li>备份多个表的数据和结构（数据，结构的单独备份方法与上同）</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mysqldump -uroot -p123456 mydb t1 t2 &gt; /data/mysqlDump/mydb.sql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="8"><li>一次备份多个数据库</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mysqldump -uroot -p123456 --databases db1 db2 &gt; /data/mysqlDump/mydb.sql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="还原-mysql-备份内容" tabindex="-1"><a class="header-anchor" href="#还原-mysql-备份内容"><span>还原 MySQL 备份内容</span></a></h2><p>有两种方式还原，第一种是在 MySQL 命令行中，第二种是使用 SHELL 行完成还原</p><ol><li>在系统命令行中，输入如下实现还原：</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mysql -uroot -p123456 &lt; /data/mysqlDump/mydb.sql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>在登录进入mysql系统中,通过source指令找到对应系统中的文件进行还原：</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mysql&gt; source /data/mysqlDump/mydb.sql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在 Linux中，通常使用BASH脚本对需要执行的内容进行编写，加上定时执行命令crontab实现日志自动化生成。</p><p>以下代码功能就是针对mysql进行备份，配合crontab，实现备份的内容为近一个月（31天）内的每天的mysql数据库记录。</p><p>编写BASH维护固定数量备份文件</p><p>在Linux中，使用vi或者vim编写脚本内容并命名为：mysql_dump_script.sh</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>#!/bin/bash</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#保存备份个数，备份31天数据</span></span>
<span class="line"><span>number=31</span></span>
<span class="line"><span>#备份保存路径</span></span>
<span class="line"><span>backup_dir=/root/mysqlbackup</span></span>
<span class="line"><span>#日期</span></span>
<span class="line"><span>dd=\`date +%Y-%m-%d-%H-%M-%S\`</span></span>
<span class="line"><span>#备份工具</span></span>
<span class="line"><span>tool=mysqldump</span></span>
<span class="line"><span>#用户名</span></span>
<span class="line"><span>username=root</span></span>
<span class="line"><span>#密码</span></span>
<span class="line"><span>password=TankB214</span></span>
<span class="line"><span>#将要备份的数据库</span></span>
<span class="line"><span>database_name=edoctor</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#如果文件夹不存在则创建</span></span>
<span class="line"><span>if [ ! -d $backup_dir ]; </span></span>
<span class="line"><span>then     </span></span>
<span class="line"><span>    mkdir -p $backup_dir; </span></span>
<span class="line"><span>fi</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#简单写法 mysqldump -u root -p123456 users &gt; /root/mysqlbackup/users-$filename.sql</span></span>
<span class="line"><span>$tool -u $username -p$password $database_name &gt; $backup_dir/$database_name-$dd.sql</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#写创建备份日志</span></span>
<span class="line"><span>echo &quot;create $backup_dir/$database_name-$dd.dupm&quot; &gt;&gt; $backup_dir/log.txt</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#找出需要删除的备份</span></span>
<span class="line"><span>delfile=\`ls -l -crt $backup_dir/*.sql | awk &#39;{print $9 }&#39; | head -1\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#判断现在的备份数量是否大于$number</span></span>
<span class="line"><span>count=\`ls -l -crt $backup_dir/*.sql | awk &#39;{print $9 }&#39; | wc -l\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>if [ $count -gt $number ]</span></span>
<span class="line"><span>then</span></span>
<span class="line"><span>  #删除最早生成的备份，只保留number数量的备份</span></span>
<span class="line"><span>  rm $delfile</span></span>
<span class="line"><span>  #写删除文件日志</span></span>
<span class="line"><span>  echo &quot;delete $delfile&quot; &gt;&gt; $backup_dir/log.txt</span></span>
<span class="line"><span>fi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如上代码主要含义如下：1.首先设置各项参数，例如number最多需要备份的数目，备份路径，用户名，密码等。2.执行mysqldump命令保存备份文件，并将操作打印至同目录下的log.txt中标记操作日志。搜索公众号互联网架构师回复“2T”，送你一份惊喜礼包。3.定义需要删除的文件：通过ls命令获取第九列，即文件名列，再通过实现定义操作时间最晚的那个需要删除的文件。4.定义备份数量：通过ls命令加上统计以sql结尾的文件的行数。5.如果文件超出限制大小，就删除最早创建的sql文件</p><h2 id="使用crontab定期执行备份脚本" tabindex="-1"><a class="header-anchor" href="#使用crontab定期执行备份脚本"><span>使用crontab定期执行备份脚本</span></a></h2><p>在 Linux 中，周期执行的任务一般由cron这个守护进程来处理[ps -ef|grep cron]。cron读取一个或多个配置文件，这些配置文件中包含了命令行及其调用时间。<br> cron的配置文件称为“crontab”，是“cron table”的简写。</p><p>cron服务</p><p>cron是一个 Liunx 下 的定时执行工具，可以在无需人工干预的情况下运行作业。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">service</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> crond</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //启动服务</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">service</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> crond</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //关闭服务</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">service</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> crond</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //重启服务</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">service</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> crond</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reload</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //重新载入配置</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">service</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> crond</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> status</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //查看服务状态</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crontab语法" tabindex="-1"><a class="header-anchor" href="#crontab语法"><span>crontab语法</span></a></h3><p>crontab命令用于安装、删除或者列出用于驱动cron后台进程的表格。用户把需要执行的命令序列放到crontab文件中以获得执行。每个用户都可以有自己的crontab文件。<code>/var/spool/cron</code>下的crontab文件不可以直接创建或者直接修改。该crontab文件是通过crontab命令创建的。</p><p>在crontab文件中如何输入需要执行的命令和时间。该文件中每行都包括六个域，其中前五个域是指定命令被执行的时间，最后一个域是要被执行的命令。<br> 每个域之间使用空格或者制表符分隔。</p><p>格式如下：<br> minute hour day-of-month month-of-year day-of-week commands<br> 合法值 00-59 00-23 01-31 01-12 0-6 (0 is sunday)</p><p>除了数字还有几个个特殊的符号就是<code>*</code>、<code>/</code>和<code>-</code>、<code>,</code>，<code>*</code>代表所有的取值范围内的数字，<code>/</code>代表每的意思,<code>/5</code>表示每5个单位，<code>-</code>代表从某个数字到某个数字,<code>,</code>分开几个离散的数字。</p><p>-l 在标准输出上显示当前的crontab。<br> -r 删除当前的crontab文件。<br> -e 使用VISUAL或者EDITOR环境变量所指的编辑器编辑当前的crontab文件。当结束编辑离开时，编辑后的文件将自动安装。</p><p>创建cron脚本</p><p>第一步：写cron脚本文件,命名为mysqlRollBack.cron。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>15,30,45,59 * * * * echo &quot;xgmtest.....&quot; &gt;&gt; xgmtest.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>表示，每隔15分钟，执行打印一次命令</p><p>第二步：添加定时任务。执行命令 “crontab crontest.cron”。搞定</p><p>第三步：&quot;crontab -l&quot; 查看定时任务是否成功或者检测/var/spool/cron下是否生成对应cron脚本注意：这操作是直接替换该用户下的crontab，而不是新增定期执行编写的定时任务脚本（记得先给shell脚本执行权限）</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>0 2 * * * /root/mysql_backup_script.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>随后使用crontab命令定期指令编写的定时脚本</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>crontab mysqlRollback.cron</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>再通过命令检查定时任务是否已创建：</p><p>附 crontab 的使用示例：</p><ol><li>每天早上6点</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>0 6 * * * echo &quot;Good morning.&quot; &gt;&gt; /tmp/test.txt //注意单纯echo，从屏幕上看不到任何输出，因为cron把任何输出都email到root的信箱了。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>每两个小时</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>0 */2 * * * echo &quot;Have a break now.&quot; &gt;&gt; /tmp/test.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>晚上11点到早上8点之间每两个小时和早上八点</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>0 23-7/2，8 * * * echo &quot;Have a good dream&quot; &gt;&gt; /tmp/test.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="4"><li>每个月的4号和每个礼拜的礼拜一到礼拜三的早上11点</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>0 11 4 * 1-3 command line</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>5.1 月 1 日早上 4 点</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>0 4 1 1 * command line SHELL=/bin/bash PATH=/sbin:/bin:/usr/sbin:/usr/bin MAILTO=root //如果出现错误，或者有数据输出，数据作为邮件发给这个帐号 HOME=/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="6"><li>每小时执行/etc/cron.hourly内的脚本</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>01 * * * * root run-parts /etc/cron.hourly</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="7"><li>每天执行/etc/cron.daily内的脚本</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>02 4 * * * root run-parts /etc/cron.daily</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="8"><li>每星期执行/etc/cron.weekly内的脚本</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>22 4 * * 0 root run-parts /etc/cron.weekly</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="9"><li>每月去执行/etc/cron.monthly内的脚本</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>42 4 1 * * root run-parts /etc/cron.monthly</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>注意: &quot;run-parts&quot; 这个参数了，如果去掉这个参数的话，后面就可以写要运行的某个脚本名，而不是文件夹名。</p><ol start="10"><li>每天的下午4点、5点、6点的5 min、15 min、25 min、35 min、45 min、55 min时执行命令。</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>5，15，25，35，45，55 16，17，18 * * * command</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="11"><li>每周一，三，五的下午3：00系统进入维护状态，重新启动系统。</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>00 15 * * 1，3，5 shutdown -r +5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="12"><li>每小时的10分，40分执行用户目录下的innd/bbslin这个指令：</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>10，40 * * * * innd/bbslink</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="13"><li>每小时的1分执行用户目录下的bin/account这个指令：</li></ol><p>以下是我的测试每分钟的截图效果，其对应代码如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>* * * * * /root/mysql_backup_script.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><p>windows定时备份：<a href="https://www.cnblogs.com/guliang/p/11639884.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/guliang/p/11639884.html</a></p><p>linux定时备份：<a href="http://zhuanlan.zhihu.com/p/457667009" target="_blank" rel="noopener noreferrer">zhuanlan.zhihu.com/p/457667009</a></p>`,85)]))}const h=i(l,[["render",d]]),c=JSON.parse('{"path":"/dataBase/mysql/jiaoben/mysqldumpOperator.html","title":"mysqldump操作数据库","lang":"zh-CN","frontmatter":{"title":"mysqldump操作数据库","lang":"zh-CN","date":"2021-05-14T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":false,"category":["dataBase"],"tag":["无"],"filename":"mysqldumpdaochushujuku","slug":"udcryv","docsId":"31804937","description":"mysqldump说明 mysqldump命令备份数据在MySQL中提供了命令行导出数据库数据以及文件的一种方便的工具mysqldump,我们可以通过命令行直接实现数据库内容的导出dump,首先我们简单了解一下mysqldump命令用法: mysqldump常用操作示例 备份全部数据库的数据和结构 2.备份全部数据库的结构（加 -d 参数） 备份全部数...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"mysqldump操作数据库\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-05-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-25T12:50:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"],["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/mysql/jiaoben/mysqldumpOperator.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"mysqldump操作数据库"}],["meta",{"property":"og:description","content":"mysqldump说明 mysqldump命令备份数据在MySQL中提供了命令行导出数据库数据以及文件的一种方便的工具mysqldump,我们可以通过命令行直接实现数据库内容的导出dump,首先我们简单了解一下mysqldump命令用法: mysqldump常用操作示例 备份全部数据库的数据和结构 2.备份全部数据库的结构（加 -d 参数） 备份全部数..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-25T12:50:39.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2021-05-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-25T12:50:39.000Z"}]]},"git":{"createdTime":1700916639000,"updatedTime":1700916639000,"contributors":[{"name":"azrng","username":"","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":6.68,"words":2005},"filePathRelative":"dataBase/mysql/jiaoben/mysqldumpOperator.md","excerpt":"<h2>mysqldump说明</h2>\\n<p>mysqldump命令备份数据在MySQL中提供了命令行导出数据库数据以及文件的一种方便的工具mysqldump,我们可以通过命令行直接实现数据库内容的导出dump,首先我们简单了解一下mysqldump命令用法:</p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>#MySQLdump常用mysqldump -u root -p --databases 数据库1 数据库2 &gt; xxx.sql</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{h as comp,c as data};
