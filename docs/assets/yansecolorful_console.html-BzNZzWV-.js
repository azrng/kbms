import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as e,c as p,a as n,d as s,e as l,b as c}from"./app-qB9_Bjjp.js";const i={},r=c(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>Colorful.Console是一个Nuget包，它可以增强我们对控制台输出文字样式的控制。我们可以使用System.Drawing.Color中定义的颜色来定义控制台程序的配色方案。 Colorful.Console: http://colorfulconsole.com/</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>引用nuget包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Colorful.Console&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;1.2.15&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="基本操作" tabindex="-1"><a class="header-anchor" href="#基本操作"><span>基本操作</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Drawing</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token class-name">Console</span> <span class="token operator">=</span> <span class="token class-name">Colorful<span class="token punctuation">.</span>Console</span><span class="token punctuation">;</span>


Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;console in pink&quot;</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Pink<span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;console in default&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="figlet字体输出" tabindex="-1"><a class="header-anchor" href="#figlet字体输出"><span>FIGlet字体输出</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>FIGLet<span class="token punctuation">:</span> http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>figlet<span class="token punctuation">.</span>org<span class="token operator">/</span>
<span class="token class-name">FigletFont</span> font <span class="token operator">=</span> FigletFont<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span><span class="token string">&quot;chunky.flf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Figlet</span> figlet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Figlet</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>figlet<span class="token punctuation">.</span><span class="token function">ToAscii</span><span class="token punctuation">(</span><span class="token string">&quot;Belvedere&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ColorTranslator<span class="token punctuation">.</span><span class="token function">FromHtml</span><span class="token punctuation">(</span><span class="token string">&quot;#8AFFEF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>figlet<span class="token punctuation">.</span><span class="token function">ToAscii</span><span class="token punctuation">(</span><span class="token string">&quot;ice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ColorTranslator<span class="token punctuation">.</span><span class="token function">FromHtml</span><span class="token punctuation">(</span><span class="token string">&quot;#FAD6FF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>figlet<span class="token punctuation">.</span><span class="token function">ToAscii</span><span class="token punctuation">(</span><span class="token string">&quot;cream.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ColorTranslator<span class="token punctuation">.</span><span class="token function">FromHtml</span><span class="token punctuation">(</span><span class="token string">&quot;#B8DBFF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,10),u={href:"https://github.com/Roy0309/Img2ColorfulChars",target:"_blank",rel:"noopener noreferrer"};function d(k,g){const a=o("ExternalLinkIcon");return e(),p("div",null,[r,n("p",null,[s("将图片或者视频转换Wie彩色字符图后输出："),n("a",u,[s("https://github.com/Roy0309/Img2ColorfulChars"),l(a)])])])}const f=t(i,[["render",d],["__file","yansecolorful_console.html.vue"]]),v=JSON.parse('{"path":"/dotnet/console/yangshinugetbao/yansecolorful_console.html","title":"颜色Colorful.Console","lang":"zh-CN","frontmatter":{"title":"颜色Colorful.Console","lang":"zh-CN","date":"2022-07-28T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"yansecolorful_console","slug":"ox50ln","docsId":"71200844","description":"介绍 Colorful.Console是一个Nuget包，它可以增强我们对控制台输出文字样式的控制。我们可以使用System.Drawing.Color中定义的颜色来定义控制台程序的配色方案。 Colorful.Console: http://colorfulconsole.com/ 操作 引用nuget包 基本操作 FIGlet字体输出 资料 将图片...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/console/yangshinugetbao/yansecolorful_console.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"颜色Colorful.Console"}],["meta",{"property":"og:description","content":"介绍 Colorful.Console是一个Nuget包，它可以增强我们对控制台输出文字样式的控制。我们可以使用System.Drawing.Color中定义的颜色来定义控制台程序的配色方案。 Colorful.Console: http://colorfulconsole.com/ 操作 引用nuget包 基本操作 FIGlet字体输出 资料 将图片..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-07-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"颜色Colorful.Console\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-28T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"基本操作","slug":"基本操作","link":"#基本操作","children":[]},{"level":3,"title":"FIGlet字体输出","slug":"figlet字体输出","link":"#figlet字体输出","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.58,"words":173},"filePathRelative":"dotnet/console/yangshinugetbao/yansecolorful_console.md","localizedDate":"2022年7月28日","excerpt":"<h2>介绍</h2>\\n<p>Colorful.Console是一个Nuget包，它可以增强我们对控制台输出文字样式的控制。我们可以使用System.Drawing.Color中定义的颜色来定义控制台程序的配色方案。\\nColorful.Console: http://colorfulconsole.com/</p>\\n<h2>操作</h2>\\n<p>引用nuget包</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">PackageReference</span> Include<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"Colorful.Console\\"</span> Version<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"1.2.15\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n</code></pre></div>","autoDesc":true}');export{f as comp,v as data};
