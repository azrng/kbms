import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as t,b as p,a as n}from"./app-qB9_Bjjp.js";const o={},e=p(`<div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PhoneNumber</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Number <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>PhoneNumber<span class="token punctuation">&gt;</span></span> PhoneNumbers <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name"><span class="token keyword">var</span></span> people <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Person<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
people<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Person</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> PhoneNumbers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>PhoneNumber<span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PhoneNumber</span> <span class="token punctuation">{</span> Number <span class="token operator">=</span> <span class="token string">&quot;11&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PhoneNumber</span> <span class="token punctuation">{</span> Number <span class="token operator">=</span> <span class="token string">&quot;22&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
people<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Person</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span> PhoneNumbers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>PhoneNumber<span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PhoneNumber</span> <span class="token punctuation">{</span> Number <span class="token operator">=</span> <span class="token string">&quot;33&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PhoneNumber</span> <span class="token punctuation">{</span> Number <span class="token operator">=</span> <span class="token string">&quot;44&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Select</span>
<span class="token class-name"><span class="token keyword">var</span></span> phoneLists <span class="token operator">=</span> people<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>p <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span>PhoneNumbers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//[[{&quot;Number&quot;:&quot;11&quot;},{&quot;Number&quot;:&quot;22&quot;}],[{&quot;Number&quot;:&quot;33&quot;},{&quot;Number&quot;:&quot;44&quot;}]]</span>
<span class="token comment">// SelectMany</span>
<span class="token class-name"><span class="token keyword">var</span></span> phoneNumbers <span class="token operator">=</span> people<span class="token punctuation">.</span><span class="token function">SelectMany</span><span class="token punctuation">(</span>p <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span>PhoneNumbers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//[{&quot;Number&quot;:&quot;11&quot;},{&quot;Number&quot;:&quot;22&quot;},{&quot;Number&quot;:&quot;33&quot;},{&quot;Number&quot;:&quot;44&quot;}]</span>
<span class="token class-name"><span class="token keyword">var</span></span> directory <span class="token operator">=</span> people<span class="token punctuation">.</span><span class="token function">SelectMany</span><span class="token punctuation">(</span>p <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span>PhoneNumbers<span class="token punctuation">,</span> <span class="token punctuation">(</span>parent<span class="token punctuation">,</span> child<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> parent<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> child<span class="token punctuation">.</span>Number <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//[{&quot;Name&quot;:&quot;张三&quot;,&quot;Number&quot;:&quot;11&quot;},{&quot;Name&quot;:&quot;张三&quot;,&quot;Number&quot;:&quot;22&quot;},{&quot;Name&quot;:&quot;李四&quot;,&quot;Number&quot;:&quot;33&quot;},{&quot;Name&quot;:&quot;李四&quot;,&quot;Number&quot;:&quot;44&quot;}]            </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="select" tabindex="-1"><a class="header-anchor" href="#select"><span>Select</span></a></h2><p>遍历一级查找</p><h2 id="selectmany" tabindex="-1"><a class="header-anchor" href="#selectmany"><span>SelectMany</span></a></h2><p>相当于二次遍历查找，先遍历一级出来item，再遍历二级item. 和Select的区别,Select只遍历一级。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> text <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;Albert was here&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Burke slept late&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Connor is happy&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> d1 <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>s <span class="token operator">=&gt;</span> s<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token char">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//3个元素，每个元素里面又有3个</span>
<span class="token class-name"><span class="token keyword">var</span></span> d2 <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">SelectMany</span><span class="token punctuation">(</span>s <span class="token operator">=&gt;</span> s<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token char">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//9个元素</span>
<span class="token class-name"><span class="token keyword">var</span></span> d3 <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>s <span class="token operator">=&gt;</span> s<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//3个元素</span>
<span class="token class-name"><span class="token keyword">var</span></span> d4 <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">SelectMany</span><span class="token punctuation">(</span>s <span class="token operator">=&gt;</span> s<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//45个元素，一个字母一个元素，空格也算</span>
<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> item <span class="token keyword">in</span> d4<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="笛卡尔积" tabindex="-1"><a class="header-anchor" href="#笛卡尔积"><span>笛卡尔积</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> animals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token string">&quot;cat&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dog&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;donkey&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> number <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> mix <span class="token operator">=</span> number<span class="token punctuation">.</span><span class="token function">SelectMany</span><span class="token punctuation">(</span>num <span class="token operator">=&gt;</span> animals<span class="token punctuation">,</span> <span class="token punctuation">(</span>n<span class="token punctuation">,</span> a<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> n<span class="token punctuation">,</span> a <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果:</p>`,9),c=n("blockquote",{"(10,cat), (10,dog), (10,donkey), (20,cat), (20,dog), (20,donkey)":""},[n("p")],-1),u=[e,c];function l(i,k){return a(),t("div",null,u)}const d=s(o,[["render",l],["__file","selectmany.html.vue"]]),b=JSON.parse('{"path":"/dotnet/csharp/linq/selectmany.html","title":"Select/SelectMany","lang":"zh-CN","frontmatter":{"title":"Select/SelectMany","lang":"zh-CN","date":"2023-10-22T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["csharp"],"tag":["无"],"filename":"select/selectmany","slug":"ftbndg","docsId":"29501538","description":"Select 遍历一级查找 SelectMany 相当于二次遍历查找，先遍历一级出来item，再遍历二级item. 和Select的区别,Select只遍历一级。 笛卡尔积 输出结果:","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/csharp/linq/selectmany.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Select/SelectMany"}],["meta",{"property":"og:description","content":"Select 遍历一级查找 SelectMany 相当于二次遍历查找，先遍历一级出来item，再遍历二级item. 和Select的区别,Select只遍历一级。 笛卡尔积 输出结果:"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-15T15:10:20.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-15T15:10:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Select/SelectMany\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-15T15:10:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"Select","slug":"select","link":"#select","children":[]},{"level":2,"title":"SelectMany","slug":"selectmany","link":"#selectmany","children":[{"level":3,"title":"笛卡尔积","slug":"笛卡尔积","link":"#笛卡尔积","children":[]}]}],"git":{"createdTime":1700232644000,"updatedTime":1705331420000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.08,"words":325},"filePathRelative":"dotnet/csharp/linq/selectmany.md","localizedDate":"2023年10月22日","excerpt":"<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">PhoneNumber</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">string</span></span> Number <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">get</span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">set</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Person</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token return-type class-name\\">List<span class=\\"token punctuation\\">&lt;</span>PhoneNumber<span class=\\"token punctuation\\">&gt;</span></span> PhoneNumbers <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">get</span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">set</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">string</span></span> Name <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">get</span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">set</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> people <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">List<span class=\\"token punctuation\\">&lt;</span>Person<span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\npeople<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Add</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Person</span> <span class=\\"token punctuation\\">{</span> Name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"张三\\"</span><span class=\\"token punctuation\\">,</span> PhoneNumbers <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">List<span class=\\"token punctuation\\">&lt;</span>PhoneNumber<span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">PhoneNumber</span> <span class=\\"token punctuation\\">{</span> Number <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"11\\"</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">PhoneNumber</span> <span class=\\"token punctuation\\">{</span> Number <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"22\\"</span> <span class=\\"token punctuation\\">}</span> <span class=\\"token punctuation\\">}</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\npeople<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Add</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Person</span> <span class=\\"token punctuation\\">{</span> Name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"李四\\"</span><span class=\\"token punctuation\\">,</span> PhoneNumbers <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">List<span class=\\"token punctuation\\">&lt;</span>PhoneNumber<span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">PhoneNumber</span> <span class=\\"token punctuation\\">{</span> Number <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"33\\"</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">PhoneNumber</span> <span class=\\"token punctuation\\">{</span> Number <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"44\\"</span> <span class=\\"token punctuation\\">}</span> <span class=\\"token punctuation\\">}</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// Select</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> phoneLists <span class=\\"token operator\\">=</span> people<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Select</span><span class=\\"token punctuation\\">(</span>p <span class=\\"token operator\\">=&gt;</span> p<span class=\\"token punctuation\\">.</span>PhoneNumbers<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ToList</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">//[[{\\"Number\\":\\"11\\"},{\\"Number\\":\\"22\\"}],[{\\"Number\\":\\"33\\"},{\\"Number\\":\\"44\\"}]]</span>\\n<span class=\\"token comment\\">// SelectMany</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> phoneNumbers <span class=\\"token operator\\">=</span> people<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">SelectMany</span><span class=\\"token punctuation\\">(</span>p <span class=\\"token operator\\">=&gt;</span> p<span class=\\"token punctuation\\">.</span>PhoneNumbers<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ToList</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">//[{\\"Number\\":\\"11\\"},{\\"Number\\":\\"22\\"},{\\"Number\\":\\"33\\"},{\\"Number\\":\\"44\\"}]</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> directory <span class=\\"token operator\\">=</span> people<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">SelectMany</span><span class=\\"token punctuation\\">(</span>p <span class=\\"token operator\\">=&gt;</span> p<span class=\\"token punctuation\\">.</span>PhoneNumbers<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span>parent<span class=\\"token punctuation\\">,</span> child<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token keyword\\">new</span> <span class=\\"token punctuation\\">{</span> parent<span class=\\"token punctuation\\">.</span>Name<span class=\\"token punctuation\\">,</span> child<span class=\\"token punctuation\\">.</span>Number <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ToList</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">//[{\\"Name\\":\\"张三\\",\\"Number\\":\\"11\\"},{\\"Name\\":\\"张三\\",\\"Number\\":\\"22\\"},{\\"Name\\":\\"李四\\",\\"Number\\":\\"33\\"},{\\"Name\\":\\"李四\\",\\"Number\\":\\"44\\"}]            </span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,b as data};
