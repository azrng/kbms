import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o,c,b as n,e as s,f as l,d as a}from"./app-D8HBJYTp.js";const i={},u=a('<h2 id="常见打印需求" tabindex="-1"><a class="header-anchor" href="#常见打印需求"><span>常见打印需求</span></a></h2><ol><li>使用默认打印机打印PDF文档</li><li>使用虚拟打印机（Microsoft XPS Document Writer）打印PDF文档</li><li>指定打印机及PDF文档打印页码范围</li><li>静默打印PDF文档</li><li>双面打印PDF文档</li><li>黑白打印PDF文档</li><li>打印PDF文档时选择不同的出纸盒</li><li>将PDF文档打印多份</li><li>打印PDF一页为多页、打印多页为一页</li><li>自定义纸张大小打印PDF</li></ol><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件"><span>组件</span></a></h2><p>打印机操作代码 https://www.whuanle.cn/archives/21032 https://www.whuanle.cn/archives/21367</p><h3 id="spire-pdf-for-net" tabindex="-1"><a class="header-anchor" href="#spire-pdf-for-net"><span>Spire.PDF for .NET</span></a></h3>',5),r={href:"https://www.e-iceblue.com/Download/download-pdf-for-net-now.html",target:"_blank",rel:"noopener noreferrer"},k=a(`<h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="获取打印机队列数" tabindex="-1"><a class="header-anchor" href="#获取打印机队列数"><span>获取打印机队列数</span></a></h3><p>需要先引用程序集</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Printing</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>定义</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;winspool.drv&quot;</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">OpenPrinter</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> pPrinterName<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name">IntPtr</span> phPrinter<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> pDefault<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;winspool.drv&quot;</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">ClosePrinter</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hPrinter<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;winspool.drv&quot;</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">EnumJobs</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hPrinter<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> FirstJob<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> NoJobs<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> Level<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> pInfo<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> cdBuf<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">int</span></span> pcbNeeded<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">int</span></span> pcReturned<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;winspool.drv&quot;</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> <span class="token function">GetJob</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">long</span></span> hPrinter<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">long</span></span> JobId<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">long</span></span> Level<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">long</span></span> buffer<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">long</span></span> pbSize<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">long</span></span> pbSizeNeeded<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取打印机中队列的数据</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 得到具体打印机作业数</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>printerToPeek<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>打印机名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">peekPrinterJobs</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> printerToPeek<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">IntPtr</span> handle<span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">int</span></span> FirstJob <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">int</span></span> NumJobs <span class="token operator">=</span> <span class="token number">127</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">int</span></span> pcbNeeded<span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">int</span></span> pcReturned<span class="token punctuation">;</span>

    <span class="token comment">//打开打印机</span>
    <span class="token function">OpenPrinter</span><span class="token punctuation">(</span>printerToPeek<span class="token punctuation">,</span> <span class="token keyword">out</span> handle<span class="token punctuation">,</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// get num bytes required, here we assume the maxt job for the printer quest is 128 (0..127) </span>
    <span class="token function">EnumJobs</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span> FirstJob<span class="token punctuation">,</span> NumJobs<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">out</span> pcbNeeded<span class="token punctuation">,</span> <span class="token keyword">out</span> pcReturned<span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token comment">// allocate unmanaged memory 分配非托管内存</span>
    <span class="token class-name">IntPtr</span> pData <span class="token operator">=</span> Marshal<span class="token punctuation">.</span><span class="token function">AllocHGlobal</span><span class="token punctuation">(</span>pcbNeeded<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// get structs  获取结构</span>
    <span class="token function">EnumJobs</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span> FirstJob<span class="token punctuation">,</span> NumJobs<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> pData<span class="token punctuation">,</span> pcbNeeded<span class="token punctuation">,</span> <span class="token keyword">out</span> pcbNeeded<span class="token punctuation">,</span> <span class="token keyword">out</span> pcReturned<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//关闭打印机</span>
    <span class="token function">ClosePrinter</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> pcReturned<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p>`,9);function d(m,v){const t=p("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[s("官网地址："),n("a",r,[s("https://www.e-iceblue.com/Download/download-pdf-for-net-now.html"),l(t)])]),k])}const g=e(i,[["render",d],["__file","index.html.vue"]]),w=JSON.parse('{"path":"/middleware/printPlugin/","title":"概述","lang":"zh-CN","frontmatter":{"title":"概述","lang":"zh-CN","date":"2023-10-19T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"gaishu","slug":"dou56w","docsId":"72942708","description":"常见打印需求 使用默认打印机打印PDF文档 使用虚拟打印机（Microsoft XPS Document Writer）打印PDF文档 指定打印机及PDF文档打印页码范围 静默打印PDF文档 双面打印PDF文档 黑白打印PDF文档 打印PDF文档时选择不同的出纸盒 将PDF文档打印多份 打印PDF一页为多页、打印多页为一页 自定义纸张大小打印PDF 组...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/printPlugin/"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"概述"}],["meta",{"property":"og:description","content":"常见打印需求 使用默认打印机打印PDF文档 使用虚拟打印机（Microsoft XPS Document Writer）打印PDF文档 指定打印机及PDF文档打印页码范围 静默打印PDF文档 双面打印PDF文档 黑白打印PDF文档 打印PDF文档时选择不同的出纸盒 将PDF文档打印多份 打印PDF一页为多页、打印多页为一页 自定义纸张大小打印PDF 组..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-13T14:11:27.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-13T14:11:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"概述\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-19T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-13T14:11:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"常见打印需求","slug":"常见打印需求","link":"#常见打印需求","children":[]},{"level":2,"title":"组件","slug":"组件","link":"#组件","children":[{"level":3,"title":"Spire.PDF for .NET","slug":"spire-pdf-for-net","link":"#spire-pdf-for-net","children":[]}]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"获取打印机队列数","slug":"获取打印机队列数","link":"#获取打印机队列数","children":[]}]}],"git":{"createdTime":1697724028000,"updatedTime":1710339087000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.43,"words":429},"filePathRelative":"middleware/printPlugin/readme.md","localizedDate":"2023年10月19日","excerpt":"<h2>常见打印需求</h2>\\n<ol>\\n<li>使用默认打印机打印PDF文档</li>\\n<li>使用虚拟打印机（Microsoft XPS Document Writer）打印PDF文档</li>\\n<li>指定打印机及PDF文档打印页码范围</li>\\n<li>静默打印PDF文档</li>\\n<li>双面打印PDF文档</li>\\n<li>黑白打印PDF文档</li>\\n<li>打印PDF文档时选择不同的出纸盒</li>\\n<li>将PDF文档打印多份</li>\\n<li>打印PDF一页为多页、打印多页为一页</li>\\n<li>自定义纸张大小打印PDF</li>\\n</ol>\\n<h2>组件</h2>\\n<p>打印机操作代码\\nhttps://www.whuanle.cn/archives/21032\\nhttps://www.whuanle.cn/archives/21367</p>","autoDesc":true}');export{g as comp,w as data};
