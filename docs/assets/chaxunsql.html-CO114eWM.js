import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as r,o as a}from"./app-fQkBsvt-.js";const o={};function i(l,e){return a(),n("div",null,e[0]||(e[0]=[r("<p>可通过开启慢查询日志找出较慢的SQL<br> sql语句尽可能简单：一个sql只能在一个cpu运算；大语句拆小语句，减少锁时间；一条大SQL可以堵死整个库<br> or改写成in：or的效率是n级别，in的效率是log（n）级别，in的个数建议控制在200以内<br> 不用函数和触发器，在应用程序实现<br> 避免%xx式查询<br> 少用join<br> 使用同类型进行比较，比如‘123’和‘123’比，123和123比<br> 尽量避免在where子句中使用！=或&lt;&gt;操作符，否则将引擎放弃使用索引而进行全表扫描<br> 对于连续数值，使用between不用in：select id from t where num between 1 and 5<br> 列表数据不要拿全表，要使用limit来分页，每页数量也不要太大</p>",1)]))}const m=t(o,[["render",i],["__file","chaxunsql.html.vue"]]),p=JSON.parse('{"path":"/dataBase/mysql/shujukuyouhuajilu/chaxunsql.html","title":"查询SQL","lang":"zh-CN","frontmatter":{"title":"查询SQL","lang":"zh-CN","date":"2021-05-14T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"filename":"chaxunsql","slug":"mbn2db","docsId":"31804971","description":"可通过开启慢查询日志找出较慢的SQL sql语句尽可能简单：一个sql只能在一个cpu运算；大语句拆小语句，减少锁时间；一条大SQL可以堵死整个库 or改写成in：or的效率是n级别，in的效率是log（n）级别，in的个数建议控制在200以内 不用函数和触发器，在应用程序实现 避免%xx式查询 少用join 使用同类型进行比较，比如‘123’和‘12...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/mysql/shujukuyouhuajilu/chaxunsql.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"查询SQL"}],["meta",{"property":"og:description","content":"可通过开启慢查询日志找出较慢的SQL sql语句尽可能简单：一个sql只能在一个cpu运算；大语句拆小语句，减少锁时间；一条大SQL可以堵死整个库 or改写成in：or的效率是n级别，in的效率是log（n）级别，in的个数建议控制在200以内 不用函数和触发器，在应用程序实现 避免%xx式查询 少用join 使用同类型进行比较，比如‘123’和‘12..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-23T15:53:24.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2021-05-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-23T15:53:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"查询SQL\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-05-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-23T15:53:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[],"git":{"createdTime":1695484404000,"updatedTime":1695484404000,"contributors":[{"name":"azrng","username":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.81,"words":242},"filePathRelative":"dataBase/mysql/shujukuyouhuajilu/chaxunsql.md","localizedDate":"2021年5月14日","excerpt":"<p>可通过开启慢查询日志找出较慢的SQL<br>\\nsql语句尽可能简单：一个sql只能在一个cpu运算；大语句拆小语句，减少锁时间；一条大SQL可以堵死整个库<br>\\nor改写成in：or的效率是n级别，in的效率是log（n）级别，in的个数建议控制在200以内<br>\\n不用函数和触发器，在应用程序实现<br>\\n避免%xx式查询<br>\\n少用join<br>\\n使用同类型进行比较，比如‘123’和‘123’比，123和123比<br>\\n尽量避免在where子句中使用！=或&lt;&gt;操作符，否则将引擎放弃使用索引而进行全表扫描<br>\\n对于连续数值，使用between不用in：select id from t where num between 1 and 5<br>\\n列表数据不要拿全表，要使用limit来分页，每页数量也不要太大</p>","autoDesc":true}');export{m as comp,p as data};
