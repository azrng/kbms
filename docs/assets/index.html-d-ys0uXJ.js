import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as i,c as l,a as t,d as e,e as n,b as s}from"./app-qB9_Bjjp.js";const c={},d=s(`<h2 id="说明" tabindex="-1"><a class="header-anchor" href="#说明"><span>说明</span></a></h2><p>集中式的版本控制：版本库是集中存放在中央服务器的，需要首先去中央服务器取得最新的版本，然后每次编辑完以后在推送到中央服务器，最大的缺点就是必须联网才可以使用，如果是局域网的话宽带大，如果是在互联网上，网速慢的情况，提交非常慢。 分布式版本控制：没有中央服务器，每一个人的电脑上都是一个完整的版本库，推送的时候是两个人吧各自的修改推送给对方，然后就可以看到对方的修改。分布式安全性更高，因为每个人的电脑里面都存在完整的版本库。但是实际上，分布式版本控制也有一个电脑充当与中央服务器，它是用来方便“交换”大家的修改。</p><h2 id="加速克隆" tabindex="-1"><a class="header-anchor" href="#加速克隆"><span>加速克隆</span></a></h2><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code>git clone https://gitclone.com/github.com/xxx 加速克隆
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="下载" tabindex="-1"><a class="header-anchor" href="#下载"><span>下载</span></a></h2><p>下载地址：https://git-scm.com/download/win</p><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h2><p>1、如果你提交时候发现对方已经提交到远程，那么你提交时候回报错提示对方已经提交有东西。 解决方法： a、b两人拉取主分支（保持主分支是最新的），然后分别在主分支上面创建分支a1、b1,然后切换到 各自的分支，a修改了一些数据，然后提交推送到了分支a1，b在分支b1上面修改并提交推送了一些东西到分支b1，然后a切换到主分支，右键合并分支，从a1分支合并，合并过以后切记要进行推送，b也切换到主分支，先拉取一下主分支（拉取成最新的数据），然后右键合并分支从b1合并分支并提交推送。 如果a接着开发，那么a需要在主分支拉取下最新数据，然后切换到分支a1，然后点击右键合并从主分支，这样子把分支a1也弄成了最新数据。b操作了也先拉取。</p><p>修改之前先拉取</p><p>目前可以正常操作的拉取方式：如果有修改，那么先提交，然后拉取，这个时候可能出错，那么不要担心，正常解决冲突就行，然后拉取成功后，查看下项目有没有问题，没有问题的话就可以推送上去。</p><p>同步：从远程存储库往本地同步（拉取代码） 拉取：从远程拉取最新版本到本地自动合并 获取：从远程获取最新版本到本地，不会自动合并，实际使用中这种更安全（获取后还需要从远程这个分支合并到本地这个分支） 推送：推送到远程服务存储库 提交：相当于commit，提交到本地存储库 提交和推送：现在本地存储库提交然后再推送到远程服务器 提交和同步：先提交到本地然后拉取远程服务器然后再推送</p><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,12),p={href:"https://www.liaoxuefeng.com/wiki/896043488029600",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.cnblogs.com/wupeixuan/p/11947343.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.cnblogs.com/huangtailang/p/4748075.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://learngitbranching.js.org/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://github.com/k88hudson/git-flight-rules/blob/master/README_zh-CN.md",target:"_blank",rel:"noopener noreferrer"};function b(_,f){const a=r("ExternalLinkIcon");return i(),l("div",null,[d,t("p",null,[e("廖雪峰Git教程："),t("a",p,[e("https://www.liaoxuefeng.com/wiki/896043488029600"),n(a)]),e(" 看完这一篇学会使用Git："),t("a",h,[e("https://www.cnblogs.com/wupeixuan/p/11947343.html"),n(a)]),t("a",m,[e("https://www.cnblogs.com/huangtailang/p/4748075.html"),n(a)]),e(" | Git 以分支的方式同时管理多个项目 - HTL - 博客园 线上学习："),t("a",g,[e("https://learngitbranching.js.org/"),n(a)]),e(" Git飞行指南："),t("a",u,[e("https://github.com/k88hudson/git-flight-rules/blob/master/README_zh-CN.md"),n(a)])])])}const k=o(c,[["render",b],["__file","index.html.vue"]]),v=JSON.parse('{"path":"/soft/devTools/sourceCodeManage/","title":"说明","lang":"zh-CN","frontmatter":{"title":"说明","lang":"zh-CN","date":"2023-07-22T00:00:00.000Z","publish":true,"author":"azrng","order":1,"category":["Git"],"tag":["无"],"filename":"git","description":"说明 集中式的版本控制：版本库是集中存放在中央服务器的，需要首先去中央服务器取得最新的版本，然后每次编辑完以后在推送到中央服务器，最大的缺点就是必须联网才可以使用，如果是局域网的话宽带大，如果是在互联网上，网速慢的情况，提交非常慢。 分布式版本控制：没有中央服务器，每一个人的电脑上都是一个完整的版本库，推送的时候是两个人吧各自的修改推送给对方，然后就可...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/soft/devTools/sourceCodeManage/"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"说明"}],["meta",{"property":"og:description","content":"说明 集中式的版本控制：版本库是集中存放在中央服务器的，需要首先去中央服务器取得最新的版本，然后每次编辑完以后在推送到中央服务器，最大的缺点就是必须联网才可以使用，如果是局域网的话宽带大，如果是在互联网上，网速慢的情况，提交非常慢。 分布式版本控制：没有中央服务器，每一个人的电脑上都是一个完整的版本库，推送的时候是两个人吧各自的修改推送给对方，然后就可..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-08T13:48:26.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-07-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-08T13:48:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"说明\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-08T13:48:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"说明","slug":"说明","link":"#说明","children":[]},{"level":2,"title":"加速克隆","slug":"加速克隆","link":"#加速克隆","children":[]},{"level":2,"title":"下载","slug":"下载","link":"#下载","children":[]},{"level":2,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1690010917000,"updatedTime":1702043306000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":2.92,"words":877},"filePathRelative":"soft/devTools/sourceCodeManage/readme.md","localizedDate":"2023年7月22日","excerpt":"<h2>说明</h2>\\n<p>集中式的版本控制：版本库是集中存放在中央服务器的，需要首先去中央服务器取得最新的版本，然后每次编辑完以后在推送到中央服务器，最大的缺点就是必须联网才可以使用，如果是局域网的话宽带大，如果是在互联网上，网速慢的情况，提交非常慢。\\n分布式版本控制：没有中央服务器，每一个人的电脑上都是一个完整的版本库，推送的时候是两个人吧各自的修改推送给对方，然后就可以看到对方的修改。分布式安全性更高，因为每个人的电脑里面都存在完整的版本库。但是实际上，分布式版本控制也有一个电脑充当与中央服务器，它是用来方便“交换”大家的修改。</p>\\n<h2>加速克隆</h2>\\n<div class=\\"language-markdown\\" data-ext=\\"md\\" data-title=\\"md\\"><pre class=\\"language-markdown\\"><code>git clone https://gitclone.com/github.com/xxx 加速克隆\\n</code></pre></div>","autoDesc":true}');export{k as comp,v as data};
