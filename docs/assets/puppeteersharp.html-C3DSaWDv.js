import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o,c,b as n,e as s,f as e,d as l}from"./app-Bfb6-vFH.js";const i={},r=n("h2",{id:"介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#介绍"},[n("span",null,"介绍")])],-1),u=n("p",null,"PuppeteerSharp是基于Puppeteer的，Puppeteer 是一个Google 开源的NodeJS 库，它提供了一个高级API 来通过DevTools协议控制Chromium 浏览器。Puppeteer 默认以无头(Headless) 模式运行，但是可以通过修改配置运行“有头”模式。 PuppeteerSharp可以干很多事情，不光可以用来抓取单页应用，还可以用来生成页面PDF或者图片，可以做自动化测试等。",-1),k={href:"https://www.puppeteersharp.com/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/hardkoded/puppeteer-sharp",target:"_blank",rel:"noopener noreferrer"},m=l(`<h2 id="功能" tabindex="-1"><a class="header-anchor" href="#功能"><span>功能</span></a></h2><ul><li>页面生成pdf</li><li>爬spa/ssr类网站</li><li>自动体表表单，模拟用户操作，ui测试等</li><li>提供自动化测试环境</li><li>分析网页性能，基于chrome timeline</li></ul><h2 id="对比playwright" tabindex="-1"><a class="header-anchor" href="#对比playwright"><span>对比Playwright</span></a></h2><p>PuppeteerSharp主要支持Chrome浏览器，而Playwright支持多种浏览器，包括Chrome、Firefox和WebKit（Safari）。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><blockquote><p>注意：里面遇到了一些错误，解决方案在底部。</p></blockquote><p>安装组件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;PuppeteerSharp&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;6.2.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="基本操作" tabindex="-1"><a class="header-anchor" href="#基本操作"><span>基本操作</span></a></h3><h4 id="将网页截图保存" tabindex="-1"><a class="header-anchor" href="#将网页截图保存"><span>将网页截图保存</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browserFetcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BrowserFetcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 下载浏览器执行程序</span>
<span class="token keyword">await</span> browserFetcher<span class="token punctuation">.</span><span class="token function">DownloadAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 创建一个浏览器执行实例</span>
<span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> Puppeteer<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">LaunchOptions</span>
<span class="token punctuation">{</span>
    Headless <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 打开一个页面</span>
<span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置页面大小</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetViewportAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ViewPortOptions</span>
<span class="token punctuation">{</span>
    Width <span class="token operator">=</span> <span class="token number">1920</span><span class="token punctuation">,</span>
    Height <span class="token operator">=</span> <span class="token number">1080</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GoToAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://azrng.gitee.io/kbms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> path <span class="token operator">=</span> <span class="token string">&quot;d:\\\\2.png&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">ScreenshotAsync</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="获取单页应用html" tabindex="-1"><a class="header-anchor" href="#获取单页应用html"><span>获取单页应用HTML</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browserFetcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BrowserFetcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 下载浏览器执行程序</span>
<span class="token keyword">await</span> browserFetcher<span class="token punctuation">.</span><span class="token function">DownloadAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 创建一个浏览器执行实例</span>
<span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> Puppeteer<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">LaunchOptions</span>
<span class="token punctuation">{</span>
    Headless <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 打开一个页面</span>
<span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置页面大小</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetViewportAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ViewPortOptions</span>
<span class="token punctuation">{</span>
    Width <span class="token operator">=</span> <span class="token number">1920</span><span class="token punctuation">,</span>
    Height <span class="token operator">=</span> <span class="token number">1080</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> url <span class="token operator">=</span> <span class="token string">&quot;https://azrng.gitee.io/kbms&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GoToAsync</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> WaitUntilNavigation<span class="token punctuation">.</span>Networkidle0<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> content <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetContentAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就可以通过解析html，得到我们想要的数据</p><h4 id="保存为pdf" tabindex="-1"><a class="header-anchor" href="#保存为pdf"><span>保存为PDF</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browserFetcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BrowserFetcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 下载浏览器执行程序</span>
<span class="token keyword">await</span> browserFetcher<span class="token punctuation">.</span><span class="token function">DownloadAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 创建一个浏览器执行实例</span>
<span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> Puppeteer<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">LaunchOptions</span>
<span class="token punctuation">{</span>
    Headless <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 打开一个页面</span>
<span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置页面大小</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetViewportAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ViewPortOptions</span>
<span class="token punctuation">{</span>
    Width <span class="token operator">=</span> <span class="token number">1920</span><span class="token punctuation">,</span>
    Height <span class="token operator">=</span> <span class="token number">1080</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> url <span class="token operator">=</span> <span class="token string">&quot;https://azrng.gitee.io/kbms&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GoToAsync</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> WaitUntilNavigation<span class="token punctuation">.</span>Networkidle0<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">PdfAsync</span><span class="token punctuation">(</span><span class="token string">&quot;zhishiku.pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="模拟用户登录" tabindex="-1"><a class="header-anchor" href="#模拟用户登录"><span>模拟用户登录</span></a></h3><p>模拟输入用户名和密码</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token keyword">goto</span><span class="token punctuation">(</span>&#39;https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>login&#39;<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>&#39;#login_field&#39;<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>&#39;username&#39;<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>&#39;#password&#39;<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>&#39;password&#39;<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>&#39;#login <span class="token operator">&gt;</span> form <span class="token operator">&gt;</span> div<span class="token punctuation">.</span>auth<span class="token operator">-</span>form<span class="token operator">-</span>body<span class="token punctuation">.</span>mt<span class="token operator">-</span><span class="token number">3</span> <span class="token operator">&gt;</span> input<span class="token punctuation">.</span>btn<span class="token punctuation">.</span>btn<span class="token operator">-</span>primary<span class="token punctuation">.</span>btn<span class="token operator">-</span>block&#39;<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForNavigation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>puppetter提供了page.focus,page.click,page.type,page.$eval(获取dom属性)等等api，鼠标位置，按键按下，tap，页面跳转众多用户可操作的api，都可以通过程序来模拟。</p><h3 id="爬取网页内容" tabindex="-1"><a class="header-anchor" href="#爬取网页内容"><span>爬取网页内容</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browserFetcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BrowserFetcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 下载浏览器执行程序</span>
<span class="token keyword">await</span> browserFetcher<span class="token punctuation">.</span><span class="token function">DownloadAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 创建一个浏览器执行实例</span>
<span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> Puppeteer<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">LaunchOptions</span>
<span class="token punctuation">{</span>
    Headless <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    Args <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> <span class="token string">&quot;--no-sandbox&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 打开一个页面</span>
<span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置页面大小</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetViewportAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ViewPortOptions</span>
<span class="token punctuation">{</span>
    Width <span class="token operator">=</span> <span class="token number">1920</span><span class="token punctuation">,</span>
    Height <span class="token operator">=</span> <span class="token number">1080</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> url <span class="token operator">=</span> <span class="token string">&quot;https://azrng.gitee.io/kbms&quot;</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span>DefaultNavigationTimeout <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetUserAgentAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GoToAsync</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> str <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetContentAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="错误处理" tabindex="-1"><a class="header-anchor" href="#错误处理"><span>错误处理</span></a></h2><h3 id="错误1" tabindex="-1"><a class="header-anchor" href="#错误1"><span>错误1</span></a></h3>`,24),v={href:"https://mirrors.huaweicloud.com/chromium-browser-snapshots/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.cnblogs.com/cdyy/p/PuppeteerSharp.html",target:"_blank",rel:"noopener noreferrer"},w=n("h2",{id:"资料",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#资料"},[n("span",null,"资料")])],-1),b={href:"https://www.cnblogs.com/shanyou/archive/2019/03/09/10500049.html",target:"_blank",rel:"noopener noreferrer"};function g(y,f){const a=p("ExternalLinkIcon");return o(),c("div",null,[r,u,n("p",null,[s("官网："),n("a",k,[s("https://www.puppeteersharp.com/"),e(a)]),s(" GitHub仓库地址："),n("a",d,[s("https://github.com/hardkoded/puppeteer-sharp"),e(a)])]),m,n("p",null,[s("错误信息：Failed to launch browser! path to executable does not exist 解决方案： 在程序目录下(Debug)发现一个文件夹.local-chromium，里面包含两个文件(Win64-901912、chrome-win.zip)，现在将压缩包的内容解压，然后将解压后的内容里面的文件夹chrome-win放到Win64-901912中，该文件内原来的内容可以删除或者直接替换，操作后成功无错误。 如果没有那个压缩包，可以去这里下载："),n("a",v,[s("https://mirrors.huaweicloud.com/chromium-browser-snapshots/"),e(a)]),s(" 参考资料："),n("a",h,[s("https://www.cnblogs.com/cdyy/p/PuppeteerSharp.html"),e(a)])]),w,n("p",null,[n("a",b,[s("https://www.cnblogs.com/shanyou/archive/2019/03/09/10500049.html"),e(a)]),s(" | PuppeteerSharp: 更友好的 Headless Chrome C## API")])])}const A=t(i,[["render",g],["__file","puppeteersharp.html.vue"]]),x=JSON.parse('{"path":"/middleware/pachong/puppeteersharp.html","title":"PuppeteerSharp","lang":"zh-CN","frontmatter":{"title":"PuppeteerSharp","lang":"zh-CN","date":"2023-09-11T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"puppeteersharp","slug":"do8dlm","docsId":"32029916","description":"介绍 PuppeteerSharp是基于Puppeteer的，Puppeteer 是一个Google 开源的NodeJS 库，它提供了一个高级API 来通过DevTools协议控制Chromium 浏览器。Puppeteer 默认以无头(Headless) 模式运行，但是可以通过修改配置运行“有头”模式。 PuppeteerSharp可以干很多事情，不...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/pachong/puppeteersharp.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"PuppeteerSharp"}],["meta",{"property":"og:description","content":"介绍 PuppeteerSharp是基于Puppeteer的，Puppeteer 是一个Google 开源的NodeJS 库，它提供了一个高级API 来通过DevTools协议控制Chromium 浏览器。Puppeteer 默认以无头(Headless) 模式运行，但是可以通过修改配置运行“有头”模式。 PuppeteerSharp可以干很多事情，不..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PuppeteerSharp\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-11T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"功能","slug":"功能","link":"#功能","children":[]},{"level":2,"title":"对比Playwright","slug":"对比playwright","link":"#对比playwright","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"基本操作","slug":"基本操作","link":"#基本操作","children":[{"level":4,"title":"将网页截图保存","slug":"将网页截图保存","link":"#将网页截图保存","children":[]},{"level":4,"title":"获取单页应用HTML","slug":"获取单页应用html","link":"#获取单页应用html","children":[]},{"level":4,"title":"保存为PDF","slug":"保存为pdf","link":"#保存为pdf","children":[]}]},{"level":3,"title":"模拟用户登录","slug":"模拟用户登录","link":"#模拟用户登录","children":[]},{"level":3,"title":"爬取网页内容","slug":"爬取网页内容","link":"#爬取网页内容","children":[]}]},{"level":2,"title":"错误处理","slug":"错误处理","link":"#错误处理","children":[{"level":3,"title":"错误1","slug":"错误1","link":"#错误1","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":3,"words":900},"filePathRelative":"middleware/pachong/puppeteersharp.md","localizedDate":"2023年9月11日","excerpt":"<h2>介绍</h2>\\n<p>PuppeteerSharp是基于Puppeteer的，Puppeteer&nbsp;是一个Google 开源的NodeJS 库，它提供了一个高级API 来通过DevTools协议控制Chromium 浏览器。Puppeteer 默认以无头(Headless) 模式运行，但是可以通过修改配置运行“有头”模式。\\nPuppeteerSharp可以干很多事情，不光可以用来抓取单页应用，还可以用来生成页面PDF或者图片，可以做自动化测试等。</p>\\n<p>官网：<a href=\\"https://www.puppeteersharp.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.puppeteersharp.com/</a>\\nGitHub仓库地址：<a href=\\"https://github.com/hardkoded/puppeteer-sharp\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/hardkoded/puppeteer-sharp</a></p>","autoDesc":true}');export{A as comp,x as data};
