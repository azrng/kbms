import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as t}from"./app-CBxp4zeL.js";const e={},p=t(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><h2 id="准备" tabindex="-1"><a class="header-anchor" href="#准备"><span>准备</span></a></h2><p>安装组件包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Haukcode.WkHtmlToPdfDotNet&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;1.5.68&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="pdf接口" tabindex="-1"><a class="header-anchor" href="#pdf接口"><span>pdf接口</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IPDFService</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 创建PDF</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>htmlContent<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>传入html字符串<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token return-type class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token function">CreatePDF</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> htmlContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实现类</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PDFService</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IPDFService</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">IConverter</span> _converter<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">PDFService</span><span class="token punctuation">(</span><span class="token class-name">IConverter</span> converter<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _converter <span class="token operator">=</span> converter<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 创建PDF</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>htmlContent<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>传入html字符串<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token function">CreatePDF</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> htmlContent<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> globalSettings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">GlobalSettings</span>
        <span class="token punctuation">{</span>
            ColorMode <span class="token operator">=</span> ColorMode<span class="token punctuation">.</span>Color<span class="token punctuation">,</span>
            Orientation <span class="token operator">=</span> Orientation<span class="token punctuation">.</span>Portrait<span class="token punctuation">,</span>
            PaperSize <span class="token operator">=</span> PaperKind<span class="token punctuation">.</span>A4<span class="token punctuation">,</span>
            <span class="token comment">//Margins = new MarginSettings</span>
            <span class="token comment">//{</span>
            <span class="token comment">//    Top = 10,</span>
            <span class="token comment">//    Left = 0,</span>
            <span class="token comment">//    Right = 0,</span>
            <span class="token comment">//},</span>
            DocumentTitle <span class="token operator">=</span> <span class="token string">&quot;PDF Report&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> objectSettings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ObjectSettings</span>
        <span class="token punctuation">{</span>
            PagesCount <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            HtmlContent <span class="token operator">=</span> htmlContent<span class="token punctuation">,</span>
            <span class="token comment">// Page = &quot;www.baidu.com&quot;, //USE THIS PROPERTY TO GENERATE PDF CONTENT FROM AN HTML PAGE  这里是用现有的网页生成PDF</span>
            <span class="token comment">//WebSettings = { DefaultEncoding = &quot;utf-8&quot;, UserStyleSheet = Path.Combine(Directory.GetCurrentDirectory(), &quot;assets&quot;, &quot;styles.css&quot;) },</span>
            WebSettings <span class="token operator">=</span> <span class="token punctuation">{</span> DefaultEncoding <span class="token operator">=</span> <span class="token string">&quot;utf-8&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token comment">//HeaderSettings = { FontName = &quot;Arial&quot;, FontSize = 9, Right = &quot;Page [page] of [toPage]&quot;, Line = true },</span>
            <span class="token comment">//FooterSettings = { FontName = &quot;Arial&quot;, FontSize = 9, Line = true, Center = &quot;Report Footer&quot; }</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> pdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HtmlToPdfDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            GlobalSettings <span class="token operator">=</span> globalSettings<span class="token punctuation">,</span>
            Objects <span class="token operator">=</span> <span class="token punctuation">{</span> objectSettings <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> file <span class="token operator">=</span> _converter<span class="token punctuation">.</span><span class="token function">Convert</span><span class="token punctuation">(</span>pdf<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//return File(file, &quot;application/pdf&quot;);</span>
        <span class="token keyword">return</span> file<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注入服务</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//DinkToPdf注入</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddSingleton</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">IConverter</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SynchronizedConverter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">PdfTools</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddTransient</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IPDFService<span class="token punctuation">,</span> PDFService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>生成pdf示例</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name">ActionResult</span> <span class="token function">ConverterPDF</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//html内容</span>
    <span class="token class-name"><span class="token keyword">var</span></span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sb<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token string">@&quot;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv=&#39;Content-Type&#39; content=&#39;text/html; charset=utf-8&#39; /&gt;
&lt;style&gt;

&lt;/style&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;div&gt;
    这是一个网页！
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
        &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//生成PDF</span>
    <span class="token class-name"><span class="token keyword">var</span></span> pdfBytes <span class="token operator">=</span> _pDFService<span class="token punctuation">.</span><span class="token function">CreatePDF</span><span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> fileName <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">DateTime<span class="token punctuation">.</span>Now</span><span class="token format-string"><span class="token punctuation">:</span>yyyyMMddHHmmss</span><span class="token punctuation">}</span></span><span class="token string">.pdf&quot;</span></span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">File</span><span class="token punctuation">(</span>pdfBytes<span class="token punctuation">,</span> <span class="token string">&quot;application/octet-stream&quot;</span><span class="token punctuation">,</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),o=[p];function c(l,i){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","haukcode_wkhtmltopdfdotnet.html.vue"]]),k=JSON.parse('{"path":"/middleware/office/pdf/haukcode_wkhtmltopdfdotnet.html","title":"Haukcode.WkHtmlToPdfDotNet","lang":"zh-CN","frontmatter":{"title":"Haukcode.WkHtmlToPdfDotNet","lang":"zh-CN","date":"2022-06-02T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"haukcode_wkhtmltopdfdotnet","slug":"dzp8xx","docsId":"79336666","description":"概述 准备 安装组件包 pdf接口 实现类 注入服务 生成pdf示例","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/office/pdf/haukcode_wkhtmltopdfdotnet.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Haukcode.WkHtmlToPdfDotNet"}],["meta",{"property":"og:description","content":"概述 准备 安装组件包 pdf接口 实现类 注入服务 生成pdf示例"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-31T02:45:59.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-06-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-31T02:45:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Haukcode.WkHtmlToPdfDotNet\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-31T02:45:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"准备","slug":"准备","link":"#准备","children":[]},{"level":2,"title":"pdf接口","slug":"pdf接口","link":"#pdf接口","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1698720359000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1},{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":1.05,"words":315},"filePathRelative":"middleware/office/pdf/haukcode_wkhtmltopdfdotnet.md","localizedDate":"2022年6月2日","excerpt":"<h2>概述</h2>\\n<h2>准备</h2>\\n<p>安装组件包</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">PackageReference</span> Include<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"Haukcode.WkHtmlToPdfDotNet\\"</span> Version<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"1.5.68\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,k as data};
