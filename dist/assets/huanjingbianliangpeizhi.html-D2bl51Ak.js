import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-vSdX8vi3.js";const e={},p=t(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>通过环境变量来配置应用程序，同一个程序不同环境使用不同的配置信息。 特点：</p><ul><li>对于配置的分层键：使用双下划线：“__”代替“:”</li><li>支持根据前缀加载</li></ul><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="简单获取" tabindex="-1"><a class="header-anchor" href="#简单获取"><span>简单获取</span></a></h3><h4 id="控制台获取" tabindex="-1"><a class="header-anchor" href="#控制台获取"><span>控制台获取</span></a></h4><p>引用组件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.Extensions.Configuration&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;5.0.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.Extensions.Configuration.Abstractions&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;5.0.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.Extensions.Configuration.EnvironmentVariables&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;5.0.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过控制台配置进行演示效果</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConfigurationBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
builder<span class="token punctuation">.</span><span class="token function">AddEnvironmentVariables</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> configurationRoot <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;ceshi1:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">configurationRoot<span class="token punctuation">[</span><span class="token string">&quot;ceshi1&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
<span class="token comment">//分层键</span>
<span class="token class-name"><span class="token keyword">var</span></span> section <span class="token operator">=</span> configurationRoot<span class="token punctuation">.</span><span class="token function">GetSection</span><span class="token punctuation">(</span><span class="token string">&quot;ceshi2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;ceshi2_2:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">section<span class="token punctuation">[</span><span class="token string">&quot;ceshi2_2&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;ceshi2_2:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">configurationRoot<span class="token punctuation">[</span><span class="token string">&quot;ceshi2:ceshi2_2&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注入配置(选项项目右键属性=&gt;调试配置、修改launchSettings.json文件)</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;profiles&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;ConsoleApp3&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
      <span class="token string">&quot;commandName&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Project&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">//之前的命令行配置</span>
      <span class="token string">&quot;commandLineArgs&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;CommandLineKey1=value1&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">//环境配置</span>
      <span class="token string">&quot;environmentVariables&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;ceshi1&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;value1&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;ceshi2__ceshi2_2&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;value2.2&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者命令行启动配置环境变量</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>$Env<span class="token punctuation">:</span>ceshi1 <span class="token operator">=</span> <span class="token string">&quot;value1&quot;</span>
$Env<span class="token punctuation">:</span>ceshi2__ceshi2_2 <span class="token operator">=</span> <span class="token string">&quot;value2.2&quot;</span>
dotnet run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启用程序查看效果</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>ceshi1<span class="token punctuation">:</span><span class="token class-name">value1</span>
ceshi2_2<span class="token punctuation">:</span>value2<span class="token punctuation">.</span><span class="token number">2</span>
ceshi2_2<span class="token punctuation">:</span>value2<span class="token punctuation">.</span><span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="api获取" tabindex="-1"><a class="header-anchor" href="#api获取"><span>API获取</span></a></h4><p>在api项目中在appsetting中我又一个配置如下</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token string">&quot;RabbitMQ&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;Hosts&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;195.168.1.10&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;Port&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;UserName&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;Password&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;VirtualHost&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;myQueue&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后我在launchSettings.json中设置环境变量为</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token string">&quot;WebApplication4&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;commandName&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Project&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;dotnetRunMessages&quot;</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token string">&quot;launchBrowser&quot;</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token string">&quot;launchUrl&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;swagger&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;applicationUrl&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://localhost:5093&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;environmentVariables&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;ASPNETCORE_ENVIRONMENT&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Development&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;RabbitMQ__Password&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;654&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个时候我去读取配置信息</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> password <span class="token operator">=</span> builder<span class="token punctuation">.</span>Configuration<span class="token punctuation">[</span><span class="token string">&quot;RabbitMQ:Password&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 654</span>
<span class="token class-name"><span class="token keyword">var</span></span> password2 <span class="token operator">=</span> Environment<span class="token punctuation">.</span><span class="token function">GetEnvironmentVariable</span><span class="token punctuation">(</span><span class="token string">&quot;RabbitMQ:Password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
<span class="token class-name"><span class="token keyword">var</span></span> password3 <span class="token operator">=</span> Environment<span class="token punctuation">.</span><span class="token function">GetEnvironmentVariable</span><span class="token punctuation">(</span><span class="token string">&quot;RabbitMQ__Password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 654</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以我们如果使用Environment.GetEnvironmentVariable直接去获取环境变量这时候需要注意，这个时候层级的key之间是通过__来获取值的，当你使用IConfiguration获取值的时候才是通过 : 获取的。</p><h3 id="前缀过滤" tabindex="-1"><a class="header-anchor" href="#前缀过滤"><span>前缀过滤</span></a></h3><p>可以通过前缀过滤将我们需要将那些配置注入</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConfigurationBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//前缀加载</span>
builder<span class="token punctuation">.</span><span class="token function">AddEnvironmentVariables</span><span class="token punctuation">(</span><span class="token string">&quot;ce&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> configurationRoot <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;ceshi1:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">configurationRoot<span class="token punctuation">[</span><span class="token string">&quot;shi1&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//分层键</span>
<span class="token class-name"><span class="token keyword">var</span></span> section <span class="token operator">=</span> configurationRoot<span class="token punctuation">.</span><span class="token function">GetSection</span><span class="token punctuation">(</span><span class="token string">&quot;shi2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;ceshi2_2:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">section<span class="token punctuation">[</span><span class="token string">&quot;ceshi2_2&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;ceshi2_2:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">configurationRoot<span class="token punctuation">[</span><span class="token string">&quot;shi2:ceshi2_2&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里我们设置只注册键以“ce”开头的值，那么还使用上面的配置启动查看效果</p><blockquote><p>注意：如果我们的键是ceshi1，前缀是ce，那么获取的时候应该是configurationRoot[&quot;shi1&quot;]</p></blockquote><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>ceshi1<span class="token punctuation">:</span><span class="token class-name">value1</span>
ceshi2_2<span class="token punctuation">:</span>value2<span class="token punctuation">.</span><span class="token number">2</span>
ceshi2_2<span class="token punctuation">:</span>value2<span class="token punctuation">.</span><span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="开源组件" tabindex="-1"><a class="header-anchor" href="#开源组件"><span>开源组件</span></a></h2><h3 id="dotenv-net" tabindex="-1"><a class="header-anchor" href="#dotenv-net"><span>dotenv.net</span></a></h3><p>可以用来读取.env文件的配置，需要安装nuget包</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&lt;PackageReference Include=&quot;dotenv.net&quot; Version=&quot;3.1.3&quot; /&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后我们在项目目录下创建一个.env的文件，内容如</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ENV_VAR1=hello
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后在控制台我们就可以编写代码来操作了，比如下面我们读取后将其加入到配置系统中</p><div class="language-c# line-numbers-mode" data-ext="c#" data-title="c#"><pre class="language-c#"><code>DotEnv.Load(); // env文件加载

var configBuilder = new ConfigurationBuilder();

// 需要引用 Microsoft.Extensions.Configuration.EnvironmentVariables
configBuilder.AddEnvironmentVariables();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><p>极客时间教程</p>`,40),o=[p];function i(c,l){return s(),a("div",null,o)}const d=n(e,[["render",i],["__file","huanjingbianliangpeizhi.html.vue"]]),k=JSON.parse('{"path":"/dotnet/base/peizhikuangjia/huanjingbianliangpeizhi.html","title":"环境变量配置","lang":"zh-CN","frontmatter":{"title":"环境变量配置","lang":"zh-CN","date":"2023-03-23T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"huanjingbianliangpeizhi","slug":"wg2x5t","docsId":"51605673","description":"概述 通过环境变量来配置应用程序，同一个程序不同环境使用不同的配置信息。 特点： 对于配置的分层键：使用双下划线：“__”代替“:” 支持根据前缀加载 操作 简单获取 控制台获取 引用组件 通过控制台配置进行演示效果 注入配置(选项项目右键属性=>调试配置、修改launchSettings.json文件) 或者命令行启动配置环境变量 启用程序查看效果 ...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/base/peizhikuangjia/huanjingbianliangpeizhi.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"环境变量配置"}],["meta",{"property":"og:description","content":"概述 通过环境变量来配置应用程序，同一个程序不同环境使用不同的配置信息。 特点： 对于配置的分层键：使用双下划线：“__”代替“:” 支持根据前缀加载 操作 简单获取 控制台获取 引用组件 通过控制台配置进行演示效果 注入配置(选项项目右键属性=>调试配置、修改launchSettings.json文件) 或者命令行启动配置环境变量 启用程序查看效果 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-23T14:35:45.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-03-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-23T14:35:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"环境变量配置\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-23T14:35:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"简单获取","slug":"简单获取","link":"#简单获取","children":[{"level":4,"title":"控制台获取","slug":"控制台获取","link":"#控制台获取","children":[]},{"level":4,"title":"API获取","slug":"api获取","link":"#api获取","children":[]}]},{"level":3,"title":"前缀过滤","slug":"前缀过滤","link":"#前缀过滤","children":[]}]},{"level":2,"title":"开源组件","slug":"开源组件","link":"#开源组件","children":[{"level":3,"title":"dotenv.net","slug":"dotenv-net","link":"#dotenv-net","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1700750145000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":3}]},"readingTime":{"minutes":2.19,"words":657},"filePathRelative":"dotnet/base/peizhikuangjia/huanjingbianliangpeizhi.md","localizedDate":"2023年3月23日","excerpt":"<h2>概述</h2>\\n<p>通过环境变量来配置应用程序，同一个程序不同环境使用不同的配置信息。\\n特点：</p>\\n<ul>\\n<li>对于配置的分层键：使用双下划线：“__”代替“:”</li>\\n<li>支持根据前缀加载</li>\\n</ul>\\n<h2>操作</h2>\\n<h3>简单获取</h3>\\n<h4>控制台获取</h4>\\n<p>引用组件</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token operator\\">&lt;</span>ItemGroup<span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">PackageReference</span> Include<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"Microsoft.Extensions.Configuration\\"</span> Version<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"5.0.0\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">PackageReference</span> Include<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"Microsoft.Extensions.Configuration.Abstractions\\"</span> Version<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"5.0.0\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">PackageReference</span> Include<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"Microsoft.Extensions.Configuration.EnvironmentVariables\\"</span> Version<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"5.0.0\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>ItemGroup<span class=\\"token operator\\">&gt;</span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,k as data};
