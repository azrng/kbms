import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,d as e}from"./app-S-drW72G.js";const t={},n=e(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>WatchDog 是一个使用 C## 开发的开源的轻量监控工具，它可以记录和查看 ASP.Net Core Web 和 WebApi 的实时消息、事件、异常、 Http 请求响应等。 它使用了 SignalR 技术进行实时监控，在开发环境中，使用了 LiteDb 单文件数据库进行存储。当然，根据您的需要，也可以选择外部的 MSSQL、MySQL 或 Postgres 数据库。 仓库地址：https://github.com/IzyPro/WatchDog</p><h2 id="功能特性" tabindex="-1"><a class="header-anchor" href="#功能特性"><span>功能特性</span></a></h2><p>• 实时 HTTP 请求和响应记录 • 实时异常记录 • 代码内消息和事件记录 • 用户友好的查询页面 • 身份验证 • 数据定期清除</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>安装nuget包</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">Install</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">Package</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> WatchDog</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">NET</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> 1.3.2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="基础操作" tabindex="-1"><a class="header-anchor" href="#基础操作"><span>基础操作</span></a></h3><p>添加服务</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> WatchDog</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">AddWatchDogServices</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认使用本地文件数据库，当然也可以选择外部的 MSSQL, MySQL &amp; PostgreSQL 数据库。</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">AddWatchDogServices</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">opt</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{ </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">   opt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">SetExternalDbConnString</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;DbConnString&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">   opt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">SqlDriverOption</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> WatchDogSqlDriverEnum</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">PostgreSql</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置中间件服务</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">UseWatchDog</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">opt</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{ </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">   opt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">WatchPageUsername</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;admin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">   opt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">WatchPagePassword</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;Qwerty@123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> });</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行 .NET 程序，然后访问 /watchdog 路径就可以看到页面。</p><p>记录日志方法为</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">WatchLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;...TestGet Started...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,17),h=[n];function l(p,r){return a(),s("div",null,h)}const g=i(t,[["render",l],["__file","watchdog.html.vue"]]),c=JSON.parse('{"path":"/dotnet/base/logOperator/compomemt/watchdog.html","title":"WatchDog","lang":"zh-CN","frontmatter":{"title":"WatchDog","lang":"zh-CN","date":"2022-10-30T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"watchdog","slug":"dfkgws","docsId":"100364112","description":"概述 WatchDog 是一个使用 C## 开发的开源的轻量监控工具，它可以记录和查看 ASP.Net Core Web 和 WebApi 的实时消息、事件、异常、 Http 请求响应等。 它使用了 SignalR 技术进行实时监控，在开发环境中，使用了 LiteDb 单文件数据库进行存储。当然，根据您的需要，也可以选择外部的 MSSQL、MySQL ...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/base/logOperator/compomemt/watchdog.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"WatchDog"}],["meta",{"property":"og:description","content":"概述 WatchDog 是一个使用 C## 开发的开源的轻量监控工具，它可以记录和查看 ASP.Net Core Web 和 WebApi 的实时消息、事件、异常、 Http 请求响应等。 它使用了 SignalR 技术进行实时监控，在开发环境中，使用了 LiteDb 单文件数据库进行存储。当然，根据您的需要，也可以选择外部的 MSSQL、MySQL ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-22T13:47:53.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-10-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-22T13:47:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"WatchDog\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-22T13:47:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"功能特性","slug":"功能特性","link":"#功能特性","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"基础操作","slug":"基础操作","link":"#基础操作","children":[]}]}],"git":{"createdTime":1697962303000,"updatedTime":1703252873000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.96,"words":287},"filePathRelative":"dotnet/base/logOperator/compomemt/watchdog.md","localizedDate":"2022年10月30日","excerpt":"<h2>概述</h2>\\n<p>WatchDog 是一个使用 C## 开发的开源的轻量监控工具，它可以记录和查看 ASP.Net Core Web 和 WebApi 的实时消息、事件、异常、 Http 请求响应等。\\n它使用了 SignalR 技术进行实时监控，在开发环境中，使用了 LiteDb 单文件数据库进行存储。当然，根据您的需要，也可以选择外部的 MSSQL、MySQL 或 Postgres 数据库。\\n仓库地址：https://github.com/IzyPro/WatchDog</p>\\n<h2>功能特性</h2>\\n<p>• 实时 HTTP 请求和响应记录\\n• 实时异常记录\\n• 代码内消息和事件记录\\n• 用户友好的查询页面\\n• 身份验证\\n• 数据定期清除</p>","autoDesc":true}');export{g as comp,c as data};
