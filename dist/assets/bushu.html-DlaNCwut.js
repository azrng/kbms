import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e as t,o as e}from"./app-BugT5USA.js";const n="/kbms/common/1655872902959-9e23f82d-c9c9-4764-a040-83c847164e36.png",l={};function h(r,i){return e(),a("div",null,i[0]||(i[0]=[t(`<h2 id="拷贝浏览器" tabindex="-1"><a class="header-anchor" href="#拷贝浏览器"><span>拷贝浏览器</span></a></h2><p>其实 Playwright 默认是到C:\\Users\\用户名\\AppData\\Local\\ms-playwright文件夹下查找依赖的浏览器，我们只需将本机文件夹复制到部署机器的对应文件夹即可。<br> 但更简便的方式，是将浏览器也放到发布文件夹下一起部署。<br> 操作示例</p><ul><li>修改代码，设置查询依赖浏览器路径的环境变量</li></ul><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Environment.SetEnvironmentVariable(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;PLAYWRIGHT_BROWSERS_PATH&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, Path.Combine(AppDomain.CurrentDomain.BaseDirectory, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ms-playwright&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//正式执行</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">using var playwright = await Playwright.CreateAsync();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>修改项目文件，设置发布时候执行Task，复制ms-playwright 文件夹到发布文件夹下</li></ul><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;Target Name=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;PublishPlaywright&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> AfterTargets=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Publish&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	&lt;ItemGroup&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		&lt;PlaywrightFiles Include=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$(LOCALAPPDATA)</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">\\m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">s-playwright</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">\\*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">*</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">\\*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.*&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	&lt;/ItemGroup&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	&lt;Copy SourceFiles=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;@(PlaywrightFiles)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> DestinationFiles=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$(PublishDir)</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">\\m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">s-playwright</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">\\%</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">(RecursiveDir)%(Filename)%(Extension)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/Target&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>按照正常流程发布</li></ul><p>将发布后的文件夹复制到另一个机器上，无需安装浏览器，就可以正常运行，因为会读取当前文件夹下的ms-playwright文件夹，获取依赖的浏览器。<br><img src="`+n+`" alt="image.png" loading="lazy"></p><blockquote><p>缺点：开发和部署的计算机操作系统必须一致。</p></blockquote><h2 id="自动安装" tabindex="-1"><a class="header-anchor" href="#自动安装"><span>自动安装</span></a></h2><p>运行浏览器安装的命令，代码执行安装步骤</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Console.WriteLine(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Start download chromium&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">var exitCode = Microsoft.Playwright.Program.Main(new[] { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;install&quot;</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> &quot;chromium&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> });</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">if (exitCode != </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    throw</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> new</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;"> Exception($</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;Playwright exited with code {exitCode}&quot;</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后按照正常流程发布，直接运行控制台程序。</p><h2 id="部署模式选择" tabindex="-1"><a class="header-anchor" href="#部署模式选择"><span>部署模式选择</span></a></h2><p>默认情况下，Playwright 仅捆绑 .NET 发布目标运行时的驱动程序。如果您想为其他平台捆绑，您可以通过在项目文件中使用、或all、none来linux覆盖此行为。winosx</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;PropertyGroup&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;PlaywrightPlatform&gt;all&lt;/PlaywrightPlatform&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/PropertyGroup&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或者</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;PropertyGroup&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;PlaywrightPlatform&gt;osx;linux&lt;/PlaywrightPlatform&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/PropertyGroup&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="自动部署" tabindex="-1"><a class="header-anchor" href="#自动部署"><span>自动部署</span></a></h2><p>playwright打包部署：<a href="https://playwright.dev/dotnet/docs/ci" target="_blank" rel="noopener noreferrer">https://playwright.dev/dotnet/docs/ci</a></p><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><p>文章来源自：微信公众号【My IO】</p>`,22)]))}const d=s(l,[["render",h]]),o=JSON.parse('{"path":"/middleware/testMange/duandaoduanceshi/playwright/bushu.html","title":"部署","lang":"zh-CN","frontmatter":{"title":"部署","lang":"zh-CN","date":"2023-03-30T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"bushu","slug":"bvq9tf","docsId":"81119951","description":"拷贝浏览器 其实 Playwright 默认是到C:\\\\Users\\\\用户名\\\\AppData\\\\Local\\\\ms-playwright文件夹下查找依赖的浏览器，我们只需将本机文件夹复制到部署机器的对应文件夹即可。 但更简便的方式，是将浏览器也放到发布文件夹下一起部署。 操作示例 修改代码，设置查询依赖浏览器路径的环境变量 修改项目文件，设置发布时候执行Tas...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"部署\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1655872902959-9e23f82d-c9c9-4764-a040-83c847164e36.png\\"],\\"datePublished\\":\\"2023-03-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-25T13:43:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"],["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/testMange/duandaoduanceshi/playwright/bushu.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"部署"}],["meta",{"property":"og:description","content":"拷贝浏览器 其实 Playwright 默认是到C:\\\\Users\\\\用户名\\\\AppData\\\\Local\\\\ms-playwright文件夹下查找依赖的浏览器，我们只需将本机文件夹复制到部署机器的对应文件夹即可。 但更简便的方式，是将浏览器也放到发布文件夹下一起部署。 操作示例 修改代码，设置查询依赖浏览器路径的环境变量 修改项目文件，设置发布时候执行Tas..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1655872902959-9e23f82d-c9c9-4764-a040-83c847164e36.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-25T13:43:35.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-03-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-25T13:43:35.000Z"}]]},"git":{"createdTime":1697724028000,"updatedTime":1700919815000,"contributors":[{"name":"azrng","username":"","email":"itzhangyunpeng@163.com","commits":3}]},"readingTime":{"minutes":1.54,"words":463},"filePathRelative":"middleware/testMange/duandaoduanceshi/playwright/bushu.md","excerpt":"<h2>拷贝浏览器</h2>\\n<p>其实 Playwright 默认是到C:\\\\Users\\\\用户名\\\\AppData\\\\Local\\\\ms-playwright文件夹下查找依赖的浏览器，我们只需将本机文件夹复制到部署机器的对应文件夹即可。<br>\\n但更简便的方式，是将浏览器也放到发布文件夹下一起部署。<br>\\n操作示例</p>\\n<ul>\\n<li>修改代码，设置查询依赖浏览器路径的环境变量</li>\\n</ul>\\n<div class=\\"language-json line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"json\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-json\\"><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">Environment.SetEnvironmentVariable(</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\"PLAYWRIGHT_BROWSERS_PATH\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, Path.Combine(AppDomain.CurrentDomain.BaseDirectory, </span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\"ms-playwright\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">));</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">//正式执行</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">using var playwright = await Playwright.CreateAsync();</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{d as comp,o as data};
