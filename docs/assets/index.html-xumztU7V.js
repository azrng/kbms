import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as a,d as n}from"./app-BguyEeV-.js";const e={},t=n(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>YARP（Yet Another Reverse Proxy）是一个开源的、高性能的反向代理库，由Microsoft开发，使用C#语言编写。它旨在作为.NET平台上构建反向代理服务器的基础。YARP主要针对.NET 5及以上版本，允许开发者在.NET应用程序中轻松地实现反向代理的功能。</p><h2 id="功能和特点" tabindex="-1"><a class="header-anchor" href="#功能和特点"><span>功能和特点</span></a></h2><ol><li><strong>模块化和可扩展性：</strong> YARP设计成高度模块化的，这意味着可以根据需要替换或扩展内部组件，如HTTP请求路由、负载均衡、健康检查等。</li><li><strong>性能：</strong> YARP针对高性能进行了优化，利用了.NET的异步编程模型和高效的IO操作，以处理大量并发连接。</li><li><strong>配置驱动：</strong> YARP的行为可以通过配置来控制，支持从文件、数据库或其他来源动态加载配置。</li><li><strong>路由：</strong> 可以基于各种参数（如路径、头部、查询参数）配置请求路由规则。</li><li><strong>负载均衡：</strong> 内置多种负载均衡策略，如轮询、最少连接、随机选择等，并且可以自定义负载均衡策略。</li><li><strong>健康检查：</strong> 支持后端服务的健康检查，以确保请求只会被转发到健康的后端服务实例。</li><li><strong>转换器：</strong> 允许对请求和响应进行转换，如修改头部、路径或查询参数。</li><li><strong>会话亲和性：</strong> 支持会话亲和性（Session Affinity），确保来自同一客户端的请求被发送到相同的后端服务实例。</li></ol><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景"><span>使用场景</span></a></h2><ul><li><strong>反向代理：</strong> 在客户端和后端服务之间提供一个中间层，用于请求转发和负载均衡。</li><li><strong>API网关：</strong> 作为微服务架构中的API网关，提供路由、鉴权、监控等功能。</li><li><strong>边缘服务：</strong> 在应用程序和外部世界之间提供安全层，处理SSL终止、请求限制等任务。</li></ul><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="基础操作" tabindex="-1"><a class="header-anchor" href="#基础操作"><span>基础操作</span></a></h3><p>新建一个Api项目，引用nuget包</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">  &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">PackageReference</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> Include</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Yarp.ReverseProxy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Version</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;2.0.1&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在program中配置</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> builder</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> WebApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">CreateBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// Add services to the container.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">Services</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">AddEndpointsApiExplorer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">Services</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">AddReverseProxy</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">LoadFromConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">Configuration</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">GetSection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;ReverseProxy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">Services</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">AddHealthChecks</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Build</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// Configure the HTTP request pipeline.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">MapReverseProxy</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">MapHealthChecks</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;health&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Run</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置文件中这么配置</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">  &quot;Logging&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;LogLevel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">      &quot;Default&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Information&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">      &quot;Microsoft.AspNetCore&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Warning&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">  &quot;ReverseProxy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;Routes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">      &quot;route2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">        &quot;ClusterId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;cluster_product&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">        &quot;Match&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">          &quot;Path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;{*all}&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;Clusters&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">      &quot;cluster_product&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">        &quot;Destinations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">          &quot;first_destination&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">            &quot;Address&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;http://localhost:5158&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">          }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">  &quot;AllowedHosts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;*&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后我们启动该项目地址为：<a href="http://localhost:5012/WeatherForecast" target="_blank" rel="noopener noreferrer">http://localhost:5012</a>，这个时候就可以通过5012地址去反向代理到5158地址，访问5158服务的内容。</p><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><p><a href="https://mp.weixin.qq.com/s/uhZZHwGrOZMNmRCjwx97YA" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/uhZZHwGrOZMNmRCjwx97YA</a> | 使用 Yarp 做网关+.NET 6.0 + Swagger <a href="https://mp.weixin.qq.com/s/RagZltxqHXuF3h3tcc8daQ" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/RagZltxqHXuF3h3tcc8daQ</a> | .NET 反向代理-YARP <a href="https://mp.weixin.qq.com/s/NBESxU7qRx6tl7pbzPF3zg" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/NBESxU7qRx6tl7pbzPF3zg</a> | C## 开源一个基于 yarp 的 API 网关 Demo，支持绑定 Kubernetes Service <a href="https://mp.weixin.qq.com/s/fri9aT17jg1JA-bffzVlCQ" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/fri9aT17jg1JA-bffzVlCQ</a> | 使用 Yarp 做网关 <a href="https://mp.weixin.qq.com/s/D1SuvWYNM0vvniKckrcabA" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/D1SuvWYNM0vvniKckrcabA</a> | 使用 Yarp 做网关+.NET 6.0 + Swagger <a href="https://mp.weixin.qq.com/s/ng8JG7wmlllpjUrthXaovQ" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/ng8JG7wmlllpjUrthXaovQ</a> | 基于 YARP 实现一个 Github 的反向代理 <a href="https://mp.weixin.qq.com/s/Eo7yesGDxFEBRMZheDEl4Q" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/Eo7yesGDxFEBRMZheDEl4Q</a> | 分享一个基于Abp 和Yarp 开发的API网关项目</p><p>微软用它取代了<code>Nginx</code>吞吐量提升了百分之八十：https://www.cnblogs.com/hejiale010426/p/17954360</p><p>使用YARP作为API网关和速率限制器：https://www.codecrash.net/2024/03/01/rate-limiting-in-yarp.html</p><p>FastGateway 一个可以用于代替Nginx的网关：https://mp.weixin.qq.com/s/0uTVdDdrFXJlBxS4CCN9rg</p>`,20),l=[t];function h(p,r){return a(),i("div",null,l)}const o=s(e,[["render",h],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/dotnet/commonNuget/yarp/","title":"说明","lang":"zh-CN","frontmatter":{"title":"说明","lang":"zh-CN","date":"2023-09-08T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"readme","slug":"ntog8g","docsId":"96430423","description":"概述 YARP（Yet Another Reverse Proxy）是一个开源的、高性能的反向代理库，由Microsoft开发，使用C#语言编写。它旨在作为.NET平台上构建反向代理服务器的基础。YARP主要针对.NET 5及以上版本，允许开发者在.NET应用程序中轻松地实现反向代理的功能。 功能和特点 模块化和可扩展性： YARP设计成高度模块化的，...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/commonNuget/yarp/"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"说明"}],["meta",{"property":"og:description","content":"概述 YARP（Yet Another Reverse Proxy）是一个开源的、高性能的反向代理库，由Microsoft开发，使用C#语言编写。它旨在作为.NET平台上构建反向代理服务器的基础。YARP主要针对.NET 5及以上版本，允许开发者在.NET应用程序中轻松地实现反向代理的功能。 功能和特点 模块化和可扩展性： YARP设计成高度模块化的，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-06T08:01:13.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-06T08:01:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"说明\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-06T08:01:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"功能和特点","slug":"功能和特点","link":"#功能和特点","children":[]},{"level":2,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"基础操作","slug":"基础操作","link":"#基础操作","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1712390473000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":2.79,"words":838},"filePathRelative":"dotnet/commonNuget/yarp/readme.md","localizedDate":"2023年9月8日","excerpt":"<h2>概述</h2>\\n<p>YARP（Yet Another Reverse Proxy）是一个开源的、高性能的反向代理库，由Microsoft开发，使用C#语言编写。它旨在作为.NET平台上构建反向代理服务器的基础。YARP主要针对.NET 5及以上版本，允许开发者在.NET应用程序中轻松地实现反向代理的功能。</p>\\n<h2>功能和特点</h2>\\n<ol>\\n<li><strong>模块化和可扩展性：</strong> YARP设计成高度模块化的，这意味着可以根据需要替换或扩展内部组件，如HTTP请求路由、负载均衡、健康检查等。</li>\\n<li><strong>性能：</strong> YARP针对高性能进行了优化，利用了.NET的异步编程模型和高效的IO操作，以处理大量并发连接。</li>\\n<li><strong>配置驱动：</strong> YARP的行为可以通过配置来控制，支持从文件、数据库或其他来源动态加载配置。</li>\\n<li><strong>路由：</strong> 可以基于各种参数（如路径、头部、查询参数）配置请求路由规则。</li>\\n<li><strong>负载均衡：</strong> 内置多种负载均衡策略，如轮询、最少连接、随机选择等，并且可以自定义负载均衡策略。</li>\\n<li><strong>健康检查：</strong> 支持后端服务的健康检查，以确保请求只会被转发到健康的后端服务实例。</li>\\n<li><strong>转换器：</strong> 允许对请求和响应进行转换，如修改头部、路径或查询参数。</li>\\n<li><strong>会话亲和性：</strong> 支持会话亲和性（Session Affinity），确保来自同一客户端的请求被发送到相同的后端服务实例。</li>\\n</ol>","autoDesc":true}');export{o as comp,g as data};
