import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o,c as i,a as e,d as t,e as s,b as c}from"./app-Bw62I61B.js";const l={},p=c('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>契约测试：对程序的输入和输出进行测试，测试的时候，将测试请求发送到内置的模拟服务器而不是真是的服务器。</p><h3 id="为什么需要契约测试" tabindex="-1"><a class="header-anchor" href="#为什么需要契约测试"><span>为什么需要契约测试？</span></a></h3><p>构建和维护微服务是一项艰巨的任务。 在众多服务必须彼此无缝交互的世界中，确保对一项服务的更改不会破坏另一项服务的功能是很让人头疼的。 传统的集成测试针对的是整个系统之间的交互，工作量太大、速度太慢，甚至无法直接识别问题。 与之相反的是，契约测试侧重于测试各个服务之间的契约。 合同测试根据消费者和提供商之间商定的契约分别对消费者和提供商进行测试。</p><h3 id="如何执行契约测试" tabindex="-1"><a class="header-anchor" href="#如何执行契约测试"><span>如何执行契约测试</span></a></h3><p>在契约测试中，消费者端程序员编写“消费者测试”，其中包含期望的输入和输出，并且期望将被保存到 Pact Json 文件中。 运行时，测试将请求发送到内置的模拟服务器而不是真实服务器，模拟服务器使用保存的 Pact Json 文件发送响应，该响应将用于验证消费者端测试用例。 此外，契约测试框架将读取保存的 Pact Json 文件，并向服务提供者（服务器）发送请求，并且将根据Pact Json 文件中的预期输出来验证响应。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>使用nuget包：PactNet</p><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>',9),h={href:"https://mp.weixin.qq.com/s/x9j2CCERhAJoUvFjLvk4Cg",target:"_blank",rel:"noopener noreferrer"};function d(m,g){const a=r("ExternalLinkIcon");return o(),i("div",null,[p,e("p",null,[e("a",h,[t("https://mp.weixin.qq.com/s/x9j2CCERhAJoUvFjLvk4Cg"),s(a)]),t(" | 10分钟理解契约测试及如何在C#中实现")])])}const _=n(l,[["render",d],["__file","qiyaoceshi.html.vue"]]),f=JSON.parse('{"path":"/middleware/testMange/qiyaoceshi.html","title":"契约测试","lang":"zh-CN","frontmatter":{"title":"契约测试","lang":"zh-CN","date":"2023-09-29T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"qiyaoceshi","slug":"rezsu5g9i8472vhy","docsId":"141234659","description":"概述 契约测试：对程序的输入和输出进行测试，测试的时候，将测试请求发送到内置的模拟服务器而不是真是的服务器。 为什么需要契约测试？ 构建和维护微服务是一项艰巨的任务。 在众多服务必须彼此无缝交互的世界中，确保对一项服务的更改不会破坏另一项服务的功能是很让人头疼的。 传统的集成测试针对的是整个系统之间的交互，工作量太大、速度太慢，甚至无法直接识别问题。 ...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/testMange/qiyaoceshi.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"契约测试"}],["meta",{"property":"og:description","content":"概述 契约测试：对程序的输入和输出进行测试，测试的时候，将测试请求发送到内置的模拟服务器而不是真是的服务器。 为什么需要契约测试？ 构建和维护微服务是一项艰巨的任务。 在众多服务必须彼此无缝交互的世界中，确保对一项服务的更改不会破坏另一项服务的功能是很让人头疼的。 传统的集成测试针对的是整个系统之间的交互，工作量太大、速度太慢，甚至无法直接识别问题。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-19T02:43:38.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-19T02:43:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"契约测试\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-29T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-19T02:43:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[{"level":3,"title":"为什么需要契约测试？","slug":"为什么需要契约测试","link":"#为什么需要契约测试","children":[]},{"level":3,"title":"如何执行契约测试","slug":"如何执行契约测试","link":"#如何执行契约测试","children":[]}]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1700361818000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.47,"words":442},"filePathRelative":"middleware/testMange/qiyaoceshi.md","localizedDate":"2023年9月29日","excerpt":"<h2>概述</h2>\\n<p>契约测试：对程序的输入和输出进行测试，测试的时候，将测试请求发送到内置的模拟服务器而不是真是的服务器。</p>\\n<h3>为什么需要契约测试？</h3>\\n<p>构建和维护微服务是一项艰巨的任务。 在众多服务必须彼此无缝交互的世界中，确保对一项服务的更改不会破坏另一项服务的功能是很让人头疼的。 传统的集成测试针对的是整个系统之间的交互，工作量太大、速度太慢，甚至无法直接识别问题。 与之相反的是，契约测试侧重于测试各个服务之间的契约。 合同测试根据消费者和提供商之间商定的契约分别对消费者和提供商进行测试。</p>\\n<h3>如何执行契约测试</h3>\\n<p>在契约测试中，消费者端程序员编写“消费者测试”，其中包含期望的输入和输出，并且期望将被保存到 Pact Json 文件中。 运行时，测试将请求发送到内置的模拟服务器而不是真实服务器，模拟服务器使用保存的 Pact Json 文件发送响应，该响应将用于验证消费者端测试用例。\\n此外，契约测试框架将读取保存的 Pact Json 文件，并向服务提供者（服务器）发送请求，并且将根据Pact Json 文件中的预期输出来验证响应。</p>","autoDesc":true}');export{_ as comp,f as data};
