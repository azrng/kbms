import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as i,o}from"./app-OPlDaE8U.js";const n="/kbms/common/image-20231006103342615.png",s="/kbms/common/image-20231006103504219.png",r="/kbms/common/image-20231006103530950.png",p="/kbms/common/image-20231006103803327.png",c="/kbms/common/image-20231006103905698.png",g="/kbms/common/dcc89789279472416c5ba6bf3be8f2f7_vs7.png",m="/kbms/common/48d9bf8c30ba2feeb11561d617ab4507_vs8.png",l="/kbms/common/image-20231006104634282.png",d={};function h(f,e){return o(),a("div",null,e[0]||(e[0]=[i('<h2 id="sticky-scroll" tabindex="-1"><a class="header-anchor" href="#sticky-scroll"><span>Sticky Scroll</span></a></h2><p>Sticky Scroll使相关的标题保持可见，从而更容易导航和理解您的代码库。现在，您可以在处理长类和方法时维护代码中的上下文</p><p>开启方式：通过选中“在编辑器顶部滚动期间显示嵌套的当前范围”复选框，在工具 &gt; 选项 &gt; 文本编辑器 &gt; 常规 &gt; 粘性滚动中启用它</p><p>效果可以参考下面的文章：<a href="https://devblogs.microsoft.com/visualstudio/sticky-scroll-now-in-preview/" target="_blank" rel="noopener noreferrer">https://devblogs.microsoft.com/visualstudio/sticky-scroll-now-in-preview/</a></p><h2 id="大括号着色" tabindex="-1"><a class="header-anchor" href="#大括号着色"><span>大括号着色</span></a></h2><p>有助于从视觉上区分代码的每组左大括号和右大括号，从而更容易查看代码的范围或找到任何缺失的大括号。C#、C++、TypeScript、JavaScript、Visual Basic 和 Razor 支持大括号对着色。您可以通过转到“工具”&gt;“选项”&gt;“文本编辑器”并选中“启用大括号对着色”来启用或禁用着色。</p><h2 id="内联参数提示" tabindex="-1"><a class="header-anchor" href="#内联参数提示"><span>内联参数提示</span></a></h2><p>开启前截图示例</p><figure><img src="'+n+'" alt="image-20231006103342615" tabindex="0" loading="lazy"><figcaption>image-20231006103342615</figcaption></figure><p>在工具=&gt;选项=&gt;搜索内联，然后全部开启</p><figure><img src="'+s+'" alt="image-20231006103504219" tabindex="0" loading="lazy"><figcaption>image-20231006103504219</figcaption></figure><p>开启后再看示例代码</p><figure><img src="'+r+'" alt="image-20231006103530950" tabindex="0" loading="lazy"><figcaption>image-20231006103530950</figcaption></figure><h2 id="全局智能提示" tabindex="-1"><a class="header-anchor" href="#全局智能提示"><span>全局智能提示</span></a></h2><p>通过工具=&gt;选项，搜索未导入进行开启</p><figure><img src="'+p+'" alt="image-20231006103803327" tabindex="0" loading="lazy"><figcaption>image-20231006103803327</figcaption></figure><p>然后没有using的内容也可以带提示的效果，如</p><figure><img src="'+c+'" alt="image-20231006103905698" tabindex="0" loading="lazy"><figcaption>image-20231006103905698</figcaption></figure><h2 id="实时显示诊断错误" tabindex="-1"><a class="header-anchor" href="#实时显示诊断错误"><span>实时显示诊断错误</span></a></h2><p>在过去，我们需要写完代码编译才能知道具体的错误，最新版的 <code>Visual Studio</code> 支持 <strong>内联诊断错误</strong>，开启如下</p><figure><img src="'+g+'" alt="dcc89789279472416c5ba6bf3be8f2f7_vs7" tabindex="0" loading="lazy"><figcaption>dcc89789279472416c5ba6bf3be8f2f7_vs7</figcaption></figure><p>效果如下</p><figure><img src="'+m+'" alt="48d9bf8c30ba2feeb11561d617ab4507_vs8" tabindex="0" loading="lazy"><figcaption>48d9bf8c30ba2feeb11561d617ab4507_vs8</figcaption></figure><h2 id="终结点资源管理器" tabindex="-1"><a class="header-anchor" href="#终结点资源管理器"><span>终结点资源管理器</span></a></h2><p>生成一个请求的列表</p><p>详细内容参考：<a href="https://devblogs.microsoft.com/visualstudio/web-api-development-in-visual-studio-2022/#endpoints-explorer" target="_blank" rel="noopener noreferrer">https://devblogs.microsoft.com/visualstudio/web-api-development-in-visual-studio-2022/#endpoints-explorer</a></p><h2 id="即时窗口" tabindex="-1"><a class="header-anchor" href="#即时窗口"><span>即时窗口</span></a></h2><h3 id="使即时窗口运行的代码不影响主流程" tabindex="-1"><a class="header-anchor" href="#使即时窗口运行的代码不影响主流程"><span>使即时窗口运行的代码不影响主流程</span></a></h3><p>执行的命令后面添加,nse(no side effect的简写)即可</p><p>示例：</p><p>foo.Increase(),nse</p><p>加上nse后，执行的那句代码相当于在一个沙箱中运行，和上下文互不干扰<br></p><h3 id="访问特殊变量" tabindex="-1"><a class="header-anchor" href="#访问特殊变量"><span>访问特殊变量</span></a></h3><p>$exception：当前的异常信息</p><p>适用场景：你代码的try/catch语句没有给catch语句使用Exception参数，则可以使用该特殊变量去打印异常信息。</p><p>$returnvalue：当前语句的返回值。有时候你在代码中调用了一个方法，但你并没有用一个变量来存储这个方法的返回值，而你在调试时又想知道它的返回值。此时你可以在方法执行处添加一个断点。当运行到该断点时，按 F10，然后在即时窗口可以通过 $returnvalue 打印该方法的返回值。</p><h2 id="快捷键" tabindex="-1"><a class="header-anchor" href="#快捷键"><span>快捷键</span></a></h2><h3 id="搜索" tabindex="-1"><a class="header-anchor" href="#搜索"><span>搜索</span></a></h3><p><code>Visual Studio 2022</code> 提供了非常强大的 <strong>代码搜索和功能搜索</strong>，只需要快捷键 <code>Ctrl + Q</code> 呼出，</p><figure><img src="'+l+'" alt="image-20231006104634282" tabindex="0" loading="lazy"><figcaption>image-20231006104634282</figcaption></figure><p>退出搜索只需要使用快捷键<code>ESC</code>就可以了</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><p>Visual Studio高效率：<a href="http://furion.baiqian.ltd/docs/vsfast/" target="_blank" rel="noopener noreferrer">http://furion.baiqian.ltd/docs/vsfast/</a></p>',43)]))}const k=t(d,[["render",h]]),y=JSON.parse('{"path":"/soft/devTools/VisualStudio/shengchanlidisheng.html","title":"生产力提升","lang":"zh-CN","frontmatter":{"title":"生产力提升","lang":"zh-CN","date":"2023-07-22T00:00:00.000Z","publish":true,"author":"azrng","order":7,"category":["Visual Studio"],"tag":["快捷键","效率"],"filename":"shengchanlidisheng","description":"Sticky Scroll Sticky Scroll使相关的标题保持可见，从而更容易导航和理解您的代码库。现在，您可以在处理长类和方法时维护代码中的上下文 开启方式：通过选中“在编辑器顶部滚动期间显示嵌套的当前范围”复选框，在工具 > 选项 > 文本编辑器 > 常规 > 粘性滚动中启用它 效果可以参考下面的文章：https://devblogs.mi...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"生产力提升\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/image-20231006103342615.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/image-20231006103504219.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/image-20231006103530950.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/image-20231006103803327.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/image-20231006103905698.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/dcc89789279472416c5ba6bf3be8f2f7_vs7.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/48d9bf8c30ba2feeb11561d617ab4507_vs8.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/image-20231006104634282.png\\"],\\"datePublished\\":\\"2023-07-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-06T02:56:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"],["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/soft/devTools/VisualStudio/shengchanlidisheng.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"生产力提升"}],["meta",{"property":"og:description","content":"Sticky Scroll Sticky Scroll使相关的标题保持可见，从而更容易导航和理解您的代码库。现在，您可以在处理长类和方法时维护代码中的上下文 开启方式：通过选中“在编辑器顶部滚动期间显示嵌套的当前范围”复选框，在工具 > 选项 > 文本编辑器 > 常规 > 粘性滚动中启用它 效果可以参考下面的文章：https://devblogs.mi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/image-20231006103342615.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-06T02:56:05.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"效率"}],["meta",{"property":"article:tag","content":"快捷键"}],["meta",{"property":"article:published_time","content":"2023-07-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-06T02:56:05.000Z"}]]},"git":{"createdTime":1690010917000,"updatedTime":1696560965000,"contributors":[{"name":"azrng","username":"","email":"itzhangyunpeng@163.com","commits":4}]},"readingTime":{"minutes":2.51,"words":754},"filePathRelative":"soft/devTools/VisualStudio/shengchanlidisheng.md","excerpt":"<h2>Sticky Scroll</h2>\\n<p>Sticky Scroll使相关的标题保持可见，从而更容易导航和理解您的代码库。现在，您可以在处理长类和方法时维护代码中的上下文</p>\\n<p>开启方式：通过选中“在编辑器顶部滚动期间显示嵌套的当前范围”复选框，在工具 &gt; 选项 &gt; 文本编辑器 &gt; 常规 &gt; 粘性滚动中启用它</p>\\n<p>效果可以参考下面的文章：<a href=\\"https://devblogs.microsoft.com/visualstudio/sticky-scroll-now-in-preview/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://devblogs.microsoft.com/visualstudio/sticky-scroll-now-in-preview/</a></p>","autoDesc":true}');export{k as comp,y as data};
