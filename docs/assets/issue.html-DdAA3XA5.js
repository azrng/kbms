import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as p,c as o,b as s,e as n,f as l,d as i}from"./app-D8HBJYTp.js";const c={},r=s("h2",{id:"cpu占用高",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#cpu占用高"},[s("span",null,"CPU占用高")])],-1),d={href:"https://www.cnblogs.com/duanweishi/p/13856924.html",target:"_blank",rel:"noopener noreferrer"},u=i(`<h2 id="数据库显示为单个用户-无法操作的问题" tabindex="-1"><a class="header-anchor" href="#数据库显示为单个用户-无法操作的问题"><span>数据库显示为单个用户，无法操作的问题</span></a></h2><p>运行：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">USE</span> master<span class="token punctuation">;</span>
GO
<span class="token keyword">DECLARE</span> <span class="token variable">@SQL</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span>MAX<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token variable">@SQL</span><span class="token operator">=</span><span class="token string">&#39;&#39;</span>
<span class="token keyword">SELECT</span> <span class="token variable">@SQL</span><span class="token operator">=</span><span class="token variable">@SQL</span><span class="token operator">+</span><span class="token string">&#39;; KILL &#39;</span><span class="token operator">+</span>RTRIM<span class="token punctuation">(</span>SPID<span class="token punctuation">)</span>
<span class="token keyword">FROM</span> master<span class="token punctuation">.</span><span class="token punctuation">.</span>sysprocesses
<span class="token keyword">WHERE</span> dbid<span class="token operator">=</span>DB_ID<span class="token punctuation">(</span><span class="token string">&#39;DataBaseName&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">EXEC</span><span class="token punctuation">(</span><span class="token variable">@SQL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
GO

<span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> DataBaseName <span class="token keyword">SET</span> MULTI_USER<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原理：先kill占用了数据库的那个进程，然后设置数据库为多用户模式即可。</p><h2 id="docker部署连接sqlserver2008-ssl错误" tabindex="-1"><a class="header-anchor" href="#docker部署连接sqlserver2008-ssl错误"><span>docker部署连接sqlserver2008 ssl错误</span></a></h2><p>大致错误信息如下</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 35 - An internal exception was caught)

// 或者

SSL Handshake failed with OpenSSL error - SSL_ERROR_SSL.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原因：</p><p>由于进行镜像的安全级别提高了,默认采用了TLSv1.2版本，导致无法访问旧版本的数据库,而程序所使用的 SQL Server 数据库版本比较低不支持 TLSv1.2</p><p>解决方案：</p><p>在dockerfile文件增加下面的参数</p><div class="language-docker line-numbers-mode" data-ext="docker" data-title="docker"><pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> mcr.microsoft.com/dotnet/aspnet:5.0 <span class="token keyword">AS</span> base</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>
<span class="token instruction"><span class="token keyword">EXPOSE</span> 80</span>

<span class="token instruction"><span class="token keyword">FROM</span> mcr.microsoft.com/dotnet/sdk:5.0 <span class="token keyword">AS</span> build</span>
<span class="token instruction"><span class="token keyword">ARG</span> BUILD_CONFIGURATION=Release</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /src</span>
<span class="token instruction"><span class="token keyword">COPY</span> [<span class="token string">&quot;WebApplication8/WebApplication8.csproj&quot;</span>, <span class="token string">&quot;WebApplication8/&quot;</span>]</span>
<span class="token instruction"><span class="token keyword">RUN</span> dotnet restore <span class="token string">&quot;./WebApplication8/./WebApplication8.csproj&quot;</span></span>
<span class="token instruction"><span class="token keyword">COPY</span> . .</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token string">&quot;/src/WebApplication8&quot;</span></span>
<span class="token instruction"><span class="token keyword">RUN</span> dotnet build <span class="token string">&quot;./WebApplication8.csproj&quot;</span> -c <span class="token variable">$BUILD_CONFIGURATION</span> -o /app/build</span>

<span class="token instruction"><span class="token keyword">FROM</span> build <span class="token keyword">AS</span> publish</span>
<span class="token instruction"><span class="token keyword">ARG</span> BUILD_CONFIGURATION=Release</span>
<span class="token instruction"><span class="token keyword">RUN</span> dotnet publish <span class="token string">&quot;./WebApplication8.csproj&quot;</span> -c <span class="token variable">$BUILD_CONFIGURATION</span> -o /app/publish /p:UseAppHost=false</span>

<span class="token instruction"><span class="token keyword">FROM</span> base <span class="token keyword">AS</span> final</span>

<span class="token instruction"><span class="token keyword">RUN</span> sed -i <span class="token string">&#39;s/MinProtocol = TLSv1.2/MinProtocol = TLSv1/g&#39;</span> /etc/ssl/openssl.cnf   👈</span>
<span class="token instruction"><span class="token keyword">RUN</span> sed -i <span class="token string">&#39;s/MinProtocol = TLSv1.2/MinProtocol = TLSv1/g&#39;</span> /usr/lib/ssl/openssl.cnf 👈</span>

<span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>
<span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">publish</span></span> /app/publish .</span>
<span class="token instruction"><span class="token keyword">ENTRYPOINT</span> [<span class="token string">&quot;dotnet&quot;</span>, <span class="token string">&quot;WebApplication8.dll&quot;</span>]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参考资料：https://www.cnblogs.com/printertool/p/14084385.html</p>`,13);function k(v,m){const a=t("ExternalLinkIcon");return p(),o("div",null,[r,s("p",null,[n("SQLSERVER排查CPU占用高的情况 - 马会东 - 博客园 "),s("a",d,[n("https://www.cnblogs.com/duanweishi/p/13856924.html"),l(a)])]),u])}const g=e(c,[["render",k],["__file","issue.html.vue"]]),w=JSON.parse(`{"path":"/dataBase/sqlserver/issue.html","title":"问题","lang":"zh-CN","frontmatter":{"title":"问题","lang":"zh-CN","date":"2023-09-23T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"filename":"putong","slug":"xr5aw5p8w0fxq2rg","docsId":"140756729","description":"CPU占用高 SQLSERVER排查CPU占用高的情况 - 马会东 - 博客园 https://www.cnblogs.com/duanweishi/p/13856924.html 数据库显示为单个用户，无法操作的问题 运行： 原理：先kill占用了数据库的那个进程，然后设置数据库为多用户模式即可。 docker部署连接sqlserver2008 ss...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/sqlserver/issue.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"问题"}],["meta",{"property":"og:description","content":"CPU占用高 SQLSERVER排查CPU占用高的情况 - 马会东 - 博客园 https://www.cnblogs.com/duanweishi/p/13856924.html 数据库显示为单个用户，无法操作的问题 运行： 原理：先kill占用了数据库的那个进程，然后设置数据库为多用户模式即可。 docker部署连接sqlserver2008 ss..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-16T02:02:56.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-16T02:02:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"问题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-16T02:02:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"CPU占用高","slug":"cpu占用高","link":"#cpu占用高","children":[]},{"level":2,"title":"数据库显示为单个用户，无法操作的问题","slug":"数据库显示为单个用户-无法操作的问题","link":"#数据库显示为单个用户-无法操作的问题","children":[]},{"level":2,"title":"docker部署连接sqlserver2008 ssl错误","slug":"docker部署连接sqlserver2008-ssl错误","link":"#docker部署连接sqlserver2008-ssl错误","children":[]}],"git":{"createdTime":1695552464000,"updatedTime":1700100176000,"contributors":[{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":2},{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.16,"words":349},"filePathRelative":"dataBase/sqlserver/issue.md","localizedDate":"2023年9月23日","excerpt":"<h2>CPU占用高</h2>\\n<p>SQLSERVER排查CPU占用高的情况 - 马会东 - 博客园\\n<a href=\\"https://www.cnblogs.com/duanweishi/p/13856924.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.cnblogs.com/duanweishi/p/13856924.html</a></p>\\n<h2>数据库显示为单个用户，无法操作的问题</h2>\\n<p>运行：</p>\\n<div class=\\"language-sql\\" data-ext=\\"sql\\" data-title=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">USE</span> master<span class=\\"token punctuation\\">;</span>\\nGO\\n<span class=\\"token keyword\\">DECLARE</span> <span class=\\"token variable\\">@SQL</span> <span class=\\"token keyword\\">VARCHAR</span><span class=\\"token punctuation\\">(</span>MAX<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">SET</span> <span class=\\"token variable\\">@SQL</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">''</span>\\n<span class=\\"token keyword\\">SELECT</span> <span class=\\"token variable\\">@SQL</span><span class=\\"token operator\\">=</span><span class=\\"token variable\\">@SQL</span><span class=\\"token operator\\">+</span><span class=\\"token string\\">'; KILL '</span><span class=\\"token operator\\">+</span>RTRIM<span class=\\"token punctuation\\">(</span>SPID<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">FROM</span> master<span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span>sysprocesses\\n<span class=\\"token keyword\\">WHERE</span> dbid<span class=\\"token operator\\">=</span>DB_ID<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'DataBaseName'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">EXEC</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">@SQL</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nGO\\n\\n<span class=\\"token keyword\\">ALTER</span> <span class=\\"token keyword\\">DATABASE</span> DataBaseName <span class=\\"token keyword\\">SET</span> MULTI_USER<span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}`);export{g as comp,w as data};
