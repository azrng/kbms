import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-qB9_Bjjp.js";const p={},e=t(`<h3 id="程序开机自启" tabindex="-1"><a class="header-anchor" href="#程序开机自启"><span>程序开机自启</span></a></h3><p>通过写入注册表实现开机自启</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Win32</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Autostart</span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> Key <span class="token operator">=</span> <span class="token string">&quot;EarthLiveSharp&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">Set</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">bool</span></span> enabled<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">RegistryKey</span> runKey <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            runKey <span class="token operator">=</span> Registry<span class="token punctuation">.</span>CurrentUser<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">@&quot;Software\\Microsoft\\Windows\\CurrentVersion\\Run&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>enabled<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                runKey<span class="token punctuation">?.</span><span class="token function">SetValue</span><span class="token punctuation">(</span>Key<span class="token punctuation">,</span> Application<span class="token punctuation">.</span>ExecutablePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                runKey<span class="token punctuation">?.</span><span class="token function">DeleteValue</span><span class="token punctuation">(</span>Key<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Trace<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">finally</span>
        <span class="token punctuation">{</span>
            runKey<span class="token punctuation">?.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="管理员模式启动" tabindex="-1"><a class="header-anchor" href="#管理员模式启动"><span>管理员模式启动</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">IsAdministrator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> identity <span class="token operator">=</span> WindowsIdentity<span class="token punctuation">.</span><span class="token function">GetCurrent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> principal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">WindowsPrincipal</span><span class="token punctuation">(</span>identity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> principal<span class="token punctuation">.</span><span class="token function">IsInRole</span><span class="token punctuation">(</span>WindowsBuiltInRole<span class="token punctuation">.</span>Administrator<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//判断当前登录用户是否为管理员</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">IsAdministrator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    LogFactory<span class="token punctuation">.</span><span class="token function">WriteInfoLog</span><span class="token punctuation">(</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//如果是管理员，则直接运行</span>
    Application<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">MainForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//创建启动对象</span>
<span class="token class-name"><span class="token keyword">var</span></span> startInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ProcessStartInfo</span>
<span class="token punctuation">{</span>
    UseShellExecute <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    WorkingDirectory <span class="token operator">=</span> Environment<span class="token punctuation">.</span>CurrentDirectory<span class="token punctuation">,</span>
    FileName <span class="token operator">=</span> Application<span class="token punctuation">.</span>ExecutablePath<span class="token punctuation">,</span>
    <span class="token comment">//设置启动动作,确保以管理员身份运行</span>
    Verb <span class="token operator">=</span> <span class="token string">&quot;runas&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">try</span>
<span class="token punctuation">{</span>
    LogFactory<span class="token punctuation">.</span><span class="token function">WriteInfoLog</span><span class="token punctuation">(</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Process<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span>startInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">catch</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//退出</span>
Application<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","qidongcaozuo.html.vue"]]),d=JSON.parse('{"path":"/dotnet/zhuomianchengxu/jitongcaozuo/qidongcaozuo.html","title":"启动操作","lang":"zh-CN","frontmatter":{"title":"启动操作","lang":"zh-CN","date":"2023-08-06T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"qidongcaozuo","slug":"yuwigg","docsId":"32420099","description":"程序开机自启 通过写入注册表实现开机自启 管理员模式启动","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/zhuomianchengxu/jitongcaozuo/qidongcaozuo.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"启动操作"}],["meta",{"property":"og:description","content":"程序开机自启 通过写入注册表实现开机自启 管理员模式启动"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-08-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"启动操作\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-06T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":3,"title":"程序开机自启","slug":"程序开机自启","link":"#程序开机自启","children":[]},{"level":3,"title":"管理员模式启动","slug":"管理员模式启动","link":"#管理员模式启动","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.69,"words":206},"filePathRelative":"dotnet/zhuomianchengxu/jitongcaozuo/qidongcaozuo.md","localizedDate":"2023年8月6日","excerpt":"<h3>程序开机自启</h3>\\n<p>通过写入注册表实现开机自启</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token keyword\\">using</span> <span class=\\"token namespace\\">Microsoft<span class=\\"token punctuation\\">.</span>Win32</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Autostart</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">const</span> <span class=\\"token class-name\\"><span class=\\"token keyword\\">string</span></span> Key <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"EarthLiveSharp\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">bool</span></span> <span class=\\"token function\\">Set</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">bool</span></span> enabled<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">RegistryKey</span> runKey <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">try</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            runKey <span class=\\"token operator\\">=</span> Registry<span class=\\"token punctuation\\">.</span>CurrentUser<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">OpenSubKey</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">@\\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>enabled<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">{</span>\\n                runKey<span class=\\"token punctuation\\">?.</span><span class=\\"token function\\">SetValue</span><span class=\\"token punctuation\\">(</span>Key<span class=\\"token punctuation\\">,</span> Application<span class=\\"token punctuation\\">.</span>ExecutablePath<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token keyword\\">else</span>\\n            <span class=\\"token punctuation\\">{</span>\\n                runKey<span class=\\"token punctuation\\">?.</span><span class=\\"token function\\">DeleteValue</span><span class=\\"token punctuation\\">(</span>Key<span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Exception</span> e<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            Trace<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span>e<span class=\\"token punctuation\\">.</span>Message<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">finally</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            runKey<span class=\\"token punctuation\\">?.</span><span class=\\"token function\\">Close</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
