import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as e,c as p,b as n,e as c,f as o,d as l}from"./app-CBxp4zeL.js";const u={},i=l(`<p>通过使用Grpc.Core.RpcException来捕捉异常，也可以通过注入拦截器来捕捉异常</p><p>Interceptor类是gRPC服务拦截器的基类，是一个抽象类，它定义了几个虚方法如下</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name">TResponse</span> <span class="token generic-method"><span class="token function">BlockingUnaryCall</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TRequest<span class="token punctuation">,</span> TResponse<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name">AsyncUnaryCall<span class="token punctuation">&lt;</span>TResponse<span class="token punctuation">&gt;</span></span> <span class="token generic-method"><span class="token function">AsyncUnaryCall</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TRequest<span class="token punctuation">,</span> TResponse<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name">AsyncServerStreamingCall<span class="token punctuation">&lt;</span>TResponse<span class="token punctuation">&gt;</span></span> <span class="token generic-method"><span class="token function">AsyncServerStreamingCall</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TRequest<span class="token punctuation">,</span> TResponse<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name">AsyncClientStreamingCall<span class="token punctuation">&lt;</span>TRequest<span class="token punctuation">,</span> TResponse<span class="token punctuation">&gt;</span></span> <span class="token generic-method"><span class="token function">AsyncClientStreamingCall</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TRequest<span class="token punctuation">,</span> TResponse<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name">AsyncDuplexStreamingCall<span class="token punctuation">&lt;</span>TRequest<span class="token punctuation">,</span> TResponse<span class="token punctuation">&gt;</span></span> <span class="token generic-method"><span class="token function">AsyncDuplexStreamingCall</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TRequest<span class="token punctuation">,</span> TResponse<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>TResponse<span class="token punctuation">&gt;</span></span> <span class="token generic-method"><span class="token function">UnaryServerHandler</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TRequest<span class="token punctuation">,</span> TResponse<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>TResponse<span class="token punctuation">&gt;</span></span> <span class="token generic-method"><span class="token function">ClientStreamingServerHandler</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TRequest<span class="token punctuation">,</span> TResponse<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name">Task</span> <span class="token generic-method"><span class="token function">ServerStreamingServerHandler</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TRequest<span class="token punctuation">,</span> TResponse<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name">Task</span> <span class="token generic-method"><span class="token function">DuplexStreamingServerHandler</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TRequest<span class="token punctuation">,</span> TResponse<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>各个方法作用如下：</p><table><thead><tr><th>方法名称</th><th>作用</th></tr></thead><tbody><tr><td>BlockingUnaryCall</td><td>拦截阻塞调用</td></tr><tr><td>AsyncUnaryCall</td><td>拦截异步调用</td></tr><tr><td>AsyncServerStreamingCall</td><td>拦截异步服务端流调用</td></tr><tr><td>AsyncClientStreamingCall</td><td>拦截异步客户端流调用</td></tr><tr><td>AsyncDuplexStreamingCall</td><td>拦截异步双向流调用</td></tr><tr><td>UnaryServerHandler</td><td>用于拦截和传入普通调用服务器端处理程序</td></tr><tr><td>ClientStreamingServerHandler</td><td>用于拦截客户端流调用的服务器端处理程序</td></tr><tr><td>ServerStreamingServerHandler</td><td>用于拦截服务端流调用的服务器端处理程序</td></tr><tr><td>DuplexStreamingServerHandler</td><td>用于拦截双向流调用的服务器端处理程序</td></tr></tbody></table><p>在实际使用中，可以根据自己的需要来使用对应的拦截方法。</p><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2>`,7),r={href:"https://www.cnblogs.com/stulzq/p/11840535.html",target:"_blank",rel:"noopener noreferrer"};function k(d,g){const s=t("ExternalLinkIcon");return e(),p("div",null,[i,n("p",null,[n("a",r,[c("https://www.cnblogs.com/stulzq/p/11840535.html"),o(s)])])])}const h=a(u,[["render",k],["__file","yichanglanjieqi.html.vue"]]),T=JSON.parse('{"path":"/middleware/grpc/yichanglanjieqi.html","title":"异常拦截器","lang":"zh-CN","frontmatter":{"title":"异常拦截器","lang":"zh-CN","date":"2023-09-12T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"yichanglanjieqi","slug":"ag0di8","docsId":"57088154","description":"通过使用Grpc.Core.RpcException来捕捉异常，也可以通过注入拦截器来捕捉异常 Interceptor类是gRPC服务拦截器的基类，是一个抽象类，它定义了几个虚方法如下 各个方法作用如下： 在实际使用中，可以根据自己的需要来使用对应的拦截方法。 参考文档 https://www.cnblogs.com/stulzq/p/11840535...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/grpc/yichanglanjieqi.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"异常拦截器"}],["meta",{"property":"og:description","content":"通过使用Grpc.Core.RpcException来捕捉异常，也可以通过注入拦截器来捕捉异常 Interceptor类是gRPC服务拦截器的基类，是一个抽象类，它定义了几个虚方法如下 各个方法作用如下： 在实际使用中，可以根据自己的需要来使用对应的拦截方法。 参考文档 https://www.cnblogs.com/stulzq/p/11840535..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"异常拦截器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.06,"words":318},"filePathRelative":"middleware/grpc/yichanglanjieqi.md","localizedDate":"2023年9月12日","excerpt":"<p>通过使用Grpc.Core.RpcException来捕捉异常，也可以通过注入拦截器来捕捉异常</p>\\n<p>Interceptor类是gRPC服务拦截器的基类，是一个抽象类，它定义了几个虚方法如下</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">virtual</span> <span class=\\"token return-type class-name\\">TResponse</span> <span class=\\"token generic-method\\"><span class=\\"token function\\">BlockingUnaryCall</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span>TRequest<span class=\\"token punctuation\\">,</span> TResponse<span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">virtual</span> <span class=\\"token return-type class-name\\">AsyncUnaryCall<span class=\\"token punctuation\\">&lt;</span>TResponse<span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token generic-method\\"><span class=\\"token function\\">AsyncUnaryCall</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span>TRequest<span class=\\"token punctuation\\">,</span> TResponse<span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">virtual</span> <span class=\\"token return-type class-name\\">AsyncServerStreamingCall<span class=\\"token punctuation\\">&lt;</span>TResponse<span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token generic-method\\"><span class=\\"token function\\">AsyncServerStreamingCall</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span>TRequest<span class=\\"token punctuation\\">,</span> TResponse<span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">virtual</span> <span class=\\"token return-type class-name\\">AsyncClientStreamingCall<span class=\\"token punctuation\\">&lt;</span>TRequest<span class=\\"token punctuation\\">,</span> TResponse<span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token generic-method\\"><span class=\\"token function\\">AsyncClientStreamingCall</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span>TRequest<span class=\\"token punctuation\\">,</span> TResponse<span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">virtual</span> <span class=\\"token return-type class-name\\">AsyncDuplexStreamingCall<span class=\\"token punctuation\\">&lt;</span>TRequest<span class=\\"token punctuation\\">,</span> TResponse<span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token generic-method\\"><span class=\\"token function\\">AsyncDuplexStreamingCall</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span>TRequest<span class=\\"token punctuation\\">,</span> TResponse<span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">virtual</span> <span class=\\"token return-type class-name\\">Task<span class=\\"token punctuation\\">&lt;</span>TResponse<span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token generic-method\\"><span class=\\"token function\\">UnaryServerHandler</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span>TRequest<span class=\\"token punctuation\\">,</span> TResponse<span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">virtual</span> <span class=\\"token return-type class-name\\">Task<span class=\\"token punctuation\\">&lt;</span>TResponse<span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token generic-method\\"><span class=\\"token function\\">ClientStreamingServerHandler</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span>TRequest<span class=\\"token punctuation\\">,</span> TResponse<span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">virtual</span> <span class=\\"token return-type class-name\\">Task</span> <span class=\\"token generic-method\\"><span class=\\"token function\\">ServerStreamingServerHandler</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span>TRequest<span class=\\"token punctuation\\">,</span> TResponse<span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">virtual</span> <span class=\\"token return-type class-name\\">Task</span> <span class=\\"token generic-method\\"><span class=\\"token function\\">DuplexStreamingServerHandler</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span>TRequest<span class=\\"token punctuation\\">,</span> TResponse<span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{h as comp,T as data};
