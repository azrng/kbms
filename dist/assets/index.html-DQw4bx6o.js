import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,a as n,b as s,d as t,e}from"./app-vSdX8vi3.js";const i={},u=n("h2",{id:"概述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#概述"},[n("span",null,"概述")])],-1),r={href:"https://github.com/PrismLibrary/Prism",target:"_blank",rel:"noopener noreferrer"},d={href:"https://prismlibrary.com/docs/index.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://prismlibrary.com/docs/wpf/introduction.html",target:"_blank",rel:"noopener noreferrer"},m=e(`<p>框架中包括 MVVM、依赖注入、Command、Message Event、导航、弹窗等功能。</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><h3 id="手动安装" tabindex="-1"><a class="header-anchor" href="#手动安装"><span>手动安装</span></a></h3><p>安装nuget包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Prism.DryIoc&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;8.1.97&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改App.xaml.cs文件，继承自PrismApplication</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">PrismApplication</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">Window</span> <span class="token function">CreateShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 从容器中获取默认呈现的页面</span>
        <span class="token keyword">return</span> Container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>MainWindow<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterTypes</span><span class="token punctuation">(</span><span class="token class-name">IContainerRegistry</span> containerRegistry<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在修改App.xaml文件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>prism<span class="token punctuation">:</span><span class="token class-name">PrismApplication</span>
    x<span class="token punctuation">:</span>Class<span class="token operator">=</span><span class="token string">&quot;WpfApp2.App&quot;</span>
    xmlns<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>
    xmlns<span class="token punctuation">:</span>x<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>
    xmlns<span class="token punctuation">:</span>local<span class="token operator">=</span><span class="token string">&quot;clr-namespace:WpfApp2&quot;</span>
    xmlns<span class="token punctuation">:</span>prism<span class="token operator">=</span><span class="token string">&quot;http://prismlibrary.com/&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Application<span class="token punctuation">.</span>Resources <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>prism<span class="token punctuation">:</span>PrismApplication<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就可以正常启动了。</p><h3 id="扩展模板安装" tabindex="-1"><a class="header-anchor" href="#扩展模板安装"><span>扩展模板安装</span></a></h3><p>通过VS的扩展安装插件：Prism Template Pack 安装扩展成功后，可以新建项目，模板选择为Prism Full App。</p><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h2><h3 id="region" tabindex="-1"><a class="header-anchor" href="#region"><span>Region</span></a></h3><p>Region是应用程序UI的逻辑区域（具体的表现为容器控件），Views在Region中展现，很多种控件可以被用作Region：ContentControl、ItemsControl、ListBox、TabControl。Views能在Regions编程或者自动呈现，Prism也提供了Region导航的支持。这么设计主要为了解耦让内容显示灵活具有多样性。</p><h3 id="regionmanager" tabindex="-1"><a class="header-anchor" href="#regionmanager"><span>RegionManager</span></a></h3><p>RegionManager主要实现维护区域集合、提供对区域的访问、合成视图、区域导航、定义区域。 区域定义方式有两种： xaml方式实现</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">ContentControl</span> x<span class="token punctuation">:</span>Name<span class="token operator">=</span>“ContentCtrl” prism<span class="token punctuation">:</span>RegionManager<span class="token punctuation">.</span>RegionName<span class="token operator">=</span><span class="token string">&quot;ContentRegion&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>C#实现</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>RegionManager<span class="token punctuation">.</span><span class="token function">SetRegionName</span><span class="token punctuation">(</span>ContentCtrl<span class="token punctuation">,</span>”ContentRegion”<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token function">MainWindowViewModel</span><span class="token punctuation">(</span><span class="token class-name">IRegionManager</span> regionManager<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
   _regionManager <span class="token operator">=</span> regionManager<span class="token punctuation">;</span>
   _regionManager<span class="token punctuation">.</span><span class="token function">RegisterViewWithRegion</span><span class="token punctuation">(</span><span class="token string">&quot;ContentRegion&quot;</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">MainWindow</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="regionadapter" tabindex="-1"><a class="header-anchor" href="#regionadapter"><span>RegionAdapter</span></a></h3><p>RegionAdapter（区域适配）主要作用为特定的控件创建相应的Region，并将控件与Region进行绑定，然后为Region添加一些行为。 因为并不是所有的控件都可以作为Region的，需要为需要定义为Region的控件添加RegionAdapter。一个RegionAdapter需要实现IRegionAdapter接口，如果你需要自定义一个RegionAdapter，可以通过继承RegionAdapterBase类来省去一些工作。 Prism为开发者提供了几个默认RegionAdapter：</p><ul><li>ContentControlRegionAdapter：创建一个SingleActiveRegion并将其与ContentControl绑定</li><li>ItemsControlRegionAdapter：创建一个AllActiveRegion并将其与ItemsControl绑定</li><li>SelectorRegionAdapter：创建一个Region并将其与Selector绑定</li><li>TabControlRegionAdapter：创建一个Region并将其与TabControl绑定</li></ul><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="命令" tabindex="-1"><a class="header-anchor" href="#命令"><span>命令</span></a></h3><p>ViewModel可以将命令实现为命令对应(实现接口的对象ICommand)。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">--</span> xaml代码中调用
<span class="token operator">&lt;</span><span class="token class-name">Button</span>
    Margin<span class="token operator">=</span><span class="token string">&quot;10,0&quot;</span>
    Command<span class="token operator">=</span><span class="token string">&quot;{Binding OpenCommand}&quot;</span>
    CommandParameter<span class="token operator">=</span><span class="token string">&quot;ViewA&quot;</span>
    Content<span class="token operator">=</span><span class="token string">&quot;打开模块A&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>


<span class="token operator">--</span> viewModel代码    
<span class="token keyword">public</span> <span class="token return-type class-name">DelegateCommand<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> OpenCommand <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token function">MainViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    OpenCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DelegateCommand<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>Open<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 打开页面方法</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>obj<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Open</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> obj<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="变更通知" tabindex="-1"><a class="header-anchor" href="#变更通知"><span>变更通知</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> _title<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Title
<span class="token punctuation">{</span>
    <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> _title<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">set</span>
    <span class="token punctuation">{</span>
        <span class="token function">SetProperty</span><span class="token punctuation">(</span><span class="token keyword">ref</span> _title<span class="token punctuation">,</span> <span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="依赖注入" tabindex="-1"><a class="header-anchor" href="#依赖注入"><span>依赖注入</span></a></h3><h4 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期"><span>生命周期</span></a></h4><p>在 WPF 应用程序中，您可以使用 Prism 进行服务注入，并且可以选择以下生命周期：</p><ol><li>单例（Singleton）生命周期：这种生命周期适合那些仅需要一个实例的服务，例如配置管理器或日志记录器。您可以通过在 ViewModel 或控制器构造函数中添加 [Singleton] 属性来指定单例生命周期。</li><li>每个请求（Transient）生命周期：这种生命周期适合那些需要不同实例的服务，例如数据访问库或业务逻辑层中的服务。您可以通过在 ViewModel 或控制器构造函数中添加 [Transient] 属性来指定每个请求生命周期。</li><li>范围（Scoped）生命周期：这种生命周期适用于需要在特定范围内共享状态的服务，例如所有子视图共享的服务。如果您正在使用 INavigationAware 接口，则可以使用 INavigationService 对象作为范围服务。此外，您还可以创建自定义范围服务，例如在 ShellViewModel 中注册并在整个应用程序中使用的服务。</li></ol><p>要选择正确的生命周期，请考虑服务的具体需求以及您的应用程序架构和工作流程。在大多数情况下，您应该选择单例生命周期，除非您需要为每个请求创建不同的实例或者需要在特定范围内共享状态。</p><p>在 WPF 应用程序中，您的数据库服务通常应该使用单例生命周期进行注入。这是因为在大多数情况下，只需要一个数据库连接实例来处理所有请求，这可以提高性能并减少资源消耗。如果您的应用程序需要同时访问多个数据库，或者需要为每个用户创建一个独立的数据库连接，则可以考虑使用范围生命周期。在此情况下，您可以将数据库服务配置为在每个用户会话期间创建一个新实例，以确保隔离用户数据和操作。</p><h4 id="注册瞬时服务" tabindex="-1"><a class="header-anchor" href="#注册瞬时服务"><span>注册瞬时服务</span></a></h4><p>每次创建使用的时候都创建一个新实例的服务。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Register</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>FooService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Register</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IBarService<span class="token punctuation">,</span> BarService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="注册单例服务" tabindex="-1"><a class="header-anchor" href="#注册单例服务"><span>注册单例服务</span></a></h4><p>在整个应用程序中使用一项服务。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>FooService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IBarService<span class="token punctuation">,</span> BarService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：单例服务实际上并没有创建，因此在您的应用程序第一次解析服务之前不会开始使用内存。</p></blockquote><h4 id="注册服务实例" tabindex="-1"><a class="header-anchor" href="#注册服务实例"><span>注册服务实例</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterInstance</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IFoo<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">FooImplementation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Sample of using James Montemagno&#39;s Monkey Cache</span>
Barrel<span class="token punctuation">.</span>ApplicationId <span class="token operator">=</span> <span class="token string">&quot;your_unique_name_here&quot;</span><span class="token punctuation">;</span>
containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterInstance</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IBarrel<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>Barrel<span class="token punctuation">.</span>Current<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="检查服务是否注册" tabindex="-1"><a class="header-anchor" href="#检查服务是否注册"><span>检查服务是否注册</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">IsRegistered</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ISomeService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// Do something...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="模块" tabindex="-1"><a class="header-anchor" href="#模块"><span>模块</span></a></h3><p>我们可以将某一个模块的逻辑单独去创建一个类库，然后在这个类库中创建一个文件，如ModuleAModule，让该文件继承自IModule，如果需要注册导航，就可以直接在该类中注册，如</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ModuleAModule</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IModule</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnInitialized</span><span class="token punctuation">(</span><span class="token class-name">IContainerProvider</span> containerProvider<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterTypes</span><span class="token punctuation">(</span><span class="token class-name">IContainerRegistry</span> containerRegistry<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 手动指定ViewModel</span>
        <span class="token comment">//containerRegistry.RegisterForNavigation&lt;ViewA,ViewAViewModel&gt;();</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么如何注册模块那？我们可以这么注册，在主程序的App.xaml.cs类中</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConfigureModuleCatalog</span><span class="token punctuation">(</span><span class="token class-name">IModuleCatalog</span> moduleCatalog<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">// 注入模块方案一：通过引用指定模块的类库进行注入的方式</span>
	moduleCatalog<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ModuleAModule<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	moduleCatalog<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddModule</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ModuleBModule<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">ConfigureModuleCatalog</span><span class="token punctuation">(</span>moduleCatalog<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//protected override IModuleCatalog CreateModuleCatalog()</span>
<span class="token comment">//{</span>
<span class="token comment">//    // 注入模块方案二：通过直接去目录下查找的方式去读取模块</span>
<span class="token comment">//    // 这个方法就需要将模块的内容拷贝到指定目录下进行实现了,这个时候是不需要引用对应模块类库的</span>
<span class="token comment">//    return new DirectoryModuleCatalog { ModulePath = @&quot;.\\Modules&quot; };</span>
<span class="token comment">//}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注册模块方案三</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">PrismApplication</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">Window</span> <span class="token function">CreateShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>MainWindow<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterTypes</span><span class="token punctuation">(</span><span class="token class-name">IContainerRegistry</span> containerRegistry<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
            
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConfigureModuleCatalog</span><span class="token punctuation">(</span><span class="token class-name">IModuleCatalog</span> moduleCatalog<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//注入模块方案三</span>
        <span class="token class-name"><span class="token keyword">var</span></span> moduleAType <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">ModuleAModule</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        moduleCatalog<span class="token punctuation">.</span><span class="token function">AddModule</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ModuleInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            ModuleName <span class="token operator">=</span> moduleAType<span class="token punctuation">.</span>Name<span class="token punctuation">,</span>
            ModuleType <span class="token operator">=</span> moduleAType<span class="token punctuation">.</span>AssemblyQualifiedName<span class="token punctuation">,</span>
            InitializationMode <span class="token operator">=</span> InitializationMode<span class="token punctuation">.</span>OnDemand
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="事件聚合器" tabindex="-1"><a class="header-anchor" href="#事件聚合器"><span>事件聚合器</span></a></h3><h4 id="发布事件" tabindex="-1"><a class="header-anchor" href="#发布事件"><span>发布事件</span></a></h4><p>发布者通过从中检索事件EventAggregator并调用Publish方法来引发事件。您可以通过向类构造IEventAggregator函数添加类型参数来使用依赖注入。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainPageViewModel</span>
<span class="token punctuation">{</span>
    <span class="token class-name">IEventAggregator</span> _eventAggregator<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">MainPageViewModel</span><span class="token punctuation">(</span><span class="token class-name">IEventAggregator</span> ea<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _eventAggregator <span class="token operator">=</span> ea<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>发布操作</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>_eventAggregator<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetEvent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TickerSymbolSelectedEvent<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Publish</span><span class="token punctuation">(</span><span class="token string">&quot;STOCK0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="订阅事件" tabindex="-1"><a class="header-anchor" href="#订阅事件"><span>订阅事件</span></a></h4><p>Subscribe订阅者可以使用类上可用的方法重载之一登记事件PubSubEvent。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainPageViewModel</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">MainPageViewModel</span><span class="token punctuation">(</span><span class="token class-name">IEventAggregator</span> ea<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        ea<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetEvent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TickerSymbolSelectedEvent<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Subscribe</span><span class="token punctuation">(</span>ShowNews<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ShowNews</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> companySymbol<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//implement logic</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>有多种订阅方式PubSubEvents。使用以下标准来帮助确定最适合您需求的选项：</p><ul><li>如果您需要能够在收到事件时更新 UI 元素，请订阅以在 UI 线程上接收事件。</li><li>如果您需要过滤事件，请在订阅时提供过滤委托。</li><li>如果您对事件的性能有顾虑，请考虑在订阅时使用强引用委托，然后手动取消订阅 PubSubEvent。</li><li>如果以上都不适用，请使用默认订阅。</li></ul>`,64),v={href:"https://prismlibrary.com/docs/event-aggregator.html",target:"_blank",rel:"noopener noreferrer"},g=e(`<h3 id="页面定位viewmodel" tabindex="-1"><a class="header-anchor" href="#页面定位viewmodel"><span>页面定位ViewModel</span></a></h3><p>Prism使用约定来确定视图模型的ViewModel类，用它的依赖项实例化它并将它附加到视图的DataContext。 默认约定是将所有视图放在Views文件夹中，将视图模型放在ViewModels文件夹中。</p><ul><li>WpfApp1.Views.MainWindow=&gt;WpfApp1.ViewModels.MainWindowViewModel</li><li>WpfApp1.Views.OtherView=&gt;WpfApp1.ViewModels.OtherViewModel</li></ul><p>注意：在老版本，比如prism7等以下需要在每个XAML页面中进行指定ViewModelLocator.AutoWireViewModel，在当前prism8的版本中默认为true</p><h4 id="禁止自动定位" tabindex="-1"><a class="header-anchor" href="#禁止自动定位"><span>禁止自动定位</span></a></h4><p>通过在页面ViewA.xaml的内容中输入</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>xmlns<span class="token punctuation">:</span>prism<span class="token operator">=</span><span class="token string">&quot;http://prismlibrary.com/&quot;</span>
prism<span class="token punctuation">:</span>ViewModelLocator<span class="token punctuation">.</span>AutoWireViewModel<span class="token operator">=</span><span class="token string">&quot;false&quot;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>来实现该页面不使用默认约定的映射。</p><h4 id="手动匹配" tabindex="-1"><a class="header-anchor" href="#手动匹配"><span>手动匹配</span></a></h4><p>如果View和Model的映射关系没有按照上面的约定去处理，那么就需要手动匹配，通过在模块的ModuleAModule注入</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ModuleAModule</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IModule</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnInitialized</span><span class="token punctuation">(</span><span class="token class-name">IContainerProvider</span> containerProvider<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterTypes</span><span class="token punctuation">(</span><span class="token class-name">IContainerRegistry</span> containerRegistry<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterForNavigation</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ViewA<span class="token punctuation">,</span>ViewAViewModel<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者主程序的App.xaml.cs中的RegisterTypes方法注入</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterTypes</span><span class="token punctuation">(</span><span class="token class-name">IContainerRegistry</span> containerRegistry<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterForNavigation</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ViewA<span class="token punctuation">,</span>ViewAViewModel<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//containerRegistry.RegisterForNavigation&lt;ViewB&gt;();</span>
    <span class="token comment">//containerRegistry.RegisterForNavigation&lt;ViewC&gt;();</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>批量手动定位</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">PrismApplication</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">Window</span> <span class="token function">CreateShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>MainWindow<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterTypes</span><span class="token punctuation">(</span><span class="token class-name">IContainerRegistry</span> containerRegistry<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConfigureViewModelLocator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">ConfigureViewModelLocator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        ViewModelLocationProvider<span class="token punctuation">.</span><span class="token function">SetDefaultViewTypeToViewModelTypeResolver</span><span class="token punctuation">(</span><span class="token punctuation">(</span>viewType<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> viewName <span class="token operator">=</span> viewType<span class="token punctuation">.</span>FullName<span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> viewAssemblyName <span class="token operator">=</span> viewType<span class="token punctuation">.</span><span class="token function">GetTypeInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Assembly<span class="token punctuation">.</span>FullName<span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> viewModelName <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">viewName</span><span class="token punctuation">}</span></span><span class="token string">ViewModel, </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">viewAssemblyName</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> Type<span class="token punctuation">.</span><span class="token function">GetType</span><span class="token punctuation">(</span>viewModelName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其他配置定位的方法</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">PrismApplication</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">Window</span> <span class="token function">CreateShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>MainWindow<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterTypes</span><span class="token punctuation">(</span><span class="token class-name">IContainerRegistry</span> containerRegistry<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConfigureViewModelLocator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">ConfigureViewModelLocator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// type / type</span>
        <span class="token comment">//ViewModelLocationProvider.Register(typeof(MainWindow).ToString(), typeof(CustomViewModel));</span>

        <span class="token comment">// type / factory</span>
        <span class="token comment">//ViewModelLocationProvider.Register(typeof(MainWindow).ToString(), () =&gt; Container.Resolve&lt;CustomViewModel&gt;());</span>

        <span class="token comment">// generic factory</span>
        <span class="token comment">//ViewModelLocationProvider.Register&lt;MainWindow&gt;(() =&gt; Container.Resolve&lt;CustomViewModel&gt;());</span>

        <span class="token comment">// generic type</span>
        ViewModelLocationProvider<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Register</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>MainWindow<span class="token punctuation">,</span> CustomViewModel<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="区域导航" tabindex="-1"><a class="header-anchor" href="#区域导航"><span>区域导航</span></a></h3><h4 id="基础区域导航" tabindex="-1"><a class="header-anchor" href="#基础区域导航"><span>基础区域导航</span></a></h4><h5 id="注册-设置默认页面" tabindex="-1"><a class="header-anchor" href="#注册-设置默认页面"><span>注册/设置默认页面</span></a></h5><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>regionManager<span class="token punctuation">.</span><span class="token function">RegisterViewWithRegion</span><span class="token punctuation">(</span><span class="token string">&quot;ContentRegion&quot;</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">ViewA</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="将页面加入区域导航" tabindex="-1"><a class="header-anchor" href="#将页面加入区域导航"><span>将页面加入区域导航</span></a></h5><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> view <span class="token operator">=</span> _container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ViewA<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">IRegion</span> region <span class="token operator">=</span> _regionManager<span class="token punctuation">.</span>Regions<span class="token punctuation">[</span><span class="token string">&quot;ContentRegion&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
region<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="将页面注册进区域并设置激活和取消" tabindex="-1"><a class="header-anchor" href="#将页面注册进区域并设置激活和取消"><span>将页面注册进区域并设置激活和取消</span></a></h5><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">// 注册</span>
<span class="token class-name"><span class="token keyword">var</span></span> _viewA <span class="token operator">=</span> _container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ViewA<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> _viewB <span class="token operator">=</span> _container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ViewB<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> _region <span class="token operator">=</span> _regionManager<span class="token punctuation">.</span>Regions<span class="token punctuation">[</span><span class="token string">&quot;ContentRegion&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
_region<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>_viewA<span class="token punctuation">)</span><span class="token punctuation">;</span>
_region<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>_viewB<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 激活</span>
_region<span class="token punctuation">.</span><span class="token function">Activate</span><span class="token punctuation">(</span>_viewA<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//失效</span>
_region<span class="token punctuation">.</span><span class="token function">Deactivate</span><span class="token punctuation">(</span>_viewA<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>导航并返回导航的结果</p><div class="language-plsql line-numbers-mode" data-ext="plsql" data-title="plsql"><pre class="language-plsql"><code><span class="token keyword">private</span> <span class="token keyword">void</span> Naigation<span class="token punctuation">(</span><span class="token punctuation">)</span>
{
	<span class="token operator">/</span><span class="token operator">/</span>NavigationResult类定义提供有关导航操作的信息的属性。
	_regionManager<span class="token punctuation">.</span>RequestNavigate<span class="token punctuation">(</span>PrismCommonConst<span class="token punctuation">.</span>BaseRegionNaviation<span class="token punctuation">,</span> <span class="token string">&quot;ViewB&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
	{
		<span class="token operator">/</span><span class="token operator">/</span><span class="token keyword">Result</span>属性指示导航是否成功。如果导航成功，则<span class="token keyword">Result</span>属性将为<span class="token boolean">true</span>。
		<span class="token operator">/</span><span class="token operator">/</span>如果导航失败，通常是因为在IConfirmNavigationResult<span class="token punctuation">.</span>ConfirmNavigationRequest方法中返回“continuationCallBack<span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>”，则<span class="token keyword">Result</span>属性将为<span class="token boolean">false</span>。
		<span class="token operator">/</span><span class="token operator">/</span>如果由于异常导致导航失败，则<span class="token keyword">Result</span>属性将为<span class="token boolean">false</span>并且Error属性提供对导航期间抛出的任何异常的引用。
		<span class="token operator">/</span><span class="token operator">/</span><span class="token keyword">Context</span>属性提供对导航 URI 及其包含的任何参数的访问，以及对协调导航操作的导航服务的引用。
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">result</span><span class="token punctuation">.</span><span class="token keyword">Result</span> <span class="token operator">=</span><span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
		{
			<span class="token operator">/</span><span class="token operator">/</span>导航成功
		}
	}<span class="token punctuation">)</span><span class="token punctuation">;</span>
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="传递参数导航" tabindex="-1"><a class="header-anchor" href="#传递参数导航"><span>传递参数导航</span></a></h4><p>Prism 提供NavigationParameters类来帮助指定和检索导航参数。NavigationParameters类维护一个名称-值对列表，每个参数对应一个。您可以使用此类将参数作为导航 URI 的一部分或用于传递对象参数。</p><div class="language-plsql line-numbers-mode" data-ext="plsql" data-title="plsql"><pre class="language-plsql"><code><span class="token keyword">private</span> <span class="token keyword">void</span> Naigation<span class="token punctuation">(</span><span class="token punctuation">)</span>
{
	var param <span class="token operator">=</span> <span class="token keyword">new</span> NavigationParameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	param<span class="token punctuation">.</span><span class="token keyword">Add</span><span class="token punctuation">(</span><span class="token string">&quot;Conent&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;我是传递过来的参数值&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	_regionManager<span class="token punctuation">.</span>RequestNavigate<span class="token punctuation">(</span>PrismCommonConst<span class="token punctuation">.</span>BaseRegionNaviation<span class="token punctuation">,</span> nameof<span class="token punctuation">(</span>ShowNavigationView<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
	{
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">result</span><span class="token punctuation">.</span><span class="token keyword">Result</span> <span class="token operator">=</span><span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
		{
			<span class="token operator">/</span><span class="token operator">/</span>导航成功
		}
	}<span class="token punctuation">,</span> param<span class="token punctuation">)</span><span class="token punctuation">;</span>
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以从IsNavigationTarget、OnNavigatedFrom和OnNavigatedTo方法中访问NavigationContext，可以使用NavigationContext对象的Parameters属性检索导航参数。此属性返回NavigationParameters类的一个实例，它提供一个索引器属性以允许轻松访问各个参数，而不管它们是通过查询还是通过 RequestNavigate方法传递的。 在导航后的页面OnNavigatedTo方法中取值</p><div class="language-plsql line-numbers-mode" data-ext="plsql" data-title="plsql"><pre class="language-plsql"><code><span class="token keyword">public</span> <span class="token keyword">void</span> OnNavigatedTo<span class="token punctuation">(</span>NavigationContext navigationContext<span class="token punctuation">)</span>
{
	<span class="token operator">/</span><span class="token operator">/</span>_content <span class="token operator">=</span> <span class="token punctuation">(</span>navigationContext<span class="token punctuation">.</span><span class="token keyword">Parameters</span><span class="token punctuation">[</span><span class="token string">&quot;Conent&quot;</span><span class="token punctuation">]</span>?<span class="token punctuation">.</span>ToString<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> ?? <span class="token keyword">string</span><span class="token punctuation">.</span><span class="token keyword">Empty</span><span class="token punctuation">;</span>
	_content <span class="token operator">=</span> navigationContext<span class="token punctuation">.</span><span class="token keyword">Parameters</span><span class="token punctuation">.</span>GetValue<span class="token operator">&lt;</span><span class="token keyword">string</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;Content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	Debug<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">&quot;ShowNavigationViewModel 导航后被调用了&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过在ViewModel中注入IRegionManager来调用RequestNavigate实现跳转</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Open</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> obj<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// 通过IRegionManager接口获取到全局定义的可用区域</span>
    <span class="token comment">// 然后往这个动态区域设置内容，设置内容的方式是通过依赖注入的方式实现的</span>

    <span class="token class-name"><span class="token keyword">var</span></span> keys <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NavigationParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    keys<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;Title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello 我是参数&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 导航到指定页面 并传递参数</span>
    <span class="token comment">//regionManager.Regions[&quot;ContentRegin&quot;].RequestNavigate(obj, keys);</span>

    regionManager<span class="token punctuation">.</span>Regions<span class="token punctuation">[</span><span class="token string">&quot;ContentRegin&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">RequestNavigate</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> callBack <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 为true代表导航成功</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>callBack<span class="token punctuation">.</span>Result <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// 回退使用</span>
            _regionNavigationJournal <span class="token operator">=</span> callBack<span class="token punctuation">.</span>Context<span class="token punctuation">.</span>NavigationService<span class="token punctuation">.</span>Journal<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> keys<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的ContentRegin是一个ContentControl</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">ContentControl</span> prism<span class="token punctuation">:</span>RegionManager<span class="token punctuation">.</span>RegionName<span class="token operator">=</span><span class="token string">&quot;ContentRegin&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果想设置默认页面，可以在ViewModel的构造函数中初始化默认页面，如</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>_regionManager<span class="token punctuation">.</span><span class="token function">RegisterViewWithRegion</span><span class="token punctuation">(</span>PrismManager<span class="token punctuation">.</span>SettingsViewRegionName<span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">SkinView</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="导航前确认" tabindex="-1"><a class="header-anchor" href="#导航前确认"><span>导航前确认</span></a></h4>`,39),b={href:"https://prismlibrary.com/docs/wpf/region-navigation/confirming-navigation.html",target:"_blank",rel:"noopener noreferrer"},h=e(`<p>IConfirmNavigationRequest接口派生自INavigationAware接口并添加了ConfirmNavigationRequest方法。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ShowNavigationTwoViewModel</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">BindableBase</span><span class="token punctuation">,</span> <span class="token class-name">IConfirmNavigationRequest</span></span>
<span class="token punctuation">{</span>
	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token doc-comment comment">/// 是否能够处理导航请求</span>
	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navigationContext<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>remarks</span><span class="token punctuation">&gt;</span></span>处理导航操作或者导航到已经存在的视图时候用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>remarks</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exception</span> <span class="token attr-name">cref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>NotImplementedException<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exception</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">IsNavigationTarget</span><span class="token punctuation">(</span><span class="token class-name">NavigationContext</span> navigationContext<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token comment">// 资料文档：https://prismlibrary.com/docs/wpf/region-navigation/navigation-existing-views.html</span>

		<span class="token comment">// 获取请求的参数  可以实现对比当前页面id和导航请求ID进行比较，然后判断是否重新使用该页面</span>
		<span class="token class-name"><span class="token keyword">var</span></span> id <span class="token operator">=</span> navigationContext<span class="token punctuation">.</span>Parameters<span class="token punctuation">[</span><span class="token string">&quot;Id&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token doc-comment comment">/// 导航前调用</span>
	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navigationContext<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exception</span> <span class="token attr-name">cref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>NotImplementedException<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exception</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnNavigatedFrom</span><span class="token punctuation">(</span><span class="token class-name">NavigationContext</span> navigationContext<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		Debug<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;ShowNavigationTwoViewModel 导航前被调用了&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token doc-comment comment">/// 导航完成后调用</span>
	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navigationContext<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exception</span> <span class="token attr-name">cref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>NotImplementedException<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exception</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnNavigatedTo</span><span class="token punctuation">(</span><span class="token class-name">NavigationContext</span> navigationContext<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token comment">//_content = (navigationContext.Parameters[&quot;Conent&quot;]?.ToString()) ?? string.Empty;</span>
		_content <span class="token operator">=</span> navigationContext<span class="token punctuation">.</span>Parameters<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetValue</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;Content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		Debug<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;ShowNavigationTwoViewModel 导航后被调用了&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token doc-comment comment">/// 从当前页面导航到其他页面前的一个确定</span>
	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navigationContext<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>continuationCallback<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConfirmNavigationRequest</span><span class="token punctuation">(</span><span class="token class-name">NavigationContext</span> navigationContext<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> continuationCallback<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;你确认要导航到下个页面吗？&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;提示&quot;</span><span class="token punctuation">,</span> MessageBoxButton<span class="token punctuation">.</span>YesNo<span class="token punctuation">)</span> <span class="token operator">==</span> MessageBoxResult<span class="token punctuation">.</span>No<span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			result <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		continuationCallback<span class="token punctuation">?.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="控制视图生命周期" tabindex="-1"><a class="header-anchor" href="#控制视图生命周期"><span>控制视图生命周期</span></a></h4>`,3),w={href:"https://prismlibrary.com/docs/wpf/region-navigation/controlling-view-lifetime.html",target:"_blank",rel:"noopener noreferrer"},y=n("h4",{id:"导航日志",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#导航日志"},[n("span",null,"导航日志")])],-1),q={href:"https://prismlibrary.com/docs/wpf/region-navigation/navigation-journal.html",target:"_blank",rel:"noopener noreferrer"},f=e(`<h4 id="点击触发事件" tabindex="-1"><a class="header-anchor" href="#点击触发事件"><span>点击触发事件</span></a></h4><blockquote><p>下面的代码是一个耦合性比较高的过渡代码示例</p></blockquote><p>基于上面的Prism的基础上，实现的效果是点击页面的三个按钮，然后来实现切换页面显示效果，新建一个MainView.xaml在Views目录下</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">Window</span>
    x<span class="token punctuation">:</span>Class<span class="token operator">=</span><span class="token string">&quot;WpfApp2.Views.MainView&quot;</span>
    xmlns<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>
    xmlns<span class="token punctuation">:</span>x<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>
    xmlns<span class="token punctuation">:</span>d<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span>
    xmlns<span class="token punctuation">:</span>local<span class="token operator">=</span><span class="token string">&quot;clr-namespace:WpfApp2&quot;</span>
    xmlns<span class="token punctuation">:</span>mc<span class="token operator">=</span><span class="token string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span>
    xmlns<span class="token punctuation">:</span>prism<span class="token operator">=</span><span class="token string">&quot;http://prismlibrary.com/&quot;</span>
    Title<span class="token operator">=</span><span class="token string">&quot;MainWindow&quot;</span>
    Width<span class="token operator">=</span><span class="token string">&quot;800&quot;</span>
    Height<span class="token operator">=</span><span class="token string">&quot;450&quot;</span>
    prism<span class="token punctuation">:</span>ViewModelLocator<span class="token punctuation">.</span>AutoWireViewModel<span class="token operator">=</span><span class="token string">&quot;True&quot;</span>
    mc<span class="token punctuation">:</span>Ignorable<span class="token operator">=</span><span class="token string">&quot;d&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Grid<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Grid<span class="token punctuation">.</span>RowDefinitions<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">RowDefinition</span> Height<span class="token operator">=</span><span class="token string">&quot;auto&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>RowDefinition <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token punctuation">.</span>RowDefinitions<span class="token operator">&gt;</span>

        <span class="token operator">&lt;</span><span class="token class-name">StackPanel</span> Orientation<span class="token operator">=</span><span class="token string">&quot;Horizontal&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">Button</span>
                Command<span class="token operator">=</span><span class="token string">&quot;{Binding OpenCommand}&quot;</span>
                CommandParameter<span class="token operator">=</span><span class="token string">&quot;ViewA&quot;</span>
                Content<span class="token operator">=</span><span class="token string">&quot;打开模块A&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">Button</span>
                Command<span class="token operator">=</span><span class="token string">&quot;{Binding OpenCommand}&quot;</span>
                CommandParameter<span class="token operator">=</span><span class="token string">&quot;ViewB&quot;</span>
                Content<span class="token operator">=</span><span class="token string">&quot;打开模块B&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">Button</span>
                Command<span class="token operator">=</span><span class="token string">&quot;{Binding OpenCommand}&quot;</span>
                CommandParameter<span class="token operator">=</span><span class="token string">&quot;ViewC&quot;</span>
                Content<span class="token operator">=</span><span class="token string">&quot;打开模块C&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>ContentControl Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;1&quot;</span> Content<span class="token operator">=</span><span class="token string">&quot;{Binding Body}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Window<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在当前目录下新建三个用户控件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">UserControl</span>
    x<span class="token punctuation">:</span>Class<span class="token operator">=</span><span class="token string">&quot;WpfApp2.Views.ViewA&quot;</span>
    xmlns<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>
    xmlns<span class="token punctuation">:</span>x<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>
    xmlns<span class="token punctuation">:</span>d<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span>
    xmlns<span class="token punctuation">:</span>local<span class="token operator">=</span><span class="token string">&quot;clr-namespace:WpfApp2.Views&quot;</span>
    xmlns<span class="token punctuation">:</span>mc<span class="token operator">=</span><span class="token string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span>
    d<span class="token punctuation">:</span>DesignHeight<span class="token operator">=</span><span class="token string">&quot;450&quot;</span>
    d<span class="token punctuation">:</span>DesignWidth<span class="token operator">=</span><span class="token string">&quot;800&quot;</span>
    mc<span class="token punctuation">:</span>Ignorable<span class="token operator">=</span><span class="token string">&quot;d&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Grid<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">TextBlock</span> Background<span class="token operator">=</span><span class="token string">&quot;Green&quot;</span> Text<span class="token operator">=</span><span class="token string">&quot;我是模块A&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>UserControl<span class="token operator">&gt;</span>


<span class="token operator">&lt;</span><span class="token class-name">UserControl</span>
    x<span class="token punctuation">:</span>Class<span class="token operator">=</span><span class="token string">&quot;WpfApp2.Views.ViewB&quot;</span>
    xmlns<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>
    xmlns<span class="token punctuation">:</span>x<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>
    xmlns<span class="token punctuation">:</span>d<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span>
    xmlns<span class="token punctuation">:</span>local<span class="token operator">=</span><span class="token string">&quot;clr-namespace:WpfApp2.Views&quot;</span>
    xmlns<span class="token punctuation">:</span>mc<span class="token operator">=</span><span class="token string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span>
    d<span class="token punctuation">:</span>DesignHeight<span class="token operator">=</span><span class="token string">&quot;450&quot;</span>
    d<span class="token punctuation">:</span>DesignWidth<span class="token operator">=</span><span class="token string">&quot;800&quot;</span>
    mc<span class="token punctuation">:</span>Ignorable<span class="token operator">=</span><span class="token string">&quot;d&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Grid<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">TextBlock</span> Background<span class="token operator">=</span><span class="token string">&quot;Green&quot;</span> Text<span class="token operator">=</span><span class="token string">&quot;我是模块B&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>UserControl<span class="token operator">&gt;</span>


<span class="token operator">&lt;</span><span class="token class-name">UserControl</span>
    x<span class="token punctuation">:</span>Class<span class="token operator">=</span><span class="token string">&quot;WpfApp2.Views.ViewC&quot;</span>
    xmlns<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>
    xmlns<span class="token punctuation">:</span>x<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>
    xmlns<span class="token punctuation">:</span>d<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span>
    xmlns<span class="token punctuation">:</span>local<span class="token operator">=</span><span class="token string">&quot;clr-namespace:WpfApp2.Views&quot;</span>
    xmlns<span class="token punctuation">:</span>mc<span class="token operator">=</span><span class="token string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span>
    d<span class="token punctuation">:</span>DesignHeight<span class="token operator">=</span><span class="token string">&quot;450&quot;</span>
    d<span class="token punctuation">:</span>DesignWidth<span class="token operator">=</span><span class="token string">&quot;800&quot;</span>
    mc<span class="token punctuation">:</span>Ignorable<span class="token operator">=</span><span class="token string">&quot;d&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Grid<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">TextBlock</span> Background<span class="token operator">=</span><span class="token string">&quot;Green&quot;</span> Text<span class="token operator">=</span><span class="token string">&quot;我是模块C&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>UserControl<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在ViewModels目录下新建一个MainViewModel.cs文件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainViewModel</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">BindableBase</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DelegateCommand<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> OpenCommand <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">private</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">MainViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        OpenCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DelegateCommand<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>Open<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">object</span></span> _body<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">object</span></span> Body
    <span class="token punctuation">{</span>
        <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> _body<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">set</span>
        <span class="token punctuation">{</span>
            _body <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
            <span class="token function">RaisePropertyChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Open</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> obj<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token string">&quot;ViewA&quot;</span><span class="token punctuation">:</span>
                Body <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ViewA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>

            <span class="token keyword">case</span> <span class="token string">&quot;ViewB&quot;</span><span class="token punctuation">:</span>
                Body <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ViewB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">break</span><span class="token punctuation">;</span>

            <span class="token keyword">case</span> <span class="token string">&quot;ViewC&quot;</span><span class="token punctuation">:</span>
                Body <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ViewC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">break</span><span class="token punctuation">;</span>

            <span class="token keyword">default</span><span class="token punctuation">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后记得修改App.cs文件下的CreateShell方法</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">Window</span> <span class="token function">CreateShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// 从容器中获取默认呈现的页面</span>
    <span class="token keyword">return</span> Container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>MainView<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后启动页面，发现展示了三个按钮，点击按钮分别可以进行切换页面。</p><p>现在开始简化上面的操作，实现我们需要先将页面进行注入，在App.xaml.cs文件注入</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">PrismApplication</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">Window</span> <span class="token function">CreateShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 从容器中获取默认呈现的页面</span>
        <span class="token keyword">return</span> Container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>MainView<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterTypes</span><span class="token punctuation">(</span><span class="token class-name">IContainerRegistry</span> containerRegistry<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterForNavigation</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ViewA<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterForNavigation</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ViewB<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterForNavigation</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ViewC<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后修改MainViewModel文件打开的方法</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainViewModel</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">BindableBase</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">readonly</span> <span class="token class-name">IRegionManager</span> regionManager<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">DelegateCommand<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> OpenCommand <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">private</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">MainViewModel</span><span class="token punctuation">(</span><span class="token class-name">IRegionManager</span> regionManager<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        OpenCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DelegateCommand<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>Open<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>regionManager <span class="token operator">=</span> regionManager<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">object</span></span> _body<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">object</span></span> Body
    <span class="token punctuation">{</span>
        <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> _body<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">set</span>
        <span class="token punctuation">{</span>
            _body <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
            <span class="token function">RaisePropertyChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Open</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> obj<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 通过IRegionManager接口获取到全局定义的可用区域</span>
        <span class="token comment">// 然后往这个动态区域设置内容，设置内容的方式是通过依赖注入的方式实现的</span>
        regionManager<span class="token punctuation">.</span>Regions<span class="token punctuation">[</span><span class="token string">&quot;ContentRegin&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">RequestNavigate</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后修改页面的绑定</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">Window</span>
    x<span class="token punctuation">:</span>Class<span class="token operator">=</span><span class="token string">&quot;WpfApp2.Views.MainView&quot;</span>
    xmlns<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>
    xmlns<span class="token punctuation">:</span>x<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>
    xmlns<span class="token punctuation">:</span>d<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span>
    xmlns<span class="token punctuation">:</span>local<span class="token operator">=</span><span class="token string">&quot;clr-namespace:WpfApp2&quot;</span>
    xmlns<span class="token punctuation">:</span>mc<span class="token operator">=</span><span class="token string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span>
    xmlns<span class="token punctuation">:</span>prism<span class="token operator">=</span><span class="token string">&quot;http://prismlibrary.com/&quot;</span>
    Title<span class="token operator">=</span><span class="token string">&quot;MainWindow&quot;</span>
    Width<span class="token operator">=</span><span class="token string">&quot;800&quot;</span>
    Height<span class="token operator">=</span><span class="token string">&quot;450&quot;</span>
    prism<span class="token punctuation">:</span>ViewModelLocator<span class="token punctuation">.</span>AutoWireViewModel<span class="token operator">=</span><span class="token string">&quot;True&quot;</span>
    mc<span class="token punctuation">:</span>Ignorable<span class="token operator">=</span><span class="token string">&quot;d&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Grid<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Grid<span class="token punctuation">.</span>RowDefinitions<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">RowDefinition</span> Height<span class="token operator">=</span><span class="token string">&quot;auto&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>RowDefinition <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token punctuation">.</span>RowDefinitions<span class="token operator">&gt;</span>

        <span class="token operator">&lt;</span><span class="token class-name">StackPanel</span> Orientation<span class="token operator">=</span><span class="token string">&quot;Horizontal&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">Button</span>
                Command<span class="token operator">=</span><span class="token string">&quot;{Binding OpenCommand}&quot;</span>
                CommandParameter<span class="token operator">=</span><span class="token string">&quot;ViewA&quot;</span>
                Content<span class="token operator">=</span><span class="token string">&quot;打开模块A&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">Button</span>
                Command<span class="token operator">=</span><span class="token string">&quot;{Binding OpenCommand}&quot;</span>
                CommandParameter<span class="token operator">=</span><span class="token string">&quot;ViewB&quot;</span>
                Content<span class="token operator">=</span><span class="token string">&quot;打开模块B&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">Button</span>
                Command<span class="token operator">=</span><span class="token string">&quot;{Binding OpenCommand}&quot;</span>
                CommandParameter<span class="token operator">=</span><span class="token string">&quot;ViewC&quot;</span>
                Content<span class="token operator">=</span><span class="token string">&quot;打开模块C&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>ContentControl Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;1&quot;</span> prism<span class="token punctuation">:</span>RegionManager<span class="token punctuation">.</span>RegionName<span class="token operator">=</span><span class="token string">&quot;ContentRegin&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Window<span class="token operator">&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过简化OpenCommand的代码来实现了点击按钮展示的逻辑。</p><h3 id="regionmanager-1" tabindex="-1"><a class="header-anchor" href="#regionmanager-1"><span>RegionManager</span></a></h3><p>RegionManager主要实现维护区域集合、提供对区域的访问、合成视图、区域导航、定义区域。</p><h4 id="区域定义" tabindex="-1"><a class="header-anchor" href="#区域定义"><span>区域定义</span></a></h4><p>xaml实现</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">ContentControl</span> prism<span class="token punctuation">:</span>RegionManager<span class="token punctuation">.</span>RegionName<span class="token operator">=</span><span class="token string">&quot;ContentRegion&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>设置区域</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IRegionManager</span> _regionManager<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token function">MainWindowViewModel</span><span class="token punctuation">(</span><span class="token class-name">IRegionManager</span> regionManager<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    _regionManager <span class="token operator">=</span> regionManager<span class="token punctuation">;</span>

    <span class="token comment">// 在TabRegion中注册视图</span>
    _regionManager<span class="token punctuation">.</span><span class="token function">RegisterViewWithRegion</span><span class="token punctuation">(</span><span class="token string">&quot;TabRegion&quot;</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Temp1View</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _regionManager<span class="token punctuation">.</span><span class="token function">RegisterViewWithRegion</span><span class="token punctuation">(</span><span class="token string">&quot;TabRegion&quot;</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Temp2View</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="regionadapter-1" tabindex="-1"><a class="header-anchor" href="#regionadapter-1"><span>RegionAdapter</span></a></h3><p>如果在实际开发工作当中遇到了特殊场景需要而Prism并没有设置对应的RegionAdapter。这时候可以通过继承实现RegionAdapterBase内置对象来扩展一个新的RegionAdapter。 （1）实现一个新的RegionAdapter</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// custom region adapter.</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StackPanelRegionAdapter</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">RegionAdapterBase<span class="token punctuation">&lt;</span>StackPanel<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">StackPanelRegionAdapter</span><span class="token punctuation">(</span><span class="token class-name">IRegionBehaviorFactory</span> regionBehaviorFactory<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>regionBehaviorFactory<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Adapt</span><span class="token punctuation">(</span><span class="token class-name">IRegion</span> region<span class="token punctuation">,</span> <span class="token class-name">StackPanel</span> regionTarget<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//该事件监听往StackPanel添加view时的操作</span>
        region<span class="token punctuation">.</span>Views<span class="token punctuation">.</span>CollectionChanged <span class="token operator">+=</span> <span class="token punctuation">(</span>sender<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//监听到增加操作时则往StackPanel添加Children，枚举出来的操作在后面一段代码中体现</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Action <span class="token operator">==</span> System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Specialized<span class="token punctuation">.</span>NotifyCollectionChangedAction<span class="token punctuation">.</span>Add<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                regionTarget<span class="token punctuation">.</span>Children<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> item <span class="token keyword">in</span> e<span class="token punctuation">.</span>NewItems<span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    regionTarget<span class="token punctuation">.</span>Children<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>item <span class="token keyword">as</span> <span class="token class-name">UIElement</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">IRegion</span> <span class="token function">CreateRegion</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Region</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Summary:</span>
<span class="token comment">//     Describes the action that caused a System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged</span>
<span class="token comment">//     event.</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">NotifyCollectionChangedAction</span>
<span class="token punctuation">{</span>
    <span class="token comment">//</span>
    <span class="token comment">// Summary:</span>
    <span class="token comment">//     An item was added to the collection.</span>
    Add<span class="token punctuation">,</span>
    <span class="token comment">//</span>
    <span class="token comment">// Summary:</span>
    <span class="token comment">//     An item was removed from the collection.</span>
    Remove<span class="token punctuation">,</span>
    <span class="token comment">//</span>
    <span class="token comment">// Summary:</span>
    <span class="token comment">//     An item was replaced in the collection.</span>
    Replace<span class="token punctuation">,</span>
    <span class="token comment">//</span>
    <span class="token comment">// Summary:</span>
    <span class="token comment">//     An item was moved within the collection.</span>
    Move<span class="token punctuation">,</span>
    <span class="token comment">//</span>
    <span class="token comment">// Summary:</span>
    <span class="token comment">//     The contents of the collection changed dramatically.</span>
    Reset
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）在App.cs文件中注册新的RegionAdapter</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">App</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 应用程序启动时创建Shell</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">Window</span> <span class="token function">CreateShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>MainWindow<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterTypes</span><span class="token punctuation">(</span><span class="token class-name">IContainerRegistry</span> containerRegistry<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 配置区域适配</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>regionAdapterMappings<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConfigureRegionAdapterMappings</span><span class="token punctuation">(</span><span class="token class-name">RegionAdapterMappings</span> regionAdapterMappings<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">ConfigureRegionAdapterMappings</span><span class="token punctuation">(</span>regionAdapterMappings<span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token comment">//添加自定义区域适配对象,会自动适配标记上prism:RegionManager.RegionName的容器控件为Region</span>
        regionAdapterMappings<span class="token punctuation">.</span><span class="token function">RegisterMapping</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">StackPanel</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>StackPanelRegionAdapter<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）在xaml中使用</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">StackPanel</span> prism<span class="token punctuation">:</span>RegionManager<span class="token punctuation">.</span>RegionName<span class="token operator">=</span><span class="token string">&quot;StackPanelRegion&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="命令事件" tabindex="-1"><a class="header-anchor" href="#命令事件"><span>命令事件</span></a></h3><p>通过指定一个InvokeCommandAction，然后附加命令到具有所需事件的控件，InvokeCommandAction有下面几个属性</p><ul><li>Command标识调用时要执行的命令。这是必需的。</li><li>AutoEnable确定关联元素是否应根据命令的结果自动启用或禁用CanExecute。这是一个可选字段，默认值为True.</li><li>CommandParameter标识要提供给命令的命令参数。这是个可选的选项。</li><li>TriggerParameterPath标识要解析的事件提供对象中的路径，以标识要用作命令参数的子属性。</li></ul><p>示例如下：记得先引用命名空间，</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">Window</span>
    x<span class="token punctuation">:</span>Class<span class="token operator">=</span><span class="token string">&quot;PrismWpfApp.Views.InvokeCommandWindow&quot;</span>
    xmlns<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>
    xmlns<span class="token punctuation">:</span>x<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>
    xmlns<span class="token punctuation">:</span>d<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span>
    xmlns<span class="token punctuation">:</span>i<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/xaml/behaviors&quot;</span>
    xmlns<span class="token punctuation">:</span>local<span class="token operator">=</span><span class="token string">&quot;clr-namespace:PrismWpfApp.Views&quot;</span>
    xmlns<span class="token punctuation">:</span>mc<span class="token operator">=</span><span class="token string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span>
    xmlns<span class="token punctuation">:</span>prism<span class="token operator">=</span><span class="token string">&quot;http://prismlibrary.com/&quot;</span>
    xmlns<span class="token punctuation">:</span>viewmodels<span class="token operator">=</span><span class="token string">&quot;clr-namespace:PrismWpfApp.ViewModels&quot;</span>
    Title<span class="token operator">=</span><span class="token string">&quot;执行命令&quot;</span>
    Width<span class="token operator">=</span><span class="token string">&quot;800&quot;</span>
    Height<span class="token operator">=</span><span class="token string">&quot;450&quot;</span>
    d<span class="token punctuation">:</span>DataContext<span class="token operator">=</span><span class="token string">&quot;{d:DesignInstance Type=viewmodels:InvokeCommandWindowViewModel}&quot;</span>
    mc<span class="token punctuation">:</span>Ignorable<span class="token operator">=</span><span class="token string">&quot;d&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Grid<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Grid<span class="token punctuation">.</span>RowDefinitions<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">RowDefinition</span> Height<span class="token operator">=</span><span class="token string">&quot;auto&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">RowDefinition</span> Height<span class="token operator">=</span><span class="token string">&quot;auto&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token punctuation">.</span>RowDefinitions<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>ListBox
            Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;0&quot;</span>
            ItemsSource<span class="token operator">=</span><span class="token string">&quot;{Binding Items}&quot;</span>
            SelectionMode<span class="token operator">=</span><span class="token string">&quot;Single&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>i<span class="token punctuation">:</span>Interaction<span class="token punctuation">.</span>Triggers<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>i<span class="token punctuation">:</span><span class="token class-name">EventTrigger</span> EventName<span class="token operator">=</span><span class="token string">&quot;SelectionChanged&quot;</span><span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span>prism<span class="token punctuation">:</span><span class="token class-name">InvokeCommandAction</span> Command<span class="token operator">=</span><span class="token string">&quot;{Binding SelectedCommand}&quot;</span> TriggerParameterPath<span class="token operator">=</span><span class="token string">&quot;AddedItems&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token punctuation">:</span>EventTrigger<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token punctuation">:</span>Interaction<span class="token punctuation">.</span>Triggers<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>ListBox<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>StackPanel Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;1&quot;</span> Orientation<span class="token operator">=</span><span class="token string">&quot;Horizontal&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">TextBlock</span> Text<span class="token operator">=</span><span class="token string">&quot;当前选中的值为：&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">TextBlock</span> Text<span class="token operator">=</span><span class="token string">&quot;{Binding SelectedItemText}&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Window<span class="token operator">&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TriggerParameterPath是对应于EventArgs中的属性路径，比如用于SelectionChanged事件，则对应于SelectionChangedEventArgs的属性的字符串，如果写 TriggerParameterPath=&quot;AddedItems&quot;，则指SelectionChangedEventArgs.AddedItems对象。CommandParameter和TriggerParameterPath不同，它就是直接传过去的参数，可以是简单的字符串，也可以是绑定的数据对象。</p><p>ViewModel代码</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InvokeCommandWindowViewModel</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">BindableBase</span></span>
<span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> _selectedItemText<span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> SelectedItemText
	<span class="token punctuation">{</span>
		<span class="token keyword">get</span> <span class="token operator">=&gt;</span> _selectedItemText<span class="token punctuation">;</span>
		<span class="token keyword">set</span> <span class="token operator">=&gt;</span> <span class="token function">SetProperty</span><span class="token punctuation">(</span><span class="token keyword">ref</span> _selectedItemText<span class="token punctuation">,</span> <span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token return-type class-name">ObservableCollection<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> Items <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token return-type class-name">DelegateCommand<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&gt;</span></span> SelectedCommand <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token function">InvokeCommandWindowViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		SelectedCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DelegateCommand<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>OnItemSelected<span class="token punctuation">)</span><span class="token punctuation">;</span>
		Items <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ObservableCollection<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;李四&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token doc-comment comment">/// 选择操作</span>
	<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
	<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnItemSelected</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> selectedItems<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>selectedItems<span class="token punctuation">?.</span>Length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			SelectedItemText <span class="token operator">=</span> selectedItems<span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">?.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,40),x={href:"https://prismlibrary.com/docs/wpf/interactivity/event-to-command.html",target:"_blank",rel:"noopener noreferrer"},C=n("h3",{id:"消息弹框",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#消息弹框"},[n("span",null,"消息弹框")])],-1),R={href:"https://prismlibrary.com/docs/wpf/dialog-service.html",target:"_blank",rel:"noopener noreferrer"},M=e(`<div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">UserControl</span>
    x<span class="token punctuation">:</span>Class<span class="token operator">=</span><span class="token string">&quot;PrismWpfApp.Views.DialogMsgView&quot;</span>
    xmlns<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>
    xmlns<span class="token punctuation">:</span>x<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>
    xmlns<span class="token punctuation">:</span>d<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span>
    xmlns<span class="token punctuation">:</span>local<span class="token operator">=</span><span class="token string">&quot;clr-namespace:PrismWpfApp.Views&quot;</span>
    xmlns<span class="token punctuation">:</span>mc<span class="token operator">=</span><span class="token string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span>
    xmlns<span class="token punctuation">:</span>prism<span class="token operator">=</span><span class="token string">&quot;http://prismlibrary.com/&quot;</span>
    xmlns<span class="token punctuation">:</span>viewmodels<span class="token operator">=</span><span class="token string">&quot;clr-namespace:PrismWpfApp.ViewModels&quot;</span>
    Width<span class="token operator">=</span><span class="token string">&quot;300&quot;</span>
    Height<span class="token operator">=</span><span class="token string">&quot;150&quot;</span>
    d<span class="token punctuation">:</span>DataContext<span class="token operator">=</span><span class="token string">&quot;{d:DesignInstance Type=viewmodels:DialogMsgViewModel}&quot;</span>
    d<span class="token punctuation">:</span>DesignHeight<span class="token operator">=</span><span class="token string">&quot;450&quot;</span>
    d<span class="token punctuation">:</span>DesignWidth<span class="token operator">=</span><span class="token string">&quot;800&quot;</span>
    mc<span class="token punctuation">:</span>Ignorable<span class="token operator">=</span><span class="token string">&quot;d&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Grid</span> x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;LayoutRoot&quot;</span> Margin<span class="token operator">=</span><span class="token string">&quot;5&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Grid<span class="token punctuation">.</span>RowDefinitions<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>RowDefinition <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">RowDefinition</span> Height<span class="token operator">=</span><span class="token string">&quot;Auto&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token punctuation">.</span>RowDefinitions<span class="token operator">&gt;</span>

        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>  设置消息框样式  <span class="token operator">--</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>prism<span class="token punctuation">:</span>Dialog<span class="token punctuation">.</span>WindowStyle<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">Style</span> TargetType<span class="token operator">=</span><span class="token string">&quot;Window&quot;</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;prism:Dialog.WindowStartupLocation&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;CenterScreen&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;ResizeMode&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;NoResize&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;ShowInTaskbar&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;False&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token class-name">Setter</span> Property<span class="token operator">=</span><span class="token string">&quot;SizeToContent&quot;</span> Value<span class="token operator">=</span><span class="token string">&quot;WidthAndHeight&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>Style<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>prism<span class="token punctuation">:</span>Dialog<span class="token punctuation">.</span>WindowStyle<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>TextBlock
            Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;0&quot;</span>
            HorizontalAlignment<span class="token operator">=</span><span class="token string">&quot;Stretch&quot;</span>
            VerticalAlignment<span class="token operator">=</span><span class="token string">&quot;Stretch&quot;</span>
            Text<span class="token operator">=</span><span class="token string">&quot;{Binding Message}&quot;</span>
            TextWrapping<span class="token operator">=</span><span class="token string">&quot;Wrap&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Button
            Grid<span class="token punctuation">.</span>Row<span class="token operator">=</span><span class="token string">&quot;1&quot;</span>
            Width<span class="token operator">=</span><span class="token string">&quot;75&quot;</span>
            Height<span class="token operator">=</span><span class="token string">&quot;25&quot;</span>
            Margin<span class="token operator">=</span><span class="token string">&quot;0,10,0,0&quot;</span>
            HorizontalAlignment<span class="token operator">=</span><span class="token string">&quot;Right&quot;</span>
            Command<span class="token operator">=</span><span class="token string">&quot;{Binding CloseDialogCommand}&quot;</span>
            CommandParameter<span class="token operator">=</span><span class="token string">&quot;true&quot;</span>
            Content<span class="token operator">=</span><span class="token string">&quot;OK&quot;</span>
            IsDefault<span class="token operator">=</span><span class="token string">&quot;True&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>UserControl<span class="token operator">&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后创建对饮的ViewModel，并继承自：IDialogAware</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DialogMsgViewModel</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">BindableBase</span><span class="token punctuation">,</span> <span class="token class-name">IDialogAware</span></span>
<span class="token punctuation">{</span>
    <span class="token preprocessor property">#<span class="token directive keyword">region</span> 属性</span>
    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> _title<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Title
    <span class="token punctuation">{</span>
        <span class="token keyword">get</span> <span class="token operator">=&gt;</span> _title<span class="token punctuation">;</span>
        <span class="token keyword">set</span>
        <span class="token punctuation">{</span>
            _title <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
            <span class="token function">RaisePropertyChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> _message<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Message
    <span class="token punctuation">{</span>
        <span class="token keyword">get</span> <span class="token operator">=&gt;</span> _message<span class="token punctuation">;</span>
        <span class="token keyword">set</span>
        <span class="token punctuation">{</span>
            _message <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token function">RaisePropertyChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> 
    <span class="token preprocessor property">#<span class="token directive keyword">endregion</span></span>

    <span class="token keyword">public</span> <span class="token return-type class-name">DelegateCommand<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> CloseDialogCommand <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">DialogMsgViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Title <span class="token operator">=</span> <span class="token string">&quot;消息框&quot;</span><span class="token punctuation">;</span>
        CloseDialogCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DelegateCommand<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>CloseDialog<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CloseDialog</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> parameter<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> ButtonResult<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>parameter<span class="token punctuation">.</span><span class="token function">Equals</span><span class="token punctuation">(</span><span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span> StringComparison<span class="token punctuation">.</span>CurrentCultureIgnoreCase<span class="token punctuation">)</span><span class="token punctuation">)</span>
            result <span class="token operator">=</span> ButtonResult<span class="token punctuation">.</span>OK<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            result <span class="token operator">=</span> ButtonResult<span class="token punctuation">.</span>Cancel<span class="token punctuation">;</span>

        <span class="token function">RaiseRequestClose</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">DialogResult</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RaiseRequestClose</span><span class="token punctuation">(</span><span class="token class-name">IDialogResult</span> dialogResult<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        RequestClose<span class="token punctuation">?.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>dialogResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>IDialogResult<span class="token punctuation">&gt;</span></span> RequestClose<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">CanCloseDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnDialogClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnDialogOpened</span><span class="token punctuation">(</span><span class="token class-name">IDialogParameters</span> parameters<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Message <span class="token operator">=</span> parameters<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetValue</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后记得注册该弹框，在RegisterTypes方法</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterDialog</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>DialogMsgView<span class="token punctuation">,</span> DialogMsgViewModel<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后就是使用该弹框了，我们需要在对应页面的ViewModel中注入IDialogService，然后调用它的ShowDialog方法</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> message <span class="token operator">=</span> <span class="token string">&quot;我是弹框的信息&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// 普通的写法</span>
_dialogService<span class="token punctuation">.</span><span class="token function">ShowDialog</span><span class="token punctuation">(</span><span class="token string">&quot;DialogMsgView&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DialogParameters</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;message=</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">message</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> r <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>Result <span class="token operator">==</span> ButtonResult<span class="token punctuation">.</span>None<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Debug<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;返回空结果&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>Result <span class="token operator">==</span> ButtonResult<span class="token punctuation">.</span>OK<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Debug<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;返回ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>Result <span class="token operator">==</span> ButtonResult<span class="token punctuation">.</span>Cancel<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Debug<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;返回取消&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        Debug<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;未处理&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后当触发弹框事件的时候，就会弹出刚才创建的用户控件弹框。</p><p>如果觉得上面弹框的方法每次传递参数多，那么还可以编写扩展方法来简化弹框的操作，编写扩展方法如下</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DialogServiceExtensions</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 显示弹框</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dialogService<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>message<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>callback<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ShowNotification</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IDialogService</span> dialogService<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> message<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>IDialogResult<span class="token punctuation">&gt;</span></span> callback<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        dialogService<span class="token punctuation">.</span><span class="token function">ShowDialog</span><span class="token punctuation">(</span><span class="token string">&quot;DialogMsgView&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DialogParameters</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;message=</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">message</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后调起弹框的方法就可以改写为</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>_dialogService<span class="token punctuation">.</span><span class="token function">ShowNotification</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> r <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>Result <span class="token operator">==</span> ButtonResult<span class="token punctuation">.</span>None<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Debug<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;返回空结果&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>Result <span class="token operator">==</span> ButtonResult<span class="token punctuation">.</span>OK<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Debug<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;返回ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>Result <span class="token operator">==</span> ButtonResult<span class="token punctuation">.</span>Cancel<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Debug<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;返回取消&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        Debug<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;未处理&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="发布订阅" tabindex="-1"><a class="header-anchor" href="#发布订阅"><span>发布订阅</span></a></h3><p>实现页面点击发布消息然后另一个地方进行接收</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">StackPanel</span> Orientation<span class="token operator">=</span><span class="token string">&quot;Horizontal&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Label</span> Content<span class="token operator">=</span><span class="token string">&quot;请输入要发布的内容：&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">TextBox</span>
        x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;sendContent&quot;</span>
        Width<span class="token operator">=</span><span class="token string">&quot;150&quot;</span>
        Margin<span class="token operator">=</span><span class="token string">&quot;10,0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Button</span>
        Command<span class="token operator">=</span><span class="token string">&quot;{Binding SendMsgCommand}&quot;</span>
        CommandParameter<span class="token operator">=</span><span class="token string">&quot;{Binding Path=Text, ElementName=sendContent}&quot;</span>
        Content<span class="token operator">=</span><span class="token string">&quot;发布订阅&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>StackPanel<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应ViewModel写法，注入IEventAggregator</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ViewBViewModel</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">BindableBase</span><span class="token punctuation">,</span> <span class="token class-name">INavigationAware</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IEventAggregator</span> _eventAggregator<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">ViewBViewModel</span><span class="token punctuation">(</span><span class="token class-name">IEventAggregator</span> eventAggregator<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _eventAggregator <span class="token operator">=</span> eventAggregator<span class="token punctuation">;</span>
        SendMsgCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DelegateCommand<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>SendMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">DelegateCommand<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> SendMsgCommand <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 发送消息</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SendMsg</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> msg<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 向messageEvent发布一个消息</span>
        _eventAggregator<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetEvent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>MessageEvent<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Publish</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>MessageEvent内容为</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 消息发布订阅类</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MessageEvent</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">PubSubEvent<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就是接收消息的地方</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">ViewB</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">UserControl</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">ViewB</span><span class="token punctuation">(</span><span class="token class-name">IEventAggregator</span> eventAggregator<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        eventAggregator<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetEvent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>MessageEvent<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;接收到消息 </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">arg</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 取消订阅</span>
        <span class="token comment">//eventAggregator.GetEvent&lt;MessageEvent&gt;().Unsubscribe((arg) =&gt; { });</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,22),A={href:"https://www.cnblogs.com/formula123/p/13912365.html",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/PrismLibrary/Prism-Samples-Wpf",target:"_blank",rel:"noopener noreferrer"},P={href:"https://mp.weixin.qq.com/s/aWcKwiLblqYWWlpbcFWgxA",target:"_blank",rel:"noopener noreferrer"},I={href:"https://www.cnblogs.com/lovexinyi/category/1487153.html",target:"_blank",rel:"noopener noreferrer"};function S(_,T){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[s("Prism是一个用于在 WPF、Xamarin Form、Uno 平台和 WinUI 中构建松散耦合、可维护和可测试的 XAML 应用程序框架。 仓库地址："),n("a",r,[s("https://github.com/PrismLibrary/Prism"),t(a)]),s(" 文档："),n("a",d,[s("https://prismlibrary.com/docs/index.html"),t(a)]),s(" 包中关于wpf的使用："),n("a",k,[s("https://prismlibrary.com/docs/wpf/introduction.html"),t(a)])]),m,n("p",null,[s("资料："),n("a",v,[s("https://prismlibrary.com/docs/event-aggregator.html"),t(a)])]),g,n("p",null,[s("在许多应用程序中，用户可能会在输入或编辑数据的过程中尝试导航。在这些情况下，您可能想询问用户是否要在继续离开页面之前保存或放弃已经输入的数据，或者用户是否要完全取消导航操作。Prism 通过IConfirmNavigationRequest接口支持这些场景。 资料："),n("a",b,[s("https://prismlibrary.com/docs/wpf/region-navigation/confirming-navigation.html"),t(a)])]),h,n("p",null,[s("资料："),n("a",w,[s("https://prismlibrary.com/docs/wpf/region-navigation/controlling-view-lifetime.html"),t(a)])]),y,n("p",null,[s("资料："),n("a",q,[s("https://prismlibrary.com/docs/wpf/region-navigation/navigation-journal.html"),t(a)])]),f,n("p",null,[s("官网资料："),n("a",x,[s("https://prismlibrary.com/docs/wpf/interactivity/event-to-command.html"),t(a)])]),C,n("p",null,[s("资料："),n("a",R,[s("https://prismlibrary.com/docs/wpf/dialog-service.html"),t(a)]),s(" 需要创建一个用户控件，如DialogMsgView")]),M,n("p",null,[s("页面导航："),n("a",A,[s("https://www.cnblogs.com/formula123/p/13912365.html"),t(a)]),s(" 示例仓库："),n("a",V,[s("https://github.com/PrismLibrary/Prism-Samples-Wpf"),t(a)]),s(" (关于该仓库的一点解释："),n("a",P,[s("https://mp.weixin.qq.com/s/aWcKwiLblqYWWlpbcFWgxA"),t(a)]),s(") 系列博客文档："),n("a",I,[s("https://www.cnblogs.com/lovexinyi/category/1487153.html"),t(a)])])])}const N=p(i,[["render",S],["__file","index.html.vue"]]),D=JSON.parse('{"path":"/dotnet/zhuomianchengxu/wpf/mvvmzujian/prism/","title":"说明","lang":"zh-CN","frontmatter":{"title":"说明","lang":"zh-CN","date":"2023-06-04T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"readme","slug":"ygdq11twkqg16kks","docsId":"123455364","description":"概述 Prism是一个用于在 WPF、Xamarin Form、Uno 平台和 WinUI 中构建松散耦合、可维护和可测试的 XAML 应用程序框架。 仓库地址：https://github.com/PrismLibrary/Prism 文档：https://prismlibrary.com/docs/index.html 包中关于wpf的使用：htt...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/zhuomianchengxu/wpf/mvvmzujian/prism/"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"说明"}],["meta",{"property":"og:description","content":"概述 Prism是一个用于在 WPF、Xamarin Form、Uno 平台和 WinUI 中构建松散耦合、可维护和可测试的 XAML 应用程序框架。 仓库地址：https://github.com/PrismLibrary/Prism 文档：https://prismlibrary.com/docs/index.html 包中关于wpf的使用：htt..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-06-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"说明\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-04T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"手动安装","slug":"手动安装","link":"#手动安装","children":[]},{"level":3,"title":"扩展模板安装","slug":"扩展模板安装","link":"#扩展模板安装","children":[]}]},{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[{"level":3,"title":"Region","slug":"region","link":"#region","children":[]},{"level":3,"title":"RegionManager","slug":"regionmanager","link":"#regionmanager","children":[]},{"level":3,"title":"RegionAdapter","slug":"regionadapter","link":"#regionadapter","children":[]}]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"命令","slug":"命令","link":"#命令","children":[{"level":4,"title":"变更通知","slug":"变更通知","link":"#变更通知","children":[]}]},{"level":3,"title":"依赖注入","slug":"依赖注入","link":"#依赖注入","children":[{"level":4,"title":"生命周期","slug":"生命周期","link":"#生命周期","children":[]},{"level":4,"title":"注册瞬时服务","slug":"注册瞬时服务","link":"#注册瞬时服务","children":[]},{"level":4,"title":"注册单例服务","slug":"注册单例服务","link":"#注册单例服务","children":[]},{"level":4,"title":"注册服务实例","slug":"注册服务实例","link":"#注册服务实例","children":[]},{"level":4,"title":"检查服务是否注册","slug":"检查服务是否注册","link":"#检查服务是否注册","children":[]}]},{"level":3,"title":"模块","slug":"模块","link":"#模块","children":[]},{"level":3,"title":"事件聚合器","slug":"事件聚合器","link":"#事件聚合器","children":[{"level":4,"title":"发布事件","slug":"发布事件","link":"#发布事件","children":[]},{"level":4,"title":"订阅事件","slug":"订阅事件","link":"#订阅事件","children":[]}]},{"level":3,"title":"页面定位ViewModel","slug":"页面定位viewmodel","link":"#页面定位viewmodel","children":[{"level":4,"title":"禁止自动定位","slug":"禁止自动定位","link":"#禁止自动定位","children":[]},{"level":4,"title":"手动匹配","slug":"手动匹配","link":"#手动匹配","children":[]}]},{"level":3,"title":"区域导航","slug":"区域导航","link":"#区域导航","children":[{"level":4,"title":"基础区域导航","slug":"基础区域导航","link":"#基础区域导航","children":[{"level":5,"title":"注册/设置默认页面","slug":"注册-设置默认页面","link":"#注册-设置默认页面","children":[]},{"level":5,"title":"将页面加入区域导航","slug":"将页面加入区域导航","link":"#将页面加入区域导航","children":[]},{"level":5,"title":"将页面注册进区域并设置激活和取消","slug":"将页面注册进区域并设置激活和取消","link":"#将页面注册进区域并设置激活和取消","children":[]}]},{"level":4,"title":"传递参数导航","slug":"传递参数导航","link":"#传递参数导航","children":[]},{"level":4,"title":"导航前确认","slug":"导航前确认","link":"#导航前确认","children":[]},{"level":4,"title":"控制视图生命周期","slug":"控制视图生命周期","link":"#控制视图生命周期","children":[]},{"level":4,"title":"导航日志","slug":"导航日志","link":"#导航日志","children":[]},{"level":4,"title":"点击触发事件","slug":"点击触发事件","link":"#点击触发事件","children":[]}]},{"level":3,"title":"RegionManager","slug":"regionmanager-1","link":"#regionmanager-1","children":[{"level":4,"title":"区域定义","slug":"区域定义","link":"#区域定义","children":[]}]},{"level":3,"title":"RegionAdapter","slug":"regionadapter-1","link":"#regionadapter-1","children":[]},{"level":3,"title":"命令事件","slug":"命令事件","link":"#命令事件","children":[]},{"level":3,"title":"消息弹框","slug":"消息弹框","link":"#消息弹框","children":[]},{"level":3,"title":"发布订阅","slug":"发布订阅","link":"#发布订阅","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":19.49,"words":5847},"filePathRelative":"dotnet/zhuomianchengxu/wpf/mvvmzujian/prism/readme.md","localizedDate":"2023年6月4日","excerpt":"<h2>概述</h2>\\n<p>Prism是一个用于在 WPF、Xamarin Form、Uno 平台和 WinUI 中构建松散耦合、可维护和可测试的 XAML 应用程序框架。\\n仓库地址：<a href=\\"https://github.com/PrismLibrary/Prism\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/PrismLibrary/Prism</a>\\n文档：<a href=\\"https://prismlibrary.com/docs/index.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://prismlibrary.com/docs/index.html</a>\\n包中关于wpf的使用：<a href=\\"https://prismlibrary.com/docs/wpf/introduction.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://prismlibrary.com/docs/wpf/introduction.html</a></p>","autoDesc":true}');export{N as comp,D as data};
