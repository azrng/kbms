import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as i,o as n}from"./app-fQkBsvt-.js";const r={};function s(l,e){return n(),a("div",null,e[0]||(e[0]=[i('<h4 id="控制key的长度" tabindex="-1"><a class="header-anchor" href="#控制key的长度"><span>控制key的长度</span></a></h4><p>过长的key名称也会占用过多的内存空间，所以在保证key简单清晰的前提下，尽可能把key定义的短一些。</p><h4 id="避免存储bigkey" tabindex="-1"><a class="header-anchor" href="#避免存储bigkey"><span>避免存储bigkey</span></a></h4><p>避免存储过大的值，建议</p><ul><li>string：大小控制在10kb以下</li><li>list/hash/set/zset：元素数量控制在1万以下</li></ul><h4 id="选择合适的数据类型" tabindex="-1"><a class="header-anchor" href="#选择合适的数据类型"><span>选择合适的数据类型</span></a></h4><p>字符串和数值存储为string类型<br> hasg、zset存储的元素数量控制在转换阈值以下，以压缩列表存储</p><h4 id="把redis当作缓存使用" tabindex="-1"><a class="header-anchor" href="#把redis当作缓存使用"><span>把redis当作缓存使用</span></a></h4><p>因为存储在内存中，这就意味着资源也是有限的，你在使用的时候要记住把他当作缓存来使用，而不是把他当作一个数据库来使用，写入到缓存中的数据，应该尽可能的都设置过期时间。</p><h4 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h4>',10)]))}const p=t(r,[["render",s],["__file","neicunyouhua.html.vue"]]),c=JSON.parse('{"path":"/dataBase/redis/jianchanjieshao/neicunyouhua.html","title":"内存优化","lang":"zh-CN","frontmatter":{"title":"内存优化","lang":"zh-CN","date":"2021-05-14T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"filename":"neicunyouhua","slug":"gzac7g","docsId":"32429683","description":"控制key的长度 过长的key名称也会占用过多的内存空间，所以在保证key简单清晰的前提下，尽可能把key定义的短一些。 避免存储bigkey 避免存储过大的值，建议 string：大小控制在10kb以下 list/hash/set/zset：元素数量控制在1万以下 选择合适的数据类型 字符串和数值存储为string类型 hasg、zset存储的元素数...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/redis/jianchanjieshao/neicunyouhua.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"内存优化"}],["meta",{"property":"og:description","content":"控制key的长度 过长的key名称也会占用过多的内存空间，所以在保证key简单清晰的前提下，尽可能把key定义的短一些。 避免存储bigkey 避免存储过大的值，建议 string：大小控制在10kb以下 list/hash/set/zset：元素数量控制在1万以下 选择合适的数据类型 字符串和数值存储为string类型 hasg、zset存储的元素数..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-23T15:53:24.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2021-05-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-23T15:53:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"内存优化\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-05-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-23T15:53:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":4,"title":"控制key的长度","slug":"控制key的长度","link":"#控制key的长度","children":[]},{"level":4,"title":"避免存储bigkey","slug":"避免存储bigkey","link":"#避免存储bigkey","children":[]},{"level":4,"title":"选择合适的数据类型","slug":"选择合适的数据类型","link":"#选择合适的数据类型","children":[]},{"level":4,"title":"把redis当作缓存使用","slug":"把redis当作缓存使用","link":"#把redis当作缓存使用","children":[]},{"level":4,"title":"","slug":"","link":"#","children":[]}],"git":{"createdTime":1695484404000,"updatedTime":1695484404000,"contributors":[{"name":"azrng","username":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.81,"words":242},"filePathRelative":"dataBase/redis/jianchanjieshao/neicunyouhua.md","localizedDate":"2021年5月14日","excerpt":"<h4>控制key的长度</h4>\\n<p>过长的key名称也会占用过多的内存空间，所以在保证key简单清晰的前提下，尽可能把key定义的短一些。</p>\\n<h4>避免存储bigkey</h4>\\n<p>避免存储过大的值，建议</p>\\n<ul>\\n<li>string：大小控制在10kb以下</li>\\n<li>list/hash/set/zset：元素数量控制在1万以下</li>\\n</ul>\\n<h4>选择合适的数据类型</h4>\\n<p>字符串和数值存储为string类型<br>\\nhasg、zset存储的元素数量控制在转换阈值以下，以压缩列表存储</p>\\n<h4>把redis当作缓存使用</h4>\\n<p>因为存储在内存中，这就意味着资源也是有限的，你在使用的时候要记住把他当作缓存来使用，而不是把他当作一个数据库来使用，写入到缓存中的数据，应该尽可能的都设置过期时间。</p>","autoDesc":true}');export{p as comp,c as data};
