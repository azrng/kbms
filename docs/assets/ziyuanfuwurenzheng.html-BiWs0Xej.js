import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as t}from"./app-D8HBJYTp.js";const e={},o=t(`<p>通过组件JwtBearer</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.AspNetCore.Authentication.JwtBearer&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;5.0.6&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>具体代码</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//JwtSecurityTokenHandler.DefaultMapInboundClaims = false;</span>
<span class="token doc-comment comment">////关闭默认映射，否则它可能修改从授权服务返回的各种claim属性</span>
<span class="token comment">//JwtSecurityTokenHandler.DefaultInboundClaimTypeMap.Clear();</span>

<span class="token comment">// prevent from mapping &quot;sub&quot; claim to nameidentifier.</span>
JwtSecurityTokenHandler<span class="token punctuation">.</span>DefaultInboundClaimTypeMap<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span><span class="token string">&quot;sub&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> authority <span class="token operator">=</span> <span class="token string">&quot;http://localhost:5010&quot;</span><span class="token punctuation">;</span>
services<span class="token punctuation">.</span><span class="token function">AddAuthentication</span><span class="token punctuation">(</span><span class="token string">&quot;Bearer&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">AddJwtBearer</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span> <span class="token comment">//为授权服务器注册为token的处理人，即在本API程序中设计到token的处理</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//移交给指定服务器（ids4）进行处理</span>
        options<span class="token punctuation">.</span>Authority <span class="token operator">=</span> authority<span class="token punctuation">;</span>
        options<span class="token punctuation">.</span>RequireHttpsMetadata <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        options<span class="token punctuation">.</span>Audience <span class="token operator">=</span> <span class="token string">&quot;userResource&quot;</span><span class="token punctuation">;</span>

        options<span class="token punctuation">.</span>BackchannelHttpHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpClientHandler</span>
        <span class="token punctuation">{</span>
            ServerCertificateCustomValidationCallback <span class="token operator">=</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> __<span class="token punctuation">,</span> ___<span class="token punctuation">,</span> ____<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
         optins<span class="token punctuation">.</span>SaveTokens <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//用于在cookie中保留来自identityserver的令牌</span>
        <span class="token comment">//显示[PII is hidden]占位符隐藏的信息：</span>
        IdentityModelEventSource<span class="token punctuation">.</span>ShowPII <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//允许检查客户端请求的访问令牌中是否存在作用域的代码</span>
services<span class="token punctuation">.</span><span class="token function">AddAuthorization</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token comment">//客户端Scope中包含userScope才能访问</span>
    options<span class="token punctuation">.</span><span class="token function">AddPolicy</span><span class="token punctuation">(</span><span class="token string">&quot;userScope&quot;</span><span class="token punctuation">,</span> policy <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        policy<span class="token punctuation">.</span><span class="token function">RequireAuthenticatedUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        policy<span class="token punctuation">.</span><span class="token function">RequireClaim</span><span class="token punctuation">(</span><span class="token string">&quot;scope&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;userScope&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">////客户端Scope中包含orderScope才能访问</span>
    options<span class="token punctuation">.</span><span class="token function">AddPolicy</span><span class="token punctuation">(</span><span class="token string">&quot;orderScope&quot;</span><span class="token punctuation">,</span> policy <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        policy<span class="token punctuation">.</span><span class="token function">RequireAuthenticatedUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        policy<span class="token punctuation">.</span><span class="token function">RequireClaim</span><span class="token punctuation">(</span><span class="token string">&quot;scope&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;orderScope&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另一种</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>JwtSecurityTokenHandler<span class="token punctuation">.</span>DefaultMapInboundClaims <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token comment">//关闭默认映射，否则它可能修改从授权服务返回的各种claim属性</span>
JwtSecurityTokenHandler<span class="token punctuation">.</span>DefaultInboundClaimTypeMap<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> identityService <span class="token operator">=</span> Configuration<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetValue</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;Config:IdentityService&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//将身份验证服务添加到容器</span>
services<span class="token punctuation">.</span><span class="token function">AddAuthentication</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token comment">// 客户端应用设置使用&quot;Cookies&quot;进行认证</span>
    options<span class="token punctuation">.</span>DefaultScheme <span class="token operator">=</span> CookieAuthenticationDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">;</span>
    <span class="token comment">// identityserver4设置使用&quot;oidc&quot;进行认证  用户登录时候使用openid connect协议</span>
    options<span class="token punctuation">.</span>DefaultChallengeScheme <span class="token operator">=</span> OpenIdConnectDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddCookie</span><span class="token punctuation">(</span>CookieAuthenticationDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">)</span>
<span class="token comment">//用于配置执行openid connect协议的处理程序</span>
<span class="token punctuation">.</span><span class="token function">AddOpenIdConnect</span><span class="token punctuation">(</span>OpenIdConnectDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">,</span> optins <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    optins<span class="token punctuation">.</span>SignInScheme <span class="token operator">=</span> CookieAuthenticationDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">;</span>
    optins<span class="token punctuation">.</span>Authority <span class="token operator">=</span> identityService<span class="token punctuation">;</span><span class="token comment">//信任的认证地址</span>

    optins<span class="token punctuation">.</span>ClientId <span class="token operator">=</span> <span class="token string">&quot;ClientMvc&quot;</span><span class="token punctuation">;</span><span class="token comment">//识别客户端</span>
                                    <span class="token comment">// optins.ClientSecret = &quot;secret&quot;;</span>
                                    <span class="token comment">//optins.ResponseType = &quot;code&quot;;</span>
    optins<span class="token punctuation">.</span>RequireHttpsMetadata <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">//如果不使用https，那么就需要配置这个</span>

    optins<span class="token punctuation">.</span>SaveTokens <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//用于在cookie中保留来自identityserver的令牌</span>

    <span class="token comment">//指定客户端引用程序需要访问的范围并设置选项</span>
    <span class="token comment">// optins.Scope.Add(&quot;profile&quot;);</span>
    <span class="token comment">//optins.GetClaimsFromUserInfoEndpoint = true;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),p=[o];function c(i,l){return s(),a("div",null,p)}const d=n(e,[["render",c],["__file","ziyuanfuwurenzheng.html.vue"]]),k=JSON.parse('{"path":"/middleware/authorize/identityserver4/ziyuanfuwurenzheng.html","title":"资源服务认证","lang":"zh-CN","frontmatter":{"title":"资源服务认证","lang":"zh-CN","date":"2022-05-02T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"ziyuanfuwurenzheng","slug":"tte3g1","docsId":"75727432","description":"通过组件JwtBearer 具体代码 另一种","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/authorize/identityserver4/ziyuanfuwurenzheng.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"资源服务认证"}],["meta",{"property":"og:description","content":"通过组件JwtBearer 具体代码 另一种"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-16T05:03:06.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-05-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-16T05:03:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"资源服务认证\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-02T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-16T05:03:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[],"git":{"createdTime":1697724028000,"updatedTime":1708059786000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.53,"words":458},"filePathRelative":"middleware/authorize/identityserver4/ziyuanfuwurenzheng.md","localizedDate":"2022年5月2日","excerpt":"<p>通过组件JwtBearer</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">PackageReference</span> Include<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"Microsoft.AspNetCore.Authentication.JwtBearer\\"</span> Version<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"5.0.6\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,k as data};
