import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as t,c as p,b as n,e as o,f as c,d as i}from"./app-Bfb6-vFH.js";const l="/kbms/common/1626948389388-b2de3df1-40c7-45f6-a6ed-5976825f714f.png",r="/kbms/common/1626952113091-4d9d236a-0d4a-4fdc-9ed4-6e44c6b5f6f9.png",u={},d=i(`<h2 id="开篇语" tabindex="-1"><a class="header-anchor" href="#开篇语"><span>开篇语</span></a></h2><p>在给其他团队的同事提供接口的时候，因为接口返回参数是他们定义的，但是他们定义的成员名称我又不习惯，这个时候我只能去修改成员的名称。修改后发现swagger显示的信息和返回的不一致，这我都懵逼了。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>我的测试代码如下，使用的是Newtonsoft.Json的Json解析器 ConfigureServices代码</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token function">AddControllers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddNewtonsoftJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>控制器</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfo</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> aaaa <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">JsonProperty</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Name&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span> <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> bbbb <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">JsonIgnore</span></span><span class="token punctuation">]</span> <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ddd <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name">UserInfo</span> <span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span>aaaa <span class="token operator">=</span> <span class="token string">&quot;1111&quot;</span><span class="token punctuation">,</span> bbbb <span class="token operator">=</span> <span class="token string">&quot;222&quot;</span><span class="token punctuation">,</span> ddd <span class="token operator">=</span> <span class="token string">&quot;333&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>展示效果 <img src="`+l+`" alt="image.png" loading="lazy"> 这个时候肯定swagger哪里配置我没有设置(毕竟这么多人用，这种问题肯定早就发现了)，经过搜索后发现一个包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>Swashbuckle<span class="token punctuation">.</span>AspNetCore<span class="token punctuation">.</span>Newtonsoft
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>引用该包后需要增加一个配置在services.AddSwaggerGen()下面</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token function">AddSwaggerGenNewtonsoftSupport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重新运行项目，swagger显示的ui已经修改正确 <img src="`+r+`" alt="image.png" loading="lazy"> 这次我也测试了使用默认的System.Text.Json组件，和Newtonsoft.Json不同的是想修改成员的名称是这样子的</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfo</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> aaaa <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">JsonPropertyName</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span> <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> bbbb <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">JsonIgnore</span></span><span class="token punctuation">]</span> <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ddd <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样子也不用单独做配置，也不需要引用另外的组件就可以实现效果。</p><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2>`,15),k={href:"https://github.com/domaindrivendev/Swashbuckle.AspNetCore",target:"_blank",rel:"noopener noreferrer"};function m(g,h){const s=e("ExternalLinkIcon");return t(),p("div",null,[d,n("blockquote",null,[n("p",null,[n("a",k,[o("https://github.com/domaindrivendev/Swashbuckle.AspNetCore"),c(s)])])])])}const y=a(u,[["render",m],["__file","fanhuileimingchenyingshe.html.vue"]]),f=JSON.parse('{"path":"/dotnet/api/swagger/tazhan/fanhuileimingchenyingshe.html","title":"返回类名称映射","lang":"zh-CN","frontmatter":{"title":"返回类名称映射","lang":"zh-CN","date":"2023-04-12T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"fanhuileimingchenyingshe","slug":"rdx8xv","docsId":"49574404","description":"开篇语 在给其他团队的同事提供接口的时候，因为接口返回参数是他们定义的，但是他们定义的成员名称我又不习惯，这个时候我只能去修改成员的名称。修改后发现swagger显示的信息和返回的不一致，这我都懵逼了。 操作 我的测试代码如下，使用的是Newtonsoft.Json的Json解析器 ConfigureServices代码 控制器 展示效果 image....","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/api/swagger/tazhan/fanhuileimingchenyingshe.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"返回类名称映射"}],["meta",{"property":"og:description","content":"开篇语 在给其他团队的同事提供接口的时候，因为接口返回参数是他们定义的，但是他们定义的成员名称我又不习惯，这个时候我只能去修改成员的名称。修改后发现swagger显示的信息和返回的不一致，这我都懵逼了。 操作 我的测试代码如下，使用的是Newtonsoft.Json的Json解析器 ConfigureServices代码 控制器 展示效果 image...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1626948389388-b2de3df1-40c7-45f6-a6ed-5976825f714f.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-04-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"返回类名称映射\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1626948389388-b2de3df1-40c7-45f6-a6ed-5976825f714f.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1626952113091-4d9d236a-0d4a-4fdc-9ed4-6e44c6b5f6f9.png\\"],\\"datePublished\\":\\"2023-04-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"开篇语","slug":"开篇语","link":"#开篇语","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.25,"words":376},"filePathRelative":"dotnet/api/swagger/tazhan/fanhuileimingchenyingshe.md","localizedDate":"2023年4月12日","excerpt":"<h2>开篇语</h2>\\n<p>在给其他团队的同事提供接口的时候，因为接口返回参数是他们定义的，但是他们定义的成员名称我又不习惯，这个时候我只能去修改成员的名称。修改后发现swagger显示的信息和返回的不一致，这我都懵逼了。</p>\\n<h2>操作</h2>\\n<p>我的测试代码如下，使用的是Newtonsoft.Json的Json解析器\\nConfigureServices代码</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code>services<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AddControllers</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AddNewtonsoftJson</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{y as comp,f as data};
