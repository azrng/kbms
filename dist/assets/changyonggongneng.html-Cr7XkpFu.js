import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-vSdX8vi3.js";const p={},e=t(`<h2 id="获取程序集配置" tabindex="-1"><a class="header-anchor" href="#获取程序集配置"><span>获取程序集配置</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">// 获取版本号</span>
<span class="token class-name"><span class="token keyword">var</span></span> ver <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>AssemblyFileVersionAttribute<span class="token punctuation">)</span>Assembly<span class="token punctuation">.</span><span class="token function">GetExecutingAssembly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetCustomAttributes</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">AssemblyFileVersionAttribute</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">?.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">?.</span>Version<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>ver <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ver <span class="token operator">=</span> Assembly<span class="token punctuation">.</span><span class="token function">GetExecutingAssembly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">?.</span>Version<span class="token punctuation">?.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="跳转打开外链" tabindex="-1"><a class="header-anchor" href="#跳转打开外链"><span>跳转打开外链</span></a></h2><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code> System.Diagnostics.Process.Start(&quot;http<span class="token punctuation">:</span>//www.mycodes.net&quot;);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="上传文件" tabindex="-1"><a class="header-anchor" href="#上传文件"><span>上传文件</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name">SaveFileDialog</span> saveDia <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SaveFileDialog</span>
<span class="token punctuation">{</span>
    Filter <span class="token operator">=</span> doc<span class="token punctuation">.</span>Filter<span class="token punctuation">,</span>
    Title <span class="token operator">=</span> <span class="token string">&quot;另存文件为&quot;</span><span class="token punctuation">,</span>
    CheckPathExists <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    AddExtension <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    AutoUpgradeEnabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    DefaultExt <span class="token operator">=</span> doc<span class="token punctuation">.</span>Ext<span class="token punctuation">,</span>
    InitialDirectory <span class="token operator">=</span> Environment<span class="token punctuation">.</span><span class="token function">GetFolderPath</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span>SpecialFolder<span class="token punctuation">.</span>Desktop<span class="token punctuation">)</span><span class="token punctuation">,</span>
    OverwritePrompt <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    ValidateNames <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    FileName <span class="token operator">=</span> doc<span class="token punctuation">.</span>Dto<span class="token punctuation">.</span>DBName <span class="token operator">+</span> <span class="token string">&quot;表结构信息&quot;</span> <span class="token operator">+</span> doc<span class="token punctuation">.</span>Ext
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> diaResult <span class="token operator">=</span> saveDia<span class="token punctuation">.</span><span class="token function">ShowDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>diaResult <span class="token operator">==</span> DialogResult<span class="token punctuation">.</span>OK<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">try</span>
	<span class="token punctuation">{</span>
		doc<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span>saveDia<span class="token punctuation">.</span>FileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		LogFactory<span class="token punctuation">.</span><span class="token function">WriteErrorLog</span><span class="token punctuation">(</span><span class="token string">&quot;tsbBuild_Click&quot;</span> <span class="token operator">+</span> ex<span class="token punctuation">.</span>Message <span class="token operator">+</span> <span class="token string">&quot;  &quot;</span> <span class="token operator">+</span> saveDia<span class="token punctuation">.</span>FileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="是否安装某个软件" tabindex="-1"><a class="header-anchor" href="#是否安装某个软件"><span>是否安装某个软件</span></a></h2><p>检测是否安装并返回卸载地址</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// windows 操作</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">WindowsHardwareOperation</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 检测是否安装某个软件，并返回软件的卸载安装路径</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>softName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>str_exe<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>installPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">CheckInstall</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> softName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> str_exe<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">string</span></span> installPath<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//即时刷新注册表</span>
        <span class="token function">SHChangeNotify</span><span class="token punctuation">(</span><span class="token number">0x8000000</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">,</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">)</span><span class="token punctuation">;</span>

        installPath <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> isFind <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> uninstallNode <span class="token operator">=</span> Registry<span class="token punctuation">.</span>LocalMachine<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">@&quot;SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>uninstallNode <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//LocalMachine_64</span>
            <span class="token keyword">using</span> <span class="token punctuation">(</span>uninstallNode<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> subKeyName <span class="token keyword">in</span> uninstallNode<span class="token punctuation">.</span><span class="token function">GetSubKeyNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> subKey <span class="token operator">=</span> uninstallNode<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span>subKeyName<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token class-name"><span class="token keyword">var</span></span> displayName <span class="token operator">=</span> <span class="token punctuation">(</span>subKey<span class="token punctuation">?.</span><span class="token function">GetValue</span><span class="token punctuation">(</span><span class="token string">&quot;DisplayName&quot;</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrWhiteSpace</span><span class="token punctuation">(</span>displayName<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token keyword">continue</span><span class="token punctuation">;</span>

                    <span class="token comment">// 卸载路径</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> path <span class="token operator">=</span> <span class="token punctuation">(</span>subKey<span class="token punctuation">.</span><span class="token function">GetValue</span><span class="token punctuation">(</span><span class="token string">&quot;UninstallString&quot;</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;文件</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">displayName</span><span class="token punctuation">}</span></span><span class="token string"> 卸载路径</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">path</span><span class="token punctuation">}</span></span><span class="token string"> &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>displayName<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>softName<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrWhiteSpace</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        installPath <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>Path<span class="token punctuation">.</span><span class="token function">GetDirectoryName</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">,</span> str_exe<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>File<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>installPath<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>
                            isFind <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isFind<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//LocalMachine_32</span>
            uninstallNode <span class="token operator">=</span> Registry<span class="token punctuation">.</span>LocalMachine<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">@&quot;SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">using</span> <span class="token punctuation">(</span>uninstallNode<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> subKeyName <span class="token keyword">in</span> uninstallNode<span class="token punctuation">.</span><span class="token function">GetSubKeyNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> subKey <span class="token operator">=</span> uninstallNode<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span>subKeyName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> displayName <span class="token operator">=</span> <span class="token punctuation">(</span>subKey<span class="token punctuation">.</span><span class="token function">GetValue</span><span class="token punctuation">(</span><span class="token string">&quot;DisplayName&quot;</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> path <span class="token operator">=</span> <span class="token punctuation">(</span>subKey<span class="token punctuation">.</span><span class="token function">GetValue</span><span class="token punctuation">(</span><span class="token string">&quot;UninstallString&quot;</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>displayName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>displayName<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>softName<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrWhiteSpace</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        installPath <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>Path<span class="token punctuation">.</span><span class="token function">GetDirectoryName</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">,</span> str_exe<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>File<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>installPath<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>
                            isFind <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> isFind<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;shell32.dll&quot;</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SHChangeNotify</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> wEventId<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">uint</span></span> uFlags<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> dwItem1<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> dwItem2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回是否安装并返回安装地址</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// windows 操作</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">WindowsHardwareOperation</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 检测是否安装某个软件，并返回软件的卸载安装路径</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>softName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>软件名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>strExe<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>安装目录下启动服务地址<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>installPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">CheckInstall</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> softName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> strExe<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">string</span></span> installPath<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//即时刷新注册表</span>
        <span class="token function">SHChangeNotify</span><span class="token punctuation">(</span><span class="token number">0x8000000</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">,</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">)</span><span class="token punctuation">;</span>

        installPath <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> isFind <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> uninstallNode <span class="token operator">=</span> Registry<span class="token punctuation">.</span>LocalMachine<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">@&quot;SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>uninstallNode <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//LocalMachine_64</span>
            <span class="token keyword">using</span> <span class="token punctuation">(</span>uninstallNode<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> subKeyName <span class="token keyword">in</span> uninstallNode<span class="token punctuation">.</span><span class="token function">GetSubKeyNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> subKey <span class="token operator">=</span> uninstallNode<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span>subKeyName<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token class-name"><span class="token keyword">var</span></span> displayName <span class="token operator">=</span> <span class="token punctuation">(</span>subKey<span class="token punctuation">?.</span><span class="token function">GetValue</span><span class="token punctuation">(</span><span class="token string">&quot;DisplayName&quot;</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrWhiteSpace</span><span class="token punctuation">(</span>displayName<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token keyword">continue</span><span class="token punctuation">;</span>

                    <span class="token comment">// 安装路径</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> path <span class="token operator">=</span> <span class="token punctuation">(</span>subKey<span class="token punctuation">.</span><span class="token function">GetValue</span><span class="token punctuation">(</span><span class="token string">&quot;InstallLocation&quot;</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//Console.WriteLine($&quot;文件{displayName} 路径{path} &quot;);</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>displayName<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>softName<span class="token punctuation">,</span> StringComparison<span class="token punctuation">.</span>OrdinalIgnoreCase<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrWhiteSpace</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        installPath <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>Path<span class="token punctuation">.</span><span class="token function">GetDirectoryName</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">,</span> strExe<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>File<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>installPath<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>
                            isFind <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isFind<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//LocalMachine_32</span>
            uninstallNode <span class="token operator">=</span> Registry<span class="token punctuation">.</span>LocalMachine<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">@&quot;SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">using</span> <span class="token punctuation">(</span>uninstallNode<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> subKeyName <span class="token keyword">in</span> uninstallNode<span class="token punctuation">.</span><span class="token function">GetSubKeyNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> subKey <span class="token operator">=</span> uninstallNode<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span>subKeyName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> displayName <span class="token operator">=</span> <span class="token punctuation">(</span>subKey<span class="token punctuation">.</span><span class="token function">GetValue</span><span class="token punctuation">(</span><span class="token string">&quot;DisplayName&quot;</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> path <span class="token operator">=</span> <span class="token punctuation">(</span>subKey<span class="token punctuation">.</span><span class="token function">GetValue</span><span class="token punctuation">(</span><span class="token string">&quot;InstallLocation&quot;</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//Console.WriteLine(displayName);</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>displayName<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>softName<span class="token punctuation">,</span> StringComparison<span class="token punctuation">.</span>OrdinalIgnoreCase<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrWhiteSpace</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        installPath <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>Path<span class="token punctuation">.</span><span class="token function">GetDirectoryName</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">,</span> strExe<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>File<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>installPath<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>
                            isFind <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> isFind<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;shell32.dll&quot;</span><span class="token punctuation">,</span> CharSet <span class="token operator">=</span> CharSet<span class="token punctuation">.</span>Auto<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SHChangeNotify</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> wEventId<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">uint</span></span> uFlags<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> dwItem1<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> dwItem2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>WindowsHardwareOperation<span class="token punctuation">.</span><span class="token function">CheckInstall</span><span class="token punctuation">(</span><span class="token string">&quot;Tim&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bin\\\\QQScLauncher.exe&quot;</span><span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">var</span></span> aa<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="自定义后缀文件绑定exe启动程序打开" tabindex="-1"><a class="header-anchor" href="#自定义后缀文件绑定exe启动程序打开"><span>自定义后缀文件绑定exe启动程序打开</span></a></h2><ul><li>实现：修改注册表</li><li>绑定class.cs如下</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Linq</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Win32</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">ALO_Platform</span>
<span class="token punctuation">{</span>
    <span class="token keyword">class</span> <span class="token class-name">FileHelper</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterFileType</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> typeName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> fileType<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> fileContent<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> app<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> ico<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//工具启动路径</span>
            <span class="token class-name"><span class="token keyword">string</span></span> toolPath <span class="token operator">=</span> app<span class="token punctuation">;</span>

            <span class="token class-name"><span class="token keyword">string</span></span> extension <span class="token operator">=</span> typeName<span class="token punctuation">;</span>

            <span class="token comment">//fileType = &quot;自定义文件类型&quot;;</span>

            <span class="token comment">//fileContent = &quot;AAAA&quot;;</span>
            <span class="token comment">//获取信息</span>
            <span class="token class-name">RegistryKey</span> registryKey <span class="token operator">=</span> Registry<span class="token punctuation">.</span>ClassesRoot<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span>extension<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>registryKey <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">try</span>
                <span class="token punctuation">{</span>
                    <span class="token class-name">RegistryKey</span> _Regkey <span class="token operator">=</span> Registry<span class="token punctuation">.</span>ClassesRoot<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token class-name">RegistryKey</span> _VRPkey <span class="token operator">=</span> _Regkey<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span>extension<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>_VRPkey <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> _Regkey<span class="token punctuation">.</span><span class="token function">DeleteSubKeyTree</span><span class="token punctuation">(</span>extension<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>_VRPkey <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> _Regkey<span class="token punctuation">.</span><span class="token function">DeleteSubKeyTree</span><span class="token punctuation">(</span><span class="token string">&quot;Exec&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                   
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>registryKey <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> registryKey<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> registryKey<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;open&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                registryKey<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;open&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;command&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">var</span></span> varSub <span class="token operator">=</span> registryKey<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;open&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;command&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> varValue <span class="token operator">=</span> varSub<span class="token punctuation">.</span><span class="token function">GetValue</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">Equals</span><span class="token punctuation">(</span>varValue<span class="token punctuation">,</span> toolPath <span class="token operator">+</span> <span class="token string">&quot; \\&quot;%1\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token comment">//文件注册</span>
            registryKey <span class="token operator">=</span> Registry<span class="token punctuation">.</span>ClassesRoot<span class="token punctuation">.</span><span class="token function">CreateSubKey</span><span class="token punctuation">(</span>extension<span class="token punctuation">)</span><span class="token punctuation">;</span>
            registryKey<span class="token punctuation">.</span><span class="token function">SetValue</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> fileType<span class="token punctuation">)</span><span class="token punctuation">;</span>
            registryKey<span class="token punctuation">.</span><span class="token function">SetValue</span><span class="token punctuation">(</span><span class="token string">&quot;Content Type&quot;</span><span class="token punctuation">,</span> fileContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//设置默认图标</span>
            <span class="token class-name">RegistryKey</span> iconKey <span class="token operator">=</span> registryKey<span class="token punctuation">.</span><span class="token function">CreateSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;DefaultIcon&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            iconKey<span class="token punctuation">.</span><span class="token function">SetValue</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> Application<span class="token punctuation">.</span>StartupPath <span class="token operator">+</span> <span class="token interpolation-string"><span class="token string">$&quot;\\\\</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">ico</span><span class="token punctuation">}</span></span><span class="token string">.ico&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            iconKey<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//设置默认打开程序路径</span>
            registryKey <span class="token operator">=</span> registryKey<span class="token punctuation">.</span><span class="token function">CreateSubKey</span><span class="token punctuation">(</span><span class="token string">&quot;shell\\\\open\\\\command&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            registryKey<span class="token punctuation">.</span><span class="token function">SetValue</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> toolPath <span class="token operator">+</span> <span class="token string">&quot; \\&quot;%1\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//关闭</span>
            registryKey<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token function">SHChangeNotify</span><span class="token punctuation">(</span><span class="token number">0x8000000</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">,</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;shell32.dll&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SHChangeNotify</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">uint</span></span> wEventId<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">uint</span></span> uFlags<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> dwItem1<span class="token punctuation">,</span> <span class="token class-name">IntPtr</span> dwItem2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>FileHelper<span class="token punctuation">.</span><span class="token function">RegisterFileType</span><span class="token punctuation">(</span><span class="token string">&quot;.dfx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;资源文件&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.DFX&quot;</span><span class="token punctuation">,</span>
                            System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Application<span class="token punctuation">.</span>ExecutablePath<span class="token punctuation">,</span> <span class="token string">&quot;app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="获取打开的所有窗口标题" tabindex="-1"><a class="header-anchor" href="#获取打开的所有窗口标题"><span>获取打开的所有窗口标题</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 包含枚举当前用户空间下所有窗口的方法。</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WindowEnumerator</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 查找当前用户空间下所有符合条件的窗口。如果不指定条件，将仅查找可见窗口。</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>过滤窗口的条件。如果设置为 null，将仅查找可见窗口。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span>找到的所有窗口信息。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IReadOnlyList<span class="token punctuation">&lt;</span>WindowInfo<span class="token punctuation">&gt;</span></span> <span class="token function">FindAll</span><span class="token punctuation">(</span><span class="token class-name">Predicate<span class="token punctuation">&lt;</span>WindowInfo<span class="token punctuation">&gt;</span></span> match <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> windowList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>WindowInfo<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">EnumWindows</span><span class="token punctuation">(</span>OnWindowEnum<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> windowList<span class="token punctuation">.</span><span class="token function">FindAll</span><span class="token punctuation">(</span>match <span class="token operator">??</span> DefaultPredicate<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">OnWindowEnum</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hWnd<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> lparam<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// 仅查找顶层窗口。</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">GetParent</span><span class="token punctuation">(</span>hWnd<span class="token punctuation">)</span> <span class="token operator">==</span> IntPtr<span class="token punctuation">.</span>Zero<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token comment">// 获取窗口类名。</span>
                <span class="token class-name"><span class="token keyword">var</span></span> lpString <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">GetClassName</span><span class="token punctuation">(</span>hWnd<span class="token punctuation">,</span> lpString<span class="token punctuation">,</span> lpString<span class="token punctuation">.</span>Capacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> className <span class="token operator">=</span> lpString<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 获取窗口标题。</span>
                <span class="token class-name"><span class="token keyword">var</span></span> lptrString <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">GetWindowText</span><span class="token punctuation">(</span>hWnd<span class="token punctuation">,</span> lptrString<span class="token punctuation">,</span> lptrString<span class="token punctuation">.</span>Capacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> title <span class="token operator">=</span> lptrString<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 获取窗口可见性。</span>
                <span class="token class-name"><span class="token keyword">var</span></span> isVisible <span class="token operator">=</span> <span class="token function">IsWindowVisible</span><span class="token punctuation">(</span>hWnd<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 获取窗口位置和尺寸。</span>
                <span class="token class-name">LPRECT</span> rect <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">;</span>
                <span class="token function">GetWindowRect</span><span class="token punctuation">(</span>hWnd<span class="token punctuation">,</span> <span class="token keyword">ref</span> rect<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> bounds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Rectangle</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>Left<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>Top<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>Right <span class="token operator">-</span> rect<span class="token punctuation">.</span>Left<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>Bottom <span class="token operator">-</span> rect<span class="token punctuation">.</span>Top<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 添加到已找到的窗口列表。</span>
                windowList<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">WindowInfo</span><span class="token punctuation">(</span>hWnd<span class="token punctuation">,</span> className<span class="token punctuation">,</span> title<span class="token punctuation">,</span> isVisible<span class="token punctuation">,</span> bounds<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 默认的查找窗口的过滤条件。可见 + 非最小化 + 包含窗口标题。</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">readonly</span> <span class="token class-name">Predicate<span class="token punctuation">&lt;</span>WindowInfo<span class="token punctuation">&gt;</span></span> DefaultPredicate <span class="token operator">=</span> x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>IsVisible <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>x<span class="token punctuation">.</span>IsMinimized <span class="token operator">&amp;&amp;</span> x<span class="token punctuation">.</span>Title<span class="token punctuation">.</span>Length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">delegate</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">WndEnumProc</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hWnd<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> lParam<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">EnumWindows</span><span class="token punctuation">(</span><span class="token class-name">WndEnumProc</span> lpEnumFunc<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> lParam<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name">IntPtr</span> <span class="token function">GetParent</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hWnd<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">IsWindowVisible</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hWnd<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">GetWindowText</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hWnd<span class="token punctuation">,</span> <span class="token class-name">StringBuilder</span> lptrString<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> nMaxCount<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">GetClassName</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hWnd<span class="token punctuation">,</span> <span class="token class-name">StringBuilder</span> lpString<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> nMaxCount<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SwitchToThisWindow</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hWnd<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> fAltTab<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DllImport</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user32&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">extern</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">GetWindowRect</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hWnd<span class="token punctuation">,</span> <span class="token keyword">ref</span> <span class="token class-name">LPRECT</span> rect<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">StructLayout</span><span class="token attribute-arguments"><span class="token punctuation">(</span>LayoutKind<span class="token punctuation">.</span>Sequential<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token keyword">struct</span> <span class="token class-name">LPRECT</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">readonly</span> <span class="token class-name"><span class="token keyword">int</span></span> Left<span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token keyword">readonly</span> <span class="token class-name"><span class="token keyword">int</span></span> Top<span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token keyword">readonly</span> <span class="token class-name"><span class="token keyword">int</span></span> Right<span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token keyword">readonly</span> <span class="token class-name"><span class="token keyword">int</span></span> Bottom<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 获取 Win32 窗口的一些基本信息。</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">readonly</span> <span class="token keyword">struct</span> <span class="token class-name">WindowInfo</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">WindowInfo</span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> hWnd<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> className<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> title<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> isVisible<span class="token punctuation">,</span> <span class="token class-name">Rectangle</span> bounds<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Hwnd <span class="token operator">=</span> hWnd<span class="token punctuation">;</span>
        ClassName <span class="token operator">=</span> className<span class="token punctuation">;</span>
        Title <span class="token operator">=</span> title<span class="token punctuation">;</span>
        IsVisible <span class="token operator">=</span> isVisible<span class="token punctuation">;</span>
        Bounds <span class="token operator">=</span> bounds<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 获取窗口句柄。</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name">IntPtr</span> Hwnd <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 获取窗口类名。</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ClassName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 获取窗口标题。</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Title <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 获取当前窗口是否可见。</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> IsVisible <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 获取窗口当前的位置和尺寸。</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Rectangle</span> Bounds <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 获取窗口当前是否是最小化的。</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> IsMinimized <span class="token operator">=&gt;</span> Bounds<span class="token punctuation">.</span>Left <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">32000</span> <span class="token operator">&amp;&amp;</span> Bounds<span class="token punctuation">.</span>Top <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">32000</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>操作</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> windows <span class="token operator">=</span> WindowEnumerator<span class="token punctuation">.</span><span class="token function">FindAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> windows<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> window <span class="token operator">=</span> windows<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$@&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">i<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">PadLeft</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token char">&#39; &#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">. </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">window<span class="token punctuation">.</span>Title</span><span class="token punctuation">}</span></span><span class="token string">
     </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">window<span class="token punctuation">.</span>Bounds<span class="token punctuation">.</span>X</span><span class="token punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">window<span class="token punctuation">.</span>Bounds<span class="token punctuation">.</span>Y</span><span class="token punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">window<span class="token punctuation">.</span>Bounds<span class="token punctuation">.</span>Width</span><span class="token punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">window<span class="token punctuation">.</span>Bounds<span class="token punctuation">.</span>Height</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","changyonggongneng.html.vue"]]),d=JSON.parse('{"path":"/dotnet/jitongcaozuo/changyonggongneng.html","title":"常用功能","lang":"zh-CN","frontmatter":{"title":"常用功能","lang":"zh-CN","date":"2023-10-22T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"changyonggongneng","slug":"ibs5sf","docsId":"73560230","description":"获取程序集配置 跳转打开外链 上传文件 是否安装某个软件 检测是否安装并返回卸载地址 返回是否安装并返回安装地址 使用 自定义后缀文件绑定exe启动程序打开 实现：修改注册表 绑定class.cs如下 调用 获取打开的所有窗口标题 操作","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/jitongcaozuo/changyonggongneng.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"常用功能"}],["meta",{"property":"og:description","content":"获取程序集配置 跳转打开外链 上传文件 是否安装某个软件 检测是否安装并返回卸载地址 返回是否安装并返回安装地址 使用 自定义后缀文件绑定exe启动程序打开 实现：修改注册表 绑定class.cs如下 调用 获取打开的所有窗口标题 操作"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常用功能\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"获取程序集配置","slug":"获取程序集配置","link":"#获取程序集配置","children":[]},{"level":2,"title":"跳转打开外链","slug":"跳转打开外链","link":"#跳转打开外链","children":[]},{"level":2,"title":"上传文件","slug":"上传文件","link":"#上传文件","children":[]},{"level":2,"title":"是否安装某个软件","slug":"是否安装某个软件","link":"#是否安装某个软件","children":[]},{"level":2,"title":"自定义后缀文件绑定exe启动程序打开","slug":"自定义后缀文件绑定exe启动程序打开","link":"#自定义后缀文件绑定exe启动程序打开","children":[]},{"level":2,"title":"获取打开的所有窗口标题","slug":"获取打开的所有窗口标题","link":"#获取打开的所有窗口标题","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":4.91,"words":1472},"filePathRelative":"dotnet/jitongcaozuo/changyonggongneng.md","localizedDate":"2023年10月22日","excerpt":"<h2>获取程序集配置</h2>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token comment\\">// 获取版本号</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> ver <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>AssemblyFileVersionAttribute<span class=\\"token punctuation\\">)</span>Assembly<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetExecutingAssembly</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetCustomAttributes</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">typeof</span><span class=\\"token punctuation\\">(</span><span class=\\"token type-expression class-name\\">AssemblyFileVersionAttribute</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">?.</span><span class=\\"token function\\">FirstOrDefault</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">?.</span>Version<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>ver <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    ver <span class=\\"token operator\\">=</span> Assembly<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetExecutingAssembly</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">?.</span>Version<span class=\\"token punctuation\\">?.</span><span class=\\"token function\\">ToString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{r as comp,d as data};
