import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as p,c,a as s,d as n,e as t,b as l}from"./app-qB9_Bjjp.js";const u={},m=l(`<p>示例：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 添加热力图</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>remarks</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// Sample request:</span>
<span class="token doc-comment comment">/// \`\`\`</span>
<span class="token doc-comment comment">///  POST /hotmap</span>
<span class="token doc-comment comment">///  {</span>
<span class="token doc-comment comment">///      &quot;displayName&quot;: &quot;演示名称1&quot;,</span>
<span class="token doc-comment comment">///      &quot;matchRule&quot;: 0,</span>
<span class="token doc-comment comment">///      &quot;matchCondition&quot;: &quot;https://www.cnblogs.com/JulianHuang/&quot;,</span>
<span class="token doc-comment comment">///      &quot;targetUrl&quot;: &quot;https://www.cnblogs.com/JulianHuang/&quot;,</span>
<span class="token doc-comment comment">///      &quot;versions&quot;: [</span>
<span class="token doc-comment comment">///      {</span>
<span class="token doc-comment comment">///         &quot;versionName&quot;: &quot;ver2020&quot;,</span>
<span class="token doc-comment comment">///         &quot;startDate&quot;: &quot;2020-12-13T10:03:09&quot;,</span>
<span class="token doc-comment comment">///         &quot;endDate&quot;: &quot;2020-12-13T10:03:09&quot;,</span>
<span class="token doc-comment comment">///          &quot;offlinePageUrl&quot;: &quot;3fa85f64-5717-4562-b3fc-2c963f66afa6&quot;,  //  没有绑定图片和离线网页的对应属性传 null</span>
<span class="token doc-comment comment">///          &quot;pictureUrl&quot;: &quot;3fa85f64-5717-4562-b3fc-2c963f66afa6&quot;,</span>
<span class="token doc-comment comment">///          &quot;createDate&quot;: &quot;2020-12-13T10:03:09&quot;</span>
<span class="token doc-comment comment">///      }</span>
<span class="token doc-comment comment">///    ]</span>
<span class="token doc-comment comment">///  }</span>
<span class="token doc-comment comment">///\`\`\`</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>remarks</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createHotmapInput<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">[</span><span class="token function">Consumes</span><span class="token punctuation">(</span><span class="token string">&quot;application/json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Produces</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;text/plan&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ProducesResponseType</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpPost</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> <span class="token function">AddHotmapAsync</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">FromBody</span></span><span class="token punctuation">]</span> <span class="token class-name">CreateHotmapInput</span> createHotmapInput<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
     <span class="token class-name"><span class="token keyword">var</span></span> model <span class="token operator">=</span> ObjectMapper<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Map</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>CreateHotmapInput<span class="token punctuation">,</span> Hotmap<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>createHotmapInput<span class="token punctuation">)</span><span class="token punctuation">;</span>
     model<span class="token punctuation">.</span>ProfileId <span class="token operator">=</span> CurrentUser<span class="token punctuation">.</span>TenantId<span class="token punctuation">;</span>
     <span class="token keyword">return</span> <span class="token keyword">await</span> _hotmaps<span class="token punctuation">.</span><span class="token function">InsertAsync</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),i=s("strong",null,"remarks",-1),r={href:"http://mp.weixin.qq.com/s?__biz=MzI4NTU0NjYwOA==&mid=2247484721&idx=1&sn=e244dc59b0ba3fba69de333d73436219&chksm=ebebc42edc9c4d381732099da3a6afc60dbafdd2461027035b1185d7c3d770ba42f5db06127c&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},k={href:"http://mp.weixin.qq.com/s?__biz=MzI4NTU0NjYwOA==&mid=2247484721&idx=1&sn=e244dc59b0ba3fba69de333d73436219&chksm=ebebc42edc9c4d381732099da3a6afc60dbafdd2461027035b1185d7c3d770ba42f5db06127c&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"};function d(g,b){const a=o("ExternalLinkIcon");return p(),c("div",null,[m,s("p",null,[n("通过给API添加XML注释："),i,n(" 注意如果注释内容包含代码，可以使用Markdown的代码语法```,在注释里面优雅显示代码。 通过Consumes,Produces特性指示action接收和返回的数据类型，也就是"),s("a",r,[n("媒体类型"),t(a)]),n("。 Consumes、Produces是指示请求/响应支持的"),s("a",k,[n("content-type"),t(a)]),n("的过滤器，位于Microsoft.AspNetCore.Mvc命名空间下。 通过ProducesResponseType特性指示API响应的预期内容、状态码   API文档显示： 代码注释、约束请求的content-type、指示响应出的content-type")])])}const f=e(u,[["render",d],["__file","zhushishuiming.html.vue"]]),y=JSON.parse('{"path":"/dotnet/api/swagger/zhushishuiming.html","title":"注释说明","lang":"zh-CN","frontmatter":{"title":"注释说明","lang":"zh-CN","date":"2023-10-13T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"zhushishuiming","slug":"msgsu0","docsId":"30113035","description":"示例： 通过给API添加XML注释：remarks 注意如果注释内容包含代码，可以使用Markdown的代码语法```,在注释里面优雅显示代码。 通过Consumes,Produces特性指示action接收和返回的数据类型，也就是媒体类型。 Consumes、Produces是指示请求/响应支持的content-type的过滤器，位于Microsof...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/api/swagger/zhushishuiming.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"注释说明"}],["meta",{"property":"og:description","content":"示例： 通过给API添加XML注释：remarks 注意如果注释内容包含代码，可以使用Markdown的代码语法```,在注释里面优雅显示代码。 通过Consumes,Produces特性指示action接收和返回的数据类型，也就是媒体类型。 Consumes、Produces是指示请求/响应支持的content-type的过滤器，位于Microsof..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"注释说明\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-13T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.14,"words":341},"filePathRelative":"dotnet/api/swagger/zhushishuiming.md","localizedDate":"2023年10月13日","excerpt":"<p>示例：</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>summary</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"token doc-comment comment\\">/// 添加热力图</span>\\n<span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>summary</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>remarks</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"token doc-comment comment\\">/// Sample request:</span>\\n<span class=\\"token doc-comment comment\\">/// ```</span>\\n<span class=\\"token doc-comment comment\\">///  POST /hotmap</span>\\n<span class=\\"token doc-comment comment\\">///  {</span>\\n<span class=\\"token doc-comment comment\\">///      \\"displayName\\": \\"演示名称1\\",</span>\\n<span class=\\"token doc-comment comment\\">///      \\"matchRule\\": 0,</span>\\n<span class=\\"token doc-comment comment\\">///      \\"matchCondition\\": \\"https://www.cnblogs.com/JulianHuang/\\",</span>\\n<span class=\\"token doc-comment comment\\">///      \\"targetUrl\\": \\"https://www.cnblogs.com/JulianHuang/\\",</span>\\n<span class=\\"token doc-comment comment\\">///      \\"versions\\": [</span>\\n<span class=\\"token doc-comment comment\\">///      {</span>\\n<span class=\\"token doc-comment comment\\">///         \\"versionName\\": \\"ver2020\\",</span>\\n<span class=\\"token doc-comment comment\\">///         \\"startDate\\": \\"2020-12-13T10:03:09\\",</span>\\n<span class=\\"token doc-comment comment\\">///         \\"endDate\\": \\"2020-12-13T10:03:09\\",</span>\\n<span class=\\"token doc-comment comment\\">///          \\"offlinePageUrl\\": \\"3fa85f64-5717-4562-b3fc-2c963f66afa6\\",  //  没有绑定图片和离线网页的对应属性传 null</span>\\n<span class=\\"token doc-comment comment\\">///          \\"pictureUrl\\": \\"3fa85f64-5717-4562-b3fc-2c963f66afa6\\",</span>\\n<span class=\\"token doc-comment comment\\">///          \\"createDate\\": \\"2020-12-13T10:03:09\\"</span>\\n<span class=\\"token doc-comment comment\\">///      }</span>\\n<span class=\\"token doc-comment comment\\">///    ]</span>\\n<span class=\\"token doc-comment comment\\">///  }</span>\\n<span class=\\"token doc-comment comment\\">///```</span>\\n<span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>remarks</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>param</span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>createHotmapInput<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>param</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>returns</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>returns</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"token punctuation\\">[</span><span class=\\"token function\\">Consumes</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"application/json\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token punctuation\\">[</span><span class=\\"token attribute\\"><span class=\\"token class-name\\">Produces</span><span class=\\"token attribute-arguments\\"><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"text/plan\\"</span><span class=\\"token punctuation\\">)</span></span></span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token punctuation\\">[</span><span class=\\"token attribute\\"><span class=\\"token class-name\\">ProducesResponseType</span><span class=\\"token attribute-arguments\\"><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">typeof</span><span class=\\"token punctuation\\">(</span><span class=\\"token type-expression class-name\\">Boolean</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">200</span><span class=\\"token punctuation\\">)</span></span></span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token punctuation\\">[</span><span class=\\"token attribute\\"><span class=\\"token class-name\\">HttpPost</span></span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">async</span> <span class=\\"token return-type class-name\\">Task<span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">bool</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">AddHotmapAsync</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span><span class=\\"token attribute\\"><span class=\\"token class-name\\">FromBody</span></span><span class=\\"token punctuation\\">]</span> <span class=\\"token class-name\\">CreateHotmapInput</span> createHotmapInput<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n     <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> model <span class=\\"token operator\\">=</span> ObjectMapper<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Map</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span>CreateHotmapInput<span class=\\"token punctuation\\">,</span> Hotmap<span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span>createHotmapInput<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n     model<span class=\\"token punctuation\\">.</span>ProfileId <span class=\\"token operator\\">=</span> CurrentUser<span class=\\"token punctuation\\">.</span>TenantId<span class=\\"token punctuation\\">;</span>\\n     <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">await</span> _hotmaps<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">InsertAsync</span><span class=\\"token punctuation\\">(</span>model<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">!=</span><span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{f as comp,y as data};
