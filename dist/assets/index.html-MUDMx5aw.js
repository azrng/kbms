import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as r,o as n}from"./app-BQsqMNmR.js";const o="/kbms/common/1643209935836-5d34426a-c9d4-469b-ae24-35b3cbf8f3f3.gif",i="/kbms/common/1643209449243-64ba2184-0c09-4c1e-bcad-a9b22a338964.png",s={};function d(c,t){return n(),a("div",null,t[0]||(t[0]=[r('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>序列化：将对象的状态信息以及类型信息，转换为一种易于传输或者存储形式(流，即字节序列)的过程。<br> 序列化整理流程(图片来自微软官网)<br><img src="'+o+'" alt="" loading="lazy"><br> 该对象被序列化为携带数据的流。该流还可能包含有关对象类型的信息，例如其版本、文化和程序集名称。从该流中，对象可以存储在数据库、文件或内存中。<br> 反序列化：与序列化相反，将流转换为对象的过程。</p><h2 id="常见的序列化格式和方法" tabindex="-1"><a class="header-anchor" href="#常见的序列化格式和方法"><span>常见的序列化格式和方法</span></a></h2><p>在.net中，常见的序列化格式主要有json，二进制和xml，总结如图：</p><table><thead><tr><th>数据格式</th><th>序列化的方法</th><th>程序集</th><th>命名空间</th><th>描述</th></tr></thead><tbody><tr><td>JSON</td><td>JavaScriptSerializer</td><td>System.Web.Extensions</td><td>System.Web.Script.Serialization</td><td>主要在web端，.netf使用</td></tr><tr><td>JSON</td><td>DataContractJsonSerializer</td><td>System.Runtime.Serialization</td><td>System.Runtime.Serialization.Json</td><td>主要在web端，.netf使用</td></tr><tr><td>JSON</td><td>Newtonsoft.Json</td><td>Newtonsoft.Json</td><td>通用</td><td></td></tr><tr><td>JSON</td><td>System.Text.Json</td><td>System.Text.Json</td><td>通用</td><td></td></tr><tr><td>二进制</td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p><img src="'+i+'" alt="image.png" loading="lazy"><br> 注意事项：</p><ul><li>.net中所有用于序列化的实体的class上应该加上[Serializable]标记，如果不加的话，json序列化的时候没有问题，但是<strong>使用BinaryFormatter进行二进制序列化的时候就会报错</strong>。</li><li>如果应用在wcf中，所有实体的class上还应该加上[DataContract]标记，字段上要加[DataMember]。</li><li>在使用newtonsoft.json的时候，如果实体类加了[DataContract]，有些字段加了[DataMember]，而有些字段没有加，但是序列化的时候也要包含那些没有加[DataMember]的字段，可以在实体类上加[JsonObject(MemberSerialization.OptOut)]来解决，表示输出全部的公共字段。</li><li>使用newtonsoft.json时，System.Web.UI.WebControls.ListItem不能序列化，解决方法是，自定义一个类并标记[Serializable]。</li></ul><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><p><a href="https://www.cnblogs.com/mcgrady/p/5674410.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/mcgrady/p/5674410.html</a>：.Net中的序列化<br><a href="https://www.cnblogs.com/Cwj-XFH/p/10330671.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/Cwj-XFH/p/10330671.html</a>：.Net中的序列化和反序列化<br><a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/serialization/" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/serialization/</a> ：序列化(c#)<br><a href="https://mp.weixin.qq.com/s/_J3B1sJrFC8oT4Xx3e3wyQ" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/_J3B1sJrFC8oT4Xx3e3wyQ</a> | .NET性能优化-是时候换个序列化协议了</p>',9)]))}const p=e(s,[["render",d],["__file","index.html.vue"]]),b=JSON.parse('{"path":"/dotnet/base/serialize/","title":"说明","lang":"zh-CN","frontmatter":{"title":"说明","lang":"zh-CN","date":"2023-07-06T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["serialize"],"description":"概述 序列化：将对象的状态信息以及类型信息，转换为一种易于传输或者存储形式(流，即字节序列)的过程。 序列化整理流程(图片来自微软官网) 该对象被序列化为携带数据的流。该流还可能包含有关对象类型的信息，例如其版本、文化和程序集名称。从该流中，对象可以存储在数据库、文件或内存中。 反序列化：与序列化相反，将流转换为对象的过程。 常见的序列化格式和方法 在...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/base/serialize/"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"说明"}],["meta",{"property":"og:description","content":"概述 序列化：将对象的状态信息以及类型信息，转换为一种易于传输或者存储形式(流，即字节序列)的过程。 序列化整理流程(图片来自微软官网) 该对象被序列化为携带数据的流。该流还可能包含有关对象类型的信息，例如其版本、文化和程序集名称。从该流中，对象可以存储在数据库、文件或内存中。 反序列化：与序列化相反，将流转换为对象的过程。 常见的序列化格式和方法 在..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1643209935836-5d34426a-c9d4-469b-ae24-35b3cbf8f3f3.gif"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-10T14:07:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"serialize"}],["meta",{"property":"article:published_time","content":"2023-07-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-10T14:07:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"说明\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1643209935836-5d34426a-c9d4-469b-ae24-35b3cbf8f3f3.gif\\",\\"https://azrng.gitee.io/kbms/kbms/common/1643209449243-64ba2184-0c09-4c1e-bcad-a9b22a338964.png\\"],\\"datePublished\\":\\"2023-07-06T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-10T14:07:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"常见的序列化格式和方法","slug":"常见的序列化格式和方法","link":"#常见的序列化格式和方法","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1720620448000,"contributors":[{"name":"azrng","username":"azrng","email":"itzhangyunpeng@163.com","commits":3}]},"readingTime":{"minutes":1.72,"words":517},"filePathRelative":"dotnet/base/serialize/readme.md","localizedDate":"2023年7月6日","excerpt":"<h2>概述</h2>\\n<p>序列化：将对象的状态信息以及类型信息，转换为一种易于传输或者存储形式(流，即字节序列)的过程。<br>\\n序列化整理流程(图片来自微软官网)<br>\\n<img src=\\"/common/1643209935836-5d34426a-c9d4-469b-ae24-35b3cbf8f3f3.gif\\" alt=\\"\\" loading=\\"lazy\\"><br>\\n该对象被序列化为携带数据的流。该流还可能包含有关对象类型的信息，例如其版本、文化和程序集名称。从该流中，对象可以存储在数据库、文件或内存中。<br>\\n反序列化：与序列化相反，将流转换为对象的过程。</p>\\n<h2>常见的序列化格式和方法</h2>","autoDesc":true}');export{p as comp,b as data};
