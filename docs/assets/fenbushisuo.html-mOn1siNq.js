import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as a,d as n}from"./app-DZ9bmjCp.js";const l="/kbms/common/5F4F1D78-7AE1-45BC-BB52-E0D183F12830.png",h={},k=n('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>分布式锁也可以理解为跨主机的线程同步。</p><table><thead><tr><th>进程内</th><th>跨进程</th><th>跨主机</th></tr></thead><tbody><tr><td>Lock/Monitor、SemaphoreSlim</td><td>Metux、Semaphore</td><td>分布式锁</td></tr><tr><td>用户态线程安全</td><td>内核态线程安全</td><td></td></tr></tbody></table><p>单机服务器可以通过共享堆内存来标记上锁/解锁，线程同步是建立在单击操作系统的用户态、内核态对共享内存的访问控制。</p><p>实现锁，需要实现的是需要锁的东西必须对这个锁都可以访问，比如内锁同一个项目，那么就可以使用lock，那么锁不同的项目，就需要这多个项目的进程都能访问到的地方，这个时候我们常用redis来实现。</p><h2 id="实现分布式锁" tabindex="-1"><a class="header-anchor" href="#实现分布式锁"><span>实现分布式锁</span></a></h2><p>不常用的操作：获取锁超时、锁重入、锁延期</p><figure><img src="'+l+`" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><blockquote><p>该图片来自MASA技术团队公众号</p></blockquote><h3 id="基本要求" tabindex="-1"><a class="header-anchor" href="#基本要求"><span>基本要求</span></a></h3><p>简述：同一时间只能一个获取到、避免死锁、防止释放错锁。 1.分布式系统，一个锁在同一时间只能被一个服务器获取（这是分布式锁的基础） 2.具备锁失效机制，防止死锁（防止某些意外，锁没有得到方式，别人也无法获取到锁）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">SET</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 命令支持多个参数：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">EX</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> seconds--</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 设置过期时间</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">NX</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 如果key不存在，则设置</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ......</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">因为SET命令参数可以替代SETNX，SETEX，GETSET，这些命令在未来可能被废弃。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当上面设置key返回成功的时候，说明已经获取到了锁，任务完成后通过del命令解锁，或者超时后自动释放锁。 3.不要使用固定的string值作为锁标记着(比如设置该redis的值和当前业务相关起来，如果删除的时候，值是该业务的值，再执行删除操作)，而是使用一个不易被猜中的随机值，比如token 4.不适用del命令释放锁，而是发送script去移除key</p><blockquote><p>3、4是为了解决：锁提前过期，客户a还没有执行完命令，然后客户b获取锁去执行，这个时候a执行完然后删除锁的时候将锁着b的锁给删除了。</p></blockquote><h3 id="实现示例" tabindex="-1"><a class="header-anchor" href="#实现示例"><span>实现示例</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">///</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">summar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">///</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Acquires</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> lock.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">///</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/summar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">///</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">param</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> name=&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/para</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">///</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">param</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> name=&quot;token&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">随机值</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/para</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">///</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">param</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> name=&quot;expireSecond&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/para</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> ///</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">param</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> name=&quot;waitLockSeconds&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">非阻塞锁</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/para</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">static</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> bool</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Lock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> token,int</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> expireSecond=10,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> double</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> waitLockSeconds</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    var</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> waitIntervalMs</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 50</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    bool</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> isLock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    DateTime</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> begin</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> DateTime.Now</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">         isLock</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Connection.GetDatabase</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.StringSet</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">key,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> token,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> TimeSpan.FromSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">expireSecond</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> When.NotExists</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">         if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">isLock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">             return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">             //不等待锁则返回</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">             if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">waitLockSeconds</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">break</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">             //超过等待时间，则不再等待</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">             if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> ((</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">DateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">Now</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> begin</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">TotalSeconds</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> &gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> waitLockSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">break</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">             Thread.Sleep(waitIntervalMs);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">     } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">isLock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">     return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">       </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">///</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">summar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">///</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Releases</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> lock.</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">///</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/summar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">///</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">s&gt;&lt;c</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">c</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> if</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> lock</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> was</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> released,</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">c</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">c</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> otherwise.</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">///</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">param</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> name=&quot;key&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">Key.</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/para</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">///</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">param</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> name=&quot;value&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/para</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">static</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> bool</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> UnLock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    string</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> lua_script</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> @&quot;  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    if (redis.call(&#39;GET&#39;, KEYS[1]) == ARGV[1]) then  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">         redis.call(&#39;DEL&#39;, KEYS[1])  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">          return true  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">          else  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">          return false  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">        end  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">     try</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">     {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">          var</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> res</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Connection.GetDatabase</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.ScriptEvaluate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lua_script,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">                                                           new</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> RedisKey[]</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">                                                           new</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> RedisValue[]</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> }</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (bool)res;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">     catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (Exception </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">ex</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">     {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">          Console.WriteLine($</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">&quot;ReleaseLock lock fail...{ex.Message}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">          return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">     }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">        private</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> static</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Lazy</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">ConnectionMultiplexe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> lazyConnection</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Lazy</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">ConnectionMultiplexe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">r</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&gt;(() =&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">        {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">            ConfigurationOptions</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> configuration = new ConfigurationOptions</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">            {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">                AbortOnConnectFail</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> = </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">                ConnectTimeout</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> = 5000,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">            };</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">            configuration.EndPoints.Add(&quot;10.100.219.9&quot;,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 6379</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">            return</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ConnectionMultiplexer.Connect(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">configuration.ToString</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">());</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">        })</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">        public</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> static</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ConnectionMultiplexer</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Connection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> lazyConnection.Value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了避免无限制抢锁操作，增加了非阻塞锁，就是轮询n秒后如果还没有获取的锁，那么就直接返回。</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">     // 尝试并行执行3个任务</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">     Parallel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">For</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> =&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">     {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">           string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> token</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> $&quot;loki:{</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">x</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">           bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> isLocked</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Lock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;loki&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">token</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">           if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">isLocked</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">           {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">               Console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">WriteLine</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">$&quot;{</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">token</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">} begin reduce stocks (with lock) at {</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">DateTime</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">Now</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">}.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">               Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">               Console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">WriteLine</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">$&quot;{</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">token</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">} release lock {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">UnLock</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">(&quot;loki&quot;, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">token</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">)} at {</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">DateTime</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">Now</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">}. &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">           }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">           else</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">           {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">             Console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">WriteLine</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">$&quot;{</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">token</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">} don&#39;t get lock at {</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">DateTime</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">Now</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">}.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">           }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">       });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="中意的写法" tabindex="-1"><a class="header-anchor" href="#中意的写法"><span>中意的写法</span></a></h2><p>借助委托去实现，看着好看不像有些，获取锁就在第一行，获取不到不往下面走</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> _lockProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">TryLockAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Task</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Delay</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;success&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件"><span>组件</span></a></h2><p><a href="https://mp.weixin.qq.com/s/LfuEj0iB0oG3fAfINPDDqA" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/LfuEj0iB0oG3fAfINPDDqA</a> | 功能强大，基于 .NET 实现的分布式锁 <a href="https://www.cnblogs.com/Z7TS/p/17359113.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/Z7TS/p/17359113.html</a> | .NET开源分布式锁DistributedLock - Broder - 博客园 RedLock.net</p><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2><blockquote><p>码甲哥：<a href="https://mp.weixin.qq.com/s/hixBhYgbuJSgAUpMXwZSQQ" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/hixBhYgbuJSgAUpMXwZSQQ</a></p><p>.Net Redis 实现分布式锁以及实现Gzip数据压缩提升性能：<a href="https://mp.weixin.qq.com/s/BkrKD86va-UQYhN7AyBIJA" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/BkrKD86va-UQYhN7AyBIJA</a></p></blockquote>`,25),t=[k];function e(p,r){return a(),i("div",null,t)}const B=s(h,[["render",e],["__file","fenbushisuo.html.vue"]]),y=JSON.parse('{"path":"/middleware/smallService/fenbushisuo/fenbushisuo.html","title":"分布式锁","lang":"zh-CN","frontmatter":{"title":"分布式锁","lang":"zh-CN","date":"2023-10-04T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"fenbushisuo","slug":"lor0gr","docsId":"48321000","description":"概述 分布式锁也可以理解为跨主机的线程同步。 单机服务器可以通过共享堆内存来标记上锁/解锁，线程同步是建立在单击操作系统的用户态、内核态对共享内存的访问控制。 实现锁，需要实现的是需要锁的东西必须对这个锁都可以访问，比如内锁同一个项目，那么就可以使用lock，那么锁不同的项目，就需要这多个项目的进程都能访问到的地方，这个时候我们常用redis来实现。 ...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/smallService/fenbushisuo/fenbushisuo.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"分布式锁"}],["meta",{"property":"og:description","content":"概述 分布式锁也可以理解为跨主机的线程同步。 单机服务器可以通过共享堆内存来标记上锁/解锁，线程同步是建立在单击操作系统的用户态、内核态对共享内存的访问控制。 实现锁，需要实现的是需要锁的东西必须对这个锁都可以访问，比如内锁同一个项目，那么就可以使用lock，那么锁不同的项目，就需要这多个项目的进程都能访问到的地方，这个时候我们常用redis来实现。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/5F4F1D78-7AE1-45BC-BB52-E0D183F12830.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-12T01:48:24.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-12T01:48:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分布式锁\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/5F4F1D78-7AE1-45BC-BB52-E0D183F12830.png\\"],\\"datePublished\\":\\"2023-10-04T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-12T01:48:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"实现分布式锁","slug":"实现分布式锁","link":"#实现分布式锁","children":[{"level":3,"title":"基本要求","slug":"基本要求","link":"#基本要求","children":[]},{"level":3,"title":"实现示例","slug":"实现示例","link":"#实现示例","children":[]}]},{"level":2,"title":"中意的写法","slug":"中意的写法","link":"#中意的写法","children":[]},{"level":2,"title":"组件","slug":"组件","link":"#组件","children":[]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1699753704000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1},{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":3.52,"words":1057},"filePathRelative":"middleware/smallService/fenbushisuo/fenbushisuo.md","localizedDate":"2023年10月4日","excerpt":"<h2>概述</h2>\\n<p>分布式锁也可以理解为跨主机的线程同步。</p>\\n<table>\\n<thead>\\n<tr>\\n<th>进程内</th>\\n<th>跨进程</th>\\n<th>跨主机</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Lock/Monitor、SemaphoreSlim</td>\\n<td>Metux、Semaphore</td>\\n<td>分布式锁</td>\\n</tr>\\n<tr>\\n<td>用户态线程安全</td>\\n<td>内核态线程安全</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<p>单机服务器可以通过共享堆内存来标记上锁/解锁，线程同步是建立在单击操作系统的用户态、内核态对共享内存的访问控制。</p>","autoDesc":true}');export{B as comp,y as data};
