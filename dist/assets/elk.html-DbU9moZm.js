import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as s,o as i}from"./app-B3EhLA94.js";const r="/kbms/common/1612400813631-915ac8ae-8cb1-40a3-b8c8-4c6853f76849.png",n="/kbms/common/1612400813599-d9159018-4993-45d8-9ef6-f444ede05eb9.png",l="/kbms/common/1612400813562-90a3ffbd-86b9-4eb5-b814-cd331dbf5b60.png",o="/kbms/common/1612400813582-91eed2ec-712b-4037-a9a4-57f2c3a60022.png",c="/kbms/common/1612400813448-340d045a-4d6d-43f4-aa97-1c80a5bb5cf6.png",h={};function p(b,e){return i(),a("div",null,e[0]||(e[0]=[s('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>ELK 是Elastic公司提供的一套<strong>完整的日志收集以及展示的解决方案</strong>，是三个产品的首字母缩写，分别是<strong>ElasticSearch</strong>、<strong>Logstash</strong> 和 <strong>Kibana</strong>。</p><ul><li>Elasticsearch是实时全文搜索和分析引擎，提供搜集、分析、存储数据三大功能</li><li>Logstash是一个用来搜集、分析、过滤日志的工具</li><li>Kibana是一个基于Web的图形界面，用于搜索、分析和可视化存储在 Elasticsearch指标中的日志数据</li></ul><p>新增了一个FileBeat，它是一个轻量级的日志收集处理工具(Agent)，Filebeat占用资源少，适合于在各个服务器上搜集日志后传输给Logstash，官方也推荐此工具。<br> Elasticsearch是个开源分布式搜索引擎，提供搜集、分析、存储数据三大功能。它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。<br> Logstash 主要是用来日志的搜集、分析、过滤日志的工具，支持大量的数据获取方式。一般工作方式为c/s架构，client端安装在需要收集日志的主机上，server端负责将收到的各节点日志进行过滤、修改等操作在一并发往elasticsearch上去。<br> Kibana 也是一个开源和免费的工具，Kibana可以为 Logstash 和 ElasticSearch 提供的日志分析友好的 Web 界面，可以帮助汇总、分析和搜索重要数据日志。<br> Filebeat隶属于Beats。目前Beats包含四种工具：</p><ol><li>Packetbeat（搜集网络流量数据）</li><li>Topbeat（搜集系统、进程和文件系统级别的 CPU 和内存使用情况等数据）</li><li>Filebeat（搜集文件数据）</li><li>Winlogbeat（搜集 Windows 事件日志数据）</li></ol><h2 id="为什么用到elk" tabindex="-1"><a class="header-anchor" href="#为什么用到elk"><span>为什么用到ELK</span></a></h2><p>ELK提供了一整套解决方案，并且都是开源软件，之间互相配合使用，完美衔接，高效的满足了很多场合的应用。目前主流的一种日志系统。</p><h4 id="elk架构图" tabindex="-1"><a class="header-anchor" href="#elk架构图"><span>ELK架构图</span></a></h4><p>架构图一：<br><img src="'+r+'" alt="" loading="lazy"><br> 这是最简单的一种ELK架构方式。优点是搭建简单，易于上手。缺点是Logstash耗资源较大，运行占用CPU和内存高。另外没有消息队列缓存，存在数据丢失隐患。<br> 此架构由Logstash分布于各个节点上搜集相关日志、数据，并经过分析、过滤后发送给远端服务器上的Elasticsearch进行存储。Elasticsearch将数据以分片的形式压缩存储并提供多种API供用户查询，操作。用户亦可以更直观的通过配置Kibana Web方便的对日志查询，并根据数据生成报表。<br> 架构图二：<br><img src="'+n+'" alt="" loading="lazy"><br> 此种架构引入了消息队列机制，位于各个节点上的Logstash Agent先将数据/日志传递给Kafka（或者Redis），并将队列中消息或数据间接传递给Logstash，Logstash过滤、分析后将数据传递给Elasticsearch存储。最后由Kibana将日志和数据呈现给用户。因为引入了Kafka（或者Redis）,所以即使远端Logstash server因故障停止运行，数据将会先被存储下来，从而避免数据丢失。<br> 架构图三：<br><img src="'+l+'" alt="" loading="lazy"><br> 此种架构将收集端logstash替换为beats，更灵活，消耗资源更少，扩展性更强。同时可配置Logstash 和Elasticsearch 集群用于支持大集群系统的运维日志数据监控和查询。</p><h4 id="filebeat工作原理" tabindex="-1"><a class="header-anchor" href="#filebeat工作原理"><span>Filebeat工作原理</span></a></h4><p>Filebeat由两个主要组件组成：prospectors 和 harvesters。这两个组件协同工作将文件变动发送到指定的输出中。<br><img src="'+o+`" alt="" loading="lazy"><br> Harvester（收割机）：负责读取单个文件内容。每个文件会启动一个Harvester，每个Harvester会逐行读取各个文件，并将文件内容发送到制定输出中。Harvester负责打开和关闭文件，意味在Harvester运行的时候，文件描述符处于打开状态，如果文件在收集中被重命名或者被删除，Filebeat会继续读取此文件。所以在Harvester关闭之前，磁盘不会被释放。默认情况filebeat会保持文件打开的状态，直到达到<code>[close_inactive](https://www.elastic.co/guide/en/beats/filebeat/5.5/configuration-filebeat-options.html#close-inactive)</code>（如果此选项开启，filebeat会在指定时间内将不再更新的文件句柄关闭，时间从harvester读取最后一行的时间开始计时。若文件句柄被关闭后，文件发生变化，则会启动一个新的harvester。关闭文件句柄的时间不取决于文件的修改时间，若此参数配置不当，则可能发生日志不实时的情况，由scan_frequency参数决定，默认10s。Harvester使用内部时间戳来记录文件最后被收集的时间。例如：设置5m，则在Harvester读取文件的最后一行之后，开始倒计时5分钟，若5分钟内文件无变化，则关闭文件句柄。默认5m）。<br> Prospector（勘测者）：负责管理Harvester并找到所有读取源。</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">filebeat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">prospectors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> input_type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">log</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  paths</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">    -</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">apps</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">logs</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/*/info.log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Prospector会找到/apps/logs/*目录下的所有info.log文件，并为每个文件启动一个Harvester。Prospector会检查每个文件，看Harvester是否已经启动，是否需要启动，或者文件是否可以忽略。若Harvester关闭，只有在文件大小发生变化的时候Prospector才会执行检查。只能检测本地的文件。<br> Filebeat如何记录文件状态：<br> 将文件状态记录在文件中（默认在/var/lib/filebeat/registry）。此状态可以记住Harvester收集文件的偏移量。若连接不上输出设备，如ES等，filebeat会记录发送前的最后一行，并再可以连接的时候继续发送。Filebeat在运行的时候，Prospector状态会被记录在内存中。Filebeat重启的时候，利用registry记录的状态来进行重建，用来还原到重启之前的状态。每个Prospector会为每个找到的文件记录一个状态，对于每个文件，Filebeat存储唯一标识符以检测文件是否先前被收集。<br> Filebeat如何保证事件至少被输出一次：<br> Filebeat之所以能保证事件至少被传递到配置的输出一次，没有数据丢失，是因为filebeat将每个事件的传递状态保存在文件中。在未得到输出方确认时，filebeat会尝试一直发送，直到得到回应。若filebeat在传输过程中被关闭，则不会再关闭之前确认所有时事件。任何在filebeat关闭之前为确认的时间，都会在filebeat重启之后重新发送。这可确保至少发送一次，但有可能会重复。可通过设置<code>[shutdown_timeout](https://www.elastic.co/guide/en/beats/filebeat/5.5/configuration-global-options.html#shutdown-timeout)</code> 参数来设置关闭之前的等待事件回应的时间（默认禁用）。</p><h4 id="logstash工作原理" tabindex="-1"><a class="header-anchor" href="#logstash工作原理"><span>Logstash工作原理</span></a></h4><p>Logstash事件处理有三个阶段：inputs → filters → outputs。是一个接收，处理，转发日志的工具。支持系统日志，webserver日志，错误日志，应用日志，总之包括所有可以抛出来的日志类型。<br><img src="`+c+'" alt="" loading="lazy"></p><p>Input：输入数据到logstash。<br> 一些常用的输入为：<br> file：从文件系统的文件中读取，类似于tail -f命令<br> syslog：在514端口上监听系统日志消息，并根据RFC3164标准进行解析<br> redis：从redis service中读取<br> beats：从filebeat中读取<br> Filters：数据中间处理，对数据进行操作。<br> 一些常用的过滤器为：<br> grok：解析任意文本数据，Grok 是 Logstash 最重要的插件。它的主要作用就是将文本格式的字符串，转换成为具体的结构化的数据，配合正则表达式使用。内置120多个解析语法。<br> 官方提供的grok表达式：<a href="https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns" target="_blank" rel="noopener noreferrer">https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns</a><br> grok在线调试：<a href="https://grokdebug.herokuapp.com/" target="_blank" rel="noopener noreferrer">https://grokdebug.herokuapp.com/</a><br> mutate：对字段进行转换。例如对字段进行删除、替换、修改、重命名等。<br> drop：丢弃一部分events不进行处理。<br> clone：拷贝 event，这个过程中也可以添加或移除字段。<br> geoip：添加地理信息(为前台kibana图形化展示使用)<br> Outputs：outputs是logstash处理管道的最末端组件。一个event可以在处理过程中经过多重输出，但是一旦所有的outputs都执行结束，这个event也就完成生命周期。<br> 一些常见的outputs为：<br> elasticsearch：可以高效的保存数据，并且能够方便和简单的进行查询。<br> file：将event数据保存到文件中。<br> graphite：将event数据发送到图形化组件中，一个很流行的开源存储图形化展示的组件。<br> Codecs：codecs 是基于数据流的过滤器，它可以作为input，output的一部分配置。Codecs可以帮助你轻松的分割发送过来已经被序列化的数据。<br> 一些常见的codecs：<br> json：使用json格式对数据进行编码/解码。<br> multiline：将汇多个事件中数据汇总为一个单一的行。比如：java异常信息和堆栈信息。</p><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><p>Filebeat：<br><a href="https://www.elastic.co/cn/products/beats/filebeat" target="_blank" rel="noopener noreferrer">https://www.elastic.co/cn/products/beats/filebeat</a><br><a href="https://www.elastic.co/guide/en/beats/filebeat/5.6/index.html" target="_blank" rel="noopener noreferrer">https://www.elastic.co/guide/en/beats/filebeat/5.6/index.html</a><br> Logstash：<br><a href="https://www.elastic.co/cn/products/logstash" target="_blank" rel="noopener noreferrer">https://www.elastic.co/cn/products/logstash</a><br><a href="https://www.elastic.co/guide/en/logstash/5.6/index.html" target="_blank" rel="noopener noreferrer">https://www.elastic.co/guide/en/logstash/5.6/index.html</a><br> Kibana:<br><a href="https://www.elastic.co/cn/products/kibana" target="_blank" rel="noopener noreferrer">https://www.elastic.co/cn/products/kibana</a><br><a href="https://www.elastic.co/guide/en/kibana/5.5/index.html" target="_blank" rel="noopener noreferrer">https://www.elastic.co/guide/en/kibana/5.5/index.html</a></p><p>ELK部署：<a href="https://www.cnblogs.com/morang/p/17976704/devops-docker-elk-install-nginx-config" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/morang/p/17976704/devops-docker-elk-install-nginx-config</a></p>',19)]))}const m=t(h,[["render",p],["__file","elk.html.vue"]]),k=JSON.parse('{"path":"/middleware/smallService/distributedObservability/distributedLogger/elk.html","title":"分布式日志-ELK","lang":"zh-CN","frontmatter":{"title":"分布式日志-ELK","lang":"zh-CN","date":"2023-07-27T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"fenbushirizhi-elk","slug":"gp5f20","docsId":"31182770","description":"概述 ELK 是Elastic公司提供的一套完整的日志收集以及展示的解决方案，是三个产品的首字母缩写，分别是ElasticSearch、Logstash 和 Kibana。 Elasticsearch是实时全文搜索和分析引擎，提供搜集、分析、存储数据三大功能 Logstash是一个用来搜集、分析、过滤日志的工具 Kibana是一个基于Web的图形界面，...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/smallService/distributedObservability/distributedLogger/elk.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"分布式日志-ELK"}],["meta",{"property":"og:description","content":"概述 ELK 是Elastic公司提供的一套完整的日志收集以及展示的解决方案，是三个产品的首字母缩写，分别是ElasticSearch、Logstash 和 Kibana。 Elasticsearch是实时全文搜索和分析引擎，提供搜集、分析、存储数据三大功能 Logstash是一个用来搜集、分析、过滤日志的工具 Kibana是一个基于Web的图形界面，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1612400813631-915ac8ae-8cb1-40a3-b8c8-4c6853f76849.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-13T14:11:27.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-07-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-13T14:11:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分布式日志-ELK\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1612400813631-915ac8ae-8cb1-40a3-b8c8-4c6853f76849.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1612400813599-d9159018-4993-45d8-9ef6-f444ede05eb9.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1612400813562-90a3ffbd-86b9-4eb5-b814-cd331dbf5b60.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1612400813582-91eed2ec-712b-4037-a9a4-57f2c3a60022.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1612400813448-340d045a-4d6d-43f4-aa97-1c80a5bb5cf6.png\\"],\\"datePublished\\":\\"2023-07-27T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-13T14:11:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"为什么用到ELK","slug":"为什么用到elk","link":"#为什么用到elk","children":[{"level":4,"title":"ELK架构图","slug":"elk架构图","link":"#elk架构图","children":[]},{"level":4,"title":"Filebeat工作原理","slug":"filebeat工作原理","link":"#filebeat工作原理","children":[]},{"level":4,"title":"Logstash工作原理","slug":"logstash工作原理","link":"#logstash工作原理","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1710339087000,"contributors":[{"name":"azrng","username":"azrng","email":"itzhangyunpeng@163.com","commits":3},{"name":"zhangyunpeng","username":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":7.95,"words":2385},"filePathRelative":"middleware/smallService/distributedObservability/distributedLogger/elk.md","localizedDate":"2023年7月27日","excerpt":"<h2>概述</h2>\\n<p>ELK 是Elastic公司提供的一套<strong>完整的日志收集以及展示的解决方案</strong>，是三个产品的首字母缩写，分别是<strong>ElasticSearch</strong>、<strong>Logstash</strong>&nbsp;和&nbsp;<strong>Kibana</strong>。</p>\\n<ul>\\n<li>Elasticsearch是实时全文搜索和分析引擎，提供搜集、分析、存储数据三大功能</li>\\n<li>Logstash是一个用来搜集、分析、过滤日志的工具</li>\\n<li>Kibana是一个基于Web的图形界面，用于搜索、分析和可视化存储在      Elasticsearch指标中的日志数据</li>\\n</ul>","autoDesc":true}');export{m as comp,k as data};
