import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as a,b as s}from"./app-Bw62I61B.js";const e={},p=s(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>可以实现将请求头的内容进行原样返回出来</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>public <span class="token keyword">class</span> RequestIdMiddleware
<span class="token punctuation">{</span>
	private readonly RequestDelegate _next<span class="token punctuation">;</span>
	private const string RequestIdHeader = <span class="token string">&quot;X-RequestId&quot;</span><span class="token punctuation">;</span>

	public RequestIdMiddleware<span class="token punctuation">(</span>RequestDelegate next<span class="token punctuation">)</span> =&gt; this<span class="token punctuation">.</span>_next = next<span class="token punctuation">;</span>

	public async Task Invoke<span class="token punctuation">(</span>HttpContext context<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		IHttpRequestIdentifierFeature requestIdFeature = context<span class="token punctuation">.</span>Features<span class="token punctuation">.</span>Get&lt;IHttpRequestIdentifierFeature&gt;<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>requestIdFeature?<span class="token punctuation">.</span>TraceIdentifier <span class="token operator">!</span>= null<span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>IDictionary&lt;string<span class="token punctuation">,</span> StringValues&gt;<span class="token punctuation">)</span>context<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Headers<span class="token punctuation">)</span><span class="token punctuation">.</span>ContainsKey<span class="token punctuation">(</span><span class="token string">&quot;X-RequestId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
				requestIdFeature<span class="token punctuation">.</span>TraceIdentifier = <span class="token punctuation">(</span>string<span class="token punctuation">)</span>context<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Headers<span class="token punctuation">[</span><span class="token string">&quot;X-RequestId&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
			context<span class="token punctuation">.</span>Response<span class="token punctuation">.</span>Headers<span class="token punctuation">[</span><span class="token string">&quot;X-RequestId&quot;</span><span class="token punctuation">]</span> = <span class="token punctuation">(</span>StringValues<span class="token punctuation">)</span>requestIdFeature<span class="token punctuation">.</span>TraceIdentifier<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		await this<span class="token punctuation">.</span>_next<span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[p];function u(c,i){return t(),a("div",null,o)}const d=n(e,[["render",u],["__file","qingqiutouyuanyangfanhui.html.vue"]]),k=JSON.parse('{"path":"/dotnet/base/pipeline/middleware/tazhan/qingqiutouyuanyangfanhui.html","title":"请求头原样返回","lang":"zh-CN","frontmatter":{"title":"请求头原样返回","lang":"zh-CN","date":"2023-07-01T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"qingqiutouyuanyangfanhui","slug":"wpafftznbhhrtuob","docsId":"131919013","description":"概述 可以实现将请求头的内容进行原样返回出来 操作","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/base/pipeline/middleware/tazhan/qingqiutouyuanyangfanhui.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"请求头原样返回"}],["meta",{"property":"og:description","content":"概述 可以实现将请求头的内容进行原样返回出来 操作"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-06T14:20:50.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-07-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-06T14:20:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"请求头原样返回\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-06T14:20:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1715005250000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.36,"words":109},"filePathRelative":"dotnet/base/pipeline/middleware/tazhan/qingqiutouyuanyangfanhui.md","localizedDate":"2023年7月1日","excerpt":"<h2>概述</h2>\\n<p>可以实现将请求头的内容进行原样返回出来</p>\\n<h2>操作</h2>\\n<div class=\\"language-powershell\\" data-ext=\\"powershell\\" data-title=\\"powershell\\"><pre class=\\"language-powershell\\"><code>public <span class=\\"token keyword\\">class</span> RequestIdMiddleware\\n<span class=\\"token punctuation\\">{</span>\\n\\tprivate readonly RequestDelegate _next<span class=\\"token punctuation\\">;</span>\\n\\tprivate const string RequestIdHeader = <span class=\\"token string\\">\\"X-RequestId\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n\\tpublic RequestIdMiddleware<span class=\\"token punctuation\\">(</span>RequestDelegate next<span class=\\"token punctuation\\">)</span> =&gt; this<span class=\\"token punctuation\\">.</span>_next = next<span class=\\"token punctuation\\">;</span>\\n\\n\\tpublic async Task Invoke<span class=\\"token punctuation\\">(</span>HttpContext context<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\tIHttpRequestIdentifierFeature requestIdFeature = context<span class=\\"token punctuation\\">.</span>Features<span class=\\"token punctuation\\">.</span>Get&lt;IHttpRequestIdentifierFeature&gt;<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>requestIdFeature?<span class=\\"token punctuation\\">.</span>TraceIdentifier <span class=\\"token operator\\">!</span>= null<span class=\\"token punctuation\\">)</span>\\n\\t\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>IDictionary&lt;string<span class=\\"token punctuation\\">,</span> StringValues&gt;<span class=\\"token punctuation\\">)</span>context<span class=\\"token punctuation\\">.</span>Request<span class=\\"token punctuation\\">.</span>Headers<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>ContainsKey<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"X-RequestId\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\t\\t\\t\\trequestIdFeature<span class=\\"token punctuation\\">.</span>TraceIdentifier = <span class=\\"token punctuation\\">(</span>string<span class=\\"token punctuation\\">)</span>context<span class=\\"token punctuation\\">.</span>Request<span class=\\"token punctuation\\">.</span>Headers<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"X-RequestId\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t\\tcontext<span class=\\"token punctuation\\">.</span>Response<span class=\\"token punctuation\\">.</span>Headers<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"X-RequestId\\"</span><span class=\\"token punctuation\\">]</span> = <span class=\\"token punctuation\\">(</span>StringValues<span class=\\"token punctuation\\">)</span>requestIdFeature<span class=\\"token punctuation\\">.</span>TraceIdentifier<span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t\\tawait this<span class=\\"token punctuation\\">.</span>_next<span class=\\"token punctuation\\">(</span>context<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,k as data};
