import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-DMmdIwn0.js";const p={},o=t(`<h3 id="ipaddressrange" tabindex="-1"><a class="header-anchor" href="#ipaddressrange"><span>IPAddressRange</span></a></h3><p>通过引用nuget包IPAddressRange来处理判断一个ip是否在一个ip区域内</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">// rangeA.Begin is &quot;192.168.0.0&quot;, and rangeA.End is &quot;192.168.0.255&quot;.</span>
<span class="token class-name"><span class="token keyword">var</span></span> rangeA <span class="token operator">=</span> IPAddressRange<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.0.0/255.255.255.0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
rangeA<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>IPAddress<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.0.34&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// is True.</span>
rangeA<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>IPAddress<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.10.1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// is False.</span>
rangeA<span class="token punctuation">.</span><span class="token function">ToCidrString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// is 192.168.0.0/24</span>

<span class="token comment">// rangeB.Begin is &quot;192.168.0.10&quot;, and rangeB.End is &quot;192.168.10.20&quot;.</span>
<span class="token class-name"><span class="token keyword">var</span></span> rangeB1 <span class="token operator">=</span> IPAddressRange<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.0.10 - 192.168.10.20&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
rangeB1<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>IPAddress<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.3.45&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// is True.</span>
rangeB1<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>IPAddress<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.0.9&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// is False.</span>

<span class="token comment">// 支持快捷范围描述。</span>
<span class="token comment">// (&quot;192.168.10.10-20&quot; means range of begin:192.168.10.10 to end:192.168.10.20.)</span>
<span class="token class-name"><span class="token keyword">var</span></span> rangeB2 <span class="token operator">=</span> IPAddressRange<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.10.10-20&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 支持CIDR表达式和IPv6。</span>
<span class="token class-name"><span class="token keyword">var</span></span> rangeC <span class="token operator">=</span> IPAddressRange<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;fe80::/10&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
rangeC<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>IPAddress<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;fe80::d503:4ee:3882:c586%3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// is True.</span>
rangeC<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>IPAddress<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;::1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// is False.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ip转long" tabindex="-1"><a class="header-anchor" href="#ip转long"><span>Ip转Long</span></a></h3><p>公共扩展类</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// ip地址扩展类</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">IpAddressExtensions</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// ip地址转整型数据</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ip<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>ip地址<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> <span class="token function">IpConvertLong</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name"><span class="token keyword">string</span></span> ip<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> items <span class="token operator">=</span> ip<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token char">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">long</span><span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">24</span>
        <span class="token operator">|</span> <span class="token keyword">long</span><span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">16</span>
        <span class="token operator">|</span> <span class="token keyword">long</span><span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span>
        <span class="token operator">|</span> <span class="token keyword">long</span><span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 整型数据转ip地址</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ipLong<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>ip整形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">LongConvertIp</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name"><span class="token keyword">long</span></span> ipLong<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ipLong <span class="token operator">&gt;&gt;</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token char">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ipLong <span class="token operator">&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token char">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ipLong <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token char">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span>ipLong <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> longIp <span class="token operator">=</span> <span class="token string">&quot;192.168.1.70&quot;</span><span class="token punctuation">.</span><span class="token function">IpConvertLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> originIp <span class="token operator">=</span> longIp<span class="token punctuation">.</span><span class="token function">LongConvertIp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用场景：可以ip段查询使用，比如我们有一个用户表保存有登录的ip，我们需要查询在某一个ip段内的数据，那么我们在存储用户ip的时候，我们可以将用户ip转long后的数据也存储起来，然后我们将用户输入的ip段进行转long，然后直接进行long大小值比较。</p><h3 id="ip网段校验" tabindex="-1"><a class="header-anchor" href="#ip网段校验"><span>IP网段校验</span></a></h3><p>校验IP前三位必须一样并且起始IP要小于结束IP</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> startIp <span class="token operator">=</span> <span class="token string">&quot;192.168.1.70&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> endIp <span class="token operator">=</span> <span class="token string">&quot;192.168.1.60&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> startIpPosition <span class="token operator">=</span> startIp<span class="token punctuation">.</span><span class="token function">LastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> StringComparison<span class="token punctuation">.</span>Ordinal<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> endIpPosition <span class="token operator">=</span> endIp<span class="token punctuation">.</span><span class="token function">LastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> StringComparison<span class="token punctuation">.</span>Ordinal<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//验证前三段一致</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>startIp<span class="token punctuation">[</span><span class="token range operator">..</span>startIpPosition<span class="token punctuation">]</span> <span class="token operator">!=</span> endIp<span class="token punctuation">[</span><span class="token range operator">..</span>endIpPosition<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;不在同一个网段中&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> statrIpLastNum <span class="token operator">=</span>
    Convert<span class="token punctuation">.</span><span class="token function">ToInt32</span><span class="token punctuation">(</span>startIp<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span>startIpPosition <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> startIp<span class="token punctuation">.</span>Length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> startIpPosition<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> endIpLastNum <span class="token operator">=</span>
    Convert<span class="token punctuation">.</span><span class="token function">ToInt32</span><span class="token punctuation">(</span>endIp<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span>endIpPosition <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> endIp<span class="token punctuation">.</span>Length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> endIpPosition<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> verifyRange <span class="token operator">=</span> statrIpLastNum <span class="token keyword">is</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">and</span> <span class="token operator">&lt;=</span> <span class="token number">255</span> <span class="token operator">&amp;&amp;</span> endIpLastNum <span class="token keyword">is</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">and</span> <span class="token operator">&lt;=</span> <span class="token number">255</span> <span class="token operator">&amp;&amp;</span> statrIpLastNum <span class="token operator">&lt;=</span> endIpLastNum<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>verifyRange<span class="token punctuation">)</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;起始IP必须小于结束IP&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),e=[o];function c(l,u){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","ipchuli.html.vue"]]),d=JSON.parse('{"path":"/dotnet/commonMethod/ipchuli.html","title":"IP处理","lang":"zh-CN","frontmatter":{"title":"IP处理","lang":"zh-CN","date":"2022-04-05T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"ipchuli","slug":"iz0uxd","docsId":"60842410","description":"IPAddressRange 通过引用nuget包IPAddressRange来处理判断一个ip是否在一个ip区域内 Ip转Long 公共扩展类 使用 使用场景：可以ip段查询使用，比如我们有一个用户表保存有登录的ip，我们需要查询在某一个ip段内的数据，那么我们在存储用户ip的时候，我们可以将用户ip转long后的数据也存储起来，然后我们将用户输入的...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/commonMethod/ipchuli.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"IP处理"}],["meta",{"property":"og:description","content":"IPAddressRange 通过引用nuget包IPAddressRange来处理判断一个ip是否在一个ip区域内 Ip转Long 公共扩展类 使用 使用场景：可以ip段查询使用，比如我们有一个用户表保存有登录的ip，我们需要查询在某一个ip段内的数据，那么我们在存储用户ip的时候，我们可以将用户ip转long后的数据也存储起来，然后我们将用户输入的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T13:49:46.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-04-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-27T13:49:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"IP处理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-05T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-27T13:49:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":3,"title":"IPAddressRange","slug":"ipaddressrange","link":"#ipaddressrange","children":[]},{"level":3,"title":"Ip转Long","slug":"ip转long","link":"#ip转long","children":[]},{"level":3,"title":"IP网段校验","slug":"ip网段校验","link":"#ip网段校验","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1698414586000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.75,"words":525},"filePathRelative":"dotnet/commonMethod/ipchuli.md","localizedDate":"2022年4月5日","excerpt":"<h3>IPAddressRange</h3>\\n<p>通过引用nuget包IPAddressRange来处理判断一个ip是否在一个ip区域内</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token comment\\">// rangeA.Begin is \\"192.168.0.0\\", and rangeA.End is \\"192.168.0.255\\".</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> rangeA <span class=\\"token operator\\">=</span> IPAddressRange<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Parse</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"192.168.0.0/255.255.255.0\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nrangeA<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Contains</span><span class=\\"token punctuation\\">(</span>IPAddress<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Parse</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"192.168.0.34\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// is True.</span>\\nrangeA<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Contains</span><span class=\\"token punctuation\\">(</span>IPAddress<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Parse</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"192.168.10.1\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// is False.</span>\\nrangeA<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ToCidrString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// is 192.168.0.0/24</span>\\n\\n<span class=\\"token comment\\">// rangeB.Begin is \\"192.168.0.10\\", and rangeB.End is \\"192.168.10.20\\".</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> rangeB1 <span class=\\"token operator\\">=</span> IPAddressRange<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Parse</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"192.168.0.10 - 192.168.10.20\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nrangeB1<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Contains</span><span class=\\"token punctuation\\">(</span>IPAddress<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Parse</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"192.168.3.45\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// is True.</span>\\nrangeB1<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Contains</span><span class=\\"token punctuation\\">(</span>IPAddress<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Parse</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"192.168.0.9\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// is False.</span>\\n\\n<span class=\\"token comment\\">// 支持快捷范围描述。</span>\\n<span class=\\"token comment\\">// (\\"192.168.10.10-20\\" means range of begin:192.168.10.10 to end:192.168.10.20.)</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> rangeB2 <span class=\\"token operator\\">=</span> IPAddressRange<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Parse</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"192.168.10.10-20\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 支持CIDR表达式和IPv6。</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> rangeC <span class=\\"token operator\\">=</span> IPAddressRange<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Parse</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"fe80::/10\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nrangeC<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Contains</span><span class=\\"token punctuation\\">(</span>IPAddress<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Parse</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"fe80::d503:4ee:3882:c586%3\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// is True.</span>\\nrangeC<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Contains</span><span class=\\"token punctuation\\">(</span>IPAddress<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Parse</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"::1\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// is False.</span>\\n</code></pre></div>","autoDesc":true}');export{r as comp,d as data};
