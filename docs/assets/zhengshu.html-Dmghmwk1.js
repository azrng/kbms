import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as r,c as o,b as e,e as n,f as s,d as t}from"./app-CBxp4zeL.js";const c={},p=t('<h2 id="let-s-encrypt" tabindex="-1"><a class="header-anchor" href="#let-s-encrypt"><span>Let’s Encrypt</span></a></h2><p>Let’s Encrypt 是一个证书颁发机构（CA）。要从 Let’s Encrypt 获取网站域名的证书，只需要证明对域名的实际控制权即可。有两种验证方式，通过域名解析添加 TXT 记录，或是在网站添加指定的验证文件（实现访问指定地址返回要求的字符串即可，不过不支持有通配符的申请）。</p><p>证书自动申请使用Certes(https://github.com/fszlin/certes)库来实现 Let’s Encrypt 证书的自动续签。</p><h2 id="openssl" tabindex="-1"><a class="header-anchor" href="#openssl"><span>OpenSSL</span></a></h2><h3 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h3><h4 id="申请" tabindex="-1"><a class="header-anchor" href="#申请"><span>申请</span></a></h4>',6),d={href:"http://slproweb.com/products/Win32OpenSSL.html",target:"_blank",rel:"noopener noreferrer"},u=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>openssl genrsa <span class="token parameter variable">-out</span> private_ids.key <span class="token number">2048</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>申请一个2048位的RSA加密私钥.目录下将多了一个名为private_ids.key的文件. 2.申请一个公钥</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-x509</span> <span class="token parameter variable">-key</span> private_ids.key <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-out</span> public_ids.crt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中 -key private_ids.key是指定这个公钥的配对私钥,就是第一步申请的私钥.x509是X.509公钥格式标准. 接下来会提示你输入一些信息,用于颁发机构的信息展示,如公司,所在国家,城市等</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code>You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter &#39;.&#39;, the field will be left blank.
-----
Country Name (2 letter code) [AU]:CN
State or Province Name (full name) [Some-State]:ShangHai
Locality Name (eg, city) []:ShangHai
Organization Name (eg, company) [Internet Widgits Pty Ltd]:XXXXX
Organizational Unit Name (eg, section) []:XXXXX-XXXXX
Common Name (e.g. server FQDN or YOUR name) []:XXXXX
Email Address []:XXXXX@outlook.COM
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果不想每次都输入这些信息,可以使用“-config 配置文件目录”的方式指定配置文件,安装后Openssl后,有一个名为openssl.cnf的默认的配置文件在安装目录bin/cnf目录中.编辑该文件,找到req_distinguished_name</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code>[ req_distinguished_name ]
countryName         = Country Name (2 letter code)
countryName_default     = AU
countryName_min         = 2
countryName_max         = 2
 
stateOrProvinceName     = State or Province Name (full name)
stateOrProvinceName_default = Some-State
 
localityName            = Locality Name (eg, city)
 
0.organizationName      = Organization Name (eg, company)
0.organizationName_default  = Internet Widgits Pty Ltd
 
<span class="token comment">## we can do this but it is not needed normally :-)</span>
<span class="token comment">#1.organizationName     = Second Organization Name (eg, company)</span>
<span class="token comment">#1.organizationName_default = World Wide Web Pty Ltd</span>
 
organizationalUnitName      = Organizational Unit Name (eg, section)
<span class="token comment">#organizationalUnitName_default =</span>
 
commonName          = Common Name (e.g. server FQDN or YOUR name)
commonName_max          = 64
 
emailAddress            = Email Address
emailAddress_max        = 64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里可以指定这些参数的默认值,如指定国家默认值为CN.把countryName_default改成CN就行了.申请完公钥后,目录下将多了一个public_ids.crt的文件. 3.公钥及私钥的提取加密.由于传播安全方面的考虑,需要将公钥及私钥加密,微软支持PCK12(公钥加密技术12号标准：Public Key Cryptography Standards #12),PCK12将公钥和私钥合在一个PFX后缀文件并用密码保护,如要提取公钥和私钥需要密码确认.另一种觉的公钥私钥提取加密方式是JKS(JAVA Key Store)用于JAVA环境的公钥和私钥提取.这两种格式可以相互转换. 在命令行中输入</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>openssl pkcs12 <span class="token parameter variable">-export</span> <span class="token parameter variable">-in</span> public_ids.crt <span class="token parameter variable">-inkey</span> private_ids.key <span class="token parameter variable">-out</span> ids.pfx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输入密码和确认密码后,当前目录会多出一个文件:ids.pfx.这就是我们要用的密钥证书了.</p><h4 id="使用密钥" tabindex="-1"><a class="header-anchor" href="#使用密钥"><span>使用密钥</span></a></h4><p>将第二步生成ids.pfx文件复制服务器发布目录,如果只是为了测试,可以复制到本地项目目录.将目录信息及证书提取密码存入配置文件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>Environment<span class="token punctuation">.</span><span class="token function">IsDevelopment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    builder<span class="token punctuation">.</span><span class="token function">AddDeveloperSigningCredential</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
    builder<span class="token punctuation">.</span><span class="token function">AddSigningCredential</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">X509Certificate2</span><span class="token punctuation">(</span>Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span>CurrentDirectory<span class="token punctuation">,</span> <span class="token string">&quot;ids.pfx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;your_password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果想调试环境也统一证书,可以把环境判断去掉,只用AddSigningCredential方式加载密钥证书.</p><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,15),m={href:"https://learn.microsoft.com/zh-cn/dotnet/core/additional-tools/self-signed-certificates-guide#with-openssl",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.cnblogs.com/osbreak/p/9486188.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.cnblogs.com/wjqhuaxia/p/13829680.html",target:"_blank",rel:"noopener noreferrer"},b=e("p",null,"https://mp.weixin.qq.com/s/hK0-tdhQan2CbmGO7RgvAw | 告别证书配置烦恼：使用Caddy或OpenResty快速配置免费的HTTPS",-1),g=e("p",null,"证书自动续期：https://mp.weixin.qq.com/s/N8W6el6ahJh8Qy6A8GLs9g",-1);function k(y,f){const a=l("ExternalLinkIcon");return r(),o("div",null,[p,e("p",null,[e("a",d,[n("下载openssl安装包"),s(a)]),n("并安装,打开命令行,输入openssl,如果提示Openssl不是内部或外部命令,需要设置一下环境变量,把Openssl的安装目录加入到path环境变量. 另外新建一个环境变量,如以下所示,名称为：OPENSSL_CONF,指向你安装目录的openssl.cfg文件,现在输入openssl应该没有问题了. 新建一个文件夹用于放置密钥,在该目录打开命令行. 1.申请一个私钥,在命令行中输入:")]),u,e("p",null,[n("生成自签名证书："),e("a",m,[n("https://learn.microsoft.com/zh-cn/dotnet/core/additional-tools/self-signed-certificates-guide#with-openssl"),s(a)]),n(" OpenSSL生成密钥证书："),e("a",v,[n("https://www.cnblogs.com/osbreak/p/9486188.html"),s(a)])]),e("p",null,[n("OpenSSL生成rsa密钥证书："),e("a",h,[n("https://www.cnblogs.com/wjqhuaxia/p/13829680.html"),s(a)])]),b,g])}const x=i(c,[["render",k],["__file","zhengshu.html.vue"]]),S=JSON.parse('{"path":"/soft/serverConfigs/zhengshu.html","title":"证书","lang":"zh-CN","frontmatter":{"title":"证书","lang":"zh-CN","date":"2023-07-22T00:00:00.000Z","publish":true,"author":"azrng","order":4,"category":["服务器或证书"],"tag":["无"],"filename":"zhengshu","description":"Let’s Encrypt Let’s Encrypt 是一个证书颁发机构（CA）。要从 Let’s Encrypt 获取网站域名的证书，只需要证明对域名的实际控制权即可。有两种验证方式，通过域名解析添加 TXT 记录，或是在网站添加指定的验证文件（实现访问指定地址返回要求的字符串即可，不过不支持有通配符的申请）。 证书自动申请使用Certes(htt...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/soft/serverConfigs/zhengshu.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"证书"}],["meta",{"property":"og:description","content":"Let’s Encrypt Let’s Encrypt 是一个证书颁发机构（CA）。要从 Let’s Encrypt 获取网站域名的证书，只需要证明对域名的实际控制权即可。有两种验证方式，通过域名解析添加 TXT 记录，或是在网站添加指定的验证文件（实现访问指定地址返回要求的字符串即可，不过不支持有通配符的申请）。 证书自动申请使用Certes(htt..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-06T08:01:13.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-07-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-06T08:01:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"证书\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-06T08:01:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"Let’s Encrypt","slug":"let-s-encrypt","link":"#let-s-encrypt","children":[]},{"level":2,"title":"OpenSSL","slug":"openssl","link":"#openssl","children":[{"level":3,"title":"操作","slug":"操作","link":"#操作","children":[{"level":4,"title":"申请","slug":"申请","link":"#申请","children":[]},{"level":4,"title":"使用密钥","slug":"使用密钥","link":"#使用密钥","children":[]}]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1690016670000,"updatedTime":1712390473000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":3.74,"words":1123},"filePathRelative":"soft/serverConfigs/zhengshu.md","localizedDate":"2023年7月22日","excerpt":"<h2>Let’s Encrypt</h2>\\n<p>Let’s Encrypt 是一个证书颁发机构（CA）。要从 Let’s Encrypt 获取网站域名的证书，只需要证明对域名的实际控制权即可。有两种验证方式，通过域名解析添加 TXT 记录，或是在网站添加指定的验证文件（实现访问指定地址返回要求的字符串即可，不过不支持有通配符的申请）。</p>\\n<p>证书自动申请使用Certes(https://github.com/fszlin/certes)库来实现 Let’s Encrypt 证书的自动续签。</p>\\n<h2>OpenSSL</h2>\\n<h3>操作</h3>\\n<h4>申请</h4>\\n<p><a href=\\"http://slproweb.com/products/Win32OpenSSL.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">下载openssl安装包</a>并安装,打开命令行,输入openssl,如果提示Openssl不是内部或外部命令,需要设置一下环境变量,把Openssl的安装目录加入到path环境变量.\\n另外新建一个环境变量,如以下所示,名称为：OPENSSL_CONF,指向你安装目录的openssl.cfg文件,现在输入openssl应该没有问题了.\\n新建一个文件夹用于放置密钥,在该目录打开命令行.\\n1.申请一个私钥,在命令行中输入:</p>","autoDesc":true}');export{x as comp,S as data};
