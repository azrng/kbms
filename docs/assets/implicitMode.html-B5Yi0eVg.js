import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as p,c as o,b as n,e as s,f as c,d as l}from"./app-D8HBJYTp.js";const i={},r=l(`<h2 id="_5-简化模式" tabindex="-1"><a class="header-anchor" href="#_5-简化模式"><span>5. 简化模式</span></a></h2><blockquote><p>有些 Web 应用是纯前端应用，没有后端，必须将令牌储存在前端。RFC 6749 就规定了这种方式，允许直接向前端颁发令牌。这种方式没有授权码这个中间步骤，所以称为（授权码）&quot;简化&quot;（implicit）。</p></blockquote><p>「简化模式」（implicit grant type）「不通过第三方应用程序的服务器」，直接在浏览器中向认证服务器申请令牌，跳过了&quot;授权码&quot;这个步骤(授权码模式后续会说明)。所有步骤在浏览器中完成，令牌对访问者是可见的，且客户端不需要认证。</p><blockquote><p>这种方式把令牌直接传给前端，是很不安全的。因此，只能用于一些安全要求不高的场景，并且令牌的有效期必须非常短，通常就是会话期间（session）有效，浏览器关掉，令牌就失效了。</p></blockquote><h3 id="_5-1-适用场景" tabindex="-1"><a class="header-anchor" href="#_5-1-适用场景"><span>5.1 适用场景</span></a></h3><p>这种模式的使用场景是基于浏览器的应用</p><blockquote><p>这种模式基于安全性考虑，建议把token时效设置短一些, 不支持refresh token</p></blockquote><h3 id="_5-2-密码授权流程" tabindex="-1"><a class="header-anchor" href="#_5-2-密码授权流程"><span>5.2 密码授权流程</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>     <span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">+</span>
     <span class="token operator">|</span> Resource <span class="token operator">|</span>
     <span class="token operator">|</span>  Owner   <span class="token operator">|</span>
     <span class="token operator">|</span>          <span class="token operator">|</span>
     <span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">+</span>
          <span class="token operator">^</span>
          <span class="token operator">|</span>
         <span class="token punctuation">(</span>B<span class="token punctuation">)</span>
     <span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">|</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span>          Client Identifier     <span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span>
     <span class="token operator">|</span>         <span class="token operator">-</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token operator">--</span> <span class="token operator">&amp;</span> Redirection URI <span class="token operator">--</span><span class="token operator">-&gt;</span><span class="token operator">|</span>               <span class="token operator">|</span>
     <span class="token operator">|</span>  User<span class="token operator">-</span>   <span class="token operator">|</span>                                <span class="token operator">|</span> Authorization <span class="token operator">|</span>
     <span class="token operator">|</span>  Agent  <span class="token operator">-</span><span class="token operator">|</span><span class="token operator">--</span><span class="token operator">--</span><span class="token punctuation">(</span>B<span class="token punctuation">)</span><span class="token operator">--</span> User authenticates <span class="token operator">--</span><span class="token operator">&gt;</span><span class="token operator">|</span>     Server    <span class="token operator">|</span>
     <span class="token operator">|</span>          <span class="token operator">|</span>                                <span class="token operator">|</span>               <span class="token operator">|</span>
     <span class="token operator">|</span>          <span class="token operator">|</span><span class="token operator">&lt;</span><span class="token operator">--</span><span class="token operator">-</span><span class="token punctuation">(</span>C<span class="token punctuation">)</span><span class="token operator">--</span><span class="token operator">-</span> Redirection URI <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">&lt;</span><span class="token operator">|</span>               <span class="token operator">|</span>
     <span class="token operator">|</span>          <span class="token operator">|</span>          with Access Token     <span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span>
     <span class="token operator">|</span>          <span class="token operator">|</span>            <span class="token keyword">in</span> Fragment
     <span class="token operator">|</span>          <span class="token operator">|</span>                                <span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span>
     <span class="token operator">|</span>          <span class="token operator">|</span><span class="token operator">--</span><span class="token operator">--</span><span class="token punctuation">(</span>D<span class="token punctuation">)</span><span class="token operator">--</span><span class="token operator">-</span> Redirection URI <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">&gt;</span><span class="token operator">|</span>   Web<span class="token operator">-</span>Hosted  <span class="token operator">|</span>
     <span class="token operator">|</span>          <span class="token operator">|</span>          without Fragment      <span class="token operator">|</span>     Client    <span class="token operator">|</span>
     <span class="token operator">|</span>          <span class="token operator">|</span>                                <span class="token operator">|</span>    Resource   <span class="token operator">|</span>
     <span class="token operator">|</span>     <span class="token punctuation">(</span>F<span class="token punctuation">)</span>  <span class="token operator">|</span><span class="token operator">&lt;</span><span class="token operator">--</span><span class="token operator">-</span><span class="token punctuation">(</span>E<span class="token punctuation">)</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span> Script <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">&lt;</span><span class="token operator">|</span>               <span class="token operator">|</span>
     <span class="token operator">|</span>          <span class="token operator">|</span>                                <span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span>
     <span class="token operator">+</span><span class="token operator">-</span><span class="token operator">|</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">+</span>
       <span class="token operator">|</span>    <span class="token operator">|</span>
      <span class="token punctuation">(</span>A<span class="token punctuation">)</span>  <span class="token punctuation">(</span>G<span class="token punctuation">)</span> Access Token
       <span class="token operator">|</span>    <span class="token operator">|</span>
       <span class="token operator">^</span>    v
     <span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span>
     <span class="token operator">|</span>         <span class="token operator">|</span>
     <span class="token operator">|</span>  Client <span class="token operator">|</span>
     <span class="token operator">|</span>         <span class="token operator">|</span>
     <span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>「简化授权流程描述」 （A）客户端携带客户端标识以及重定向URI到授权服务器； （B）用户确认是否要授权给客户端； （C）授权服务器得到许可后，跳转到指定的重定向地址，并将令牌也包含在了里面； （D）客户端不携带上次获取到的包含令牌的片段，去请求资源服务器； （E）资源服务器会向浏览器返回一个脚本； （F）浏览器会根据上一步返回的脚本，去提取在C步骤中获取到的令牌； （G）浏览器将令牌推送给客户端。</p><h4 id="_5-2-1-过程详解" tabindex="-1"><a class="header-anchor" href="#_5-2-1-过程详解"><span>5.2.1 过程详解</span></a></h4><p>访问令牌请求</p><table><thead><tr><th>参数</th><th>是否必须</th><th>含义</th></tr></thead><tbody><tr><td>response_type</td><td>必需</td><td>表示授权类型，此处的值固定为&quot;token&quot;</td></tr><tr><td>client_id</td><td>必需</td><td>客户端ID</td></tr><tr><td>redirect_uri</td><td>可选</td><td>表示重定向的URI</td></tr><tr><td>scope</td><td>可选</td><td>表示授权范围。</td></tr><tr><td>state</td><td>可选</td><td>表示随机字符串</td></tr></tbody></table><p>「（1）资源服务器生成授权URL并将用户重定向到授权服务器」 (用户的操作：用户访问https://resourcesServer/index.html跳转到登录地址，选择授权服务器方式登录) 在授权开始之前，它首先生成state参数(随机字符串)。client端将需要存储这个（cookie，会话或其他方式），以便在下一步中使用。 第一步，A 网站提供一个链接，要求用户跳转到 B 网站，授权用户数据给 A 网站使用。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>生成的授权URL如上所述（如上），请求这个地址后重定向访问授权服务器，其中 response_type参数为token<span class="token punctuation">,</span>表示直接返回令牌。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>「（2）验证授权服务器登陆状态」 (用户的操作：如果未登陆用账号 User，密码12345登陆https://oauth2Server/login，如果已登陆授权服务器不需要此步骤) 如果未登陆账号，自动跳转到授权服务器登陆地址，登陆授权服务器以后用户被重定向client端</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>resourcesServer<span class="token operator">/</span><span class="token keyword">implicit</span><span class="token punctuation">.</span>html  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如已提前登陆授权服务器或授权服务器登陆会话还存在自动重定向到client端</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>resourcesServer<span class="token operator">/</span><span class="token keyword">implicit</span><span class="token punctuation">.</span>html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>「（3）验证状态参数」 (用户的操作：无需操作) 用户被重定向回客户机，URL中现在有一个片段包含访问令牌以及一些其他信息。 用户跳转到 B 网站，登录后同意给予 A 网站授权。这时，B 网站就会跳回redirect_uri参数指定的跳转网址，并且把令牌作为 URL 参数，传给 A 网站。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>resourcesServer<span class="token operator">/</span>authorization<span class="token operator">-</span>code<span class="token punctuation">.</span>html

\\#access_token<span class="token operator">=</span><span class="token operator">&amp;</span>token_type<span class="token operator">=</span>Bearer<span class="token operator">&amp;</span>expires_in<span class="token operator">=</span><span class="token number">3600</span><span class="token operator">&amp;</span>scope<span class="token operator">=</span>photo<span class="token operator">&amp;</span>state<span class="token operator">=</span>随机字符串
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，token参数就是令牌，A网站因此直接在前端拿到令牌。</p><blockquote><p>注意，令牌的位置是 URL 锚点（fragment），而不是查询字符串（querystring），这是因为 OAuth 2.0 允许跳转网址是 HTTP 协议，因此存在&quot;中间人攻击&quot;的风险，而浏览器跳转时，锚点不会发到服务器，就减少了泄漏令牌的风险。</p></blockquote><p>用户使用这个令牌访问资源服务器，当令牌失效时使用刷新令牌去换取新的令牌</p><h3 id="_5-3-实践" tabindex="-1"><a class="header-anchor" href="#_5-3-实践"><span>5.3 实践</span></a></h3><h4 id="_5-3-1-搭建认证授权服务" tabindex="-1"><a class="header-anchor" href="#_5-3-1-搭建认证授权服务"><span>5.3.1 搭建认证授权服务</span></a></h4><p>使用我们之前创建的AuthCenterInMemory项目。</p><h5 id="_5-3-1-1-配置内容" tabindex="-1"><a class="header-anchor" href="#_5-3-1-1-配置内容"><span>5.3.1.1 配置内容</span></a></h5><p>修改IdentityConfig文件内容</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">IdentityConfig</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 资源</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>IdentityResource<span class="token punctuation">&gt;</span></span> IdentityResources <span class="token operator">=&gt;</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">IdentityResource<span class="token punctuation">[</span><span class="token punctuation">]</span></span>
        <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">IdentityResources<span class="token punctuation">.</span>OpenId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">IdentityResources<span class="token punctuation">.</span>Profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">/*
     在3.1.x 到 4.x 的变更中，ApiResource 的 Scope 正式独立出来为 ApiScope 对象，区别ApiResource 和 Scope的关系,
     Scope 是属于ApiResource 的一个属性，可以包含多个Scope。
     */</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>ApiResource<span class="token punctuation">&gt;</span></span> ApiResources <span class="token operator">=&gt;</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ApiResource<span class="token punctuation">[</span><span class="token punctuation">]</span></span>
        <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ApiResource</span><span class="token punctuation">(</span><span class="token string">&quot;API01&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;api1DisplayName&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                Scopes <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;client_scope1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                ApiSecrets <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Secret</span><span class="token punctuation">(</span><span class="token string">&quot;secrets&quot;</span><span class="token punctuation">.</span><span class="token function">Sha256</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//api密钥</span>
                UserClaims <span class="token operator">=</span> <span class="token punctuation">{</span>JwtClaimTypes<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> JwtClaimTypes<span class="token punctuation">.</span>NickName<span class="token punctuation">,</span> JwtClaimTypes<span class="token punctuation">.</span>Role<span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// Authorization Server保护了哪些 API Scope（作用域）</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>ApiScope<span class="token punctuation">&gt;</span></span> <span class="token function">GetApiScopes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ApiScope</span><span class="token punctuation">(</span><span class="token string">&quot;client_scope1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;client_scope1 DisplayName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 哪些客户端 Client（应用） 可以使用这个 Authorization Server</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>Client<span class="token punctuation">&gt;</span></span> <span class="token function">GetClients</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Client</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token comment">//客户端凭据模式</span>
                ClientId <span class="token operator">=</span> <span class="token string">&quot;ConsoleClient01&quot;</span><span class="token punctuation">,</span> <span class="token comment">//客户端的标识，要是唯一的</span>
                ClientSecrets <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Secret</span><span class="token punctuation">(</span><span class="token string">&quot;secrets&quot;</span><span class="token punctuation">.</span><span class="token function">Sha256</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//客户端密码，进行了加密</span>
                AllowedGrantTypes <span class="token operator">=</span>
                    GrantTypes
                        <span class="token punctuation">.</span>ClientCredentials<span class="token punctuation">,</span> <span class="token comment">//授权方式，这里采用的是客户端认证模式，只要ClientId，以及ClientSecrets正确即可访问对应的AllowedScopes里面的api资源</span>
                AllowedScopes <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token string">&quot;client_scope1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//定义这个客户端可以访问的scopes</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Client</span>
            <span class="token punctuation">{</span>
                <span class="token comment">//资源密码模式</span>

                ClientId <span class="token operator">=</span> <span class="token string">&quot;ResourceOwnerPassword01&quot;</span><span class="token punctuation">,</span>
                AllowedGrantTypes <span class="token operator">=</span> GrantTypes<span class="token punctuation">.</span>ResourceOwnerPassword<span class="token punctuation">,</span>
                ClientSecrets <span class="token operator">=</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Secret</span><span class="token punctuation">(</span><span class="token string">&quot;secrets&quot;</span><span class="token punctuation">.</span><span class="token function">Sha256</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                AllowedScopes <span class="token operator">=</span>
                <span class="token punctuation">{</span>
                    <span class="token string">&quot;client_scope1&quot;</span><span class="token punctuation">,</span>
                    IdentityServerConstants<span class="token punctuation">.</span>StandardScopes<span class="token punctuation">.</span>OpenId<span class="token punctuation">,</span>
                    IdentityServerConstants<span class="token punctuation">.</span>StandardScopes<span class="token punctuation">.</span>Email<span class="token punctuation">,</span>
                    IdentityServerConstants<span class="token punctuation">.</span>StandardScopes<span class="token punctuation">.</span>Phone<span class="token punctuation">,</span>
                    IdentityServerConstants<span class="token punctuation">.</span>StandardScopes<span class="token punctuation">.</span>Profile<span class="token punctuation">,</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Client</span>
            <span class="token punctuation">{</span>
                <span class="token comment">/*
                 创建一个mvc客户端，然后启动该身份服务器，然后启动客户端，让客户端去访问需要权限的接口，然后会直接转到身份服务器登录，
                 登录成功会重新跳转回去
                 */</span>
                ClientId <span class="token operator">=</span> <span class="token string">&quot;ImplicitClientMvc&quot;</span><span class="token punctuation">,</span>

                AllowedGrantTypes <span class="token operator">=</span> GrantTypes<span class="token punctuation">.</span>Implicit<span class="token punctuation">,</span> <span class="token comment">//GrantTypes.Code,</span>

                <span class="token comment">//登录后重定向到哪里</span>
                RedirectUris <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;http://localhost:5014/signin-oidc&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>

                <span class="token comment">//FrontChannelLogoutUri=&quot;&quot;,</span>
                <span class="token comment">//注销后重定向到哪里</span>
                PostLogoutRedirectUris <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;http://localhost:5014/signout-callback-oidc&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>

                AllowOfflineAccess <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//刷新令牌</span>
                AllowedScopes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span>
                <span class="token punctuation">{</span>
                    IdentityServerConstants<span class="token punctuation">.</span>StandardScopes<span class="token punctuation">.</span>OpenId<span class="token punctuation">,</span>
                    IdentityServerConstants<span class="token punctuation">.</span>StandardScopes<span class="token punctuation">.</span>Profile<span class="token punctuation">,</span>
                    <span class="token string">&quot;client_scope1&quot;</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token comment">//是否需要统一授权（默认是false）</span>
                RequireConsent <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 哪些User可以被这个AuthorizationServer识别并授权</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>TestUser<span class="token punctuation">&gt;</span></span> <span class="token function">GetTestUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TestUser</span>
            <span class="token punctuation">{</span>
                SubjectId <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
                Username <span class="token operator">=</span> <span class="token string">&quot;alice&quot;</span><span class="token punctuation">,</span>
                Password <span class="token operator">=</span> <span class="token string">&quot;alice&quot;</span><span class="token punctuation">,</span>

                Claims <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Alice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span><span class="token string">&quot;website&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://alice.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>ClaimTypes<span class="token punctuation">.</span>Role<span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>ClaimTypes<span class="token punctuation">.</span>NameIdentifier<span class="token punctuation">,</span> <span class="token string">&quot;123456789&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TestUser</span>
            <span class="token punctuation">{</span>
                SubjectId <span class="token operator">=</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>
                Username <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
                Password <span class="token operator">=</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">,</span>

                Claims <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>JwtClaimTypes<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token string">&quot;Bob&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>JwtClaimTypes<span class="token punctuation">.</span>NickName<span class="token punctuation">,</span> <span class="token string">&quot;Bob nickname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>JwtClaimTypes<span class="token punctuation">.</span>Email<span class="token punctuation">,</span> <span class="token string">&quot;itzhangyunpeng@163.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>JwtClaimTypes<span class="token punctuation">.</span>WebSite<span class="token punctuation">,</span> <span class="token string">&quot;状态&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>JwtClaimTypes<span class="token punctuation">.</span>PhoneNumber<span class="token punctuation">,</span> <span class="token string">&quot;18838940824&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>JwtClaimTypes<span class="token punctuation">.</span>Role<span class="token punctuation">,</span> <span class="token string">&quot;ceshi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//添加角色</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span><span class="token string">&quot;today&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zhouyi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span><span class="token string">&quot;ceshi1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ceshi11&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>RedirectUris : 登录成功回调处理的客户端地址，处理回调返回的数据，可以有多个。 PostLogoutRedirectUris ：跳转登出到的客户端的地址。 这两个都是配置的客户端的地址，且是identityserver4组件里面封装好的地址，作用分别是登录，注销的回调</p><h5 id="_5-3-1-2-注册服务" tabindex="-1"><a class="header-anchor" href="#_5-3-1-2-注册服务"><span>5.3.1.2 注册服务</span></a></h5><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddIdentityServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddDeveloperSigningCredential</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddTestUsers</span><span class="token punctuation">(</span>IdentityConfig<span class="token punctuation">.</span><span class="token function">GetTestUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddInMemoryClients</span><span class="token punctuation">(</span>IdentityConfig<span class="token punctuation">.</span><span class="token function">GetClients</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddInMemoryApiScopes</span><span class="token punctuation">(</span>IdentityConfig<span class="token punctuation">.</span><span class="token function">GetApiScopes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddInMemoryApiResources</span><span class="token punctuation">(</span>IdentityConfig<span class="token punctuation">.</span>ApiResources<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-3-1-3-配置管道" tabindex="-1"><a class="header-anchor" href="#_5-3-1-3-配置管道"><span>5.3.1.3 配置管道</span></a></h5><p>保持之前的不变。</p><h4 id="_5-3-2-搭建mvc客户端项目" tabindex="-1"><a class="header-anchor" href="#_5-3-2-搭建mvc客户端项目"><span>5.3.2 搭建MVC客户端项目</span></a></h4><h5 id="_5-3-2-1-安装nuget包" tabindex="-1"><a class="header-anchor" href="#_5-3-2-1-安装nuget包"><span>5.3.2.1 安装Nuget包</span></a></h5><p>IdentityServer4.AccessTokenValidation 包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;IdentityServer4.AccessTokenValidation&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;3.0.1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="_5-3-2-2-注册服务" tabindex="-1"><a class="header-anchor" href="#_5-3-2-2-注册服务"><span>5.3.2.2 注册服务</span></a></h5><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token function">AddAuthentication</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token comment">// 客户端应用设置使用&quot;Cookies&quot;进行认证</span>
    options<span class="token punctuation">.</span>DefaultScheme <span class="token operator">=</span> CookieAuthenticationDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">;</span>
    <span class="token comment">// identityserver4设置使用&quot;oidc&quot;进行认证  用户登录时候使用openid connect协议</span>
    options<span class="token punctuation">.</span>DefaultChallengeScheme <span class="token operator">=</span> OpenIdConnectDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddCookie</span><span class="token punctuation">(</span>CookieAuthenticationDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">AddOpenIdConnect</span><span class="token punctuation">(</span>OpenIdConnectDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">,</span> options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>Authority <span class="token operator">=</span> <span class="token string">&quot;http://localhost:5014&quot;</span><span class="token punctuation">;</span><span class="token comment">//信任的认证地址</span>
    options<span class="token punctuation">.</span>RequireHttpsMetadata <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">//如果不使用https，那么就需要配置这个</span>
    options<span class="token punctuation">.</span>ClientId <span class="token operator">=</span> <span class="token string">&quot;ImplicitClientMvc&quot;</span><span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>SaveTokens <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//用于在cookie中保留来自identityserver的令牌</span>
    options<span class="token punctuation">.</span>GetClaimsFromUserInfoEndpoint <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 配置cookie策略</span>
services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Configure</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>CookiePolicyOptions<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>MinimumSameSitePolicy <span class="token operator">=</span> SameSiteMode<span class="token punctuation">.</span>Lax<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>AddAuthentication注入添加认证授权，当需要用户登录时，使用 cookie 来本地登录用户（通过“Cookies”作为DefaultScheme），并将 DefaultChallengeScheme 设置为“oidc”，</li><li>使用 AddCookie 添加可以处理 cookie 的处理程序。</li><li>因为「简化模式」的实现是就是 OpenID Connect，所以在AddOpenIdConnect用于配置执行 OpenID Connect 协议的处理程序。Authority表明之前搭建的 IdentityServer 授权服务地址。然后我们通过ClientId。识别这个客户端。SaveTokens用于在 cookie 中保留来自IdentityServer 的令牌。</li></ol><h5 id="_5-3-2-3-配置管道" tabindex="-1"><a class="header-anchor" href="#_5-3-2-3-配置管道"><span>5.3.2.3 配置管道</span></a></h5><p>然后要确保认证服务执行对每个请求的验证，加入UseAuthentication和UseAuthorization到Configure中,在startup.cs中Configure方法添加如下代码：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Configure</span><span class="token punctuation">(</span><span class="token class-name">IApplicationBuilder</span> app<span class="token punctuation">,</span> <span class="token class-name">IWebHostEnvironment</span> env<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token function">IsDevelopment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        app<span class="token punctuation">.</span><span class="token function">UseDeveloperExceptionPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        app<span class="token punctuation">.</span><span class="token function">UseExceptionHandler</span><span class="token punctuation">(</span><span class="token string">&quot;/Home/Error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    app<span class="token punctuation">.</span><span class="token function">UseStaticFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    app<span class="token punctuation">.</span><span class="token function">UseCookiePolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    app<span class="token punctuation">.</span><span class="token function">UseRouting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    app<span class="token punctuation">.</span><span class="token function">UseAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    app<span class="token punctuation">.</span><span class="token function">UseAuthorization</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    app<span class="token punctuation">.</span><span class="token function">UseEndpoints</span><span class="token punctuation">(</span>endpoints <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        endpoints<span class="token punctuation">.</span><span class="token function">MapDefaultControllerRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//.RequireAuthorization();//禁用整个应用程序的匿名访问</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>UseAuthentication将身份验证中间件添加到管道中； UseAuthorization 将启动授权中间件添加到管道中，以便在每次调用主机时执行身份验证授权功能。</p><h5 id="_5-3-2-4-添加授权" tabindex="-1"><a class="header-anchor" href="#_5-3-2-4-添加授权"><span>5.3.2.4 添加授权</span></a></h5><p>在HomeController控制器并添加[Authorize]特性到其中一个方法。在进行请求的时候，需进行认证授权通过后，才能进行访问。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Authorize</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name">IActionResult</span> <span class="token function">Index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">View</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还要修改主视图以显示用户的Claim以及cookie属性。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>@<span class="token punctuation">{</span>
    ViewData<span class="token punctuation">[</span><span class="token string">&quot;Title&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Home Page&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

@<span class="token keyword">using</span> Microsoft<span class="token punctuation">.</span>AspNetCore<span class="token punctuation">.</span>Authentication

<span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>Claims<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>dl<span class="token operator">&gt;</span>
    @<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> claim <span class="token keyword">in</span> User<span class="token punctuation">.</span>Claims<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token operator">&lt;</span>dt<span class="token operator">&gt;</span>@claim<span class="token punctuation">.</span>Type<span class="token operator">&lt;</span><span class="token operator">/</span>dt<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>dd<span class="token operator">&gt;</span>@claim<span class="token punctuation">.</span>Value<span class="token operator">&lt;</span><span class="token operator">/</span>dd<span class="token operator">&gt;</span>
    <span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dl<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>Properties<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>dl<span class="token operator">&gt;</span>
    @<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> prop <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token keyword">await</span> Context<span class="token punctuation">.</span><span class="token function">AuthenticateAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Properties<span class="token punctuation">.</span>Items<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token operator">&lt;</span>dt<span class="token operator">&gt;</span>@prop<span class="token punctuation">.</span>Key<span class="token operator">&lt;</span><span class="token operator">/</span>dt<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>dd<span class="token operator">&gt;</span>@prop<span class="token punctuation">.</span>Value<span class="token operator">&lt;</span><span class="token operator">/</span>dd<span class="token operator">&gt;</span>
    <span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dl<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span><span class="token class-name">a</span> href<span class="token operator">=</span><span class="token string">&quot;/Home/LogOut&quot;</span><span class="token operator">&gt;</span>退出登录<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问 Index页面，跳转到认证服务地址，进行账号密码登录，退出登录用于用户的注销操作。 展示效果</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>nbf
<span class="token number">1651382278</span>
exp
<span class="token number">1651382578</span>
<span class="token class-name">iss</span>
http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">5014</span>
aud
ImplicitClientMvc
nonce
<span class="token number">637869790623712218</span><span class="token punctuation">.</span>Y2Y3ZjAyNGUtNzgzZi00MDZhLTlmZjktNTI5ZWRhNGNjN2E0YjYyOWIzZGItNWU1MC00N2YwLWI1N2YtNGNhYzg0YjBhNDZl
iat
<span class="token number">1651382278</span>
s_hash
8gb5o3g<span class="token operator">-</span>el8n5z2rvOV7GA
sid
8D4DBD846DAF0912260E424631D0907D
http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>schemas<span class="token punctuation">.</span>xmlsoap<span class="token punctuation">.</span>org<span class="token operator">/</span>ws<span class="token operator">/</span><span class="token number">2005</span><span class="token operator">/</span><span class="token number">05</span><span class="token operator">/</span>identity<span class="token operator">/</span>claims<span class="token operator">/</span>nameidentifier
<span class="token number">2</span>
auth_time
<span class="token number">1651382274</span>
http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>schemas<span class="token punctuation">.</span>microsoft<span class="token punctuation">.</span>com<span class="token operator">/</span>identity<span class="token operator">/</span>claims<span class="token operator">/</span>identityprovider
<span class="token class-name">local</span>
http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>schemas<span class="token punctuation">.</span>xmlsoap<span class="token punctuation">.</span>org<span class="token operator">/</span>ws<span class="token operator">/</span><span class="token number">2005</span><span class="token operator">/</span><span class="token number">05</span><span class="token operator">/</span>identity<span class="token operator">/</span>claims<span class="token operator">/</span>name
Bob
nickname
Bob <span class="token class-name">nickname</span>
http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>schemas<span class="token punctuation">.</span>xmlsoap<span class="token punctuation">.</span>org<span class="token operator">/</span>ws<span class="token operator">/</span><span class="token number">2005</span><span class="token operator">/</span><span class="token number">05</span><span class="token operator">/</span>identity<span class="token operator">/</span>claims<span class="token operator">/</span>webpage
状态
http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>schemas<span class="token punctuation">.</span>microsoft<span class="token punctuation">.</span>com<span class="token operator">/</span>claims<span class="token operator">/</span>authnmethodsreferences
pwd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-3-3-samesite策略" tabindex="-1"><a class="header-anchor" href="#_5-3-3-samesite策略"><span>5.3.3 SameSite策略</span></a></h4><p>在Chrome浏览器中，进行认证授权的时候，用户登录之后，无法跳转到原网页，还是停留在登录页中，可以看控制台就发现上图的效果。 最后查找资料发现，是Google将于2020年2月份发布Chrome 80版本。本次发布将推进Google的“渐进改良Cookie”策略，打造一个更为安全和保障用户隐私的网络环境。所以本次更新可能导致浏览器无法向服务端发送Cookie。如果你有多个不同域名的应用，部分用户很有可能出现会话时常被打断的情况，还有部分用户可能无法正常登出系统。 所以我们需要解决这个问题： 方法一：将域名升级为 HTTPS 方法二：使用代码修改 SameSite 设置</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//配置cookie策略 必须添加</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Configure</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>CookiePolicyOptions<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>MinimumSameSitePolicy <span class="token operator">=</span> SameSiteMode<span class="token punctuation">.</span>Lax<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">UseCookiePolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//必须添加</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,57),u={href:"https://mp.weixin.qq.com/s?__biz=MzU2NTg3NjQ0MA==&mid=2247485525&idx=1&sn=12eced83bea0dba29f09d0c5df00e1b6&chksm=fcb44be2cbc3c2f46db29dc60ba1dbf4cfa273aafa071d67b1f9dabbfd07f83a16ce8391ee45&scene=178&cur_album_id=1547438833309417472#rd",target:"_blank",rel:"noopener noreferrer"};function k(d,v){const a=e("ExternalLinkIcon");return p(),o("div",null,[r,n("p",null,[n("a",u,[s("https://mp.weixin.qq.com/s?__biz=MzU2NTg3NjQ0MA==&mid=2247485525&idx=1&sn=12eced83bea0dba29f09d0c5df00e1b6&chksm=fcb44be2cbc3c2f46db29dc60ba1dbf4cfa273aafa071d67b1f9dabbfd07f83a16ce8391ee45&scene=178&cur_album_id=1547438833309417472#rd"),c(a)]),s(" | IdentityServer4系列 | 简化模式")])])}const g=t(i,[["render",k],["__file","implicitMode.html.vue"]]),h=JSON.parse('{"path":"/middleware/authorize/identityserver4/mode/implicitMode.html","title":"简化模式","lang":"zh-CN","frontmatter":{"title":"简化模式","lang":"zh-CN","date":"2022-05-02T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"jianhuamoshi","slug":"qy4ga1","docsId":"75705707","description":"5. 简化模式 有些 Web 应用是纯前端应用，没有后端，必须将令牌储存在前端。RFC 6749 就规定了这种方式，允许直接向前端颁发令牌。这种方式没有授权码这个中间步骤，所以称为（授权码）\\"简化\\"（implicit）。 「简化模式」（implicit grant type）「不通过第三方应用程序的服务器」，直接在浏览器中向认证服务器申请令牌，跳过了\\"...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/authorize/identityserver4/mode/implicitMode.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"简化模式"}],["meta",{"property":"og:description","content":"5. 简化模式 有些 Web 应用是纯前端应用，没有后端，必须将令牌储存在前端。RFC 6749 就规定了这种方式，允许直接向前端颁发令牌。这种方式没有授权码这个中间步骤，所以称为（授权码）\\"简化\\"（implicit）。 「简化模式」（implicit grant type）「不通过第三方应用程序的服务器」，直接在浏览器中向认证服务器申请令牌，跳过了\\"..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-16T05:03:06.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-05-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-16T05:03:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"简化模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-02T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-16T05:03:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"5. 简化模式","slug":"_5-简化模式","link":"#_5-简化模式","children":[{"level":3,"title":"5.1 适用场景","slug":"_5-1-适用场景","link":"#_5-1-适用场景","children":[]},{"level":3,"title":"5.2 密码授权流程","slug":"_5-2-密码授权流程","link":"#_5-2-密码授权流程","children":[{"level":4,"title":"5.2.1 过程详解","slug":"_5-2-1-过程详解","link":"#_5-2-1-过程详解","children":[]}]},{"level":3,"title":"5.3 实践","slug":"_5-3-实践","link":"#_5-3-实践","children":[{"level":4,"title":"5.3.1 搭建认证授权服务","slug":"_5-3-1-搭建认证授权服务","link":"#_5-3-1-搭建认证授权服务","children":[{"level":5,"title":"5.3.1.1 配置内容","slug":"_5-3-1-1-配置内容","link":"#_5-3-1-1-配置内容","children":[]},{"level":5,"title":"5.3.1.2 注册服务","slug":"_5-3-1-2-注册服务","link":"#_5-3-1-2-注册服务","children":[]},{"level":5,"title":"5.3.1.3 配置管道","slug":"_5-3-1-3-配置管道","link":"#_5-3-1-3-配置管道","children":[]}]},{"level":4,"title":"5.3.2 搭建MVC客户端项目","slug":"_5-3-2-搭建mvc客户端项目","link":"#_5-3-2-搭建mvc客户端项目","children":[{"level":5,"title":"5.3.2.1 安装Nuget包","slug":"_5-3-2-1-安装nuget包","link":"#_5-3-2-1-安装nuget包","children":[]},{"level":5,"title":"5.3.2.2 注册服务","slug":"_5-3-2-2-注册服务","link":"#_5-3-2-2-注册服务","children":[]},{"level":5,"title":"5.3.2.3 配置管道","slug":"_5-3-2-3-配置管道","link":"#_5-3-2-3-配置管道","children":[]},{"level":5,"title":"5.3.2.4 添加授权","slug":"_5-3-2-4-添加授权","link":"#_5-3-2-4-添加授权","children":[]}]},{"level":4,"title":"5.3.3  SameSite策略","slug":"_5-3-3-samesite策略","link":"#_5-3-3-samesite策略","children":[]}]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1708059786000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":9.07,"words":2720},"filePathRelative":"middleware/authorize/identityserver4/mode/implicitMode.md","localizedDate":"2022年5月2日","excerpt":"<h2>5. 简化模式</h2>\\n<blockquote>\\n<p>有些 Web 应用是纯前端应用，没有后端，必须将令牌储存在前端。RFC 6749 就规定了这种方式，允许直接向前端颁发令牌。这种方式没有授权码这个中间步骤，所以称为（授权码）\\"简化\\"（implicit）。</p>\\n</blockquote>\\n<p>「简化模式」（implicit grant type）「不通过第三方应用程序的服务器」，直接在浏览器中向认证服务器申请令牌，跳过了\\"授权码\\"这个步骤(授权码模式后续会说明)。所有步骤在浏览器中完成，令牌对访问者是可见的，且客户端不需要认证。</p>\\n<blockquote>\\n<p>这种方式把令牌直接传给前端，是很不安全的。因此，只能用于一些安全要求不高的场景，并且令牌的有效期必须非常短，通常就是会话期间（session）有效，浏览器关掉，令牌就失效了。</p>\\n</blockquote>","autoDesc":true}');export{g as comp,h as data};
