import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-Bw62I61B.js";const p={},e=t(`<p>DDOS攻击在网上很常见，这种攻击简单有效，可以让一个网站瞬间开始并长时间无法响应。通常来说，网站可以通过多种节流方法来避免这种情况。 下面我们换一种方式，用中间件MiddleWare来限制特定客户端IP的请求数量。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DosAttackMiddleware</span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">short</span><span class="token punctuation">&gt;</span></span> _IpAdresses <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">short</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Stack<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> _Banned <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Stack<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Timer</span> _Timer <span class="token operator">=</span> <span class="token function">CreateTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Timer</span> _BannedTimer <span class="token operator">=</span> <span class="token function">CreateBanningTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> BANNED_REQUESTS <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> REDUCTION_INTERVAL <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span> <span class="token comment">// 1 second    </span>
    <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> RELEASE_INTERVAL <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span> <span class="token comment">// 5 minutes    </span>
    <span class="token keyword">private</span> <span class="token class-name">RequestDelegate</span> _next<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">DosAttackMiddleware</span><span class="token punctuation">(</span><span class="token class-name">RequestDelegate</span> next<span class="token punctuation">)</span>
 	<span class="token punctuation">{</span>
        _next <span class="token operator">=</span> next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">InvokeAsync</span><span class="token punctuation">(</span><span class="token class-name">HttpContext</span> httpContext<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">string</span></span> ip <span class="token operator">=</span> httpContext<span class="token punctuation">.</span>Connection<span class="token punctuation">.</span>RemoteIpAddress<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>_Banned<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            httpContext<span class="token punctuation">.</span>Response<span class="token punctuation">.</span>StatusCode <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>HttpStatusCode<span class="token punctuation">.</span>Forbidden<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">CheckIpAddress</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">await</span> <span class="token function">_next</span><span class="token punctuation">(</span>httpContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CheckIpAddress</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> ip<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>_IpAdresses<span class="token punctuation">.</span><span class="token function">ContainsKey</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            _IpAdresses<span class="token punctuation">[</span>ip<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>_IpAdresses<span class="token punctuation">[</span>ip<span class="token punctuation">]</span> <span class="token operator">==</span> BANNED_REQUESTS<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            _Banned<span class="token punctuation">.</span><span class="token function">Push</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">;</span>
            _IpAdresses<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            _IpAdresses<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name">Timer</span> <span class="token function">CreateTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Timer</span> timer <span class="token operator">=</span> <span class="token function">GetTimer</span><span class="token punctuation">(</span>REDUCTION_INTERVAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
        timer<span class="token punctuation">.</span>Elapsed <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ElapsedEventHandler</span><span class="token punctuation">(</span>TimerElapsed<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> timer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name">Timer</span> <span class="token function">CreateBanningTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Timer</span> timer <span class="token operator">=</span> <span class="token function">GetTimer</span><span class="token punctuation">(</span>RELEASE_INTERVAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
        timer<span class="token punctuation">.</span>Elapsed <span class="token operator">+=</span> <span class="token keyword">delegate</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>_Banned<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> _Banned<span class="token punctuation">.</span><span class="token function">Pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> timer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name">Timer</span> <span class="token function">GetTimer</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> interval<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Timer</span> timer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Timer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        timer<span class="token punctuation">.</span>Interval <span class="token operator">=</span> interval<span class="token punctuation">;</span>
        timer<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> timer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">TimerElapsed</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">ElapsedEventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> key <span class="token keyword">in</span> _IpAdresses<span class="token punctuation">.</span>Keys<span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            _IpAdresses<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>_IpAdresses<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> _IpAdresses<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码中设置：1秒（1000ms）中有超过10次访问时，对应的IP会被禁用5分钟。 使用时，在Startup.cs中直接加载中间件：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Configure</span><span class="token punctuation">(</span><span class="token class-name">IApplicationBuilder</span> app<span class="token punctuation">,</span> <span class="token class-name">IWebHostEnvironment</span> env<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token range operator">..</span><span class="token punctuation">.</span>
    app<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">UseMiddleware</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>DosAttackMiddleware<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token range operator">..</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","ddosAttack.html.vue"]]),d=JSON.parse('{"path":"/dotnet/api/controllerApi/safe/ddosAttack.html","title":"DDOS攻击","lang":"zh-CN","frontmatter":{"title":"DDOS攻击","lang":"zh-CN","date":"2023-06-28T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"ddosgongji","slug":"fqyosh","docsId":"30622006","description":"DDOS攻击在网上很常见，这种攻击简单有效，可以让一个网站瞬间开始并长时间无法响应。通常来说，网站可以通过多种节流方法来避免这种情况。 下面我们换一种方式，用中间件MiddleWare来限制特定客户端IP的请求数量。 代码中设置：1秒（1000ms）中有超过10次访问时，对应的IP会被禁用5分钟。 使用时，在Startup.cs中直接加载中间件：","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/api/controllerApi/safe/ddosAttack.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"DDOS攻击"}],["meta",{"property":"og:description","content":"DDOS攻击在网上很常见，这种攻击简单有效，可以让一个网站瞬间开始并长时间无法响应。通常来说，网站可以通过多种节流方法来避免这种情况。 下面我们换一种方式，用中间件MiddleWare来限制特定客户端IP的请求数量。 代码中设置：1秒（1000ms）中有超过10次访问时，对应的IP会被禁用5分钟。 使用时，在Startup.cs中直接加载中间件："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-25T09:26:24.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-06-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-25T09:26:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DDOS攻击\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-28T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-25T09:26:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[],"git":{"createdTime":1697962303000,"updatedTime":1708853184000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.13,"words":340},"filePathRelative":"dotnet/api/controllerApi/safe/ddosAttack.md","localizedDate":"2023年6月28日","excerpt":"<p>DDOS攻击在网上很常见，这种攻击简单有效，可以让一个网站瞬间开始并长时间无法响应。通常来说，网站可以通过多种节流方法来避免这种情况。\\n下面我们换一种方式，用中间件MiddleWare来限制特定客户端IP的请求数量。</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">DosAttackMiddleware</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">Dictionary<span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">short</span><span class=\\"token punctuation\\">&gt;</span></span> _IpAdresses <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Dictionary<span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">short</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">Stack<span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span> _Banned <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Stack<span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">Timer</span> _Timer <span class=\\"token operator\\">=</span> <span class=\\"token function\\">CreateTimer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">Timer</span> _BannedTimer <span class=\\"token operator\\">=</span> <span class=\\"token function\\">CreateBanningTimer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">const</span> <span class=\\"token class-name\\"><span class=\\"token keyword\\">int</span></span> BANNED_REQUESTS <span class=\\"token operator\\">=</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">const</span> <span class=\\"token class-name\\"><span class=\\"token keyword\\">int</span></span> REDUCTION_INTERVAL <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1000</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 1 second    </span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">const</span> <span class=\\"token class-name\\"><span class=\\"token keyword\\">int</span></span> RELEASE_INTERVAL <span class=\\"token operator\\">=</span> <span class=\\"token number\\">5</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">60</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">1000</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 5 minutes    </span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">RequestDelegate</span> _next<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token function\\">DosAttackMiddleware</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">RequestDelegate</span> next<span class=\\"token punctuation\\">)</span>\\n \\t<span class=\\"token punctuation\\">{</span>\\n        _next <span class=\\"token operator\\">=</span> next<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">async</span> <span class=\\"token return-type class-name\\">Task</span> <span class=\\"token function\\">InvokeAsync</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">HttpContext</span> httpContext<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\"><span class=\\"token keyword\\">string</span></span> ip <span class=\\"token operator\\">=</span> httpContext<span class=\\"token punctuation\\">.</span>Connection<span class=\\"token punctuation\\">.</span>RemoteIpAddress<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ToString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>_Banned<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Contains</span><span class=\\"token punctuation\\">(</span>ip<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            httpContext<span class=\\"token punctuation\\">.</span>Response<span class=\\"token punctuation\\">.</span>StatusCode <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">)</span>HttpStatusCode<span class=\\"token punctuation\\">.</span>Forbidden<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n\\n        <span class=\\"token function\\">CheckIpAddress</span><span class=\\"token punctuation\\">(</span>ip<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">await</span> <span class=\\"token function\\">_next</span><span class=\\"token punctuation\\">(</span>httpContext<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">void</span></span> <span class=\\"token function\\">CheckIpAddress</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">string</span></span> ip<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>_IpAdresses<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ContainsKey</span><span class=\\"token punctuation\\">(</span>ip<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            _IpAdresses<span class=\\"token punctuation\\">[</span>ip<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>_IpAdresses<span class=\\"token punctuation\\">[</span>ip<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> BANNED_REQUESTS<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            _Banned<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Push</span><span class=\\"token punctuation\\">(</span>ip<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            _IpAdresses<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Remove</span><span class=\\"token punctuation\\">(</span>ip<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">else</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            _IpAdresses<span class=\\"token punctuation\\">[</span>ip<span class=\\"token punctuation\\">]</span><span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token return-type class-name\\">Timer</span> <span class=\\"token function\\">CreateTimer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">Timer</span> timer <span class=\\"token operator\\">=</span> <span class=\\"token function\\">GetTimer</span><span class=\\"token punctuation\\">(</span>REDUCTION_INTERVAL<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        timer<span class=\\"token punctuation\\">.</span>Elapsed <span class=\\"token operator\\">+=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">ElapsedEventHandler</span><span class=\\"token punctuation\\">(</span>TimerElapsed<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> timer<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token return-type class-name\\">Timer</span> <span class=\\"token function\\">CreateBanningTimer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">Timer</span> timer <span class=\\"token operator\\">=</span> <span class=\\"token function\\">GetTimer</span><span class=\\"token punctuation\\">(</span>RELEASE_INTERVAL<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        timer<span class=\\"token punctuation\\">.</span>Elapsed <span class=\\"token operator\\">+=</span> <span class=\\"token keyword\\">delegate</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>_Banned<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Any</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> _Banned<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Pop</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> timer<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token return-type class-name\\">Timer</span> <span class=\\"token function\\">GetTimer</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">int</span></span> interval<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">Timer</span> timer <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Timer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        timer<span class=\\"token punctuation\\">.</span>Interval <span class=\\"token operator\\">=</span> interval<span class=\\"token punctuation\\">;</span>\\n        timer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Start</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> timer<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">void</span></span> <span class=\\"token function\\">TimerElapsed</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">object</span></span> sender<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">ElapsedEventArgs</span> e<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">foreach</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">string</span></span> key <span class=\\"token keyword\\">in</span> _IpAdresses<span class=\\"token punctuation\\">.</span>Keys<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ToList</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            _IpAdresses<span class=\\"token punctuation\\">[</span>key<span class=\\"token punctuation\\">]</span><span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>_IpAdresses<span class=\\"token punctuation\\">[</span>key<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> _IpAdresses<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Remove</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre></div>","autoDesc":true}');export{r as comp,d as data};
