import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as p,c as t,a as s,d as a,e as r,b as c}from"./app-DMmdIwn0.js";const l="/kbms/common/1611562321669-ab5bec14-7a76-436b-9ddd-c1a932e7a1e7.png",i="/kbms/common/1611562405578-9f181a27-d9d7-401b-9513-78226caca71d.png",k={},u=c('<h3 id="配置远程服务器" tabindex="-1"><a class="header-anchor" href="#配置远程服务器"><span>配置远程服务器</span></a></h3><p>进入到”Manage Jenkins“ - &quot;Configure System&quot;中配置远程服务器 <img src="'+l+`" alt="" loading="lazy"> Passphrase：SSH密码 Path to key：SSH私钥的文件路径 Key：私钥串，如果“Key”和“Path to key”都设置，则“Key”的优先级较高 Disable exec：禁止在目标机上执行命令 SSH Server 配置（指定远程服务器的ip，可以配置多个ssh server ） Name：SSH节点配置的名称，在Job中使用Publish over SSH插件时，此名称将出现在“SSH Server”中“Name”的下拉列表中，如下图： Hostname：通过SSH连接到的远程主机名或IP Username：SSH服务使用的用户名，使用key进行连接时为key指定的用户名</p><blockquote><p>没有找到的话安装插件：Publish Over SSH</p></blockquote><h3 id="构建" tabindex="-1"><a class="header-anchor" href="#构建"><span>构建</span></a></h3><p>执行命令</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token preprocessor property">#!/bin/bash</span>

<span class="token preprocessor property">#定义变量</span>
IMAGE_VERSION<span class="token operator">=</span>&#39;<span class="token number">1.0</span><span class="token number">.0</span>&#39;
REGISTRY_USER<span class="token operator">=</span>&#39;itzhangyunpeng&#39;
REGISTRY_PWD<span class="token operator">=</span>&#39;zypnlzq123&#39;
REGISTRY_HOST<span class="token operator">=</span>&#39;registry<span class="token punctuation">.</span>cn<span class="token operator">-</span>hangzhou<span class="token punctuation">.</span>aliyuncs<span class="token punctuation">.</span>com&#39;
REGISTRY_NAMESPACE<span class="token operator">=</span>&#39;zrng&#39;
SERVICE_HELLOWORLD<span class="token operator">=</span>&#39;mytest&#39;
<span class="token preprocessor property">#jenkins拉取的项目默认路径 </span>
COMPOSE_PATH<span class="token operator">=</span>&#39;build<span class="token operator">/</span>docker<span class="token operator">-</span>compose<span class="token punctuation">.</span>yaml&#39;

echo <span class="token string">&quot;------------------------------ 构建镜像 ------------------------------&quot;</span>
docker<span class="token operator">-</span>compose <span class="token operator">-</span>f <span class="token string">&quot;\${COMPOSE_PATH}&quot;</span> build

echo <span class="token string">&quot;------------------------------ 登录远程仓库 ------------------------------&quot;</span>
docker login <span class="token operator">--</span>username<span class="token operator">=</span>$<span class="token punctuation">{</span>REGISTRY_USER<span class="token punctuation">}</span> <span class="token operator">--</span>password<span class="token operator">=</span>$<span class="token punctuation">{</span>REGISTRY_PWD<span class="token punctuation">}</span> $<span class="token punctuation">{</span>REGISTRY_HOST<span class="token punctuation">}</span>

echo <span class="token string">&quot;------------------------------ 标记镜像 ------------------------------&quot;</span>
docker $<span class="token punctuation">{</span>REGISTRY_HOST<span class="token punctuation">}</span><span class="token operator">/</span>$<span class="token punctuation">{</span>REGISTRY_NAMESPACE<span class="token punctuation">}</span><span class="token operator">/</span>$<span class="token punctuation">{</span>SERVICE_HELLOWORLD<span class="token punctuation">}</span><span class="token punctuation">:</span>latest $<span class="token punctuation">{</span>REGISTRY_HOST<span class="token punctuation">}</span><span class="token operator">/</span>$<span class="token punctuation">{</span>REGISTRY_NAMESPACE<span class="token punctuation">}</span><span class="token operator">/</span>$<span class="token punctuation">{</span>SERVICE_HELLOWORLD<span class="token punctuation">}</span><span class="token punctuation">:</span>latest
docker $<span class="token punctuation">{</span>REGISTRY_HOST<span class="token punctuation">}</span><span class="token operator">/</span>$<span class="token punctuation">{</span>REGISTRY_NAMESPACE<span class="token punctuation">}</span><span class="token operator">/</span>$<span class="token punctuation">{</span>SERVICE_HELLOWORLD<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>IMAGE_VERSION<span class="token punctuation">}</span> $<span class="token punctuation">{</span>REGISTRY_HOST<span class="token punctuation">}</span><span class="token operator">/</span>$<span class="token punctuation">{</span>REGISTRY_NAMESPACE<span class="token punctuation">}</span><span class="token operator">/</span>$<span class="token punctuation">{</span>SERVICE_HELLOWORLD<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>IMAGE_VERSION<span class="token punctuation">}</span>

echo <span class="token string">&quot;------------------------------ 推送到远程仓库 ------------------------------&quot;</span>
docker push $<span class="token punctuation">{</span>REGISTRY_HOST<span class="token punctuation">}</span><span class="token operator">/</span>$<span class="token punctuation">{</span>REGISTRY_NAMESPACE<span class="token punctuation">}</span><span class="token operator">/</span>$<span class="token punctuation">{</span>SERVICE_HELLOWORLD<span class="token punctuation">}</span><span class="token punctuation">:</span>latest
docker push $<span class="token punctuation">{</span>REGISTRY_HOST<span class="token punctuation">}</span><span class="token operator">/</span>$<span class="token punctuation">{</span>REGISTRY_NAMESPACE<span class="token punctuation">}</span><span class="token operator">/</span>$<span class="token punctuation">{</span>SERVICE_HELLOWORLD<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>IMAGE_VERSION<span class="token punctuation">}</span>

echo <span class="token string">&quot;------------------------------ 清理None ------------------------------&quot;</span>
docker rmi $<span class="token punctuation">(</span>docker images <span class="token operator">-</span>f <span class="token string">&quot;dangling=true&quot;</span> <span class="token operator">-</span>q<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="增加构建步骤" tabindex="-1"><a class="header-anchor" href="#增加构建步骤"><span>增加构建步骤</span></a></h3><p>选择“Send files or execute commands over SSH” <img src="`+i+`" alt="" loading="lazy"> Name：选择刚刚配置的远程服务器”Staging_Server“ Source files：要上传的文件的相对路径，多个文件以逗号分隔。相对workspace的路径(其实是相对workspace下项目的路径)，也支持表达式，如上图中的“**/*.war”。  如：我的项目通过jenkins git插件拉取下来，所在的目录是D:\\Program Files (x86)\\Jenkins\\workspace\\helloworld，docker-compose.staging.yml刚好在hellworld目录下，所以此处直接填文件名         如果yml文件在hellowrold/mycompose/目录下，则需要填写mycompose/docker-compose.staging.yml Remove prefix：文件复制时要过滤的文件夹。 Remote directory：远程服务器上的文件夹，此文件夹路径是相对于“SSH Server”中的“Remote directory”。如果该文件夹不存在将会自动创建。         由于配置Staging_Server时Remote directory没有设置，并且时直接使用root账户登录Staging_Server的，所以Remote directory路径默认为root/         此处填/mydokcercompose，则文件会被复制到服务器的/root/mydokcercompose/docker-compose.staging.yml Exec command：shell命令</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token preprocessor property">#!/bin/bash</span>

<span class="token preprocessor property">#定义变量</span>
REGISTRY_USER<span class="token operator">=</span>&#39;itzhangyunpeng&#39;
REGISTRY_PWD<span class="token operator">=</span>&#39;zyp4574q123&#39;
REGISTRY_HOST<span class="token operator">=</span>&#39;registry<span class="token punctuation">.</span>cn<span class="token operator">-</span>hangzhou<span class="token punctuation">.</span>aliyuncs<span class="token punctuation">.</span>com&#39;
COMPOSE_PATH<span class="token operator">=</span>&#39;mytest<span class="token operator">/</span>docker<span class="token operator">-</span>compose<span class="token punctuation">.</span>yaml&#39;

echo <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> 登录远程仓库 <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
docker login <span class="token operator">--</span>username<span class="token operator">=</span>$REGISTRY_USER <span class="token operator">--</span>password<span class="token operator">=</span>$REGISTRY_PWD $REGISTRY_HOST

echo <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> 卸载服务 <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
docker<span class="token operator">-</span>compose <span class="token operator">-</span>f $COMPOSE_PATH down

echo <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> 拉取镜像 <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
docker<span class="token operator">-</span>compose <span class="token operator">-</span>f $COMPOSE_PATH pull

echo <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> 启动服务 <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
docker<span class="token operator">-</span>compose <span class="token operator">-</span>f  mytest<span class="token operator">/</span>docker<span class="token operator">-</span>compose<span class="token punctuation">.</span>yaml up <span class="token operator">--</span>build <span class="token operator">-</span>d

echo <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> 清除None <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
docker rmi $<span class="token punctuation">(</span>docker images <span class="token operator">-</span>f <span class="token string">&quot;dangling=true&quot;</span> <span class="token operator">-</span>q<span class="token punctuation">)</span>
    
或者直接使用docker run
docker run <span class="token operator">--</span>name mytest <span class="token operator">-</span>d <span class="token operator">-</span>p <span class="token number">8011</span><span class="token punctuation">:</span><span class="token number">80</span> registry<span class="token punctuation">.</span>cn<span class="token operator">-</span>hangzhou<span class="token punctuation">.</span>aliyuncs<span class="token punctuation">.</span>com<span class="token operator">/</span>zrng<span class="token operator">/</span>mytest<span class="token punctuation">:</span><span class="token number">1.0</span><span class="token number">.0</span>

docker<span class="token operator">-</span>compose那个方法没试验成功，直接使用docker成功了
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在另一个机器上可以看到生成的容器</p>`,10),d={href:"https://www.cnblogs.com/yanglang/articles/11088490.html",target:"_blank",rel:"noopener noreferrer"};function m(v,S){const n=e("ExternalLinkIcon");return p(),t("div",null,[u,s("blockquote",null,[s("p",null,[a("参考文档："),s("a",d,[a("https://www.cnblogs.com/yanglang/articles/11088490.html"),r(n)])])])])}const h=o(k,[["render",m],["__file","yuanchengbushu.html.vue"]]),y=JSON.parse('{"path":"/cloud/ciAndCd/jenkins/yuanchengbushu.html","title":"远程部署","lang":"zh-CN","frontmatter":{"title":"远程部署","lang":"zh-CN","date":"2021-05-17T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["cloud"],"tag":["无"],"filename":"yuanchengbushu","slug":"yi665u","docsId":"30630349","description":"配置远程服务器 进入到”Manage Jenkins“ - \\"Configure System\\"中配置远程服务器 Passphrase：SSH密码 Path to key：SSH私钥的文件路径 Key：私钥串，如果“Key”和“Path to key”都设置，则“Key”的优先级较高 Disable exec：禁止在目标机上执行命令 SSH Serve...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/cloud/ciAndCd/jenkins/yuanchengbushu.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"远程部署"}],["meta",{"property":"og:description","content":"配置远程服务器 进入到”Manage Jenkins“ - \\"Configure System\\"中配置远程服务器 Passphrase：SSH密码 Path to key：SSH私钥的文件路径 Key：私钥串，如果“Key”和“Path to key”都设置，则“Key”的优先级较高 Disable exec：禁止在目标机上执行命令 SSH Serve..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1611562321669-ab5bec14-7a76-436b-9ddd-c1a932e7a1e7.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-24T07:50:54.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2021-05-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-24T07:50:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"远程部署\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1611562321669-ab5bec14-7a76-436b-9ddd-c1a932e7a1e7.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1611562405578-9f181a27-d9d7-401b-9513-78226caca71d.png\\"],\\"datePublished\\":\\"2021-05-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-24T07:50:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":3,"title":"配置远程服务器","slug":"配置远程服务器","link":"#配置远程服务器","children":[]},{"level":3,"title":"构建","slug":"构建","link":"#构建","children":[]},{"level":3,"title":"增加构建步骤","slug":"增加构建步骤","link":"#增加构建步骤","children":[]}],"git":{"createdTime":1695541854000,"updatedTime":1695541854000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":2.52,"words":757},"filePathRelative":"cloud/ciAndCd/jenkins/yuanchengbushu.md","localizedDate":"2021年5月17日","excerpt":"<h3>配置远程服务器</h3>\\n<p>进入到”Manage Jenkins“ - \\"Configure System\\"中配置远程服务器\\n<img src=\\"/common/1611562321669-ab5bec14-7a76-436b-9ddd-c1a932e7a1e7.png\\" alt=\\"\\" loading=\\"lazy\\">\\nPassphrase：SSH密码\\nPath to key：SSH私钥的文件路径\\nKey：私钥串，如果“Key”和“Path to key”都设置，则“Key”的优先级较高\\nDisable exec：禁止在目标机上执行命令\\nSSH Server 配置（指定远程服务器的ip，可以配置多个ssh server ）\\nName：SSH节点配置的名称，在Job中使用Publish over SSH插件时，此名称将出现在“SSH Server”中“Name”的下拉列表中，如下图：\\nHostname：通过SSH连接到的远程主机名或IP\\nUsername：SSH服务使用的用户名，使用key进行连接时为key指定的用户名</p>","autoDesc":true}');export{h as comp,y as data};
