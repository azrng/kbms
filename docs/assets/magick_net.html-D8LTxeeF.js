import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,b as t}from"./app-Bw62I61B.js";const e={},p=t(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>Magick.NET 是 ImageMagick 的 .NET 库，ImageMagick 是一个强大的创建、编辑、合成和转换位图图像工具。</p><h3 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span>优点</span></a></h3><ul><li>作者维护积极，下载量高</li><li><strong>支持多平台</strong></li><li>商用免费</li></ul><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="png转ico" tabindex="-1"><a class="header-anchor" href="#png转ico"><span>Png转Ico</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MagickImage</span><span class="token punctuation">(</span><span class="token string">&quot;test.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        image<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token string">&quot;test_64px.ico&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        image<span class="token punctuation">.</span><span class="token function">Resize</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        image<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token string">&quot;test_32px.ico&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Conversion has been completed.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),c=[p];function o(i,l){return a(),s("div",null,c)}const k=n(e,[["render",o],["__file","magick_net.html.vue"]]),d=JSON.parse('{"path":"/middleware/tuxiangchuli/magick_net.html","title":"Magick.NET","lang":"zh-CN","frontmatter":{"title":"Magick.NET","lang":"zh-CN","date":"2023-10-18T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"magick_net","slug":"wpwb1k","docsId":"32427263","description":"介绍 Magick.NET 是 ImageMagick 的 .NET 库，ImageMagick 是一个强大的创建、编辑、合成和转换位图图像工具。 优点 作者维护积极，下载量高 支持多平台 商用免费 操作 Png转Ico","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/tuxiangchuli/magick_net.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Magick.NET"}],["meta",{"property":"og:description","content":"介绍 Magick.NET 是 ImageMagick 的 .NET 库，ImageMagick 是一个强大的创建、编辑、合成和转换位图图像工具。 优点 作者维护积极，下载量高 支持多平台 商用免费 操作 Png转Ico"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Magick.NET\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-18T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[{"level":3,"title":"优点","slug":"优点","link":"#优点","children":[]}]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"Png转Ico","slug":"png转ico","link":"#png转ico","children":[]}]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.35,"words":105},"filePathRelative":"middleware/tuxiangchuli/magick_net.md","localizedDate":"2023年10月18日","excerpt":"<h2>介绍</h2>\\n<p>Magick.NET 是 ImageMagick 的 .NET 库，ImageMagick 是一个强大的创建、编辑、合成和转换位图图像工具。</p>\\n<h3>优点</h3>\\n<ul>\\n<li>作者维护积极，下载量高</li>\\n<li><strong>支持多平台</strong></li>\\n<li>商用免费</li>\\n</ul>\\n<h2>操作</h2>\\n<h3>Png转Ico</h3>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token keyword\\">static</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">void</span></span> <span class=\\"token function\\">Main</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span></span> args<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">using</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> image <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">MagickImage</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"test.png\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        image<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Write</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"test_64px.ico\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        image<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Resize</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">32</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">32</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        image<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Write</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"test_32px.ico\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    Console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Conversion has been completed.\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
