import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as e,o as a}from"./app-OPlDaE8U.js";const t="/kbms/common/202307192041571.png",p="/kbms/common/202307192114367.png",r="/kbms/common/202307192116189.png",l="/kbms/common/202307192046676.png",o="/kbms/common/202307192046043.png",h="/kbms/common/202307192047446.png",g="/kbms/common/202307192102974.png",k="/kbms/common/202307192104434.png",m="/kbms/common/202307192106691.png",d="/kbms/common/202307192108396.png",c="/kbms/common/202307192109869.png",u="/kbms/common/202307192109933.png",b="/kbms/common/202307192120414.png",f="/kbms/common/202307192124443.png",y="/kbms/common/202307192127058.png",A="/kbms/common/202307192129566.png",v="/kbms/common/202307192130712.png",C="/kbms/common/202307192143785.png",B="/kbms/common/202307192145387.png",S={};function E(_,i){return a(),n("div",null,i[0]||(i[0]=[e('<h2 id="摘要" tabindex="-1"><a class="header-anchor" href="#摘要"><span>摘要</span></a></h2><p>很多C/S开发领域的同学或多或少都可能会遇到需要制作安装包的场景，打包的工具也是五花八门，例如有NSIS、InstallShield、Wix Toolset、ClickOnce等等，这里以Inno Setup为例简单演示下如何构建安装包，以及在Visual Studio中编译程序时自动去构建这个安装包。</p><h2 id="操作演示" tabindex="-1"><a class="header-anchor" href="#操作演示"><span>操作演示</span></a></h2><p>Tips：如果是想自动化构建，建议先从文章尾部开始看起，前面只是简单演示如何手动构建</p><p>1、去官网下载Inno Setup打包工具 <a href="https://jrsoftware.org/isdl.php" target="_blank" rel="noopener noreferrer">Inno Setup Downloads</a></p><figure><a href="/common/202307192041571.png" target="_blank" rel="noopener noreferrer"><img src="'+t+'" alt="image-20230719204144401" tabindex="0" loading="lazy"></a><figcaption>image-20230719204144401</figcaption></figure><p>如果有中文需求，则需下载个中文包，下载地址：<a href="https://jrsoftware.org/files/istrans/" target="_blank" rel="noopener noreferrer">Inno Setup Translations</a></p><figure><a href="/common/202307192114367.png" target="_blank" rel="noopener noreferrer"><img src="'+p+'" alt="image-20230719211435241" tabindex="0" loading="lazy"></a><figcaption>image-20230719211435241</figcaption></figure><p>下载完手动放进Inno Setup安装目录下的Languages下即可</p><figure><a href="/common/202307192116189.png" target="_blank" rel="noopener noreferrer"><img src="'+r+'" alt="image-20230719211634130" tabindex="0" loading="lazy"></a><figcaption>image-20230719211634130</figcaption></figure><p>2、创建打包项目</p><figure><a href="/common/202307192046676.png" target="_blank" rel="noopener noreferrer"><img src="'+l+'" alt="image-20230719204600561" tabindex="0" loading="lazy"></a><figcaption>image-20230719204600561</figcaption></figure><p>3、填写应用基本信息</p><figure><a href="/common/202307192046043.png" target="_blank" rel="noopener noreferrer"><img src="'+o+'" alt="image-20230719204650988" tabindex="0" loading="lazy"></a><figcaption>image-20230719204650988</figcaption></figure><p>4、填写应用安装目录</p><figure><a href="/common/202307192047446.png" target="_blank" rel="noopener noreferrer"><img src="'+h+'" alt="image-20230719204733394" tabindex="0" loading="lazy"></a><figcaption>image-20230719204733394</figcaption></figure><p>5、在VS中右键项目属性，更改项目输出路径，有多个项目则都改为同一个</p><figure><a href="/common/202307192102974.png" target="_blank" rel="noopener noreferrer"><img src="'+g+'" alt="image-20230719210202893" tabindex="0" loading="lazy"></a><figcaption>image-20230719210202893</figcaption></figure><p>6、选择应用需要打包的文件</p><figure><a href="/common/202307192104434.png" target="_blank" rel="noopener noreferrer"><img src="'+k+'" alt="image-20230719210432376" tabindex="0" loading="lazy"></a><figcaption>image-20230719210432376</figcaption></figure><p>Application main executable file:应用程序主程序</p><p>Other application files:主程序所依赖的项目或第三方依赖等，这里建议直接选择输出目录</p><p>7、应用文件类型关联</p><figure><a href="/common/202307192106691.png" target="_blank" rel="noopener noreferrer"><img src="'+m+'" alt="image-20230719210650630" tabindex="0" loading="lazy"></a><figcaption>image-20230719210650630</figcaption></figure><p>若你程序用不上这个功能一般不用勾选</p><p>8、应用程序快捷方式创建</p><figure><a href="/common/202307192108396.png" target="_blank" rel="noopener noreferrer"><img src="'+d+'" alt="image-20230719210828337" tabindex="0" loading="lazy"></a><figcaption>image-20230719210828337</figcaption></figure><p>9、应用协议许可文件</p><figure><a href="/common/202307192109869.png" target="_blank" rel="noopener noreferrer"><img src="'+c+'" alt="image-20230719210924816" tabindex="0" loading="lazy"></a><figcaption>image-20230719210924816</figcaption></figure><p>10、安装模式选择</p><figure><a href="/common/202307192109933.png" target="_blank" rel="noopener noreferrer"><img src="'+u+'" alt="image-20230719210939884" tabindex="0" loading="lazy"></a><figcaption>image-20230719210939884</figcaption></figure><p>11、安装包语言选择</p><figure><a href="/common/202307192120414.png" target="_blank" rel="noopener noreferrer"><img src="'+b+'" alt="image-20230719212029357" tabindex="0" loading="lazy"></a><figcaption>image-20230719212029357</figcaption></figure><p>官方默认是不提供中文语言包的，但官网上有第三方用户提供和维护了中文包，有需要的可以在 <a href="https://jrsoftware.org/files/istrans/" target="_blank" rel="noopener noreferrer">Inno Setup Translations</a>下载，然后手动放进InnoSetup安装目录下的Languages下即可</p><p>12、安装包设置</p><figure><a href="/common/202307192124443.png" target="_blank" rel="noopener noreferrer"><img src="'+f+'" alt="image-20230719212442389" tabindex="0" loading="lazy"></a><figcaption>image-20230719212442389</figcaption></figure><p>13、设置完了就会生成一个脚本</p><figure><a href="/common/202307192127058.png" target="_blank" rel="noopener noreferrer"><img src="'+y+'" alt="image-20230719212730969" tabindex="0" loading="lazy"></a><figcaption>image-20230719212730969</figcaption></figure><p>14、编译完成，则会在目录生成一个exe文件，双击就可以进行安装</p><figure><a href="/common/202307192129566.png" target="_blank" rel="noopener noreferrer"><img src="'+A+'" alt="image-20230719212951486" tabindex="0" loading="lazy"></a><figcaption>image-20230719212951486</figcaption></figure><p>15、安装效果</p><figure><a href="/common/202307192130712.png" target="_blank" rel="noopener noreferrer"><img src="'+v+`" alt="image-20230719213038649" tabindex="0" loading="lazy"></a><figcaption>image-20230719213038649</figcaption></figure><p>至此，一个简易的安装包制作完成。</p><p>但....这并不是本篇的主题。显而易见，如果每次程序有改动，就需要去Inno Setup的编辑器手动执行编译一下生成安装包，有些繁琐。</p><h2 id="自动化构建安装包" tabindex="-1"><a class="header-anchor" href="#自动化构建安装包"><span>自动化构建安装包</span></a></h2><p>1、修改刚才创建安装包时生成的脚本文件，主要是将绝对路径改为相对路径以及自动获取主程序文件版本等，避免其它同事/电脑编译时报错，可以参考下我的脚本</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Script</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> generated</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> by</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> the</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> Inno</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> Setup</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> Script</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> Wizard</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">SEE</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> THE</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> DOCUMENTATION</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> FOR</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> DETAILS</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> ON</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> CREATING</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> INNO</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> SETUP</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> SCRIPT</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> FILES</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">!</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">define</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> MyAppName &quot;傲慢与偏见&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">define</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> MyAppPublisher &quot;版权信息&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">define</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> MyAppURL &quot;https:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//www.cnblogs.com/chonglu&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">define</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> MyAppExeName &quot;InnoStepSample.exe&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">define</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> MyAppVersion GetVersionNumbersString(&quot;..\\output\\InnoStepSample.exe&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Setup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; #</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">define</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> MyAppVersion</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> GetVersionNumbersString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&quot;..\\output\\InnoStepSample.exe&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">NOTE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">The</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> of</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> AppId</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> uniquely</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> identifies</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">. </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Do</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> not</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> use</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> the</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> same</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> AppId</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> installers</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> other applications.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">To</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> generate</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> GUID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">click</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> Tools</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> Generate</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> GUID</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> inside</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> the</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> IDE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">AppId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">{{72EC6D66-B10E-4E61-920F-86852D3FFA91}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\\KJT
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename=KJTStep
SetupIconFile=AppICon.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern
OutputDir=..\\Publish

[Languages]
Name: &quot;Chinese&quot;; MessagesFile: &quot;compiler:Languages\\中文简体.isl&quot;

[Files]
Source: &quot;..\\bin\\{#MyAppExeName}&quot;; DestDir: &quot;{app}&quot;; Flags: ignoreversion
Source: &quot;..\\bin\\*&quot;; DestDir: &quot;{app}&quot;; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don&#39;t use &quot;Flags: ignoreversion&quot; on any shared system files

[Icons]
Name: &quot;{group}\\{#MyAppName}&quot;; Filename: &quot;{app}\\{#MyAppExeName}&quot;

[Run]
Filename: &quot;{app}\\{#MyAppExeName}&quot;; Description: &quot;{cm:LaunchProgram,{#StringChange(MyAppName, &#39;&amp;&#39;, &#39;&amp;&amp;&#39;)}}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;; Flags: nowait postinstall skipifsilen</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">t</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、把InnoStep的安装目录拷贝一下放到工程目录，里面有些无用的可以删掉，减小体积，可以参考以下</p><figure><a href="/common/202307192143785.png" target="_blank" rel="noopener noreferrer"><img src="`+C+'" alt="image-20230719214313689" tabindex="0" loading="lazy"></a><figcaption>image-20230719214313689</figcaption></figure><p>3、设置项目主程序生成后事件</p><figure><a href="/common/202307192145387.png" target="_blank" rel="noopener noreferrer"><img src="'+B+`" alt="image-20230719214534299" tabindex="0" loading="lazy"></a><figcaption>image-20230719214534299</figcaption></figure><p>参考命令：</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">IF</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;$(ConfigurationName)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Release&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;$(SolutionDir)DevOps</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\I</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">nnoSetup</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\I</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">SCC.exe&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;$(SolutionDir)DevOps</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\I</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">nnoSetup</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\I</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">nnoStepSample.iss&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    start</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> explorer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$(SolutionDir)DevOps</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\P</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ublish</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为防止影响调试，可以加个判断，只有Release模式编译项目则执行命令，该命令的意思就是通过调用解决方案下的ISCC程序传入安装包脚本从而构建编译出一个最新的安装包，最后再调起文件资源管理器打开安装包目录</p><h2 id="效果演示" tabindex="-1"><a class="header-anchor" href="#效果演示"><span>效果演示</span></a></h2><p>每次需要发布新版本时，将解决方案切换为Release模式编译，F6 Build一下，安装包就自动生成出来了，这里只是抛砖引玉给个思路，可以多阅读下官方文档实现出更为完美的安装包。</p><p>Tips：为避免编写代码调试时编译速度过慢，最好还是要在生成后事件中加上Release模式的判断，当解决方案中有很多个项目时，或编译目录依赖文件过多的情况下，InnoStep构建的会有点慢。</p><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语"><span>结语</span></a></h2><p>Visual Studio中的生成事件其实是一个很实用的东西，可以在编译前编译后自动化执行一些经常需要人为手工操作的事，比如还可以利用生成后事件进行代码混淆，本篇文章就暂时不展开细说了。</p><p>如果在实际操作中遇到错误或有疑问以及更好的建议可以在评论中交流..</p><h2 id="附录" tabindex="-1"><a class="header-anchor" href="#附录"><span>附录</span></a></h2><p>InnoStep官网：<a href="https://jrsoftware.org/" target="_blank" rel="noopener noreferrer">https://jrsoftware.org/</a></p><p>InnoStep编辑器：<a href="https://jrsoftware.org/isdl.php" target="_blank" rel="noopener noreferrer">https://jrsoftware.org/isdl.php</a></p><p>InnoStep语言包：<a href="https://jrsoftware.org/files/istrans/" target="_blank" rel="noopener noreferrer">https://jrsoftware.org/files/istrans/</a></p><p>InnoStep文档：<a href="https://jrsoftware.org/ishelp/" target="_blank" rel="noopener noreferrer">https://jrsoftware.org/ishelp/</a></p><h2 id="作者信息" tabindex="-1"><a class="header-anchor" href="#作者信息"><span>作者信息</span></a></h2><p>作者：傲慢与偏见</p><p>出处：<a href="https://www.cnblogs.com/chonglu/p/17566940.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/chonglu/p/17566940.html</a></p><p>版权：本作品采用「<a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener noreferrer">署名-非商业性使用-相同方式共享 4.0 国际</a>」许可协议进行许可。</p>`,69)]))}const z=s(S,[["render",E]]),x=JSON.parse('{"path":"/dotnet/desktop/dabaobushu/InnoSetupBuild.html","title":"利用InnoSetup在VS编译时自动构建安装包","lang":"zh-CN","frontmatter":{"title":"利用InnoSetup在VS编译时自动构建安装包","lang":"zh-CN","date":"2023-08-01T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNet"],"tag":["InnoSetup","打包"],"filename":"InnoSetupBuild","docsId":"ea48081d-190d-4661-8d7e-2493f7ffda1d","description":"摘要 很多C/S开发领域的同学或多或少都可能会遇到需要制作安装包的场景，打包的工具也是五花八门，例如有NSIS、InstallShield、Wix Toolset、ClickOnce等等，这里以Inno Setup为例简单演示下如何构建安装包，以及在Visual Studio中编译程序时自动去构建这个安装包。 操作演示 Tips：如果是想自动化构建，建...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"利用InnoSetup在VS编译时自动构建安装包\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/202307192041571.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192114367.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192116189.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192046676.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192046043.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192047446.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192102974.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192104434.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192106691.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192108396.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192109869.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192109933.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192120414.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192124443.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192127058.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192129566.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192130712.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192143785.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192145387.png\\"],\\"datePublished\\":\\"2023-08-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-18T10:04:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"],["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/desktop/dabaobushu/InnoSetupBuild.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"利用InnoSetup在VS编译时自动构建安装包"}],["meta",{"property":"og:description","content":"摘要 很多C/S开发领域的同学或多或少都可能会遇到需要制作安装包的场景，打包的工具也是五花八门，例如有NSIS、InstallShield、Wix Toolset、ClickOnce等等，这里以Inno Setup为例简单演示下如何构建安装包，以及在Visual Studio中编译程序时自动去构建这个安装包。 操作演示 Tips：如果是想自动化构建，建..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/202307192041571.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-18T10:04:35.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"打包"}],["meta",{"property":"article:tag","content":"InnoSetup"}],["meta",{"property":"article:published_time","content":"2023-08-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-18T10:04:35.000Z"}]]},"git":{"createdTime":1690882168000,"updatedTime":1716026675000,"contributors":[{"name":"zhangyunpeng","username":"","email":"zhang.yunpeng@synyi.com","commits":2},{"name":"azrng","username":"","email":"itzhangyunpeng@163.com","commits":4}]},"readingTime":{"minutes":4.8,"words":1441},"filePathRelative":"dotnet/desktop/dabaobushu/InnoSetupBuild.md","excerpt":"<h2>摘要</h2>\\n<p>很多C/S开发领域的同学或多或少都可能会遇到需要制作安装包的场景，打包的工具也是五花八门，例如有NSIS、InstallShield、Wix Toolset、ClickOnce等等，这里以Inno Setup为例简单演示下如何构建安装包，以及在Visual Studio中编译程序时自动去构建这个安装包。</p>\\n<h2>操作演示</h2>\\n<p>Tips：如果是想自动化构建，建议先从文章尾部开始看起，前面只是简单演示如何手动构建</p>\\n<p>1、去官网下载Inno Setup打包工具 <a href=\\"https://jrsoftware.org/isdl.php\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Inno Setup Downloads</a></p>","autoDesc":true}');export{z as comp,x as data};
