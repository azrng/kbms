import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as e}from"./app-CBxp4zeL.js";const t={},p=e(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>不论那种认证方式，需要注意的就是下面代码</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//定义认证方式</span>
options<span class="token punctuation">.</span><span class="token function">AddSecurityDefinition</span><span class="token punctuation">(</span><span class="token string">&quot;ApiKey&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OpenApiSecurityScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Description <span class="token operator">=</span> <span class="token string">&quot;输入你的的ApiKey&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 认证方式的备注</span>
    Name <span class="token operator">=</span> <span class="token string">&quot;x-api-key&quot;</span><span class="token punctuation">,</span> <span class="token comment">//jwt默认的参数名称</span>
    In <span class="token operator">=</span> ParameterLocation<span class="token punctuation">.</span>Header<span class="token punctuation">,</span> <span class="token comment">// 认证标识存储的位置</span>
    Type <span class="token operator">=</span> SecuritySchemeType<span class="token punctuation">.</span>ApiKey<span class="token punctuation">,</span>
    Scheme <span class="token operator">=</span> <span class="token string">&quot;ApiKeySchema&quot;</span> <span class="token comment">//认证方案名</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jwt认证" tabindex="-1"><a class="header-anchor" href="#jwt认证"><span>Jwt认证</span></a></h2><p>方式一，输入的请求头不需要带Bearer</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddSwaggerGen</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    options<span class="token punctuation">.</span><span class="token function">SwaggerDoc</span><span class="token punctuation">(</span><span class="token string">&quot;v1&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OpenApiInfo</span>
    <span class="token punctuation">{</span>
        Version <span class="token operator">=</span> <span class="token string">&quot;v1&quot;</span><span class="token punctuation">,</span>
        Title <span class="token operator">=</span> <span class="token string">&quot;API&quot;</span><span class="token punctuation">,</span>
        Description <span class="token operator">=</span> <span class="token string">&quot;API说明&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//定义JwtBearer认证方式一</span>
    options<span class="token punctuation">.</span><span class="token function">AddSecurityDefinition</span><span class="token punctuation">(</span><span class="token string">&quot;JwtBearer&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OpenApiSecurityScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Description <span class="token operator">=</span> <span class="token string">&quot;这是方式一(直接在输入框中输入认证信息，不需要在开头添加Bearer)&quot;</span><span class="token punctuation">,</span>
        Name <span class="token operator">=</span> <span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">,</span> <span class="token comment">//jwt默认的参数名称</span>
        In <span class="token operator">=</span> ParameterLocation<span class="token punctuation">.</span>Header<span class="token punctuation">,</span> <span class="token comment">//jwt默认存放Authorization信息的位置(请求头中)</span>
        Type <span class="token operator">=</span> SecuritySchemeType<span class="token punctuation">.</span>Http<span class="token punctuation">,</span>
        Scheme <span class="token operator">=</span> <span class="token string">&quot;Bearer&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//声明一个Scheme，注意下面的Id要和上面AddSecurityDefinition中的参数name一致</span>
    <span class="token class-name"><span class="token keyword">var</span></span> scheme <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OpenApiSecurityScheme</span>
    <span class="token punctuation">{</span>
        Reference <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OpenApiReference</span> 
            <span class="token punctuation">{</span> 
                Type <span class="token operator">=</span> ReferenceType<span class="token punctuation">.</span>SecurityScheme<span class="token punctuation">,</span>
                Id <span class="token operator">=</span> <span class="token string">&quot;JwtBearer&quot;</span>
            <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">//注册全局认证（所有的接口都可以使用认证）</span>
    options<span class="token punctuation">.</span><span class="token function">AddSecurityRequirement</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">OpenApiSecurityRequirement</span>
    <span class="token punctuation">{</span>
        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">scheme</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Empty</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方式二，输入的请求头需要带Bearer</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddSwaggerGen</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    options<span class="token punctuation">.</span><span class="token function">SwaggerDoc</span><span class="token punctuation">(</span><span class="token string">&quot;v1&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OpenApiInfo</span>
    <span class="token punctuation">{</span>
        Version <span class="token operator">=</span> <span class="token string">&quot;v1&quot;</span><span class="token punctuation">,</span>
        Title <span class="token operator">=</span> <span class="token string">&quot;API&quot;</span><span class="token punctuation">,</span>
        Description <span class="token operator">=</span> <span class="token string">&quot;API说明&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//定义JwtBearer认证方式二</span>
    options<span class="token punctuation">.</span><span class="token function">AddSecurityDefinition</span><span class="token punctuation">(</span><span class="token string">&quot;JwtBearer&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OpenApiSecurityScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Description <span class="token operator">=</span> <span class="token string">&quot;这是方式二(JWT授权(数据将在请求头中进行传输) 直接在下框中输入Bearer {token}（注意两者之间是一个空格）)&quot;</span><span class="token punctuation">,</span>
        Name <span class="token operator">=</span> <span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">,</span> <span class="token comment">//jwt默认的参数名称</span>
        In <span class="token operator">=</span> ParameterLocation<span class="token punctuation">.</span>Header<span class="token punctuation">,</span> <span class="token comment">//jwt默认存放Authorization信息的位置(请求头中)</span>
        Type <span class="token operator">=</span> SecuritySchemeType<span class="token punctuation">.</span>ApiKey
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//声明一个Scheme，注意下面的Id要和上面AddSecurityDefinition中的参数name一致</span>
    <span class="token class-name"><span class="token keyword">var</span></span> scheme <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OpenApiSecurityScheme</span>
    <span class="token punctuation">{</span>
        Reference <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OpenApiReference</span> 
            <span class="token punctuation">{</span> 
                Type <span class="token operator">=</span> ReferenceType<span class="token punctuation">.</span>SecurityScheme<span class="token punctuation">,</span>
                Id <span class="token operator">=</span> <span class="token string">&quot;JwtBearer&quot;</span>
            <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">//注册全局认证（所有的接口都可以使用认证）</span>
    options<span class="token punctuation">.</span><span class="token function">AddSecurityRequirement</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">OpenApiSecurityRequirement</span>
    <span class="token punctuation">{</span>
        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">scheme</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Empty</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="apikey" tabindex="-1"><a class="header-anchor" href="#apikey"><span>ApiKey</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddSwaggerGen</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    options<span class="token punctuation">.</span><span class="token function">SwaggerDoc</span><span class="token punctuation">(</span><span class="token string">&quot;v1&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OpenApiInfo</span>
    <span class="token punctuation">{</span>
        Version <span class="token operator">=</span> <span class="token string">&quot;v1&quot;</span><span class="token punctuation">,</span>
        Title <span class="token operator">=</span> <span class="token string">&quot;API&quot;</span><span class="token punctuation">,</span>
        Description <span class="token operator">=</span> <span class="token string">&quot;API说明&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">//定义认证方式</span>
    options<span class="token punctuation">.</span><span class="token function">AddSecurityDefinition</span><span class="token punctuation">(</span><span class="token string">&quot;ApiKey&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OpenApiSecurityScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Description <span class="token operator">=</span> <span class="token string">&quot;输入你的的ApiKey&quot;</span><span class="token punctuation">,</span>
        Name <span class="token operator">=</span> <span class="token string">&quot;x-api-key&quot;</span><span class="token punctuation">,</span> <span class="token comment">//默认的参数名称</span>
        In <span class="token operator">=</span> ParameterLocation<span class="token punctuation">.</span>Header<span class="token punctuation">,</span> 
        Type <span class="token operator">=</span> SecuritySchemeType<span class="token punctuation">.</span>ApiKey<span class="token punctuation">,</span>
        Scheme <span class="token operator">=</span> <span class="token string">&quot;ApiKeySchema&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//声明一个Scheme，注意下面的Id要和上面AddSecurityDefinition中的参数name一致</span>
    <span class="token class-name"><span class="token keyword">var</span></span> scheme <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OpenApiSecurityScheme</span>
    <span class="token punctuation">{</span>
        Reference <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OpenApiReference</span> 
            <span class="token punctuation">{</span> 
                Type <span class="token operator">=</span> ReferenceType<span class="token punctuation">.</span>SecurityScheme<span class="token punctuation">,</span>
                Id <span class="token operator">=</span> <span class="token string">&quot;ApiKey&quot;</span>
            <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">//注册全局认证（所有的接口都可以使用认证）</span>
    options<span class="token punctuation">.</span><span class="token function">AddSecurityRequirement</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">OpenApiSecurityRequirement</span>
    <span class="token punctuation">{</span>
        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">scheme</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Empty</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[p];function c(i,l){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","renzhengfanganbiaoshi.html.vue"]]),d=JSON.parse('{"path":"/dotnet/api/swagger/renzhengfanganbiaoshi.html","title":"认证方案标识","lang":"zh-CN","frontmatter":{"title":"认证方案标识","lang":"zh-CN","date":"2023-10-13T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"renzhengfanganbiaoshi","slug":"kedd13luou8rgm43","docsId":"114120076","description":"概述 不论那种认证方式，需要注意的就是下面代码 Jwt认证 方式一，输入的请求头不需要带Bearer 方式二，输入的请求头需要带Bearer ApiKey","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/api/swagger/renzhengfanganbiaoshi.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"认证方案标识"}],["meta",{"property":"og:description","content":"概述 不论那种认证方式，需要注意的就是下面代码 Jwt认证 方式一，输入的请求头不需要带Bearer 方式二，输入的请求头需要带Bearer ApiKey"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"认证方案标识\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-13T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"Jwt认证","slug":"jwt认证","link":"#jwt认证","children":[]},{"level":2,"title":"ApiKey","slug":"apikey","link":"#apikey","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.87,"words":560},"filePathRelative":"dotnet/api/swagger/renzhengfanganbiaoshi.md","localizedDate":"2023年10月13日","excerpt":"<h2>概述</h2>\\n<p>不论那种认证方式，需要注意的就是下面代码</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token comment\\">//定义认证方式</span>\\noptions<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AddSecurityDefinition</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"ApiKey\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">OpenApiSecurityScheme</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    Description <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"输入你的的ApiKey\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 认证方式的备注</span>\\n    Name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"x-api-key\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">//jwt默认的参数名称</span>\\n    In <span class=\\"token operator\\">=</span> ParameterLocation<span class=\\"token punctuation\\">.</span>Header<span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 认证标识存储的位置</span>\\n    Type <span class=\\"token operator\\">=</span> SecuritySchemeType<span class=\\"token punctuation\\">.</span>ApiKey<span class=\\"token punctuation\\">,</span>\\n    Scheme <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"ApiKeySchema\\"</span> <span class=\\"token comment\\">//认证方案名</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
