import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as n,d as a}from"./app-BguyEeV-.js";const r={},i=a('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>.Net/C#年表以及各版本更新的内容：https://lvhang.site/docs/dotnettimeline</p><p>.Net中的中断行变更：https://learn.microsoft.com/zh-cn/dotnet/core/compatibility/breaking-changes</p><p>.Net库的更改规则：https://learn.microsoft.com/zh-cn/dotnet/core/compatibility/library-change-rules</p><h2 id="为什么要升级" tabindex="-1"><a class="header-anchor" href="#为什么要升级"><span>为什么要升级</span></a></h2><ul><li>可以获得更快的速度，相同的代码运行的速度更快</li><li>.NetFramework升级到.NetCore可以跨平台，可以使用到更加便宜Linux托管</li><li>升级到更新的框架，可以更方便的寻找开发人员，因为一般开发人员会学习比较新的框架</li></ul><h2 id="核心技术用语" tabindex="-1"><a class="header-anchor" href="#核心技术用语"><span>核心技术用语</span></a></h2><blockquote><p>https://mp.weixin.qq.com/s/LBjwVNrZOrCqTJmrCi-uCQ | 介绍下.NET8里面的核心技术术语</p></blockquote><h3 id="pgo" tabindex="-1"><a class="header-anchor" href="#pgo"><span><strong>PGO</strong></span></a></h3><p>全称:Profile Guided Optimization，在.NET里面它加了动态两个字。也即是动态PGO，它的意思是在.NET函数满足分层编译的条件(<a href="http://mp.weixin.qq.com/s?__biz=Mzg5NDYwNjU4MA==&amp;mid=2247485462&amp;idx=1&amp;sn=0c334fb7d2a5e240fc921757eb2cc42d&amp;chksm=c01c458df76bcc9bc563e8e1ab90fe2e132415f83ed995667941579523d8548f9065673389c6&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer"><strong>.NET8分层编译参数条件</strong></a>)的时候，会通过动态PGO这种技术收集最先编译的那一层，也就是Tiered0层的IR(中间表象，介于IL和ASM之间)状态，然后分析哪些地方需要优化，把结果的机器码生成最优解。</p><h3 id="osr" tabindex="-1"><a class="header-anchor" href="#osr"><span><strong>OSR</strong></span></a></h3><p>全称:On-Stack Replacement, 它的意思是堆栈替换。也就是当某个函数里面的某一段代码运行的次数过多的时候，比如for循环里面的代码，JIT会尝试优化这一段代码，而不是整个函数。意即函数里面的堆或者栈替换成最优解。</p><h3 id="non-gc-heap" tabindex="-1"><a class="header-anchor" href="#non-gc-heap"><span><strong>Non GC heap</strong></span></a></h3><p>它是.NET8里面新引入的一个堆段，把一些比较简单的，常用的比如常量字符串，类型，空字符串之类的东西放入到Non GC里面，以便加速性能运转。这点之前有文章专门介绍过它用的地方:<a href="http://mp.weixin.qq.com/s?__biz=Mzg5NDYwNjU4MA==&amp;mid=2247485594&amp;idx=1&amp;sn=77ada645af59a4e35e1d46c2694493ac&amp;chksm=c01c4501f76bcc17384320acd082d9951ecf8a6f321ae089aa3c4430d3cdb947795ac34e8727&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer"><strong>.NET8极致性能优化Non-GC Heap</strong></a></p><h3 id="zeroing" tabindex="-1"><a class="header-anchor" href="#zeroing"><span><strong>Zeroing</strong></span></a></h3><p>它实际上是优化的JIT编译器，对于JIT的内存空间分配的栈模式进行优化。JIT首先需要置零，Zeroing技术把置零的方式进行了优化，以图达到性能最大化。</p><h3 id="tiered" tabindex="-1"><a class="header-anchor" href="#tiered"><span><strong>Tiered</strong></span></a></h3><p>看它的其字面意思，如其实际意思。也就是分层，分层编译在.NET Core2.0里面引入，在.NET Core3.0开启，到.NET8.0已经完成成熟，引入诸多技术，比如上面的动态PGO，OSR，以及GDV，边界检查，长两折叠，Non GC heap,Zeroing等等技术，依靠这个分层技术，把.NET这种托管代码优化到能与C++分庭抗礼的地步。</p>',18),o=[i];function c(l,p){return n(),t("div",null,o)}const d=e(r,[["render",c],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/dotnet/newFunction/","title":"说明","lang":"zh-CN","frontmatter":{"title":"说明","lang":"zh-CN","date":"2023-10-29T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"description":"概述 .Net/C#年表以及各版本更新的内容：https://lvhang.site/docs/dotnettimeline .Net中的中断行变更：https://learn.microsoft.com/zh-cn/dotnet/core/compatibility/breaking-changes .Net库的更改规则：https://learn....","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/newFunction/"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"说明"}],["meta",{"property":"og:description","content":"概述 .Net/C#年表以及各版本更新的内容：https://lvhang.site/docs/dotnettimeline .Net中的中断行变更：https://learn.microsoft.com/zh-cn/dotnet/core/compatibility/breaking-changes .Net库的更改规则：https://learn...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-17T11:24:33.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-17T11:24:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"说明\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-29T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-17T11:24:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"为什么要升级","slug":"为什么要升级","link":"#为什么要升级","children":[]},{"level":2,"title":"核心技术用语","slug":"核心技术用语","link":"#核心技术用语","children":[{"level":3,"title":"PGO","slug":"pgo","link":"#pgo","children":[]},{"level":3,"title":"OSR","slug":"osr","link":"#osr","children":[]},{"level":3,"title":"Non GC heap","slug":"non-gc-heap","link":"#non-gc-heap","children":[]},{"level":3,"title":"Zeroing","slug":"zeroing","link":"#zeroing","children":[]},{"level":3,"title":"Tiered","slug":"tiered","link":"#tiered","children":[]}]}],"git":{"createdTime":1697962303000,"updatedTime":1702812273000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2},{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":2}]},"readingTime":{"minutes":2.19,"words":658},"filePathRelative":"dotnet/newFunction/readme.md","localizedDate":"2023年10月29日","excerpt":"<h2>概述</h2>\\n<p>.Net/C#年表以及各版本更新的内容：https://lvhang.site/docs/dotnettimeline</p>\\n<p>.Net中的中断行变更：https://learn.microsoft.com/zh-cn/dotnet/core/compatibility/breaking-changes</p>\\n<p>.Net库的更改规则：https://learn.microsoft.com/zh-cn/dotnet/core/compatibility/library-change-rules</p>\\n<h2>为什么要升级</h2>\\n<ul>\\n<li>可以获得更快的速度，相同的代码运行的速度更快</li>\\n<li>.NetFramework升级到.NetCore可以跨平台，可以使用到更加便宜Linux托管</li>\\n<li>升级到更新的框架，可以更方便的寻找开发人员，因为一般开发人员会学习比较新的框架</li>\\n</ul>","autoDesc":true}');export{d as comp,m as data};
