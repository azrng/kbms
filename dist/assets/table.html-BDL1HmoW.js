import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e as n,o as l}from"./app-BugT5USA.js";const r={};function o(d,t){return l(),a("div",null,t[0]||(t[0]=[n('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>在 C# 中，<code>DataTable</code> 是处理表格数据的常用类。我们可以使用多种方法查询数据，例如直接调用 <code>Select</code> 方法或利用 LINQ（Language Integrated Query）。不同的方法适用于不同场景，本文将详细讲解它们的用法和区别。</p><h2 id="查询方式" tabindex="-1"><a class="header-anchor" href="#查询方式"><span>查询方式</span></a></h2><table><thead><tr><th style="text-align:left;">查询方式</th><th style="text-align:left;">适用场景</th><th style="text-align:left;">优势</th><th style="text-align:left;">劣势</th></tr></thead><tbody><tr><td style="text-align:left;">Select 方法</td><td style="text-align:left;">简单条件查询</td><td style="text-align:left;">性能较高，语法简单</td><td style="text-align:left;">可读性较差，灵活性有限</td></tr><tr><td style="text-align:left;">LINQ 查询</td><td style="text-align:left;">复杂条件或需要链式操作的查询</td><td style="text-align:left;">可读性高，支持强大的表达能力</td><td style="text-align:left;">性能略逊于 Select，内存占用略高</td></tr></tbody></table><p>C# 对 DataTable 进行查询的完整指南：<a href="https://mp.weixin.qq.com/s/uAwmzOG_S4TlfuGHecqn0w" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/uAwmzOG_S4TlfuGHecqn0w</a></p>',5)]))}const c=e(r,[["render",o]]),p=JSON.parse('{"path":"/dotnet/csharp/set/table.html","title":"表格操作","lang":"zh-CN","frontmatter":{"title":"表格操作","lang":"zh-CN","date":"2024-12-01T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["table"],"description":"概述 在 C# 中，DataTable 是处理表格数据的常用类。我们可以使用多种方法查询数据，例如直接调用 Select 方法或利用 LINQ（Language Integrated Query）。不同的方法适用于不同场景，本文将详细讲解它们的用法和区别。 查询方式 C# 对 DataTable 进行查询的完整指南：https://mp.weixin....","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"表格操作\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-01T06:35:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"],["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/csharp/set/table.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"表格操作"}],["meta",{"property":"og:description","content":"概述 在 C# 中，DataTable 是处理表格数据的常用类。我们可以使用多种方法查询数据，例如直接调用 Select 方法或利用 LINQ（Language Integrated Query）。不同的方法适用于不同场景，本文将详细讲解它们的用法和区别。 查询方式 C# 对 DataTable 进行查询的完整指南：https://mp.weixin...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-01T06:35:44.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"table"}],["meta",{"property":"article:published_time","content":"2024-12-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-01T06:35:44.000Z"}]]},"git":{"createdTime":1733034944000,"updatedTime":1733034944000,"contributors":[{"name":"azrng","username":"","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.66,"words":197},"filePathRelative":"dotnet/csharp/set/table.md","excerpt":"<h2>概述</h2>\\n<p>在 C# 中，<code>DataTable</code> 是处理表格数据的常用类。我们可以使用多种方法查询数据，例如直接调用 <code>Select</code> 方法或利用 LINQ（Language Integrated Query）。不同的方法适用于不同场景，本文将详细讲解它们的用法和区别。</p>\\n<h2>查询方式</h2>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:left\\">查询方式</th>\\n<th style=\\"text-align:left\\">适用场景</th>\\n<th style=\\"text-align:left\\">优势</th>\\n<th style=\\"text-align:left\\">劣势</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:left\\">Select 方法</td>\\n<td style=\\"text-align:left\\">简单条件查询</td>\\n<td style=\\"text-align:left\\">性能较高，语法简单</td>\\n<td style=\\"text-align:left\\">可读性较差，灵活性有限</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">LINQ 查询</td>\\n<td style=\\"text-align:left\\">复杂条件或需要链式操作的查询</td>\\n<td style=\\"text-align:left\\">可读性高，支持强大的表达能力</td>\\n<td style=\\"text-align:left\\">性能略逊于 Select，内存占用略高</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{c as comp,p as data};
