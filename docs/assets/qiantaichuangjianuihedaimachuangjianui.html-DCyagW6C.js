import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-qB9_Bjjp.js";const p={},o=t(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>关于UI可以通过XAML来创建也可以通过c#代码来创建</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="代码创建" tabindex="-1"><a class="header-anchor" href="#代码创建"><span>代码创建</span></a></h3><p>在该页面的代码后置文件，比如LoginPage.xaml.cs中编写下面的代码来创建一个登录界面</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">LoginPage</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ContentPage</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">Button</span> _loginButton<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">VerticalStackLayout</span> _layout<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LoginPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//InitializeComponent();</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>BackgroundColor <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">FromArgb</span><span class="token punctuation">(</span><span class="token string">&quot;512bdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        _layout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">VerticalStackLayout</span>
        <span class="token punctuation">{</span>
            Margin <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Thickness</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            Padding <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Thickness</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            Children <span class="token operator">=</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Label</span> <span class="token punctuation">{</span> Text <span class="token operator">=</span> <span class="token string">&quot;请登录&quot;</span><span class="token punctuation">,</span> FontSize <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">,</span> TextColor <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">FromRgb</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Label</span> <span class="token punctuation">{</span> Text <span class="token operator">=</span> <span class="token string">&quot;用户名&quot;</span><span class="token punctuation">,</span> TextColor <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">FromRgb</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Entry</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Label</span> <span class="token punctuation">{</span> Text <span class="token operator">=</span> <span class="token string">&quot;密码&quot;</span><span class="token punctuation">,</span> TextColor <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">FromRgb</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Entry</span> <span class="token punctuation">{</span> IsPassword <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        _loginButton <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Button</span> <span class="token punctuation">{</span> Text <span class="token operator">=</span> <span class="token string">&quot;登录&quot;</span><span class="token punctuation">,</span> BackgroundColor <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">FromRgb</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">148</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        _layout<span class="token punctuation">.</span>Children<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>_loginButton<span class="token punctuation">)</span><span class="token punctuation">;</span>

        Content <span class="token operator">=</span> _layout<span class="token punctuation">;</span>

        _loginButton<span class="token punctuation">.</span>Clicked <span class="token operator">+=</span> <span class="token punctuation">(</span>sender<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            Debug<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Clicked !&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="xaml创建" tabindex="-1"><a class="header-anchor" href="#xaml创建"><span>Xaml创建</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">ContentPage</span> xmlns<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/dotnet/2021/maui&quot;</span>
             xmlns<span class="token punctuation">:</span>x<span class="token operator">=</span><span class="token string">&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span>
             x<span class="token punctuation">:</span>Class<span class="token operator">=</span><span class="token string">&quot;MauiApp1.LoginPage&quot;</span>
             Title<span class="token operator">=</span><span class="token string">&quot;LoginPage&quot;</span> BackgroundColor<span class="token operator">=</span><span class="token string">&quot;#512bdf&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">VerticalStackLayout</span> Margin<span class="token operator">=</span><span class="token string">&quot;15&quot;</span> Padding<span class="token operator">=</span><span class="token string">&quot;30,60,30,30&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Label</span> Text<span class="token operator">=</span><span class="token string">&quot;请登录&quot;</span> FontSize<span class="token operator">=</span><span class="token string">&quot;30&quot;</span> TextColor<span class="token operator">=</span><span class="token string">&quot;Blue&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Label<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Label</span> Text<span class="token operator">=</span><span class="token string">&quot;用户名&quot;</span> TextColor<span class="token operator">=</span><span class="token string">&quot;Black&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Label<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Entry</span> x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;txtUserName&quot;</span> Placeholder<span class="token operator">=</span><span class="token string">&quot;请输入用户名&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Entry<span class="token operator">&gt;</span>

        <span class="token operator">&lt;</span><span class="token class-name">Label</span> Text<span class="token operator">=</span><span class="token string">&quot;密码&quot;</span> TextColor<span class="token operator">=</span><span class="token string">&quot;Black&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Label<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Entry</span> x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;txtPassword&quot;</span> Placeholder<span class="token operator">=</span><span class="token string">&quot;请输入用户名&quot;</span> IsPassword<span class="token operator">=</span><span class="token string">&quot;True&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Entry<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Button</span> Text<span class="token operator">=</span><span class="token string">&quot;登录&quot;</span> BackgroundColor<span class="token operator">=</span><span class="token string">&quot;#0094FF&quot;</span>  x<span class="token punctuation">:</span>Name<span class="token operator">=</span><span class="token string">&quot;loginBut&quot;</span> Clicked<span class="token operator">=</span><span class="token string">&quot;loginBut_Clicked&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>VerticalStackLayout<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ContentPage<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后台触发事件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">LoginPage</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ContentPage</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">LoginPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">loginBut_Clicked</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> userName <span class="token operator">=</span> txtUserName<span class="token punctuation">.</span>Text<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> password <span class="token operator">=</span> txtPassword<span class="token punctuation">.</span>Text<span class="token punctuation">;</span>

        <span class="token keyword">await</span> <span class="token function">DisplayAlert</span><span class="token punctuation">(</span><span class="token string">&quot;提示&quot;</span><span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">$&quot;用户名是：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">userName</span><span class="token punctuation">}</span></span><span class="token string"> &quot;</span></span><span class="token punctuation">,</span> <span class="token string">&quot;确定&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>页面构造函数中的方法InitializeComponent读取页面的 XAML 描述，加载该页面上的各种控件，并设置它们的属性。只有在使用 XAML 标记定义页面时才调用此方法。前面显示如何使用 C## 代码创建 UI 的示例不会调用InitializeComponent.</p></blockquote>`,11),e=[o];function c(l,i){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","qiantaichuangjianuihedaimachuangjianui.html.vue"]]),d=JSON.parse('{"path":"/dotnet/maui/rumenxuexi/qiantaichuangjianuihedaimachuangjianui.html","title":"前台创建UI和代码创建UI","lang":"zh-CN","frontmatter":{"title":"前台创建UI和代码创建UI","lang":"zh-CN","date":"2023-03-16T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"qiantaichuangjianuihedaimachuangjianui","slug":"xr0pch7gkhfw2dcu","docsId":"118283811","description":"概述 关于UI可以通过XAML来创建也可以通过c#代码来创建 操作 代码创建 在该页面的代码后置文件，比如LoginPage.xaml.cs中编写下面的代码来创建一个登录界面 Xaml创建 后台触发事件 页面构造函数中的方法InitializeComponent读取页面的 XAML 描述，加载该页面上的各种控件，并设置它们的属性。只有在使用 XAML ...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/maui/rumenxuexi/qiantaichuangjianuihedaimachuangjianui.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"前台创建UI和代码创建UI"}],["meta",{"property":"og:description","content":"概述 关于UI可以通过XAML来创建也可以通过c#代码来创建 操作 代码创建 在该页面的代码后置文件，比如LoginPage.xaml.cs中编写下面的代码来创建一个登录界面 Xaml创建 后台触发事件 页面构造函数中的方法InitializeComponent读取页面的 XAML 描述，加载该页面上的各种控件，并设置它们的属性。只有在使用 XAML ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-03-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"前台创建UI和代码创建UI\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"代码创建","slug":"代码创建","link":"#代码创建","children":[]},{"level":3,"title":"Xaml创建","slug":"xaml创建","link":"#xaml创建","children":[]}]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.35,"words":405},"filePathRelative":"dotnet/maui/rumenxuexi/qiantaichuangjianuihedaimachuangjianui.md","localizedDate":"2023年3月16日","excerpt":"<h2>概述</h2>\\n<p>关于UI可以通过XAML来创建也可以通过c#代码来创建</p>\\n<h2>操作</h2>\\n<h3>代码创建</h3>\\n<p>在该页面的代码后置文件，比如LoginPage.xaml.cs中编写下面的代码来创建一个登录界面</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">partial</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">LoginPage</span> <span class=\\"token punctuation\\">:</span> <span class=\\"token type-list\\"><span class=\\"token class-name\\">ContentPage</span></span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">readonly</span> <span class=\\"token class-name\\">Button</span> _loginButton<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">readonly</span> <span class=\\"token class-name\\">VerticalStackLayout</span> _layout<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token function\\">LoginPage</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">//InitializeComponent();</span>\\n\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>BackgroundColor <span class=\\"token operator\\">=</span> Color<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">FromArgb</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"512bdf\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        _layout <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">VerticalStackLayout</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            Margin <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Thickness</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">15</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">15</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">15</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">15</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n            Padding <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Thickness</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">30</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">60</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">30</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">30</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n            Children <span class=\\"token operator\\">=</span>\\n            <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Label</span> <span class=\\"token punctuation\\">{</span> Text <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"请登录\\"</span><span class=\\"token punctuation\\">,</span> FontSize <span class=\\"token operator\\">=</span> <span class=\\"token number\\">30</span><span class=\\"token punctuation\\">,</span> TextColor <span class=\\"token operator\\">=</span> Color<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">FromRgb</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">255</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">255</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">100</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n                <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Label</span> <span class=\\"token punctuation\\">{</span> Text <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"用户名\\"</span><span class=\\"token punctuation\\">,</span> TextColor <span class=\\"token operator\\">=</span> Color<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">FromRgb</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">255</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">255</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">255</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n                <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Entry</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n                <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Label</span> <span class=\\"token punctuation\\">{</span> Text <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"密码\\"</span><span class=\\"token punctuation\\">,</span> TextColor <span class=\\"token operator\\">=</span> Color<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">FromRgb</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">255</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">255</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">255</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n                <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Entry</span> <span class=\\"token punctuation\\">{</span> IsPassword <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span> <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n        _loginButton <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Button</span> <span class=\\"token punctuation\\">{</span> Text <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"登录\\"</span><span class=\\"token punctuation\\">,</span> BackgroundColor <span class=\\"token operator\\">=</span> Color<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">FromRgb</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">148</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">255</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n        _layout<span class=\\"token punctuation\\">.</span>Children<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Add</span><span class=\\"token punctuation\\">(</span>_loginButton<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        Content <span class=\\"token operator\\">=</span> _layout<span class=\\"token punctuation\\">;</span>\\n\\n        _loginButton<span class=\\"token punctuation\\">.</span>Clicked <span class=\\"token operator\\">+=</span> <span class=\\"token punctuation\\">(</span>sender<span class=\\"token punctuation\\">,</span> e<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            Debug<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Clicked !\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
