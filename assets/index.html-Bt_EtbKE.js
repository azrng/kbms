import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e as t,o as n}from"./app-SmdjEsew.js";const l={};function h(k,s){return n(),a("div",null,s[0]||(s[0]=[t(`<h2 id="htmlsanitizer" tabindex="-1"><a class="header-anchor" href="#htmlsanitizer"><span>HtmlSanitizer</span></a></h2><p>HtmlSanitizer 是一个强大的库，它能够审查和清理 HTML 内容，移除或转义那些可能被用于 XSS 攻击的标签和属性。</p><p>仓库地址：<a href="https://github.com/mganss/HtmlSanitizer" target="_blank" rel="noopener noreferrer">https://github.com/mganss/HtmlSanitizer</a></p><h3 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h3><p><strong>简单示例：清理 HTML 内容</strong></p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-csharp"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 引入Ganss.Xss命名空间，以便使用HtmlSanitizer类</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">using</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Ganss</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Xss</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 创建HtmlSanitizer类的实例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> sanitizer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">HtmlSanitizer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 定义一个包含潜在XSS攻击向量的HTML字符串</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 这里的HTML包含&lt;script&gt;标签和带有JavaScript代码的onload属性</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 以及一个带有JavaScript代码的style属性</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> html</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @&quot;&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;&lt;div onload=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">alert(&#39;xss&#39;)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">    +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @&quot;style=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">background-color: rgba(0, 0, 0, 1)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&gt;Test&lt;img src=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">test.png</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">    +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @&quot;style=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">background-image: url(javascript:alert(&#39;xss&#39;)); margin: 10px</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&gt;&lt;/div&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 使用sanitizer对象的Sanitize方法来清理HTML</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 第一个参数是要清理的HTML字符串</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 第二个参数是基URL，用于解析相对URL</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> sanitized</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> sanitizer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Sanitize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://www.xxx.com&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 定义一个期望的清理后的HTML字符串</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 这个字符串中不包含任何脚本，只包含安全的样式和图像</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> expected</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @&quot;&lt;div style=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">background-color: rgba(0, 0, 0, 1)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">    +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @&quot;Test&lt;img src=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">https://www.xxx.com/test.png</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  style=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">margin: 10px</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&gt;&lt;/div&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 使用Assert.Equal方法来验证清理后的HTML是否符合预期</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Assert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Equal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">expected</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">sanitized</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="添加允许的属性" tabindex="-1"><a class="header-anchor" href="#添加允许的属性"><span><strong>添加允许的属性</strong></span></a></h4><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-csharp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> sanitizer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">HtmlSanitizer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">sanitizer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">AllowedAttributes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;class&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> sanitized</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> sanitizer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Sanitize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="添加允许的url方案" tabindex="-1"><a class="header-anchor" href="#添加允许的url方案"><span><strong>添加允许的URL方案</strong></span></a></h4><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-csharp"><span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> sanitizer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">HtmlSanitizer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 允许用户点击链接直接发送邮件</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">sanitizer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">AllowedSchemes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;mailto&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,10)]))}const r=i(l,[["render",h]]),d=JSON.parse(`{"path":"/middleware/office/html/","title":"说明","lang":"zh-CN","frontmatter":{"title":"说明","lang":"zh-CN","date":"2022-06-18T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["html"],"description":"HtmlSanitizer HtmlSanitizer 是一个强大的库，它能够审查和清理 HTML 内容，移除或转义那些可能被用于 XSS 攻击的标签和属性。 仓库地址：https://github.com/mganss/HtmlSanitizer 操作 简单示例：清理 HTML 内容 添加允许的属性 添加允许的URL方案","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"说明\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-18T14:32:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"],["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/office/html/"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"说明"}],["meta",{"property":"og:description","content":"HtmlSanitizer HtmlSanitizer 是一个强大的库，它能够审查和清理 HTML 内容，移除或转义那些可能被用于 XSS 攻击的标签和属性。 仓库地址：https://github.com/mganss/HtmlSanitizer 操作 简单示例：清理 HTML 内容 添加允许的属性 添加允许的URL方案"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-18T14:32:55.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"html"}],["meta",{"property":"article:published_time","content":"2022-06-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-18T14:32:55.000Z"}]]},"git":{"createdTime":1726669975000,"updatedTime":1726669975000,"contributors":[{"name":"azrng","username":"","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.27,"words":382},"filePathRelative":"middleware/office/html/readme.md","excerpt":"<h2>HtmlSanitizer</h2>\\n<p>HtmlSanitizer 是一个强大的库，它能够审查和清理 HTML 内容，移除或转义那些可能被用于 XSS 攻击的标签和属性。</p>\\n<p>仓库地址：<a href=\\"https://github.com/mganss/HtmlSanitizer\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/mganss/HtmlSanitizer</a></p>\\n<h3>操作</h3>\\n<p><strong>简单示例：清理 HTML 内容</strong></p>\\n<div class=\\"language-csharp line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"csharp\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-csharp\\"><span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 引入Ganss.Xss命名空间，以便使用HtmlSanitizer类</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">using</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> Ganss</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">Xss</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 创建HtmlSanitizer类的实例</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">var</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> sanitizer</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> new </span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">HtmlSanitizer</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">();</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 定义一个包含潜在XSS攻击向量的HTML字符串</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 这里的HTML包含&lt;script&gt;标签和带有JavaScript代码的onload属性</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 以及一个带有JavaScript代码的style属性</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">var</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> html</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> @\\"&lt;script&gt;alert('xss')&lt;/script&gt;&lt;div onload=</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\"\\"</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">alert('xss')</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\"\\"</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\"</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">    +</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> @\\"style=</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\"\\"</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">background-color: rgba(0, 0, 0, 1)</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\"\\"</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">&gt;Test&lt;img src=</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\"\\"</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">test.png</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\"\\"</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\"</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">    +</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> @\\"style=</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\"\\"</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">background-image: url(javascript:alert('xss')); margin: 10px</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\"\\"</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">&gt;&lt;/div&gt;\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 使用sanitizer对象的Sanitize方法来清理HTML</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 第一个参数是要清理的HTML字符串</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 第二个参数是基URL，用于解析相对URL</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">var</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> sanitized</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\"> sanitizer</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">Sanitize</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">html</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\"https://www.xxx.com\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">);</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 定义一个期望的清理后的HTML字符串</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 这个字符串中不包含任何脚本，只包含安全的样式和图像</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">var</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> expected</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> @\\"&lt;div style=</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\"\\"</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">background-color: rgba(0, 0, 0, 1)</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\"\\"</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">&gt;\\"</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">    +</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> @\\"Test&lt;img src=</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\"\\"</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">https://www.xxx.com/test.png</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\"\\"</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">  style=</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\"\\"</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">margin: 10px</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\"\\"</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">&gt;&lt;/div&gt;\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 使用Assert.Equal方法来验证清理后的HTML是否符合预期</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">Assert</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">Equal</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">expected</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">sanitized</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">);</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{r as comp,d as data};
