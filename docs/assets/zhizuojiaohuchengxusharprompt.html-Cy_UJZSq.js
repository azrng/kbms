import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-Bw62I61B.js";const p={},o=t(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>Sharprompt是一个基于C#的交互式命令行应用框架，具有如下特点：</p><ul><li>多平台支持</li><li>支持常用的提示方式（普通输入/密码/选择项等）</li><li>支持基于模型的提示（预览中）</li><li>输入值的验证</li><li>使用枚举值自动生成数据源</li><li>可定制的符号和颜色模式</li><li>Unicode 支持（多字节字符和表情符号😀🎉）</li></ul><h2 id="常用api" tabindex="-1"><a class="header-anchor" href="#常用api"><span>常用API</span></a></h2><p>Prompt.Input 简单的输入提示，返回指定类型数据 Prompt.Password 输入密码提示 Prompt.Confirm 确认提示，返回bool值 Prompt.Select 单选提示 Prompt.ColorSchema 指定配色方案</p><blockquote><p>更多API说明请参看官方文档：https://github.com/shibayan/Sharprompt</p></blockquote><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>Console<span class="token punctuation">.</span>OutputEncoding <span class="token operator">=</span> Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">;</span>

Prompt<span class="token punctuation">.</span>ColorSchema<span class="token punctuation">.</span>Select <span class="token operator">=</span> ConsoleColor<span class="token punctuation">.</span>DarkCyan<span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> type <span class="token operator">=</span> Prompt<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token string">&quot;数据库类型&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;Oracle&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;SQL Server&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MySQL&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;PostgreSQL&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MariaDB&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token named-parameter punctuation">defaultValue</span><span class="token punctuation">:</span> <span class="token string">&quot;MySQL&quot;</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">pageSize</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> server <span class="token operator">=</span> Prompt<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Input</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;服务地址&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Prompt<span class="token punctuation">.</span>ColorSchema<span class="token punctuation">.</span>Answer <span class="token operator">=</span> ConsoleColor<span class="token punctuation">.</span>DarkRed<span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> name <span class="token operator">=</span> Prompt<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Input</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;用户名&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> password <span class="token operator">=</span> Prompt<span class="token punctuation">.</span><span class="token function">Password</span><span class="token punctuation">(</span><span class="token string">&quot;密码&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;你输入的是 </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">type</span><span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">server</span><span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">name</span><span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">password</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> confirm <span class="token operator">=</span> Prompt<span class="token punctuation">.</span><span class="token function">Confirm</span><span class="token punctuation">(</span><span class="token string">&quot;继续吗&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;你的选择是 </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">confirm</span><span class="token punctuation">}</span></span><span class="token string">!&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),e=[o];function c(i,l){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","zhizuojiaohuchengxusharprompt.html.vue"]]),m=JSON.parse('{"path":"/dotnet/console/yangshinugetbao/zhizuojiaohuchengxusharprompt.html","title":"制作交互程序Sharprompt","lang":"zh-CN","frontmatter":{"title":"制作交互程序Sharprompt","lang":"zh-CN","date":"2023-08-07T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"zhizuojiaohuchengxusharprompt","slug":"ap1v3s","docsId":"57282790","description":"介绍 Sharprompt是一个基于C#的交互式命令行应用框架，具有如下特点： 多平台支持 支持常用的提示方式（普通输入/密码/选择项等） 支持基于模型的提示（预览中） 输入值的验证 使用枚举值自动生成数据源 可定制的符号和颜色模式 Unicode 支持（多字节字符和表情符号😀🎉） 常用API Prompt.Input 简单的输入提示，返回指定类型...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/console/yangshinugetbao/zhizuojiaohuchengxusharprompt.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"制作交互程序Sharprompt"}],["meta",{"property":"og:description","content":"介绍 Sharprompt是一个基于C#的交互式命令行应用框架，具有如下特点： 多平台支持 支持常用的提示方式（普通输入/密码/选择项等） 支持基于模型的提示（预览中） 输入值的验证 使用枚举值自动生成数据源 可定制的符号和颜色模式 Unicode 支持（多字节字符和表情符号😀🎉） 常用API Prompt.Input 简单的输入提示，返回指定类型..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-08-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"制作交互程序Sharprompt\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-07T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"常用API","slug":"常用api","link":"#常用api","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.9,"words":269},"filePathRelative":"dotnet/console/yangshinugetbao/zhizuojiaohuchengxusharprompt.md","localizedDate":"2023年8月7日","excerpt":"<h2>介绍</h2>\\n<p>Sharprompt是一个基于C#的交互式命令行应用框架，具有如下特点：</p>\\n<ul>\\n<li>多平台支持</li>\\n<li>支持常用的提示方式（普通输入/密码/选择项等）</li>\\n<li>支持基于模型的提示（预览中）</li>\\n<li>输入值的验证</li>\\n<li>使用枚举值自动生成数据源</li>\\n<li>可定制的符号和颜色模式</li>\\n<li>Unicode 支持（多字节字符和表情符号😀🎉）</li>\\n</ul>\\n<h2>常用API</h2>\\n<p>Prompt.Input\\n简单的输入提示，返回指定类型数据\\nPrompt.Password\\n输入密码提示\\nPrompt.Confirm\\n确认提示，返回bool值\\nPrompt.Select\\n单选提示\\nPrompt.ColorSchema\\n指定配色方案</p>","autoDesc":true}');export{k as comp,m as data};
