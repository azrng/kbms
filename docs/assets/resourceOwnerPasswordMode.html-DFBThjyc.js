import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as e,c as o,a as n,d as s,e as c,b as l}from"./app-qB9_Bjjp.js";const i={},u=l(`<h2 id="_4-资源密码凭据模式" tabindex="-1"><a class="header-anchor" href="#_4-资源密码凭据模式"><span>4. 资源密码凭据模式</span></a></h2><p>如果你高度信任某个应用Client，也允许用户把用户名和密码，直接告诉该应用Client。该应用Client就使用你的密码，申请令牌，这种方式称为&quot;密码式&quot;（password）。</p><h3 id="_4-1-适用场景" tabindex="-1"><a class="header-anchor" href="#_4-1-适用场景"><span>4.1 适用场景</span></a></h3><p>资源所有者密码凭证授权模式，适用于当资源所有者与客户端具有良好信任关系的场景，比如客户端是设备的操作系统或具备高权限的应用。授权服务器在开放此种授权模式时必须格外小心，并且只有在别的模式不可用时才允许这种模式。</p><blockquote><p>这种模式下，应用client可能存了用户密码这不安全性问题，所以才需要高可信的应用。 主要适用于用来做遗留项目升级为oauth2的适配授权使用，当然如果client是自家的应用，也是可以的，同时支持refresh token。 例如，A站点 需要添加了 OAuth 2.0 作为对其现有基础架构的一个授权机制。对于现有的客户端转变为这种授权方案，资源所有者密码凭据授权将是最方便的，因为他们只需使用现有的帐户详细信息（比如用户名和密码）来获取访问令牌。</p></blockquote><h3 id="_4-2-密码授权流程" tabindex="-1"><a class="header-anchor" href="#_4-2-密码授权流程"><span>4.2 密码授权流程</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>     <span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">+</span>
     <span class="token operator">|</span> Resource <span class="token operator">|</span>
     <span class="token operator">|</span>  Owner   <span class="token operator">|</span>
     <span class="token operator">|</span>          <span class="token operator">|</span>
     <span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">+</span>
          v
          <span class="token operator">|</span>    <span class="token return-type class-name">Resource</span> Owner
         <span class="token punctuation">(</span>A<span class="token punctuation">)</span> Password Credentials
          <span class="token operator">|</span>
          v
     <span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span>                                  <span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span>
     <span class="token operator">|</span>         <span class="token operator">|</span><span class="token operator">&gt;</span><span class="token operator">--</span><span class="token punctuation">(</span>B<span class="token punctuation">)</span><span class="token operator">--</span><span class="token operator">--</span> Resource Owner <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-&gt;</span><span class="token operator">|</span>               <span class="token operator">|</span>
     <span class="token operator">|</span>         <span class="token operator">|</span>         Password Credentials     <span class="token operator">|</span> Authorization <span class="token operator">|</span>
     <span class="token operator">|</span> Client  <span class="token operator">|</span>                                  <span class="token operator">|</span>     Server    <span class="token operator">|</span>
     <span class="token operator">|</span>         <span class="token operator">|</span><span class="token operator">&lt;</span><span class="token operator">--</span><span class="token punctuation">(</span>C<span class="token punctuation">)</span><span class="token operator">--</span><span class="token operator">--</span> Access Token <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">&lt;</span><span class="token operator">|</span>               <span class="token operator">|</span>
     <span class="token operator">|</span>         <span class="token operator">|</span>    <span class="token punctuation">(</span>w<span class="token operator">/</span> Optional <span class="token class-name">Refresh</span> Token<span class="token punctuation">)</span>   <span class="token operator">|</span>               <span class="token operator">|</span>
     <span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span>                                  <span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>资源所有者密码凭证授权流程描述 （A）资源所有者向客户端提供其用户名和密码。 （B）客户端从授权中请求访问令牌服务器的令牌端点，以获取访问令牌。当发起该请求时，授权服务器需要认证客户端的身份。 （C） 授权服务器验证客户端身份，同时也验证资源所有者的凭据，如果都通过，则签发访问令牌。</p><h4 id="_4-2-1-过程详解" tabindex="-1"><a class="header-anchor" href="#_4-2-1-过程详解"><span>4.2.1 过程详解</span></a></h4><p>访问令牌请求</p><table><thead><tr><th>参数</th><th>是否必须</th><th>含义</th></tr></thead><tbody><tr><td>grant_type</td><td>必需</td><td>授权类型，值固定为“password”。</td></tr><tr><td>username</td><td>必需</td><td>用户名</td></tr><tr><td>password</td><td>必需</td><td>密码</td></tr><tr><td>scope</td><td>可选</td><td>表示授权范围。</td></tr></tbody></table><p>同时将允许其他请求参数client_id和client_secret，或在HTTP Basic auth标头中接受客户端ID和密钥。 验证用户名密码 示例：客户端身份验证两种方式 1、Authorization: Bearer base64(resourcesServer:123) 2、client_id（客户端标识），client_secret（客户端秘钥），username（用户名），password（密码）。 (用户的操作：输入账号和密码) A 网站要求用户提供 B 网站的用户名和密码。拿到以后，A 就直接向 B 请求令牌。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>POST <span class="token operator">/</span>connect<span class="token operator">/</span>token HTTP<span class="token operator">/</span><span class="token number">1.1</span>
Host<span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">5014</span>
Content<span class="token operator">-</span>Length<span class="token punctuation">:</span> <span class="token number">106</span>

client_id<span class="token operator">=</span>ResourceOwnerPassword01<span class="token operator">&amp;</span>client_secret<span class="token operator">=</span>secrets<span class="token operator">&amp;</span>grant_type<span class="token operator">=</span>password<span class="token operator">&amp;</span>username<span class="token operator">=</span>admin<span class="token operator">&amp;</span>password<span class="token operator">=</span><span class="token number">123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面URL中，grant_type参数是授权方式，这里的password是“密码式”，username和password是B的用户名和密码。</p><h4 id="_4-2-2-访问令牌响应" tabindex="-1"><a class="header-anchor" href="#_4-2-2-访问令牌响应"><span>4.2.2 访问令牌响应</span></a></h4><p>第二步，B 网站验证身份通过后，直接给出令牌。注意，这时不需要跳转，而是把令牌放在 JSON 数据里面，作为 HTTP 回应，A 因此拿到令牌。 响应给用户令牌信息（access_token），如下所示</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">{</span>
    <span class="token string">&quot;access_token&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;访问令牌&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;expires_in&quot;</span><span class="token punctuation">:</span> <span class="token number">3600</span><span class="token punctuation">,</span>
    <span class="token string">&quot;token_type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Bearer&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;scope&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;client_scope1&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用户使用这个令牌访问资源服务器，当令牌失效时使用刷新令牌去换取新的令牌。 这种方式需要用户给出自己的用户名/密码，显然风险很大，因此只适用于其他授权方式都无法采用的情况，而且必须是用户高度信任的应用。</p><h3 id="_4-3-实践" tabindex="-1"><a class="header-anchor" href="#_4-3-实践"><span>4.3 实践</span></a></h3><h4 id="_4-3-1-搭建认证授权服务" tabindex="-1"><a class="header-anchor" href="#_4-3-1-搭建认证授权服务"><span>4.3.1 搭建认证授权服务</span></a></h4><p>使用我们之前创建的AuthCenterInMemory项目。</p><h5 id="_4-3-1-1-配置内容" tabindex="-1"><a class="header-anchor" href="#_4-3-1-1-配置内容"><span>4.3.1.1 配置内容</span></a></h5><p>修改IdentityConfig文件内容</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">IdentityConfig</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 资源</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>IdentityResource<span class="token punctuation">&gt;</span></span> IdentityResources <span class="token operator">=&gt;</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">IdentityResource<span class="token punctuation">[</span><span class="token punctuation">]</span></span>
        <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">IdentityResources<span class="token punctuation">.</span>OpenId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">IdentityResources<span class="token punctuation">.</span>Profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">/*
     在3.1.x 到 4.x 的变更中，ApiResource 的 Scope 正式独立出来为 ApiScope 对象，区别ApiResource 和 Scope的关系,
     Scope 是属于ApiResource 的一个属性，可以包含多个Scope。
     */</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>ApiResource<span class="token punctuation">&gt;</span></span> ApiResources <span class="token operator">=&gt;</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ApiResource<span class="token punctuation">[</span><span class="token punctuation">]</span></span>
        <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ApiResource</span><span class="token punctuation">(</span><span class="token string">&quot;API01&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;api1DisplayName&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                Scopes <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;client_scope1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                ApiSecrets<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Secret</span><span class="token punctuation">(</span><span class="token string">&quot;secrets&quot;</span><span class="token punctuation">.</span><span class="token function">Sha256</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">//api密钥</span>
                UserClaims<span class="token operator">=</span><span class="token punctuation">{</span>  JwtClaimTypes<span class="token punctuation">.</span>Name<span class="token punctuation">,</span>JwtClaimTypes<span class="token punctuation">.</span>NickName<span class="token punctuation">,</span>JwtClaimTypes<span class="token punctuation">.</span>Role<span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// Authorization Server保护了哪些 API Scope（作用域）</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>ApiScope<span class="token punctuation">&gt;</span></span> <span class="token function">GetApiScopes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ApiScope</span><span class="token punctuation">(</span><span class="token string">&quot;client_scope1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;client_scope1 DisplayName&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 哪些客户端 Client（应用） 可以使用这个 Authorization Server</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>Client<span class="token punctuation">&gt;</span></span> <span class="token function">GetClients</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Client</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token comment">//客户端凭据模式</span>
                ClientId <span class="token operator">=</span> <span class="token string">&quot;ConsoleClient01&quot;</span><span class="token punctuation">,</span> <span class="token comment">//客户端的标识，要是唯一的</span>
                ClientSecrets <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Secret</span><span class="token punctuation">(</span><span class="token string">&quot;secrets&quot;</span><span class="token punctuation">.</span><span class="token function">Sha256</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//客户端密码，进行了加密</span>
                AllowedGrantTypes <span class="token operator">=</span>
                    GrantTypes
                        <span class="token punctuation">.</span>ClientCredentials<span class="token punctuation">,</span> <span class="token comment">//授权方式，这里采用的是客户端认证模式，只要ClientId，以及ClientSecrets正确即可访问对应的AllowedScopes里面的api资源</span>
                AllowedScopes <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token string">&quot;client_scope1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//定义这个客户端可以访问的scopes</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Client</span>
            <span class="token punctuation">{</span>
                <span class="token comment">//资源密码模式</span>

                ClientId <span class="token operator">=</span> <span class="token string">&quot;ResourceOwnerPassword01&quot;</span><span class="token punctuation">,</span>
                AllowedGrantTypes <span class="token operator">=</span> GrantTypes<span class="token punctuation">.</span>ResourceOwnerPassword<span class="token punctuation">,</span>
                ClientSecrets <span class="token operator">=</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Secret</span><span class="token punctuation">(</span><span class="token string">&quot;secrets&quot;</span><span class="token punctuation">.</span><span class="token function">Sha256</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                AllowedScopes <span class="token operator">=</span>
                <span class="token punctuation">{</span>
                    <span class="token string">&quot;client_scope1&quot;</span><span class="token punctuation">,</span>
                    IdentityServerConstants<span class="token punctuation">.</span>StandardScopes<span class="token punctuation">.</span>OpenId<span class="token punctuation">,</span>
                    IdentityServerConstants<span class="token punctuation">.</span>StandardScopes<span class="token punctuation">.</span>Email<span class="token punctuation">,</span>
                    IdentityServerConstants<span class="token punctuation">.</span>StandardScopes<span class="token punctuation">.</span>Phone<span class="token punctuation">,</span>
                    IdentityServerConstants<span class="token punctuation">.</span>StandardScopes<span class="token punctuation">.</span>Profile<span class="token punctuation">,</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 哪些User可以被这个AuthorizationServer识别并授权</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>TestUser<span class="token punctuation">&gt;</span></span> <span class="token function">GetTestUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TestUser</span>
            <span class="token punctuation">{</span>
                SubjectId <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
                Username <span class="token operator">=</span> <span class="token string">&quot;alice&quot;</span><span class="token punctuation">,</span>
                Password <span class="token operator">=</span> <span class="token string">&quot;alice&quot;</span><span class="token punctuation">,</span>

                Claims <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Alice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span><span class="token string">&quot;website&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://alice.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>ClaimTypes<span class="token punctuation">.</span>Role<span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>ClaimTypes<span class="token punctuation">.</span>NameIdentifier<span class="token punctuation">,</span> <span class="token string">&quot;123456789&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TestUser</span>
            <span class="token punctuation">{</span>
                SubjectId <span class="token operator">=</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>
                Username <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
                Password <span class="token operator">=</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">,</span>

                Claims <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>JwtClaimTypes<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token string">&quot;Bob&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                     <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>JwtClaimTypes<span class="token punctuation">.</span>NickName<span class="token punctuation">,</span> <span class="token string">&quot;Bob nickname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>JwtClaimTypes<span class="token punctuation">.</span>Email<span class="token punctuation">,</span> <span class="token string">&quot;itzhangyunpeng@163.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>JwtClaimTypes<span class="token punctuation">.</span>WebSite<span class="token punctuation">,</span> <span class="token string">&quot;状态&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>JwtClaimTypes<span class="token punctuation">.</span>PhoneNumber<span class="token punctuation">,</span> <span class="token string">&quot;18838940824&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>JwtClaimTypes<span class="token punctuation">.</span>Role<span class="token punctuation">,</span> <span class="token string">&quot;ceshi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//添加角色</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span><span class="token string">&quot;today&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zhouyi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span><span class="token string">&quot;ceshi1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ceshi11&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过配置ApiResource可以让访问令牌里面包含用户角色、姓名等信息。</p><h5 id="_4-3-1-2-注册服务" tabindex="-1"><a class="header-anchor" href="#_4-3-1-2-注册服务"><span>4.3.1.2 注册服务</span></a></h5><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddIdentityServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddDeveloperSigningCredential</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddTestUsers</span><span class="token punctuation">(</span>IdentityConfig<span class="token punctuation">.</span><span class="token function">GetTestUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddInMemoryClients</span><span class="token punctuation">(</span>IdentityConfig<span class="token punctuation">.</span><span class="token function">GetClients</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddInMemoryApiScopes</span><span class="token punctuation">(</span>IdentityConfig<span class="token punctuation">.</span><span class="token function">GetApiScopes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddInMemoryApiResources</span><span class="token punctuation">(</span>IdentityConfig<span class="token punctuation">.</span>ApiResources<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-3-1-3-配置管道" tabindex="-1"><a class="header-anchor" href="#_4-3-1-3-配置管道"><span>4.3.1.3 配置管道</span></a></h5><p>保持之前的不变。</p><h4 id="_4-3-2-搭建api项目" tabindex="-1"><a class="header-anchor" href="#_4-3-2-搭建api项目"><span>4.3.2 搭建API项目</span></a></h4><h5 id="_4-3-2-1-安装nuget包" tabindex="-1"><a class="header-anchor" href="#_4-3-2-1-安装nuget包"><span>4.3.2.1 安装Nuget包</span></a></h5><p>IdentityServer4.AccessTokenValidation 包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;IdentityServer4.AccessTokenValidation&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;3.0.1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="_4-3-2-2-注册服务" tabindex="-1"><a class="header-anchor" href="#_4-3-2-2-注册服务"><span>4.3.2.2 注册服务</span></a></h5><p>如果是.Net6以下：「在Startup.cs文件，ConfigureServices方法中」 .Net6直接修改Program文件为</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> WebApplication<span class="token punctuation">.</span><span class="token function">CreateBuilder</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Add services to the container.</span>

builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddControllers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddEndpointsApiExplorer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddSwaggerGen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddAuthentication</span><span class="token punctuation">(</span><span class="token string">&quot;Bearer&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">AddIdentityServerAuthentication</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            options<span class="token punctuation">.</span>Authority <span class="token operator">=</span> <span class="token string">&quot;http://localhost:5014&quot;</span><span class="token punctuation">;</span>
            options<span class="token punctuation">.</span>RequireHttpsMetadata <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            options<span class="token punctuation">.</span>ApiName <span class="token operator">=</span> <span class="token string">&quot;API01&quot;</span><span class="token punctuation">;</span>
            options<span class="token punctuation">.</span>ApiSecret <span class="token operator">=</span> <span class="token string">&quot;secrets&quot;</span><span class="token punctuation">;</span><span class="token comment">//对应ApiResources中的密钥</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AddAuthentication把Bearer配置成默认模式，将身份认证服务添加到DI中。 AddIdentityServerAuthentication把IdentityServer的access token添加到DI中，供身份认证服务使用。</p><h5 id="_4-3-2-3-配置管道" tabindex="-1"><a class="header-anchor" href="#_4-3-2-3-配置管道"><span>4.3.2.3 配置管道</span></a></h5><p>如果是.Net6以下：「在Startup.cs文件，Configure方法中」 .Net6直接修改Program文件为</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> app <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>app<span class="token punctuation">.</span>Environment<span class="token punctuation">.</span><span class="token function">IsDevelopment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    app<span class="token punctuation">.</span><span class="token function">UseExceptionHandler</span><span class="token punctuation">(</span><span class="token string">&quot;/Home/Error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

app<span class="token punctuation">.</span><span class="token function">UseStaticFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">UseRouting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">UseIdentityServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">UseAuthorization</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">MapControllerRoute</span><span class="token punctuation">(</span>
    <span class="token named-parameter punctuation">name</span><span class="token punctuation">:</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
    <span class="token named-parameter punctuation">pattern</span><span class="token punctuation">:</span> <span class="token string">&quot;{controller=Home}/{action=Index}/{id?}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>UseAuthentication将身份验证中间件添加到管道中； UseAuthorization 将启动授权中间件添加到管道中，以便在每次调用主机时执行身份验证授权功能。</p><h5 id="_4-3-2-4-添加api资源接口" tabindex="-1"><a class="header-anchor" href="#_4-3-2-4-添加api资源接口"><span>4.3.2.4 添加API资源接口</span></a></h5><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ApiController</span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Route</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;api/[controller]&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IdentityController</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ControllerBase</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ILogger<span class="token punctuation">&lt;</span>IdentityController<span class="token punctuation">&gt;</span></span> _logger<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">IdentityController</span><span class="token punctuation">(</span><span class="token class-name">ILogger<span class="token punctuation">&lt;</span>IdentityController<span class="token punctuation">&gt;</span></span> logger<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger <span class="token operator">=</span> logger<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;UserClaims&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Authorize</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">IActionResult</span> <span class="token function">GetUserClaims</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">JsonResult</span><span class="token punctuation">(</span><span class="token keyword">from</span> c <span class="token keyword">in</span> User<span class="token punctuation">.</span>Claims <span class="token keyword">select</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> c<span class="token punctuation">.</span>Type<span class="token punctuation">,</span> c<span class="token punctuation">.</span>Value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在IdentityController 控制器中添加 [Authorize] , 在进行请求资源的时候，需进行认证授权通过后，才能进行访问。</p><h4 id="_4-3-3-搭建client客户端" tabindex="-1"><a class="header-anchor" href="#_4-3-3-搭建client客户端"><span>4.3.3 搭建Client客户端</span></a></h4><p>实现对API资源的访问和获取。</p><h5 id="_4-3-3-1-创建一个控制台项目" tabindex="-1"><a class="header-anchor" href="#_4-3-3-1-创建一个控制台项目"><span>4.3.3.1 创建一个控制台项目</span></a></h5><h5 id="_4-3-3-2-安装nuget包" tabindex="-1"><a class="header-anchor" href="#_4-3-3-2-安装nuget包"><span>4.3.3.2 安装Nuget包</span></a></h5><p><strong>「IdentityModel」</strong> 包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;IdentityModel&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;6.0.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-3-3-3-获取令牌" tabindex="-1"><a class="header-anchor" href="#_4-3-3-3-获取令牌"><span>4.3.3.3 获取令牌</span></a></h5><p>客户端与授权服务器进行身份验证并向令牌端点请求访问令牌。授权服务器对客户端进行身份验证，如果有效，颁发访问令牌。</p><p>「IdentityModel」 包括用于发现 「IdentityServer」 各个终结点（EndPoint）的客户端库。 我们可以使用从 「IdentityServer」 元数据获取到的Token终结点请求令牌：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> disco <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">GetDiscoveryDocumentAsync</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:5014&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>disco<span class="token punctuation">.</span>IsError<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>disco<span class="token punctuation">.</span>Error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// request token</span>
<span class="token class-name"><span class="token keyword">var</span></span> tokenResponse <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">RequestPasswordTokenAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">PasswordTokenRequest</span>
<span class="token punctuation">{</span>
    Address <span class="token operator">=</span> disco<span class="token punctuation">.</span>TokenEndpoint<span class="token punctuation">,</span>
    ClientId <span class="token operator">=</span> <span class="token string">&quot;ResourceOwnerPassword01&quot;</span><span class="token punctuation">,</span>
    ClientSecret <span class="token operator">=</span> <span class="token string">&quot;secrets&quot;</span><span class="token punctuation">,</span>

    UserName <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
    Password <span class="token operator">=</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">,</span>
    Scope <span class="token operator">=</span> <span class="token string">&quot;client_scope1&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>tokenResponse<span class="token punctuation">.</span>IsError<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>tokenResponse<span class="token punctuation">.</span>Error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>tokenResponse<span class="token punctuation">.</span>Json<span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;\\n\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>客户端请求token多了两个参数，一个用户名，一个密码</li><li>请求Token中使用IdentityModel包的方法RequestPasswordTokenAsync,实现用户密码方式获取令牌。</li></ol><h5 id="_4-3-3-4-调用api" tabindex="-1"><a class="header-anchor" href="#_4-3-3-4-调用api"><span>4.3.3.4 调用API</span></a></h5><p>要将Token发送到API，通常使用HTTP Authorization标头。这是使用SetBearerToken扩展方法完成。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> apiClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
apiClient<span class="token punctuation">.</span><span class="token function">SetBearerToken</span><span class="token punctuation">(</span>tokenResponse<span class="token punctuation">.</span>AccessToken<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token keyword">await</span> apiClient<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:5020/api/Identity/UserClaims&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>response<span class="token punctuation">.</span>IsSuccessStatusCode<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>StatusCode<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> content <span class="token operator">=</span> response<span class="token punctuation">.</span>Content<span class="token punctuation">.</span><span class="token function">ReadAsStringAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Result<span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>JArray<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行项目演示获取结果</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;nbf&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;1651318247&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;exp&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;1651321847&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;iss&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;http://localhost:5014&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;aud&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;API01&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;client_id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;ResourceOwnerPassword01&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;sub&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;auth_time&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;1651318247&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;idp&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;local&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;Bob&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;nickname&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;Bob nickname&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;ceshi&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;jti&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;AF07EA7F7410C046CFC2D32D332362D0&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;iat&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;1651318247&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;scope&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;client_scope1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;amr&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;pwd&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,61),r={href:"https://mp.weixin.qq.com/s/fWWJUNw-ggbpjNzjT6MFvg",target:"_blank",rel:"noopener noreferrer"};function k(d,v){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[n("a",r,[s("https://mp.weixin.qq.com/s/fWWJUNw-ggbpjNzjT6MFvg"),c(a)]),s(" | IdentityServer4系列 | 资源密码凭证模式")])])}const g=t(i,[["render",k],["__file","resourceOwnerPasswordMode.html.vue"]]),q=JSON.parse('{"path":"/middleware/authorize/identityserver4/mode/resourceOwnerPasswordMode.html","title":"资源密码凭据模式","lang":"zh-CN","frontmatter":{"title":"资源密码凭据模式","lang":"zh-CN","date":"2022-04-30T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"ziyuanmimapingjumoshi","slug":"usg52h","docsId":"75705628","description":"4. 资源密码凭据模式 如果你高度信任某个应用Client，也允许用户把用户名和密码，直接告诉该应用Client。该应用Client就使用你的密码，申请令牌，这种方式称为\\"密码式\\"（password）。 4.1 适用场景 资源所有者密码凭证授权模式，适用于当资源所有者与客户端具有良好信任关系的场景，比如客户端是设备的操作系统或具备高权限的应用。授权服务...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/authorize/identityserver4/mode/resourceOwnerPasswordMode.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"资源密码凭据模式"}],["meta",{"property":"og:description","content":"4. 资源密码凭据模式 如果你高度信任某个应用Client，也允许用户把用户名和密码，直接告诉该应用Client。该应用Client就使用你的密码，申请令牌，这种方式称为\\"密码式\\"（password）。 4.1 适用场景 资源所有者密码凭证授权模式，适用于当资源所有者与客户端具有良好信任关系的场景，比如客户端是设备的操作系统或具备高权限的应用。授权服务..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-16T05:03:06.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-04-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-16T05:03:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"资源密码凭据模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-30T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-16T05:03:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"4. 资源密码凭据模式","slug":"_4-资源密码凭据模式","link":"#_4-资源密码凭据模式","children":[{"level":3,"title":"4.1 适用场景","slug":"_4-1-适用场景","link":"#_4-1-适用场景","children":[]},{"level":3,"title":"4.2 密码授权流程","slug":"_4-2-密码授权流程","link":"#_4-2-密码授权流程","children":[{"level":4,"title":"4.2.1 过程详解","slug":"_4-2-1-过程详解","link":"#_4-2-1-过程详解","children":[]},{"level":4,"title":"4.2.2 访问令牌响应","slug":"_4-2-2-访问令牌响应","link":"#_4-2-2-访问令牌响应","children":[]}]},{"level":3,"title":"4.3 实践","slug":"_4-3-实践","link":"#_4-3-实践","children":[{"level":4,"title":"4.3.1 搭建认证授权服务","slug":"_4-3-1-搭建认证授权服务","link":"#_4-3-1-搭建认证授权服务","children":[{"level":5,"title":"4.3.1.1 配置内容","slug":"_4-3-1-1-配置内容","link":"#_4-3-1-1-配置内容","children":[]},{"level":5,"title":"4.3.1.2 注册服务","slug":"_4-3-1-2-注册服务","link":"#_4-3-1-2-注册服务","children":[]},{"level":5,"title":"4.3.1.3 配置管道","slug":"_4-3-1-3-配置管道","link":"#_4-3-1-3-配置管道","children":[]}]},{"level":4,"title":"4.3.2 搭建API项目","slug":"_4-3-2-搭建api项目","link":"#_4-3-2-搭建api项目","children":[{"level":5,"title":"4.3.2.1 安装Nuget包","slug":"_4-3-2-1-安装nuget包","link":"#_4-3-2-1-安装nuget包","children":[]},{"level":5,"title":"4.3.2.2 注册服务","slug":"_4-3-2-2-注册服务","link":"#_4-3-2-2-注册服务","children":[]},{"level":5,"title":"4.3.2.3 配置管道","slug":"_4-3-2-3-配置管道","link":"#_4-3-2-3-配置管道","children":[]},{"level":5,"title":"4.3.2.4 添加API资源接口","slug":"_4-3-2-4-添加api资源接口","link":"#_4-3-2-4-添加api资源接口","children":[]}]},{"level":4,"title":"4.3.3 搭建Client客户端","slug":"_4-3-3-搭建client客户端","link":"#_4-3-3-搭建client客户端","children":[{"level":5,"title":"4.3.3.1 创建一个控制台项目","slug":"_4-3-3-1-创建一个控制台项目","link":"#_4-3-3-1-创建一个控制台项目","children":[]},{"level":5,"title":"4.3.3.2 安装Nuget包","slug":"_4-3-3-2-安装nuget包","link":"#_4-3-3-2-安装nuget包","children":[]},{"level":5,"title":"4.3.3.3 获取令牌","slug":"_4-3-3-3-获取令牌","link":"#_4-3-3-3-获取令牌","children":[]},{"level":5,"title":"4.3.3.4 调用API","slug":"_4-3-3-4-调用api","link":"#_4-3-3-4-调用api","children":[]}]}]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1708059786000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":7.08,"words":2124},"filePathRelative":"middleware/authorize/identityserver4/mode/resourceOwnerPasswordMode.md","localizedDate":"2022年4月30日","excerpt":"<h2>4. 资源密码凭据模式</h2>\\n<p>如果你高度信任某个应用Client，也允许用户把用户名和密码，直接告诉该应用Client。该应用Client就使用你的密码，申请令牌，这种方式称为\\"密码式\\"（password）。</p>\\n<h3>4.1 适用场景</h3>\\n<p>资源所有者密码凭证授权模式，适用于当资源所有者与客户端具有良好信任关系的场景，比如客户端是设备的操作系统或具备高权限的应用。授权服务器在开放此种授权模式时必须格外小心，并且只有在别的模式不可用时才允许这种模式。</p>\\n<blockquote>\\n<p>这种模式下，应用client可能存了用户密码这不安全性问题，所以才需要高可信的应用。\\n主要适用于用来做遗留项目升级为oauth2的适配授权使用，当然如果client是自家的应用，也是可以的，同时支持refresh token。\\n例如，A站点 需要添加了 OAuth 2.0 作为对其现有基础架构的一个授权机制。对于现有的客户端转变为这种授权方案，资源所有者密码凭据授权将是最方便的，因为他们只需使用现有的帐户详细信息（比如用户名和密码）来获取访问令牌。</p>\\n</blockquote>","autoDesc":true}');export{g as comp,q as data};
