import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o,c as p,b as n,e as a,f as c,d as i}from"./app-D8HBJYTp.js";const r={},l=i(`<h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景"><span>使用场景</span></a></h2><p>生成有过期时间的token凭据。比如重置密码的令牌。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="数据保护组件" tabindex="-1"><a class="header-anchor" href="#数据保护组件"><span>数据保护组件</span></a></h3><p>注册数据保护</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token function">AddDataProtection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 Controller 的构造函数中注入 IDataProtectionProvider 对象，使用 Provider 创建一个实现 IDataProtector 接口的数据保护器对象：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IDataProtector</span> _dataProtector<span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token function">TokenController</span><span class="token punctuation">(</span><span class="token class-name">IDataProtectionProvider</span> dataProtectionProvider<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    _dataProtector <span class="token operator">=</span> dataProtectionProvider<span class="token punctuation">.</span><span class="token function">CreateProtector</span><span class="token punctuation">(</span><span class="token string">&quot;Token Protector&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>就可以使用Protect和Unprotect加解密数据：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Route</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Generate&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">Generate</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> _dataProtector<span class="token punctuation">.</span><span class="token function">Protect</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Route</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Check&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">Check</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> token<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> _dataProtector<span class="token punctuation">.</span><span class="token function">Unprotect</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以使用 IDataProtector 接口的 ToTimeLimitedDataProtector 方法创建一个带过期时间的数据保护器：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ITimeLimitedDataProtector</span> _dataProtector<span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token function">TokenController</span><span class="token punctuation">(</span><span class="token class-name">IDataProtectionProvider</span> dataProtectionProvider<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    _dataProtector <span class="token operator">=</span> dataProtectionProvider<span class="token punctuation">.</span><span class="token function">CreateProtector</span><span class="token punctuation">(</span><span class="token string">&quot;Token Protector&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToTimeLimitedDataProtector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们就可以在Protect中加入TimeSpan参数，指定加密数据的过期时间：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>_dataProtector<span class="token punctuation">.</span><span class="token function">Protect</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样，当前 Token 的有效时间只有5秒，超期后无法解密。</p><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,16),u={href:"https://mp.weixin.qq.com/s/9oB1Vc_yWCrH3KwusCiJRw",target:"_blank",rel:"noopener noreferrer"};function d(k,h){const s=e("ExternalLinkIcon");return o(),p("div",null,[l,n("p",null,[n("a",u,[a("https://mp.weixin.qq.com/s/9oB1Vc_yWCrH3KwusCiJRw"),c(s)]),a(" | 利用 .NET Core 中的数据保护组件实现限时 Token")])])}const g=t(r,[["render",d],["__file","shujubaohushixianxianshitoken.html.vue"]]),b=JSON.parse('{"path":"/dotnet/anquanhebiaoshi/shenfenrenzhengheshouquan/shujubaohushixianxianshitoken.html","title":"数据保护实现限时Token","lang":"zh-CN","frontmatter":{"title":"数据保护实现限时Token","lang":"zh-CN","date":"2022-04-27T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"shujubaohushixianxianshitoken","slug":"inpnlw","docsId":"75342843","description":"使用场景 生成有过期时间的token凭据。比如重置密码的令牌。 操作 数据保护组件 注册数据保护 在 Controller 的构造函数中注入 IDataProtectionProvider 对象，使用 Provider 创建一个实现 IDataProtector 接口的数据保护器对象： 就可以使用Protect和Unprotect加解密数据： 我们可以...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/anquanhebiaoshi/shenfenrenzhengheshouquan/shujubaohushixianxianshitoken.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"数据保护实现限时Token"}],["meta",{"property":"og:description","content":"使用场景 生成有过期时间的token凭据。比如重置密码的令牌。 操作 数据保护组件 注册数据保护 在 Controller 的构造函数中注入 IDataProtectionProvider 对象，使用 Provider 创建一个实现 IDataProtector 接口的数据保护器对象： 就可以使用Protect和Unprotect加解密数据： 我们可以..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-04-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据保护实现限时Token\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"数据保护组件","slug":"数据保护组件","link":"#数据保护组件","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.9,"words":270},"filePathRelative":"dotnet/anquanhebiaoshi/shenfenrenzhengheshouquan/shujubaohushixianxianshitoken.md","localizedDate":"2022年4月27日","excerpt":"<h2>使用场景</h2>\\n<p>生成有过期时间的token凭据。比如重置密码的令牌。</p>\\n<h2>操作</h2>\\n<h3>数据保护组件</h3>\\n<p>注册数据保护</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code>services<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AddDataProtection</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{g as comp,b as data};
