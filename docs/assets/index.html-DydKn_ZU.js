import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as t}from"./app-Bfb6-vFH.js";const p={},e=t(`<h2 id="运算符重载" tabindex="-1"><a class="header-anchor" href="#运算符重载"><span>运算符重载</span></a></h2><p>在构建自己类型的时候，应该始终考虑是否可以用于运算符重载，比如下面的实例</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> mikeIncome <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Salary</span> <span class="token punctuation">{</span> RMB <span class="token operator">=</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> roseIncome <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Salary</span> <span class="token punctuation">{</span> RMB <span class="token operator">=</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> familyIncome <span class="token operator">=</span> Salary<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>mikeIncome<span class="token punctuation">,</span> roseIncome<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 经过运算符重载</span>

<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> mikeIncome <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Salary</span> <span class="token punctuation">{</span> RMB <span class="token operator">=</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> roseIncome <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Salary</span> <span class="token punctuation">{</span> RMB <span class="token operator">=</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> familyIncome <span class="token operator">=</span> mikeIncome <span class="token operator">+</span> roseIncome<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


file <span class="token keyword">class</span> <span class="token class-name">Salary</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> RMB <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">Salary</span> <span class="token function">Add</span><span class="token punctuation">(</span><span class="token class-name">Salary</span> a<span class="token punctuation">,</span> <span class="token class-name">Salary</span> b<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        a<span class="token punctuation">.</span>RMB <span class="token operator">+=</span> b<span class="token punctuation">.</span>RMB<span class="token punctuation">;</span>
        <span class="token keyword">return</span> a<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> Salary <span class="token keyword">operator</span> <span class="token operator">+</span><span class="token punctuation">(</span><span class="token class-name">Salary</span> a<span class="token punctuation">,</span> <span class="token class-name">Salary</span> b<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        a<span class="token punctuation">.</span>RMB <span class="token operator">+=</span> b<span class="token punctuation">.</span>RMB<span class="token punctuation">;</span>
        <span class="token keyword">return</span> a<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/dotnet/csharp/yunsuanfuhebiaodashi/","title":"运算符","lang":"zh-CN","frontmatter":{"title":"运算符","lang":"zh-CN","date":"2023-10-22T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["csharp"],"tag":["运算符"],"description":"运算符重载 在构建自己类型的时候，应该始终考虑是否可以用于运算符重载，比如下面的实例","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/csharp/yunsuanfuhebiaodashi/"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"运算符"}],["meta",{"property":"og:description","content":"运算符重载 在构建自己类型的时候，应该始终考虑是否可以用于运算符重载，比如下面的实例"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-19T14:58:52.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"运算符"}],["meta",{"property":"article:published_time","content":"2023-10-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-19T14:58:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"运算符\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-19T14:58:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"运算符重载","slug":"运算符重载","link":"#运算符重载","children":[]}],"git":{"createdTime":1716130732000,"updatedTime":1716130732000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.45,"words":136},"filePathRelative":"dotnet/csharp/yunsuanfuhebiaodashi/readme.md","localizedDate":"2023年10月22日","excerpt":"<h2>运算符重载</h2>\\n<p>在构建自己类型的时候，应该始终考虑是否可以用于运算符重载，比如下面的实例</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> mikeIncome <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Salary</span> <span class=\\"token punctuation\\">{</span> RMB <span class=\\"token operator\\">=</span> <span class=\\"token number\\">10</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> roseIncome <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Salary</span> <span class=\\"token punctuation\\">{</span> RMB <span class=\\"token operator\\">=</span> <span class=\\"token number\\">20</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> familyIncome <span class=\\"token operator\\">=</span> Salary<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Add</span><span class=\\"token punctuation\\">(</span>mikeIncome<span class=\\"token punctuation\\">,</span> roseIncome<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 经过运算符重载</span>\\n\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> mikeIncome <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Salary</span> <span class=\\"token punctuation\\">{</span> RMB <span class=\\"token operator\\">=</span> <span class=\\"token number\\">10</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> roseIncome <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Salary</span> <span class=\\"token punctuation\\">{</span> RMB <span class=\\"token operator\\">=</span> <span class=\\"token number\\">20</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> familyIncome <span class=\\"token operator\\">=</span> mikeIncome <span class=\\"token operator\\">+</span> roseIncome<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n\\nfile <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Salary</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">int</span></span> RMB <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">get</span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">set</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token return-type class-name\\">Salary</span> <span class=\\"token function\\">Add</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Salary</span> a<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Salary</span> b<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        a<span class=\\"token punctuation\\">.</span>RMB <span class=\\"token operator\\">+=</span> b<span class=\\"token punctuation\\">.</span>RMB<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> a<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> Salary <span class=\\"token keyword\\">operator</span> <span class=\\"token operator\\">+</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Salary</span> a<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Salary</span> b<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        a<span class=\\"token punctuation\\">.</span>RMB <span class=\\"token operator\\">+=</span> b<span class=\\"token punctuation\\">.</span>RMB<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> a<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
