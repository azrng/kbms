import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as p,c,a as n,d as e,e as s,b as t}from"./app-qB9_Bjjp.js";const l={},i=t('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>NBomber是一个开源的 .NET 框架，开源协议是Apache 2.0， NBomber 用于对多种服务进行负载测试，包括 Web、消息队列、数据库等。 今年5月份发布了 NBomber 2.0版本。NBomber 类似于JMeter，但是和JMeter 不一样的地方是， NBomber 是通过F#/C#/JSON 代码来表达测试场景。</p><ol><li>NBomber 背后的主要原因是为编写负载测试提供了一个<strong>轻量级</strong>框架，您可以使用它来测试<strong>任何</strong>系统并模拟<strong>任何</strong>生产工作负载。我们只想提供一些抽象，以便我们可以描述任何类型的负载，并且仍然有一个简单、直观的 API。</li><li>另一个目标是提供构建块，通过应用任何复杂的负载分布来验证您的 POC（概念验证）项目。</li><li>使用 NBomber，您可以测试任何 PULL 或 PUSH 系统（HTTP、WebSockets、GraphQl、gRPC、SQL Databse、MongoDb、Redis 等）。</li><li>使用 NBomber，<strong>您可以轻松地将一些集成测试转换为负载测试</strong>。</li></ol>',3),u={href:"https://github.com/PragmaticFlow/NBomber",target:"_blank",rel:"noopener noreferrer"},m=t(`<h2 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span>优点</span></a></h2><p>NBomber 作为一个现代框架提供：</p><ul><li>零依赖协议（HTTP/WebSockets/AMQP/SQL）</li><li>对语义模型的零依赖（Pull/Push）</li><li>非常灵活的配置和非常简单的 API (F#/C#/JSON)</li><li>集群支持</li><li>实时报告</li><li>CI/CD 集成</li><li>数据馈送支持</li></ul><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="基本操作" tabindex="-1"><a class="header-anchor" href="#基本操作"><span>基本操作</span></a></h3><p>创建一个控制台，引用组件包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;NBomber&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;2.1.5&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>代码</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> step <span class="token operator">=</span> Step<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token string">&quot;step&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> context <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token comment">// you can define and execute any logic here,</span>
    <span class="token comment">// for example: send http request, SQL query etc</span>
    <span class="token comment">// NBomber will measure how much time it takes to execute your logic</span>

    <span class="token keyword">await</span> Task<span class="token punctuation">.</span><span class="token function">Delay</span><span class="token punctuation">(</span>TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Response<span class="token punctuation">.</span><span class="token function">Ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// second, we add our step to the scenario</span>
<span class="token class-name"><span class="token keyword">var</span></span> scenario <span class="token operator">=</span> ScenarioBuilder<span class="token punctuation">.</span><span class="token function">CreateScenario</span><span class="token punctuation">(</span><span class="token string">&quot;hello_world&quot;</span><span class="token punctuation">,</span> step<span class="token punctuation">)</span><span class="token punctuation">;</span>

NBomberRunner<span class="token punctuation">.</span><span class="token function">RegisterScenarios</span><span class="token punctuation">(</span>scenario<span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>行测试后，您将获得一份报告，文件夹下有有4种格式（txt、csv、html、md）的报告，其中Html 页面的报告比较直观.</p><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,11),d={href:"https://mp.weixin.qq.com/s/n3uWijjb7KwVHcxFIW1ZTw",target:"_blank",rel:"noopener noreferrer"};function b(h,k){const a=r("ExternalLinkIcon");return p(),c("div",null,[i,n("p",null,[e("仓库地址："),n("a",u,[e("https://github.com/PragmaticFlow/NBomber"),s(a)])]),m,n("p",null,[n("a",d,[e("https://mp.weixin.qq.com/s/n3uWijjb7KwVHcxFIW1ZTw"),s(a)]),e(" | 开源的负载测试/压力测试工具 NBomber")])])}const v=o(l,[["render",b],["__file","nbomberyace.html.vue"]]),B=JSON.parse('{"path":"/middleware/testMange/pressureTest/nbomberyace.html","title":"NBomber压测","lang":"zh-CN","frontmatter":{"title":"NBomber压测","lang":"zh-CN","date":"2023-03-26T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"nbomberyace","slug":"yrxlhn","docsId":"70054450","description":"概述 NBomber是一个开源的 .NET 框架，开源协议是Apache 2.0， NBomber 用于对多种服务进行负载测试，包括 Web、消息队列、数据库等。 今年5月份发布了 NBomber 2.0版本。NBomber 类似于JMeter，但是和JMeter 不一样的地方是， NBomber 是通过F#/C#/JSON 代码来表达测试场景。 NB...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/testMange/pressureTest/nbomberyace.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"NBomber压测"}],["meta",{"property":"og:description","content":"概述 NBomber是一个开源的 .NET 框架，开源协议是Apache 2.0， NBomber 用于对多种服务进行负载测试，包括 Web、消息队列、数据库等。 今年5月份发布了 NBomber 2.0版本。NBomber 类似于JMeter，但是和JMeter 不一样的地方是， NBomber 是通过F#/C#/JSON 代码来表达测试场景。 NB..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-19T02:43:38.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-03-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-19T02:43:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"NBomber压测\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-26T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-19T02:43:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"优点","slug":"优点","link":"#优点","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"基本操作","slug":"基本操作","link":"#基本操作","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1700361818000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.71,"words":512},"filePathRelative":"middleware/testMange/pressureTest/nbomberyace.md","localizedDate":"2023年3月26日","excerpt":"<h2>概述</h2>\\n<p>NBomber是一个开源的 .NET 框架，开源协议是Apache 2.0， NBomber 用于对多种服务进行负载测试，包括 Web、消息队列、数据库等。  今年5月份发布了 NBomber 2.0版本。NBomber 类似于JMeter，但是和JMeter 不一样的地方是， NBomber 是通过F#/C#/JSON 代码来表达测试场景。</p>\\n<ol>\\n<li>NBomber 背后的主要原因是为编写负载测试提供了一个<strong>轻量级</strong>框架，您可以使用它来测试<strong>任何</strong>系统并模拟<strong>任何</strong>生产工作负载。我们只想提供一些抽象，以便我们可以描述任何类型的负载，并且仍然有一个简单、直观的 API。</li>\\n<li>另一个目标是提供构建块，通过应用任何复杂的负载分布来验证您的 POC（概念验证）项目。</li>\\n<li>使用 NBomber，您可以测试任何 PULL 或 PUSH 系统（HTTP、WebSockets、GraphQl、gRPC、SQL Databse、MongoDb、Redis 等）。</li>\\n<li>使用 NBomber，<strong>您可以轻松地将一些集成测试转换为负载测试</strong>。</li>\\n</ol>","autoDesc":true}');export{v as comp,B as data};
