import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as e}from"./app-Bfb6-vFH.js";const t={},o=e(`<h2 id="microsoft-office-interop-word" tabindex="-1"><a class="header-anchor" href="#microsoft-office-interop-word"><span>Microsoft.Office.Interop.Word</span></a></h2><p>引用nuget包，该包依赖本机的office程序</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&lt;PackageReference Include=&quot;Microsoft.Office.Interop.Word&quot; Version=&quot;15.0.4797.1004&quot; /&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此程序集可用于 Microsoft 生成和签名的 Word 2013/2016/2019 COM 互操作。这是完全不受支持的，并且没有许可证，因为它是 Office 程序集的重新打包。</p><h3 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h3><p>需要提前引用offcie.dll</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WordToPdfConverter</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConvertWordToPdf</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> sourceFilePath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> targetFilePath<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 创建Word应用程序对象</span>
        <span class="token class-name"><span class="token keyword">var</span></span> wordApp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Application</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Document</span> wordDoc <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// 设置Word应用程序以隐藏方式运行（可选，避免显示界面）</span>
            wordApp<span class="token punctuation">.</span>Visible <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

            <span class="token comment">// 打开Word文档</span>
            wordDoc <span class="token operator">=</span> wordApp<span class="token punctuation">.</span>Documents<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>sourceFilePath<span class="token punctuation">,</span>
                <span class="token named-parameter punctuation">ConfirmConversions</span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 不自动转换文档格式</span>
                ReadOnly<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 以只读模式打开，避免修改原文件</span>
                AddToRecentFiles<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 不添加到最近使用的文件列表</span>

            <span class="token comment">// 定义输出PDF的路径和选项</span>
            <span class="token class-name"><span class="token keyword">var</span></span> optimizeFor <span class="token operator">=</span> WdExportOptimizeFor<span class="token punctuation">.</span>wdExportOptimizeForPrint<span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> range <span class="token operator">=</span> WdExportRange<span class="token punctuation">.</span>wdExportAllDocument<span class="token punctuation">;</span>

            <span class="token comment">// 执行转换并保存为PDF</span>
            wordDoc<span class="token punctuation">.</span><span class="token function">ExportAsFixedFormat</span><span class="token punctuation">(</span>targetFilePath<span class="token punctuation">,</span> WdExportFormat<span class="token punctuation">.</span>wdExportFormatPDF<span class="token punctuation">,</span>
                <span class="token boolean">false</span><span class="token punctuation">,</span> optimizeFor<span class="token punctuation">,</span> range<span class="token punctuation">)</span><span class="token punctuation">;</span>

            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Word文档 &#39;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">sourceFilePath</span><span class="token punctuation">}</span></span><span class="token string">&#39; 已成功转换为PDF并保存为 &#39;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">targetFilePath</span><span class="token punctuation">}</span></span><span class="token string">&#39;。&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Console<span class="token punctuation">.</span>Error<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;转换过程中发生错误: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">ex<span class="token punctuation">.</span>Message</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">finally</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// 清理资源，确保Word应用程序和文档关闭</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>wordDoc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                wordDoc<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>wordApp <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                wordApp<span class="token punctuation">.</span><span class="token function">Quit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="issue" tabindex="-1"><a class="header-anchor" href="#issue"><span>Issue</span></a></h3><h3 id="找不到office文件" tabindex="-1"><a class="header-anchor" href="#找不到office文件"><span>找不到office文件</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>System<span class="token punctuation">.</span>IO<span class="token punctuation">.</span>FileNotFoundException<span class="token punctuation">:</span>“Could <span class="token keyword">not</span> load file <span class="token keyword">or</span> assembly ‘office<span class="token punctuation">,</span> Version<span class="token operator">=</span><span class="token number">15.0</span><span class="token number">.0</span><span class="token number">.0</span><span class="token punctuation">,</span> Culture<span class="token operator">=</span>neutral<span class="token punctuation">,</span> PublicKeyToken<span class="token operator">=</span>71e9bce111e9429c’<span class="token punctuation">.</span> 系统找不到指定的文件。”
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解决方法：找到<code>C:\\Windows\\assembly\\GAC_MSIL\\office\\15.0.0.0__71e9bce111e9429c\\OFFICE.DLL</code>添加引用即可</p>`,11),p=[o];function c(i,l){return s(),a("div",null,p)}const d=n(t,[["render",c],["__file","pdfSample.html.vue"]]),k=JSON.parse('{"path":"/middleware/office/pdf/pdfSample.html","title":"PDF示例","lang":"zh-CN","frontmatter":{"title":"PDF示例","lang":"zh-CN","date":"2024-04-25T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNet"],"tag":["pdf"],"description":"Microsoft.Office.Interop.Word 引用nuget包，该包依赖本机的office程序 此程序集可用于 Microsoft 生成和签名的 Word 2013/2016/2019 COM 互操作。这是完全不受支持的，并且没有许可证，因为它是 Office 程序集的重新打包。 操作 需要提前引用offcie.dll Issue 找不到...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/office/pdf/pdfSample.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"PDF示例"}],["meta",{"property":"og:description","content":"Microsoft.Office.Interop.Word 引用nuget包，该包依赖本机的office程序 此程序集可用于 Microsoft 生成和签名的 Word 2013/2016/2019 COM 互操作。这是完全不受支持的，并且没有许可证，因为它是 Office 程序集的重新打包。 操作 需要提前引用offcie.dll Issue 找不到..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-08T13:26:45.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"pdf"}],["meta",{"property":"article:published_time","content":"2024-04-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-08T13:26:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PDF示例\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-25T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-08T13:26:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"Microsoft.Office.Interop.Word","slug":"microsoft-office-interop-word","link":"#microsoft-office-interop-word","children":[{"level":3,"title":"操作","slug":"操作","link":"#操作","children":[]},{"level":3,"title":"Issue","slug":"issue","link":"#issue","children":[]},{"level":3,"title":"找不到office文件","slug":"找不到office文件","link":"#找不到office文件","children":[]}]}],"git":{"createdTime":1714026856000,"updatedTime":1715174805000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.17,"words":352},"filePathRelative":"middleware/office/pdf/pdfSample.md","localizedDate":"2024年4月25日","excerpt":"<h2>Microsoft.Office.Interop.Word</h2>\\n<p>引用nuget包，该包依赖本机的office程序</p>\\n<div class=\\"language-text\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"language-text\\"><code>&lt;PackageReference Include=\\"Microsoft.Office.Interop.Word\\" Version=\\"15.0.4797.1004\\" /&gt;\\n</code></pre></div><p>此程序集可用于 Microsoft 生成和签名的 Word 2013/2016/2019 COM 互操作。这是完全不受支持的，并且没有许可证，因为它是 Office 程序集的重新打包。</p>","autoDesc":true}');export{d as comp,k as data};
