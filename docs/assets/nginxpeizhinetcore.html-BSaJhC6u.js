import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as a,b as s}from"./app-qB9_Bjjp.js";const t={},o=s(`<h2 id="准备" tabindex="-1"><a class="header-anchor" href="#准备"><span>准备</span></a></h2><p>首先需要安装好指定的nginx环境</p><h2 id="服务配置" tabindex="-1"><a class="header-anchor" href="#服务配置"><span>服务配置</span></a></h2><p>要获取Nginx转发前的配置信息，不仅仅在nginx中需要使用proxy_set_header，并且后端代码也需要使用ForwardedHeaders中间件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">// 注册服务</span>
services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Configure</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ForwardedHeadersOptions<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>ForwardedHeaders <span class="token operator">=</span> ForwardedHeaders<span class="token punctuation">.</span>All<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 启用中间件</span>
app<span class="token punctuation">.</span><span class="token function">UseForwardedHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置代理" tabindex="-1"><a class="header-anchor" href="#配置代理"><span>配置代理</span></a></h2><p>进入目录编辑conf文件 命令：cd  /etc/nginx 编辑目录下的：nginx.conf 这点具体写法可以参考nginx配置文件 然后停止nginx 命令：sudo systemctl stop nginx 再次启动 命令：sudo systemctl start nginx</p><h2 id="转发" tabindex="-1"><a class="header-anchor" href="#转发"><span>转发</span></a></h2><p>然后通过转发的路径访问， 示例：我服务地址是localhost:5010/swagger/index.html 代理后的地址：localhost:8080/book/swagger/index.html</p>`,9),p=[o];function i(c,r){return e(),a("div",null,p)}const u=n(t,[["render",i],["__file","nginxpeizhinetcore.html.vue"]]),g=JSON.parse('{"path":"/middleware/nginx/nginxpeizhinetcore.html","title":"nginx配置netcore","lang":"zh-CN","frontmatter":{"title":"nginx配置netcore","lang":"zh-CN","date":"2023-10-01T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"nginxpeizhinetcore","slug":"gavndr","docsId":"29395271","description":"准备 首先需要安装好指定的nginx环境 服务配置 要获取Nginx转发前的配置信息，不仅仅在nginx中需要使用proxy_set_header，并且后端代码也需要使用ForwardedHeaders中间件 配置代理 进入目录编辑conf文件 命令：cd /etc/nginx 编辑目录下的：nginx.conf 这点具体写法可以参考nginx配置文件...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/nginx/nginxpeizhinetcore.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"nginx配置netcore"}],["meta",{"property":"og:description","content":"准备 首先需要安装好指定的nginx环境 服务配置 要获取Nginx转发前的配置信息，不仅仅在nginx中需要使用proxy_set_header，并且后端代码也需要使用ForwardedHeaders中间件 配置代理 进入目录编辑conf文件 命令：cd /etc/nginx 编辑目录下的：nginx.conf 这点具体写法可以参考nginx配置文件..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nginx配置netcore\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-01T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"准备","slug":"准备","link":"#准备","children":[]},{"level":2,"title":"服务配置","slug":"服务配置","link":"#服务配置","children":[]},{"level":2,"title":"配置代理","slug":"配置代理","link":"#配置代理","children":[]},{"level":2,"title":"转发","slug":"转发","link":"#转发","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.65,"words":194},"filePathRelative":"middleware/nginx/nginxpeizhinetcore.md","localizedDate":"2023年10月1日","excerpt":"<h2>准备</h2>\\n<p>首先需要安装好指定的nginx环境</p>\\n<h2>服务配置</h2>\\n<p>要获取Nginx转发前的配置信息，不仅仅在nginx中需要使用proxy_set_header，并且后端代码也需要使用ForwardedHeaders中间件</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token comment\\">// 注册服务</span>\\nservices<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Configure</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span>ForwardedHeadersOptions<span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span>options <span class=\\"token operator\\">=&gt;</span>\\n<span class=\\"token punctuation\\">{</span>\\n    options<span class=\\"token punctuation\\">.</span>ForwardedHeaders <span class=\\"token operator\\">=</span> ForwardedHeaders<span class=\\"token punctuation\\">.</span>All<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 启用中间件</span>\\napp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">UseForwardedHeaders</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{u as comp,g as data};
