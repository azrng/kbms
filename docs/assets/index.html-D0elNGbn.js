import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as t,d as n}from"./app-BguyEeV-.js";const r="/kbms/softwareDesign/f0c678ea5acf78d905d954159d3c7bb.jpg",i={},p=n('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>软件设计=模型+规范 模块的粒度可大可小，小到可以是一个类，大到可以是一个系统。 规范的作用主要是在于维系软件长期的演化。</p><p>分离关注点：发现的关注点越多越好，粒度越小越好 关注非功能性需求：执行质量与演化质量 可测试性：提高可测试性有利于尽早暴露问题。</p><p>高级软件开发主题指导：<a href="https://deviq.com/" target="_blank" rel="noopener noreferrer">https://deviq.com/</a></p><p>框架设计准则：<a href="https://learn.microsoft.com/zh-cn/dotnet/standard/design-guidelines/" target="_blank" rel="noopener noreferrer">https://learn.microsoft.com/zh-cn/dotnet/standard/design-guidelines/</a></p><h2 id="项目启动到验收要经过阶段" tabindex="-1"><a class="header-anchor" href="#项目启动到验收要经过阶段"><span>项目启动到验收要经过阶段</span></a></h2><p>1）项目启动阶段：</p><p>确定项目的目标、范围、业务需求以及项目交付物。制定项目启动文件，明确项目的愿景、目标和范围。</p><p>2）需求分析阶段：</p><p>收集详细的业务需求和功能需求，与需求相关者进一步沟通。创建需求文档，以便团队对需求有共同的理解。</p><p>3）设计阶段：</p><p>设计网站的用户界面（UI），包括页面布局、颜色、图标等。进行数据库设计，定义数据模型和关系。制定技术架构、系统组件和模块的设计方案。</p><p>4）开发阶段：</p><p>根据设计方案，进行前端开发，编写网页的HTML、CSS和JavaScript代码。进行后端开发，编写服务器端的逻辑、业务处理和数据库访问代码。实现各种功能模块，进行编码和单元测试。</p><p>5）测试阶段：</p><p>进行单元测试，验证各个模块的功能是否正常。当然还有集成测试和系统测试。</p><p>6）部署和上线阶段：</p><p>部署网站到服务器环境，配置服务器和数据库。进行性能测试，确保网站在实际使用情况下能够稳定运行。准备生产环境，将网站正式上线。</p><p>7）验收和交付阶段：</p><p>进行验收测试，与利益相关者一起验证项目是否满足需求。修复可能的问题和缺陷，确保项目符合验收标准。交付项目给客户或运营团队。</p><p>8）项目关闭阶段：</p><p>总结项目经验，记录成功因素和教训。完成项目文件，包括文档、代码、设计资料等。解散项目团队，进行项目的正式收尾。</p><p>这些阶段通常是一个网站项目从启动到验收所经历的过程。每个阶段的具体活动和时间线都可能因项目的规模、性质和需求而有所不同。</p><p>一个示例参考图</p><figure><img src="'+r+'" alt="f0c678ea5acf78d905d954159d3c7bb" tabindex="0" loading="lazy"><figcaption>f0c678ea5acf78d905d954159d3c7bb</figcaption></figure><h2 id="软件划分" tabindex="-1"><a class="header-anchor" href="#软件划分"><span>软件划分</span></a></h2><h3 id="服务模式" tabindex="-1"><a class="header-anchor" href="#服务模式"><span>服务模式</span></a></h3><p>1、SaaS（Software as a Service）：软件即服务。SaaS 是一种让用户通过网络访问软件的模式。在这种模式下，软件被部署在云端，用户无需安装就可以使用。SaaS 提供商负责软件的维护和更新。 2、PaaS（Platform as a Service）：平台即服务。PaaS 提供了一个云端平台，让开发者可以在这个平台上开发、运行和管理应用程序。开发者无须关心底层基础设施，可以专注于应用开发。 3、IaaS（Infrastructure as a Service）：基础设施即服务。IaaS 提供了虚拟化的计算、存储和网络资源。用户可以按需购买资源，而无须投资购买硬件设备。IaaS 提供商负责基础设施的管理和维护。例如：阿里云的 OSS 服务。 关于这三者，曾经在播客中听一个大佬是这么类比的： SaaS ：凡是给一个账号和密码的，就可以认为是一个 SaaS 服务，就像住酒店，选择房型和时长，支付相应的费用，我们是客户，酒店提供 SaaS 服务。 PaaS：你盖一栋楼，按照酒店的规格装修好，租给他人去经营管理，你就是提供 PaaS 服务。 IaaS：你搞定水电缴费、蔬菜生鲜的供货、床单被套送洗，这就是在为酒店提供 IaaS 服务。 除此之外，还有一种模式叫 aPaaS（Application Platform as a Service）：应用平台即服务。aPaaS 是 PaaS 的一种特殊形式，它提供了一个集成的开发、运行和管理应用程序的环境。用户可以在 aPaaS 平台上快速构建、部署和扩展应用程序。Gartner 对其所下的定义是： 这是基于PaaS（平台即服务）的一种解决方案，支持应用程序在云端的开发、部署和运行，提供软件开发中的基础工具给用户，包括数据对象、权限管理、用户界面等。 要确定一家平台是不是 aPaaS，只需要看该平台是否拥有开发应用系统的能力，能不能快速开发出一套软件系统。</p><h3 id="业务划分" tabindex="-1"><a class="header-anchor" href="#业务划分"><span>业务划分</span></a></h3><p>如果你刚刚接触 B 端软件，在各种会议沟通中，可能经常会听到一些业务名词，比如 OA、ERP 等，下面列举些常见的业务系统： 1、OA （ Office Automation）：办公自动化。它是指通过计算机技术和通讯技术来提高办公效率，实现办公信息化、网络化、智能化的一系列技术和管理手段。常见功能有：即时通讯、日程安排、文档管理、协同办公、流程管理、知识管理、任务管理等。例如：泛微、蓝凌、致远。 2、ERP（Enterprise Resource Planning）：企业资源规划。ERP 系统是一种集成的管理信息系统，它可以帮助企业管理生产、采购、销售、财务等业务流程。例如：SAP。 3、CRM（Customer Relationship Management）：客户关系管理。CRM 系统用于管理企业与客户之间的关系，包括客户信息管理、销售线索、线索跟进、市场营销等功能。例如：纷享销客、销售易。 4、MES（Manufacturing Execution System）：制造执行系统。MES系统主要用于生产过程的实时监控和调度，以提高生产效率和产品质量。 5、WMS （Warehouse Management System）：仓库管理系统。WMS系统是一种用于管理仓库物流和库存的软件系统，包括入库、出库、库存管理、库存盘点等方面的管理。 6、SRM（Supplier Relationship Management）：供应商关系管理。SRM系统帮助企业管理与供应商的关系，包括供应商信息管理、采购管理、供应链协同等功能。例如：企企通。 7、HCM（Human Capital Management）：人力资本管理。HCM系统用于管理企业的人力资源，包括招聘、培训、绩效评估等功能。 8、SCM（Supply Chain Management）：供应链管理。SCM系统用于管理企业的供应链活动，包括物流、库存管理、需求预测等功能。 9、PLM（Product Lifecycle Management）：产品生命周期管理。PLM系统用于管理产品从设计到退役的整个生命周期，包括产品设计、生产、维护等环节。 10、EAM（Enterprise Asset Management）：企业资产管理。EAM系统用于管理企业的固定资产，包括资产登记、维护、报废等功能。 11、BI（Business Intelligence）：商业智能。BI系统用于收集、分析和呈现企业数据，帮助企业进行决策支持和战略规划。例如：帆软、思迈特、海致等。 12、BPM（Business Process Management）：业务流程管理。BPM 系统用于对企业的业务流程进行管理和优化，以提高企业的运营效率和灵活性。 13、DMS（Document Management System）：文档管理系统。DMS 系统用于管理企业的电子文档，包括文档存储、检索、版本控制等功能。 14、MDM（Master Data Management）：主数据管理。MDM 系统用于管理企业的主数据，如客户、产品、供应商、物料等核心数据，确保数据的准确性和一致性。 15、ITSM（IT Service Management）：IT服务管理。ITSM 系统用于管理企业的IT服务，包括服务台、事件管理、配置管理等功能。 16、电子签约：电子签约系统是一种基于互联网技术的合同签署方式，它通过数字化、网络化的方式，使得双方可以在不同的地点、不同的时间完成合同签署，从而提高合同签署的效率和便捷性。例如：E 签宝、金格、法大大、契约锁等。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><p>B 端软件：常见知识梳理：<a href="https://mp.weixin.qq.com/s/S2zFoYmD-0TA1vKm82OcOw" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/S2zFoYmD-0TA1vKm82OcOw</a></p>',32),o=[p];function s(c,l){return t(),a("div",null,o)}const h=e(i,[["render",s],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/softwareDesign/","title":"说明","lang":"zh-CN","frontmatter":{"title":"说明","lang":"zh-CN","date":"2023-09-05T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["软件设计"],"tag":["无"],"slug":"prk1qa","docsId":"76851648","description":"概述 软件设计=模型+规范 模块的粒度可大可小，小到可以是一个类，大到可以是一个系统。 规范的作用主要是在于维系软件长期的演化。 分离关注点：发现的关注点越多越好，粒度越小越好 关注非功能性需求：执行质量与演化质量 可测试性：提高可测试性有利于尽早暴露问题。 高级软件开发主题指导：https://deviq.com/ 框架设计准则：https://le...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/softwareDesign/"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"说明"}],["meta",{"property":"og:description","content":"概述 软件设计=模型+规范 模块的粒度可大可小，小到可以是一个类，大到可以是一个系统。 规范的作用主要是在于维系软件长期的演化。 分离关注点：发现的关注点越多越好，粒度越小越好 关注非功能性需求：执行质量与演化质量 可测试性：提高可测试性有利于尽早暴露问题。 高级软件开发主题指导：https://deviq.com/ 框架设计准则：https://le..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/softwareDesign/f0c678ea5acf78d905d954159d3c7bb.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-18T07:15:56.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-18T07:15:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"说明\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/softwareDesign/f0c678ea5acf78d905d954159d3c7bb.jpg\\"],\\"datePublished\\":\\"2023-09-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-18T07:15:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"项目启动到验收要经过阶段","slug":"项目启动到验收要经过阶段","link":"#项目启动到验收要经过阶段","children":[]},{"level":2,"title":"软件划分","slug":"软件划分","link":"#软件划分","children":[{"level":3,"title":"服务模式","slug":"服务模式","link":"#服务模式","children":[]},{"level":3,"title":"业务划分","slug":"业务划分","link":"#业务划分","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1693926838000,"updatedTime":1716016556000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1},{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":7.2,"words":2160},"filePathRelative":"softwareDesign/readme.md","localizedDate":"2023年9月5日","excerpt":"<h2>概述</h2>\\n<p>软件设计=模型+规范\\n模块的粒度可大可小，小到可以是一个类，大到可以是一个系统。\\n规范的作用主要是在于维系软件长期的演化。</p>\\n<p>分离关注点：发现的关注点越多越好，粒度越小越好\\n关注非功能性需求：执行质量与演化质量\\n可测试性：提高可测试性有利于尽早暴露问题。</p>\\n<p>高级软件开发主题指导：<a href=\\"https://deviq.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://deviq.com/</a></p>\\n<p>框架设计准则：<a href=\\"https://learn.microsoft.com/zh-cn/dotnet/standard/design-guidelines/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://learn.microsoft.com/zh-cn/dotnet/standard/design-guidelines/</a></p>","autoDesc":true}');export{h as comp,g as data};
