import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-vSdX8vi3.js";const p={},e=t(`<p>将blob:http://localhost:6099/1f24c2e7-0e11-49ff-bb94-5786135476fb格式 转换为base64格式</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> oFReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name"><span class="token keyword">var</span></span> file <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>&#39;uploaderInput&#39;<span class="token punctuation">)</span><span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//uploaderInput是input file控件的id</span>
   oFReader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
   oFReader<span class="token punctuation">.</span>onloadend <span class="token operator">=</span> function <span class="token punctuation">(</span>oFRevent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token class-name"><span class="token keyword">var</span></span> src <span class="token operator">=</span> oFRevent<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
   $<span class="token punctuation">(</span><span class="token string">&quot;#HiddenField1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//此时已经转换为了base64码</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>把base64码保存到指定的路径</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> all <span class="token operator">=</span> b<span class="token punctuation">;</span><span class="token comment">//base64码</span>
            <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> s <span class="token operator">=</span> all<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> <span class="token char">&#39;,&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//把一个字符串分成两个字符串</span>
            <span class="token class-name"><span class="token keyword">string</span></span> a <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">string</span></span> result<span class="token punctuation">;</span>
            <span class="token comment">//图片路径</span>
            <span class="token class-name"><span class="token keyword">string</span></span> filePath <span class="token operator">=</span> HttpContext<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>Server<span class="token punctuation">.</span><span class="token function">MapPath</span><span class="token punctuation">(</span><span class="token string">&quot;~/images/up/&quot;</span> <span class="token operator">+</span> @System<span class="token punctuation">.</span>Configuration<span class="token punctuation">.</span>ConfigurationManager<span class="token punctuation">.</span>AppSettings<span class="token punctuation">[</span><span class="token string">&quot;ImagePath&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> bt <span class="token operator">=</span> Convert<span class="token punctuation">.</span><span class="token function">FromBase64String</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取图片base64</span>
            <span class="token class-name"><span class="token keyword">string</span></span> fileName <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span>Year<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span>Month<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//年月</span>
            <span class="token class-name"><span class="token keyword">string</span></span> ImageFilePath <span class="token operator">=</span> <span class="token string">&quot;/images/up/&quot;</span> <span class="token operator">+</span> fileName<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>System<span class="token punctuation">.</span>IO<span class="token punctuation">.</span>Directory<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>HttpContext<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>Server<span class="token punctuation">.</span><span class="token function">MapPath</span><span class="token punctuation">(</span>ImageFilePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment">//如果不存在就创建文件夹</span>
            <span class="token punctuation">{</span>
                System<span class="token punctuation">.</span>IO<span class="token punctuation">.</span>Directory<span class="token punctuation">.</span><span class="token function">CreateDirectory</span><span class="token punctuation">(</span>HttpContext<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>Server<span class="token punctuation">.</span><span class="token function">MapPath</span><span class="token punctuation">(</span>ImageFilePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name"><span class="token keyword">string</span></span> ImagePath <span class="token operator">=</span> HttpContext<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>Server<span class="token punctuation">.</span><span class="token function">MapPath</span><span class="token punctuation">(</span>ImageFilePath<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> System<span class="token punctuation">.</span>DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token string">&quot;yyyyHHddHHmmss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//定义图片名称</span>
            File<span class="token punctuation">.</span><span class="token function">WriteAllBytes</span><span class="token punctuation">(</span>ImagePath <span class="token operator">+</span> <span class="token string">&quot;.png&quot;</span><span class="token punctuation">,</span> bt<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//保存图片到服务器，然后获取路径  </span>
            result <span class="token operator">=</span> ImagePath <span class="token operator">+</span> <span class="token string">&quot;.png&quot;</span><span class="token punctuation">;</span><span class="token comment">//获取保存后的路径</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>先压缩图片再进行上传图片</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token comment">//压缩图片开始</span>
         <span class="token class-name"><span class="token keyword">var</span></span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         image<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">;</span>
         image<span class="token punctuation">.</span>onload <span class="token operator">=</span> function <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//创建一个image对象，给canvas绘制使用</span>
            <span class="token class-name"><span class="token keyword">var</span></span> cvs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>&#39;canvas&#39;<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> scale <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">&gt;</span> <span class="token number">1000</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">&gt;</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//1000只是一个例子，根据实际情况去选择</span>
                  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                     scale <span class="token operator">=</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token punctuation">;</span>
                  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                     scale <span class="token operator">=</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">;</span>
                  <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//计算等比缩小后图片的宽高</span>
            cvs<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">*</span> scale<span class="token punctuation">;</span>
            cvs<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">*</span> scale<span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> ctx <span class="token operator">=</span> cvs<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span>&#39;<span class="token number">2d</span>&#39;<span class="token punctuation">)</span><span class="token punctuation">;</span>
            ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> cvs<span class="token punctuation">.</span>width<span class="token punctuation">,</span> cvs<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//重新生成图片  e.type为用户选择的图片类型  比如image/png</span>
            <span class="token class-name"><span class="token keyword">var</span></span> newImageData <span class="token operator">=</span> cvs<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>type<span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> sendData <span class="token operator">=</span> newImageData<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;data:&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>type <span class="token operator">+</span> <span class="token string">&quot;;base64,&quot;</span><span class="token punctuation">,</span> &#39;&#39;<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//上传保存图片</span>
            上传图片，图片的bse64码是sendData ，传给一般处理程序
            <span class="token comment">//上传保存图片结束</span>
         <span class="token punctuation">}</span>
         <span class="token comment">//压缩图片结束</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[e];function c(l,u){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","tupiangeshizhuaihuan.html.vue"]]),d=JSON.parse(`{"path":"/dotnet/webyingyong/webform/wenjianshangchuan/tupiangeshizhuaihuan.html","title":"图片格式转换","lang":"zh-CN","frontmatter":{"title":"图片格式转换","lang":"zh-CN","date":"2022-04-20T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"tupiangeshizhuaihuan","slug":"zmpz4b","docsId":"31541563","description":"将blob:http://localhost:6099/1f24c2e7-0e11-49ff-bb94-5786135476fb格式 转换为base64格式 把base64码保存到指定的路径 先压缩图片再进行上传图片","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/webyingyong/webform/wenjianshangchuan/tupiangeshizhuaihuan.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"图片格式转换"}],["meta",{"property":"og:description","content":"将blob:http://localhost:6099/1f24c2e7-0e11-49ff-bb94-5786135476fb格式 转换为base64格式 把base64码保存到指定的路径 先压缩图片再进行上传图片"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-04-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"图片格式转换\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.37,"words":412},"filePathRelative":"dotnet/webyingyong/webform/wenjianshangchuan/tupiangeshizhuaihuan.md","localizedDate":"2022年4月20日","excerpt":"<p>将blob:http://localhost:6099/1f24c2e7-0e11-49ff-bb94-5786135476fb格式\\n转换为base64格式</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> oFReader <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">FileReader</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n   <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> file <span class=\\"token operator\\">=</span> document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getElementById</span><span class=\\"token punctuation\\">(</span>'uploaderInput'<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>files<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//uploaderInput是input file控件的id</span>\\n   oFReader<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">readAsDataURL</span><span class=\\"token punctuation\\">(</span>file<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n   oFReader<span class=\\"token punctuation\\">.</span>onloadend <span class=\\"token operator\\">=</span> function <span class=\\"token punctuation\\">(</span>oFRevent<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n   <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> src <span class=\\"token operator\\">=</span> oFRevent<span class=\\"token punctuation\\">.</span>target<span class=\\"token punctuation\\">.</span>result<span class=\\"token punctuation\\">;</span>\\n   $<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"#HiddenField1\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">val</span><span class=\\"token punctuation\\">(</span>src<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//此时已经转换为了base64码</span>\\n\\n</code></pre></div>","autoDesc":true}`);export{r as comp,d as data};
