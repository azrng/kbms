import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,o as s,c as o,a as e,d as r,e as p,b as i}from"./app-DMmdIwn0.js";const l={},c=i(`<h2 id="类型" tabindex="-1"><a class="header-anchor" href="#类型"><span>类型</span></a></h2><h3 id="预编译" tabindex="-1"><a class="header-anchor" href="#预编译"><span>预编译</span></a></h3><p>预编译是ASP.Net Core 5.0 的默认方式。在发布时，默认会将系统中的所有Razor视图进行预编译。编译好的视图DLL统一命名为 xxx.Views.dll</p><h3 id="动态编译" tabindex="-1"><a class="header-anchor" href="#动态编译"><span>动态编译</span></a></h3><p>将项目整个配置成动态编译很简单，仅需3步： 1、在 NuGet 中添加包“Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation” 2、修改代码文件“Startup.cs”中的方法“ ConfigureServices ”，调用方法“ AddRazorRuntimeCompilation ”以支持动态编译 .cshtml 文件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token function">AddRazorPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddRazorRuntimeCompilation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3、修改项目文件 xxx.csproj，添加配置项 RazorCompileOnBuild 和 MvcRazorCompileOnPublish ，值都设置为 false。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>PropertyGroup<span class="token operator">&gt;</span>     
    <span class="token operator">&lt;</span>RazorCompileOnBuild<span class="token operator">&gt;</span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>RazorCompileOnBuild<span class="token operator">&gt;</span>     
    <span class="token operator">&lt;</span>MvcRazorCompileOnPublish<span class="token operator">&gt;</span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>MvcRazorCompileOnPublish<span class="token operator">&gt;</span> 
<span class="token operator">&lt;</span><span class="token operator">/</span>PropertyGroup<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样在发布的时候，所有的 Razor 视图都不会被预编译了，并且所有的视图都会一同被发布。 注意：在发布的生产环境中，修改视图文件是不会立即生效的，需要重启程序（对于 IIS 宿主的运行环境需要重启站点）才会生效。</p><h3 id="混合编译" tabindex="-1"><a class="header-anchor" href="#混合编译"><span>混合编译</span></a></h3><p>预编译和动态编译都有各自的优点，你可以选择将它们混合起来使用。例如如果你希望在发布时只预编译部分视图，而部分视图要采用动态编译的模式，可以在项目文件上配置排除不需要预编译的视图。其他步骤与前一章节“动态编译”相同，仅步骤3需要按照下面的方式修改，多个项目之间使用分号“;”分隔。例如：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>  <span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>     <span class="token operator">&lt;</span><span class="token class-name">MvcRazorFilesToCompile</span> Include<span class="token operator">=</span><span class="token string">&quot;Pages\\**\\*.cshtml&quot;</span> Exclude<span class="token operator">=</span><span class="token string">&quot;Pages\\page_group1\\**\\*.cshtml;Pages\\page_group2\\pg1.cshtml&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,13),d={href:"https://www.cnblogs.com/thinksea/articles/14772837.html",target:"_blank",rel:"noopener noreferrer"};function u(m,h){const a=n("ExternalLinkIcon");return s(),o("div",null,[c,e("p",null,[e("a",d,[r("https://www.cnblogs.com/thinksea/articles/14772837.html"),p(a)])])])}const v=t(l,[["render",u],["__file","shitubianyi.html.vue"]]),b=JSON.parse('{"path":"/dotnet/webyingyong/mvc/shitubianyi.html","title":"视图编译","lang":"zh-CN","frontmatter":{"title":"视图编译","lang":"zh-CN","date":"2023-09-02T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"shitubianyi","slug":"ggedw23gwcdid5ro","docsId":"131421060","description":"类型 预编译 预编译是ASP.Net Core 5.0 的默认方式。在发布时，默认会将系统中的所有Razor视图进行预编译。编译好的视图DLL统一命名为 xxx.Views.dll 动态编译 将项目整个配置成动态编译很简单，仅需3步： 1、在 NuGet 中添加包“Microsoft.AspNetCore.Mvc.Razor.RuntimeCompil...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/webyingyong/mvc/shitubianyi.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"视图编译"}],["meta",{"property":"og:description","content":"类型 预编译 预编译是ASP.Net Core 5.0 的默认方式。在发布时，默认会将系统中的所有Razor视图进行预编译。编译好的视图DLL统一命名为 xxx.Views.dll 动态编译 将项目整个配置成动态编译很简单，仅需3步： 1、在 NuGet 中添加包“Microsoft.AspNetCore.Mvc.Razor.RuntimeCompil..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"视图编译\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"类型","slug":"类型","link":"#类型","children":[{"level":3,"title":"预编译","slug":"预编译","link":"#预编译","children":[]},{"level":3,"title":"动态编译","slug":"动态编译","link":"#动态编译","children":[]},{"level":3,"title":"混合编译","slug":"混合编译","link":"#混合编译","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.38,"words":413},"filePathRelative":"dotnet/webyingyong/mvc/shitubianyi.md","localizedDate":"2023年9月2日","excerpt":"<h2>类型</h2>\\n<h3>预编译</h3>\\n<p>预编译是ASP.Net Core 5.0 的默认方式。在发布时，默认会将系统中的所有Razor视图进行预编译。编译好的视图DLL统一命名为 xxx.Views.dll</p>\\n<h3>动态编译</h3>\\n<p>将项目整个配置成动态编译很简单，仅需3步：\\n1、在 NuGet 中添加包“Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation”\\n2、修改代码文件“Startup.cs”中的方法“ ConfigureServices ”，调用方法“ AddRazorRuntimeCompilation ”以支持动态编译 .cshtml 文件</p>","autoDesc":true}');export{v as comp,b as data};
