import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as p,c,a,d as n,e as i,b as s}from"./app-DMmdIwn0.js";const l={},r=s(`<h2 id="公共控件" tabindex="-1"><a class="header-anchor" href="#公共控件"><span>公共控件</span></a></h2><h3 id="combobox" tabindex="-1"><a class="header-anchor" href="#combobox"><span>ComboBox</span></a></h3><p>下拉列表控件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>cmbleixing<span class="token punctuation">.</span>DataSource <span class="token operator">=</span> movieTypeList<span class="token punctuation">;</span>
cmbleixing<span class="token punctuation">.</span>DisplayMember <span class="token operator">=</span> <span class="token string">&quot;Name&quot;</span><span class="token punctuation">;</span>
cmbleixing<span class="token punctuation">.</span>ValueMember <span class="token operator">=</span> <span class="token string">&quot;Id&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>DataSource - 下拉列表的数据来源，一般是实体类的集合。</li><li>DisplayMember - 要作为显示项的属性名。</li><li>ValueMember - 要作为值项的属性名。</li></ul>`,5),u=a("strong",null,"Dictionary<T, string>",-1),d={href:"https://stackoverflow.com/a/2023457/5983869",target:"_blank",rel:"noopener noreferrer"},k=s(`<div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">PopulateComboBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> dict <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dict<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;Toronto&quot;</span><span class="token punctuation">,</span> <span class="token number">2324</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dict<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;Vancouver&quot;</span><span class="token punctuation">,</span> <span class="token number">64547</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dict<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;Foobar&quot;</span><span class="token punctuation">,</span> <span class="token number">42329</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    comboBox1<span class="token punctuation">.</span>DisplayMember <span class="token operator">=</span> <span class="token string">&quot;Key&quot;</span><span class="token punctuation">;</span>
    comboBox1<span class="token punctuation">.</span>ValueMember <span class="token operator">=</span> <span class="token string">&quot;Value&quot;</span><span class="token punctuation">;</span>
    comboBox1<span class="token punctuation">.</span>DataSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BindingSource</span><span class="token punctuation">(</span>dict<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>匿名类</strong> 通过匿名类效果是差不多的：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> profiles <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token punctuation">{</span>Name <span class="token operator">=</span> <span class="token string">&quot;采集回波&quot;</span><span class="token punctuation">,</span> Value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token punctuation">{</span>Name <span class="token operator">=</span> <span class="token string">&quot;计算回波&quot;</span><span class="token punctuation">,</span> Value <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token punctuation">{</span>Name <span class="token operator">=</span> <span class="token string">&quot;回波信号&quot;</span><span class="token punctuation">,</span> Value <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token punctuation">{</span>Name <span class="token operator">=</span> <span class="token string">&quot;逻辑曲线&quot;</span><span class="token punctuation">,</span> Value <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
                
CboProfiles<span class="token punctuation">.</span>DataSource <span class="token operator">=</span> profiles<span class="token punctuation">;</span>
CboProfiles<span class="token punctuation">.</span>DisplayMember <span class="token operator">=</span> <span class="token string">&quot;Name&quot;</span><span class="token punctuation">;</span>
CboProfiles<span class="token punctuation">.</span>ValueMember <span class="token operator">=</span> <span class="token string">&quot;Value&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据" tabindex="-1"><a class="header-anchor" href="#数据"><span>数据</span></a></h2><h3 id="datagridview" tabindex="-1"><a class="header-anchor" href="#datagridview"><span>DataGridView</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">// 设置自动换行</span>
dataGridView1<span class="token punctuation">.</span>DefaultCellStyle<span class="token punctuation">.</span>WrapMode <span class="token operator">=</span> DataGridViewTriState<span class="token punctuation">.</span>True<span class="token punctuation">;</span>
<span class="token comment">//自动调整高度</span>
dataGridView1<span class="token punctuation">.</span>AutoSizeRowsMode <span class="token operator">=</span> DataGridViewAutoSizeRowsMode<span class="token punctuation">.</span>AllCells<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function m(g,v){const t=o("ExternalLinkIcon");return p(),c("div",null,[r,a("p",null,[u,n(" 一般通过将数据填充到 Dictionary<T, string> 再绑定。 代码段参考自 "),a("a",d,[n("SOF"),i(t)]),n("。")]),k])}const y=e(l,[["render",m],["__file","changyongkongjian.html.vue"]]),x=JSON.parse('{"path":"/dotnet/zhuomianchengxu/winform/changyongkongjian.html","title":"常用控件","lang":"zh-CN","frontmatter":{"title":"常用控件","lang":"zh-CN","date":"2022-10-09T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"changyongkongjian","slug":"uv75pk","docsId":"64389771","description":"公共控件 ComboBox 下拉列表控件 DataSource - 下拉列表的数据来源，一般是实体类的集合。 DisplayMember - 要作为显示项的属性名。 ValueMember - 要作为值项的属性名。 Dictionary<T, string> 一般通过将数据填充到 Dictionary<T, string> 再绑定。 代码段参考自 SO...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/zhuomianchengxu/winform/changyongkongjian.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"常用控件"}],["meta",{"property":"og:description","content":"公共控件 ComboBox 下拉列表控件 DataSource - 下拉列表的数据来源，一般是实体类的集合。 DisplayMember - 要作为显示项的属性名。 ValueMember - 要作为值项的属性名。 Dictionary<T, string> 一般通过将数据填充到 Dictionary<T, string> 再绑定。 代码段参考自 SO..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-10-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常用控件\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-09T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"公共控件","slug":"公共控件","link":"#公共控件","children":[{"level":3,"title":"ComboBox","slug":"combobox","link":"#combobox","children":[]}]},{"level":2,"title":"数据","slug":"数据","link":"#数据","children":[{"level":3,"title":"DataGridView","slug":"datagridview","link":"#datagridview","children":[]}]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.74,"words":221},"filePathRelative":"dotnet/zhuomianchengxu/winform/changyongkongjian.md","localizedDate":"2022年10月9日","excerpt":"<h2>公共控件</h2>\\n<h3>ComboBox</h3>\\n<p>下拉列表控件</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code>cmbleixing<span class=\\"token punctuation\\">.</span>DataSource <span class=\\"token operator\\">=</span> movieTypeList<span class=\\"token punctuation\\">;</span>\\ncmbleixing<span class=\\"token punctuation\\">.</span>DisplayMember <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"Name\\"</span><span class=\\"token punctuation\\">;</span>\\ncmbleixing<span class=\\"token punctuation\\">.</span>ValueMember <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"Id\\"</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{y as comp,x as data};
