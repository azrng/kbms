import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as a,c as n,b as e,e as o,f as d,d as i}from"./app-D8HBJYTp.js";const l="/kbms/common/1609562125324-5df8df95-5306-45a3-9aff-255f1e492115.png",p={},s=i('<h3 id="增加dockerfile" tabindex="-1"><a class="header-anchor" href="#增加dockerfile"><span>增加dockerfile</span></a></h3><p>将写好的项目增加dockerfile文件，可以通过右键添加docker支持方式增加，然后发布弄到服务器</p><h3 id="生成自定义镜像" tabindex="-1"><a class="header-anchor" href="#生成自定义镜像"><span>生成自定义镜像</span></a></h3><p>在打包的项目目录下执行 命令：docker build -t 镜像名称:版本 .  后面有一个.标识是当前目录 示例：docker build -t booklibrary:1.0 .（结尾有一个点，代表在当前文件夹中查找dockerfile） 或者：docker build -t booklibrary .</p><h4 id="查看镜像" tabindex="-1"><a class="header-anchor" href="#查看镜像"><span>查看镜像</span></a></h4><p>命令：docker images</p><h4 id="删除镜像" tabindex="-1"><a class="header-anchor" href="#删除镜像"><span>删除镜像</span></a></h4><p>命令：docker rmi 镜像id</p><h4 id="生成容器" tabindex="-1"><a class="header-anchor" href="#生成容器"><span>生成容器</span></a></h4><p>命令：docker run --name 名称-d-p 示例：docker run --name booklibrary -d -p 103:8080 booklibrary:1.0 或者：docker run -it -p 103:8080 booklibrary 或者：docker run -p 103:8080 boklibrary</p><blockquote><p>端口分别是：宿主机和容器的映射，前一个是在外部访问的端口号，后一个是要映射到docker容器的端口号，切记和我们在Dockerfile中暴露出来的端口号保持一致。</p></blockquote><h4 id="查看当前的容器" tabindex="-1"><a class="header-anchor" href="#查看当前的容器"><span>查看当前的容器</span></a></h4><p>命令：docker ps -a <img src="'+l+'" alt="image.png" loading="lazy"></p><p>启动容器 命令：docker start 容器id/容器名称 停止容器 命令：docker stop 容器id/容器名称 然后查看状态docker ps -a 进入容器 命令：docker exec -it 容器名称 bash</p><blockquote><p>如果docker run失败后再次运行会提示名称已经存在，可以使用下面命令来删除容器 命令：docker rm -f [dockername]</p></blockquote><blockquote><p>如果想要docker容器在非正常退出后自动重启，需要加上-restart选项</p></blockquote><blockquote><p>命令： docker run --name agentservice -d -p 8810:8810 agentservice-container:1.0 --restart=always</p></blockquote>',17),k={href:"https://www.cnblogs.com/edisonchou/p/aspnetcore_on_docker_foundation.html",target:"_blank",rel:"noopener noreferrer"};function h(m,u){const r=c("ExternalLinkIcon");return a(),n("div",null,[s,e("blockquote",null,[e("p",null,[o("参考地址文档地址："),e("a",k,[o("https://www.cnblogs.com/edisonchou/p/aspnetcore_on_docker_foundation.html"),d(r)])])])])}const g=t(p,[["render",h],["__file","dockerbushunetcore.html.vue"]]),_=JSON.parse('{"path":"/cloud/container/docker/dockerbushunetcore.html","title":"docker部署netcore","lang":"zh-CN","frontmatter":{"title":"docker部署netcore","lang":"zh-CN","date":"2023-05-19T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["cloud"],"tag":["无"],"filename":"dockerbushunetcore","slug":"pg2s18","docsId":"29455009","description":"增加dockerfile 将写好的项目增加dockerfile文件，可以通过右键添加docker支持方式增加，然后发布弄到服务器 生成自定义镜像 在打包的项目目录下执行 命令：docker build -t 镜像名称:版本 . 后面有一个.标识是当前目录 示例：docker build -t booklibrary:1.0 .（结尾有一个点，代表在当前...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/cloud/container/docker/dockerbushunetcore.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"docker部署netcore"}],["meta",{"property":"og:description","content":"增加dockerfile 将写好的项目增加dockerfile文件，可以通过右键添加docker支持方式增加，然后发布弄到服务器 生成自定义镜像 在打包的项目目录下执行 命令：docker build -t 镜像名称:版本 . 后面有一个.标识是当前目录 示例：docker build -t booklibrary:1.0 .（结尾有一个点，代表在当前..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1609562125324-5df8df95-5306-45a3-9aff-255f1e492115.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-08T14:03:23.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-05-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-08T14:03:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"docker部署netcore\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1609562125324-5df8df95-5306-45a3-9aff-255f1e492115.png\\"],\\"datePublished\\":\\"2023-05-19T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-08T14:03:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":3,"title":"增加dockerfile","slug":"增加dockerfile","link":"#增加dockerfile","children":[]},{"level":3,"title":"生成自定义镜像","slug":"生成自定义镜像","link":"#生成自定义镜像","children":[{"level":4,"title":"查看镜像","slug":"查看镜像","link":"#查看镜像","children":[]},{"level":4,"title":"删除镜像","slug":"删除镜像","link":"#删除镜像","children":[]},{"level":4,"title":"生成容器","slug":"生成容器","link":"#生成容器","children":[]},{"level":4,"title":"查看当前的容器","slug":"查看当前的容器","link":"#查看当前的容器","children":[]}]}],"git":{"createdTime":1695541854000,"updatedTime":1712585003000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":1.43,"words":428},"filePathRelative":"cloud/container/docker/dockerbushunetcore.md","localizedDate":"2023年5月19日","excerpt":"<h3>增加dockerfile</h3>\\n<p>将写好的项目增加dockerfile文件，可以通过右键添加docker支持方式增加，然后发布弄到服务器</p>\\n<h3>生成自定义镜像</h3>\\n<p>在打包的项目目录下执行\\n命令：docker build -t 镜像名称:版本 .&nbsp; 后面有一个.标识是当前目录\\n示例：docker build -t booklibrary:1.0 .（结尾有一个点，代表在当前文件夹中查找dockerfile）\\n或者：docker build -t booklibrary .</p>\\n<h4>查看镜像</h4>\\n<p>命令：docker images</p>","autoDesc":true}');export{g as comp,_ as data};
