import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o,c as r,b as a,e as n,f as e,d as t}from"./app-CBxp4zeL.js";const c={},i={href:"https://labs.play-with-docker.com/",target:"_blank",rel:"noopener noreferrer"},d=t(`<h2 id="docker可视化" tabindex="-1"><a class="header-anchor" href="#docker可视化"><span>Docker可视化</span></a></h2><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>docker run <span class="token punctuation">-</span>d <span class="token punctuation">-</span>p 9000<span class="token punctuation">:</span>9000  <span class="token punctuation">-</span><span class="token punctuation">-</span>name portainer <span class="token punctuation">-</span><span class="token punctuation">-</span>restart always  <span class="token punctuation">-</span>v /var/run/docker.sock<span class="token punctuation">:</span>/var/run/docker.sock <span class="token punctuation">-</span><span class="token punctuation">-</span>restart=always <span class="token punctuation">-</span><span class="token punctuation">-</span>name prtainer portainer/portainer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="容器日志dozzle" tabindex="-1"><a class="header-anchor" href="#容器日志dozzle"><span>容器日志Dozzle</span></a></h2><p>Dozzle 是 一款基于接口来监视Docker日志的轻量级的应用，它不存储任何日志文件，而仅仅是实时监视你的容器日志。</p><p>官网：https://dozzle.dev/</p><p>Github：https://github.com/amir20/dozzle</p><p>功能：查看容器、容器内存占用、容器日志、容器日志搜索、容器管理(停止和启动)</p><h3 id="部署" tabindex="-1"><a class="header-anchor" href="#部署"><span>部署</span></a></h3><p>docker部署</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#  简单方案：不带密码的方案</span>
<span class="token function">docker</span> run <span class="token parameter variable">--name</span> dozzle <span class="token parameter variable">-d</span> <span class="token parameter variable">--volume</span><span class="token operator">=</span>/var/run/docker.sock:/var/run/docker.sock <span class="token parameter variable">-p</span> <span class="token number">9090</span>:8080 amir20/dozzle:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker-compose部署，支持多种认证方式，这里采用了文件存储账号密码的方式使用</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3&#39;</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">dozzle</span><span class="token punctuation">:</span> <span class="token comment"># 用于查看容器的日志 </span>
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> dozzle
    <span class="token key atrule">image</span><span class="token punctuation">:</span> amir20/dozzle
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> DOZZLE_ENABLE_ACTIONS=true <span class="token comment"># 启动容器操作</span>
      <span class="token punctuation">-</span> DOZZLE_AUTH_PROVIDER=simple <span class="token comment"># 启用基于文件的认证 配置的管理员账号密码：admin/123456</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /var/run/docker.sock<span class="token punctuation">:</span>/var/run/docker.sock
      <span class="token punctuation">-</span> ./config/dozzle<span class="token punctuation">:</span>/data
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> 9090<span class="token punctuation">:</span><span class="token number">8080</span> <span class="token comment"># web管理界面</span>
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>users.yml文件用于保存账号密码</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">users</span><span class="token punctuation">:</span>
  <span class="token comment"># 登录账号为 admin</span>
  <span class="token key atrule">admin</span><span class="token punctuation">:</span>
    <span class="token comment"># 用户名</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&quot;admin&quot;</span>
    <span class="token comment"># 将密码 sha256 处理后放到这里，这里值为： 123456</span>
    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token string">&quot;8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92&quot;</span>
    <span class="token key atrule">email</span><span class="token punctuation">:</span> admin@example.com
  <span class="token key atrule">guest</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&quot;Guest&quot;</span>
    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token string">&quot;8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92&quot;</span>
    <span class="token key atrule">email</span><span class="token punctuation">:</span> guest@example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>部署后访问<code>IP </code>+ <code>9090</code>端口访问（需要设置相关安全组或防火墙规则）。</p><h2 id="rabbitmq" tabindex="-1"><a class="header-anchor" href="#rabbitmq"><span>RabbitMQ</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>docker run -d --name myrabbit -p 9005:15672 -p 5672:5672  -e RABBITMQ_DEFAULT_VHOST=customer -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=123456  rabbitmq:3-management-alpine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>命令说明： -d：后台运行 --name：设置名称 -p：设置端口 -e：配置命令</p></blockquote><h2 id="可视化nginx" tabindex="-1"><a class="header-anchor" href="#可视化nginx"><span>可视化Nginx</span></a></h2><p>部署nginx-gui</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>docker run <span class="token punctuation">-</span><span class="token punctuation">-</span>name nginxwebui <span class="token punctuation">-</span>itd <span class="token punctuation">-</span>v /root/nginxWebUI<span class="token punctuation">:</span>/home/nginxWebUI <span class="token punctuation">-</span>v /var/net<span class="token punctuation">:</span>/home/nginxWebUI/data <span class="token punctuation">-</span>e BOOT_OPTIONS=&quot;<span class="token punctuation">-</span><span class="token punctuation">-</span>server.port=9008&quot; <span class="token punctuation">-</span><span class="token punctuation">-</span>privileged=true <span class="token punctuation">-</span><span class="token punctuation">-</span>net=host  cym1102/nginxwebui<span class="token punctuation">:</span>latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="git服务" tabindex="-1"><a class="header-anchor" href="#git服务"><span>Git服务</span></a></h2><h3 id="gitlab" tabindex="-1"><a class="header-anchor" href="#gitlab"><span>Gitlab</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">## 挂载</span>
<span class="token function">docker</span> run <span class="token parameter variable">-d</span>  <span class="token parameter variable">-p</span> <span class="token number">443</span>:443 <span class="token parameter variable">-p</span> <span class="token number">9006</span>:80 <span class="token parameter variable">-p</span> <span class="token number">222</span>:22 <span class="token parameter variable">--name</span> gitlab <span class="token parameter variable">--restart</span> always <span class="token parameter variable">-v</span> /home/gitlab/config:/etc/gitlab <span class="token parameter variable">-v</span> /home/gitlab/logs:/var/log/gitlab <span class="token parameter variable">-v</span> /home/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce

<span class="token comment">## 不挂载</span>
<span class="token function">docker</span> run <span class="token parameter variable">-d</span>  <span class="token parameter variable">-p</span> <span class="token number">443</span>:443 <span class="token parameter variable">-p</span> <span class="token number">9006</span>:80 <span class="token parameter variable">-p</span> <span class="token number">222</span>:22 <span class="token parameter variable">--name</span> gitlab gitlab/gitlab-ce
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>-d：后台运行 -p：将容器内部端口向外映射 --name：命名容器名称 -v：将容器内数据文件夹或者日志、配置等文件夹挂载到宿主机指定目录</p></blockquote><h3 id="gitea" tabindex="-1"><a class="header-anchor" href="#gitea"><span>Gitea</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>gitea <span class="token parameter variable">-p</span> <span class="token number">10022</span>:22 <span class="token parameter variable">-p</span> <span class="token number">9004</span>:3000 <span class="token parameter variable">-v</span> /var/lib/gitea:/data gitea/gitea

<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--name</span><span class="token operator">=</span>gitea <span class="token parameter variable">-p</span> <span class="token number">10022</span>:22 <span class="token parameter variable">-p</span> <span class="token number">9004</span>:3000 <span class="token parameter variable">-v</span> /var/lib/gitea:/data gitea/gitea
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据库" tabindex="-1"><a class="header-anchor" href="#数据库"><span>数据库</span></a></h2><h3 id="redis" tabindex="-1"><a class="header-anchor" href="#redis"><span>Redis</span></a></h3><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>docker run <span class="token punctuation">-</span>p 6379<span class="token punctuation">:</span>6379 <span class="token punctuation">-</span><span class="token punctuation">-</span>name redis <span class="token punctuation">-</span>d redis redis<span class="token punctuation">-</span>server <span class="token punctuation">-</span><span class="token punctuation">-</span>appendonly yes <span class="token punctuation">-</span><span class="token punctuation">-</span>requirepass &quot;123456&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>命令说明： -p：宿主机端口与容器端口映射，前面的端口为主机映射端口（需配置服务器安全组），后面的端口为镜像开放的端口 --restart=always：无论什么情况服务挂掉，总是重启 --name：容器名称 -d：使用指定的镜像，在后台运行容器 --appendonly yes：redis运行时开启持久化 --requirepass “123456”：设置redis登陆密码</p></blockquote><h3 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql"><span>MySQL</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>docker run -p 3306:3306 --name mysql -e MYSQL_ROOT_PASSWORD=123456 -e TZ:Asia/Shanghai -d mysql --lower_case_table_names=1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="mongodb" tabindex="-1"><a class="header-anchor" href="#mongodb"><span>MongoDB</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>docker run <span class="token operator">-</span>p <span class="token number">27017</span><span class="token punctuation">:</span><span class="token number">27017</span> <span class="token operator">--</span>name mongo <span class="token operator">-</span><span class="token class-name">e</span> TZ<span class="token operator">=</span>Asia<span class="token operator">/</span>Shanghai <span class="token operator">-</span><span class="token class-name">e</span> MONGO_INITDB_ROOT_USERNAME<span class="token operator">=</span>root <span class="token operator">-</span><span class="token class-name">e</span> MONGO_INITDB_ROOT_PASSWORD<span class="token operator">=</span><span class="token number">123456</span> <span class="token operator">-</span>d mongo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="mssql" tabindex="-1"><a class="header-anchor" href="#mssql"><span>MSSQL</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">## 拉取镜像</span>
<span class="token function">docker</span> pull mcr.microsoft.com/mssql/server:2017-latest

<span class="token comment">## 查看镜像</span>
<span class="token function">docker</span> images

<span class="token comment">## 启动镜像生成容器 </span>
<span class="token function">docker</span> run <span class="token parameter variable">-e</span> <span class="token string">&quot;ACCEPT_EULA=Y&quot;</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;SA_PASSWORD=Sql987654&quot;</span>  <span class="token parameter variable">-p</span> <span class="token number">1433</span>:1433 <span class="token parameter variable">--name</span> sqlserver  <span class="token parameter variable">-d</span> mcr.microsoft.com/mssql/server:2017-latest
或者使用阿里云镜像源
<span class="token function">docker</span> run <span class="token parameter variable">-e</span> <span class="token string">&quot;ACCEPT_EULA=Y&quot;</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;SA_PASSWORD=Sql987654&quot;</span>  <span class="token parameter variable">-p</span> <span class="token number">1433</span>:1433 <span class="token parameter variable">--name</span> sqlserver  <span class="token parameter variable">-d</span> registry.cn-hangzhou.aliyuncs.com/zrng/mssql:2019-latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="postgresql" tabindex="-1"><a class="header-anchor" href="#postgresql"><span>Postgresql</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> run  <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">5432</span>:5432 <span class="token parameter variable">--name</span> postgres <span class="token parameter variable">-e</span> <span class="token assign-left variable">POSTGRES_PASSWORD</span><span class="token operator">=</span><span class="token number">123456</span>  postgres 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="oracle" tabindex="-1"><a class="header-anchor" href="#oracle"><span>Oracle</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>docker run <span class="token operator">-</span>d <span class="token operator">-</span>it <span class="token operator">-</span>p <span class="token number">1521</span><span class="token punctuation">:</span><span class="token number">1521</span> <span class="token operator">--</span>name oracle11g <span class="token operator">--</span>restart<span class="token operator">=</span>always registry<span class="token punctuation">.</span>cn<span class="token operator">-</span>hangzhou<span class="token punctuation">.</span>aliyuncs<span class="token punctuation">.</span>com<span class="token operator">/</span>helowin<span class="token operator">/</span>oracle_11g

<span class="token comment">//连接的用户名/密码是system/helowin</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,41),u={href:"https://blog.csdn.net/chy555chy/article/details/124345973",target:"_blank",rel:"noopener noreferrer"},k=t(`<h2 id="监控" tabindex="-1"><a class="header-anchor" href="#监控"><span>监控</span></a></h2><h3 id="grafana" tabindex="-1"><a class="header-anchor" href="#grafana"><span>Grafana</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">3000</span>:3000 <span class="token parameter variable">--name</span> grafana grafana/grafana
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h2><h3 id="chatgpt-web" tabindex="-1"><a class="header-anchor" href="#chatgpt-web"><span>chatgpt-web</span></a></h3>`,5),m={href:"https://github.com/Chanzhaoyu/chatgpt-web",target:"_blank",rel:"noopener noreferrer"},v=t(`<div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>docker run <span class="token operator">--</span>name chatgpt<span class="token operator">-</span>api <span class="token operator">--</span>restart<span class="token operator">=</span>always <span class="token operator">-</span>d <span class="token operator">-</span>p <span class="token number">3002</span><span class="token punctuation">:</span><span class="token number">3002</span> <span class="token operator">--</span><span class="token keyword">add</span><span class="token operator">-</span>host<span class="token operator">=</span><span class="token string">&quot;host.docker.internal:host-gateway&quot;</span> <span class="token operator">--</span><span class="token class-name">env</span> SOCKS_PROXY_HOST<span class="token operator">=</span>host<span class="token punctuation">.</span>docker<span class="token punctuation">.</span><span class="token keyword">internal</span> <span class="token operator">--</span><span class="token class-name">env</span> SOCKS_PROXY_PORT<span class="token operator">=</span><span class="token number">7890</span>  <span class="token operator">--</span><span class="token class-name">env</span> OPENAI_API_MODEL<span class="token operator">=</span>gpt<span class="token operator">-</span><span class="token number">4</span>  <span class="token operator">--</span><span class="token class-name">env</span> OPENAI_API_KEY<span class="token operator">=</span><span class="token operator">&lt;</span>your openapi_key<span class="token operator">&gt;</span>  chenzhaoyu94<span class="token operator">/</span>chatgpt<span class="token operator">-</span>web
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),b={href:"https://medium.com/@TimvanBaarsen/how-to-connect-to-the-docker-host-from-inside-a-docker-container-112b4c71bc66",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.cnblogs.com/xiaxiaolu/p/17603891.html",target:"_blank",rel:"noopener noreferrer"};function g(y,_){const s=l("ExternalLinkIcon");return o(),r("div",null,[a("blockquote",null,[a("p",null,[n("Docker在线版："),a("a",i,[n("https://labs.play-with-docker.com/"),e(s)])])]),d,a("blockquote",null,[a("p",null,[n("资料："),a("a",u,[n("https://blog.csdn.net/chy555chy/article/details/124345973"),e(s)])])]),k,a("p",null,[n("仓库地址："),a("a",m,[n("https://github.com/Chanzhaoyu/chatgpt-web"),e(s)])]),v,a("p",null,[n('--add-host="host.docker.internal:host-gateway" ：这里是因为docker需要用宿主机网络环境，可以添加"host.docker.internal:host-gateway"的host使用宿主机网络环境，需要docker版本22.10及以上才支持，'),a("a",b,[n("参考"),e(s)]),n(" --env SOCKS_PROXY_HOST=host.docker.internal ：Sock方式代理的host，这里指使用宿主机代理(因为我有魔法上网) --env SOCKS_PROXY_PORT=7890：Sock方式代理的端口，clash for windows的默认端口是7889，可以改成你们的代理端口 --env OPENAI_API_MODEL=gpt-4 ：默认使用模型 --env OPENAI_API_KEY= : 你的openapi的key")]),a("p",null,[n("参考资料："),a("a",h,[n("https://www.cnblogs.com/xiaxiaolu/p/17603891.html"),e(s)])])])}const q=p(c,[["render",g],["__file","index.html.vue"]]),z=JSON.parse('{"path":"/cloud/container/operators/","title":"Docker部署常用服务","lang":"zh-CN","frontmatter":{"title":"Docker部署常用服务","lang":"zh-CN","date":"2023-09-12T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["cloud"],"tag":["无"],"filename":"dockerbushuchangyongfuwu","slug":"tu8lci","docsId":"43386348","description":"Docker在线版：https://labs.play-with-docker.com/ Docker可视化 容器日志Dozzle Dozzle 是 一款基于接口来监视Docker日志的轻量级的应用，它不存储任何日志文件，而仅仅是实时监视你的容器日志。 官网：https://dozzle.dev/ Github：https://github.com/a...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/cloud/container/operators/"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Docker部署常用服务"}],["meta",{"property":"og:description","content":"Docker在线版：https://labs.play-with-docker.com/ Docker可视化 容器日志Dozzle Dozzle 是 一款基于接口来监视Docker日志的轻量级的应用，它不存储任何日志文件，而仅仅是实时监视你的容器日志。 官网：https://dozzle.dev/ Github：https://github.com/a..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-30T10:05:23.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-30T10:05:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker部署常用服务\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-30T10:05:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"Docker可视化","slug":"docker可视化","link":"#docker可视化","children":[]},{"level":2,"title":"容器日志Dozzle","slug":"容器日志dozzle","link":"#容器日志dozzle","children":[{"level":3,"title":"部署","slug":"部署","link":"#部署","children":[]}]},{"level":2,"title":"RabbitMQ","slug":"rabbitmq","link":"#rabbitmq","children":[]},{"level":2,"title":"可视化Nginx","slug":"可视化nginx","link":"#可视化nginx","children":[]},{"level":2,"title":"Git服务","slug":"git服务","link":"#git服务","children":[{"level":3,"title":"Gitlab","slug":"gitlab","link":"#gitlab","children":[]},{"level":3,"title":"Gitea","slug":"gitea","link":"#gitea","children":[]}]},{"level":2,"title":"数据库","slug":"数据库","link":"#数据库","children":[{"level":3,"title":"Redis","slug":"redis","link":"#redis","children":[]},{"level":3,"title":"MySQL","slug":"mysql","link":"#mysql","children":[]},{"level":3,"title":"MongoDB","slug":"mongodb","link":"#mongodb","children":[]},{"level":3,"title":"MSSQL","slug":"mssql","link":"#mssql","children":[]},{"level":3,"title":"Postgresql","slug":"postgresql","link":"#postgresql","children":[]},{"level":3,"title":"Oracle","slug":"oracle","link":"#oracle","children":[]}]},{"level":2,"title":"监控","slug":"监控","link":"#监控","children":[{"level":3,"title":"Grafana","slug":"grafana","link":"#grafana","children":[]}]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[{"level":3,"title":"chatgpt-web","slug":"chatgpt-web","link":"#chatgpt-web","children":[]}]}],"git":{"createdTime":1679666088000,"updatedTime":1703930723000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":3.57,"words":1072},"filePathRelative":"cloud/container/operators/readme.md","localizedDate":"2023年9月12日","excerpt":"<blockquote>\\n<p>Docker在线版：<a href=\\"https://labs.play-with-docker.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://labs.play-with-docker.com/</a></p>\\n</blockquote>\\n<h2>Docker可视化</h2>\\n<div class=\\"language-yaml\\" data-ext=\\"yml\\" data-title=\\"yml\\"><pre class=\\"language-yaml\\"><code>docker run <span class=\\"token punctuation\\">-</span>d <span class=\\"token punctuation\\">-</span>p 9000<span class=\\"token punctuation\\">:</span>9000  <span class=\\"token punctuation\\">-</span><span class=\\"token punctuation\\">-</span>name portainer <span class=\\"token punctuation\\">-</span><span class=\\"token punctuation\\">-</span>restart always  <span class=\\"token punctuation\\">-</span>v /var/run/docker.sock<span class=\\"token punctuation\\">:</span>/var/run/docker.sock <span class=\\"token punctuation\\">-</span><span class=\\"token punctuation\\">-</span>restart=always <span class=\\"token punctuation\\">-</span><span class=\\"token punctuation\\">-</span>name prtainer portainer/portainer\\n</code></pre></div>","autoDesc":true}');export{q as comp,z as data};
