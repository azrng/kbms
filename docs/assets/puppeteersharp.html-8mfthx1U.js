import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o,c,a as n,d as s,e as t,b as l}from"./app-DMmdIwn0.js";const i={},u=n("h2",{id:"概述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#概述"},[n("span",null,"概述")])],-1),r={href:"https://github.com/hardkoded/puppeteer-sharp",target:"_blank",rel:"noopener noreferrer"},k=l(`<h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>引用nuget包：PuppeteerSharp</p><h3 id="将html转图片-pdf" tabindex="-1"><a class="header-anchor" href="#将html转图片-pdf"><span>将HTML转图片/PDF</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BrowserFetcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">DownloadAsync</span><span class="token punctuation">(</span>BrowserFetcher<span class="token punctuation">.</span>DefaultChromiumRevision<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> Puppeteer<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">LaunchOptions</span> <span class="token punctuation">{</span> Headless <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> destFilePath <span class="token operator">=</span> AppDomain<span class="token punctuation">.</span>CurrentDomain<span class="token punctuation">.</span>BaseDirectory <span class="token operator">+</span> <span class="token string">&quot;TestImgCreate\\\\&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Directory<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>destFilePath<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Directory<span class="token punctuation">.</span><span class="token function">CreateDirectory</span><span class="token punctuation">(</span>destFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name"><span class="token keyword">var</span></span> outputFile <span class="token operator">=</span> destFilePath <span class="token operator">+</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token string">&quot;yyyyMMddHHmmss&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.jpg&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetViewportAsync</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ViewPortOptions</span>
        <span class="token punctuation">{</span>
            Width <span class="token operator">=</span> <span class="token number">425</span><span class="token punctuation">,</span> <span class="token comment">//图片宽度</span>
            Height <span class="token operator">=</span> <span class="token number">635</span> <span class="token comment">//图片高度</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetContentAsync</span><span class="token punctuation">(</span>
        <span class="token string">@&quot;
    &lt;html&gt;
    &lt;body&gt;
    &lt;div class=&#39;box&#39;&gt;
        &lt;h1&gt;考场号:&amp;nbsp;&amp;nbsp;&amp;nbsp;01&lt;/h1&gt;
        &lt;h1&gt;座位号:&amp;nbsp;&amp;nbsp;&amp;nbsp;01&lt;/h1&gt;
        &lt;div class=&#39;center-box&#39;&gt;
        &lt;h4&gt;姓&amp;nbsp; &amp;nbsp;&amp;nbsp;名:&amp;nbsp; &amp;nbsp;花卷&lt;/h4&gt;
        &lt;h4&gt;身份证号:&amp;nbsp; &amp;nbsp;545645456456465&lt;/h4&gt;
        &lt;h4&gt;准考证号:&amp;nbsp; &amp;nbsp;54564545454&lt;/h4&gt;
        &lt;/div&gt;
        &lt;div class=&#39;botom-box&#39;&gt;
        &lt;h2&gt;温馨提示:&lt;/h2&gt;
        &lt;h3&gt;请核对信息无误后,张贴在准考证指定位置！&lt;/h3&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;/body&gt;
    &lt;/html&gt;
    &lt;style&gt;
    .box{
        box-sizing: border-box;
        padding-top: 10px;  
        text-align: center;
        font-family: fangsong;
    }
    .box&gt;h1 {
        font-size: 46px;
    }
    .center-box {
        text-align: left;
        width:290px;
        margin:60px auto;
    }
    .center-box &gt; h4{
        font-size: 18px;
    }
    .botom-box {
        text-align: center;
        margin-left: 20px;
    }
    &lt;/style&gt;&quot;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ScreenshotOptions</span> screenshotOptions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ScreenshotOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    screenshotOptions<span class="token punctuation">.</span>FullPage <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//是否截取整个页面</span>
    screenshotOptions<span class="token punctuation">.</span>OmitBackground <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">//是否使用透明背景，而不是默认白色背景</span>
    screenshotOptions<span class="token punctuation">.</span>Quality <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">//截图质量 0-100（png不可用）</span>
    screenshotOptions<span class="token punctuation">.</span>Type <span class="token operator">=</span> ScreenshotType<span class="token punctuation">.</span>Jpeg<span class="token punctuation">;</span> <span class="token comment">//截图格式</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">ScreenshotAsync</span><span class="token punctuation">(</span>outputFile<span class="token punctuation">,</span> screenshotOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要生成PDF，那么就需要做下面修改</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">ScreenshotAsync</span><span class="token punctuation">(</span>outputFile<span class="token punctuation">,</span> screenshotOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">-&gt;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">PdfAsync</span><span class="token punctuation">(</span>outputFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
文件名称修改成PDF后缀
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),d={href:"https://mp.weixin.qq.com/s/6PfZUvl4T5B96eS7lDV-FA",target:"_blank",rel:"noopener noreferrer"};function m(v,h){const a=p("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[s("仓库地址："),n("a",r,[s("https://github.com/hardkoded/puppeteer-sharp"),t(a)])]),k,n("p",null,[s("资料："),n("a",d,[s("https://mp.weixin.qq.com/s/6PfZUvl4T5B96eS7lDV-FA"),t(a)]),s(" | .NET 实现Html 生成图片或PDF")])])}const y=e(i,[["render",m],["__file","puppeteersharp.html.vue"]]),w=JSON.parse(`{"path":"/middleware/office/puppeteersharp.html","title":"PuppeteerSharp","lang":"zh-CN","frontmatter":{"title":"PuppeteerSharp","lang":"zh-CN","date":"2023-09-10T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"puppeteersharp","slug":"krmbbg040h4o3fdc","docsId":"138940669","description":"概述 仓库地址：https://github.com/hardkoded/puppeteer-sharp 操作 引用nuget包：PuppeteerSharp 将HTML转图片/PDF 如果需要生成PDF，那么就需要做下面修改 资料：https://mp.weixin.qq.com/s/6PfZUvl4T5B96eS7lDV-FA | .NET 实现H...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/office/puppeteersharp.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"PuppeteerSharp"}],["meta",{"property":"og:description","content":"概述 仓库地址：https://github.com/hardkoded/puppeteer-sharp 操作 引用nuget包：PuppeteerSharp 将HTML转图片/PDF 如果需要生成PDF，那么就需要做下面修改 资料：https://mp.weixin.qq.com/s/6PfZUvl4T5B96eS7lDV-FA | .NET 实现H..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PuppeteerSharp\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-10T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"将HTML转图片/PDF","slug":"将html转图片-pdf","link":"#将html转图片-pdf","children":[]}]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.18,"words":353},"filePathRelative":"middleware/office/puppeteersharp.md","localizedDate":"2023年9月10日","excerpt":"<h2>概述</h2>\\n<p>仓库地址：<a href=\\"https://github.com/hardkoded/puppeteer-sharp\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/hardkoded/puppeteer-sharp</a></p>\\n<h2>操作</h2>\\n<p>引用nuget包：PuppeteerSharp</p>\\n<h3>将HTML转图片/PDF</h3>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token keyword\\">await</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">BrowserFetcher</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">DownloadAsync</span><span class=\\"token punctuation\\">(</span>BrowserFetcher<span class=\\"token punctuation\\">.</span>DefaultChromiumRevision<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> browser <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> Puppeteer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">LaunchAsync</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">LaunchOptions</span> <span class=\\"token punctuation\\">{</span> Headless <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">string</span></span> destFilePath <span class=\\"token operator\\">=</span> AppDomain<span class=\\"token punctuation\\">.</span>CurrentDomain<span class=\\"token punctuation\\">.</span>BaseDirectory <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"TestImgCreate\\\\\\\\\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>Directory<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Exists</span><span class=\\"token punctuation\\">(</span>destFilePath<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    Directory<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">CreateDirectory</span><span class=\\"token punctuation\\">(</span>destFilePath<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> outputFile <span class=\\"token operator\\">=</span> destFilePath <span class=\\"token operator\\">+</span> DateTime<span class=\\"token punctuation\\">.</span>Now<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ToString</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"yyyyMMddHHmmss\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\".jpg\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">using</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> page <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> browser<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">NewPageAsync</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">await</span> page<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">SetViewportAsync</span><span class=\\"token punctuation\\">(</span>\\n        <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">ViewPortOptions</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            Width <span class=\\"token operator\\">=</span> <span class=\\"token number\\">425</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">//图片宽度</span>\\n            Height <span class=\\"token operator\\">=</span> <span class=\\"token number\\">635</span> <span class=\\"token comment\\">//图片高度</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">await</span> page<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">SetContentAsync</span><span class=\\"token punctuation\\">(</span>\\n        <span class=\\"token string\\">@\\"\\n    &lt;html&gt;\\n    &lt;body&gt;\\n    &lt;div class='box'&gt;\\n        &lt;h1&gt;考场号:&amp;nbsp;&amp;nbsp;&amp;nbsp;01&lt;/h1&gt;\\n        &lt;h1&gt;座位号:&amp;nbsp;&amp;nbsp;&amp;nbsp;01&lt;/h1&gt;\\n        &lt;div class='center-box'&gt;\\n        &lt;h4&gt;姓&amp;nbsp; &amp;nbsp;&amp;nbsp;名:&amp;nbsp; &amp;nbsp;花卷&lt;/h4&gt;\\n        &lt;h4&gt;身份证号:&amp;nbsp; &amp;nbsp;545645456456465&lt;/h4&gt;\\n        &lt;h4&gt;准考证号:&amp;nbsp; &amp;nbsp;54564545454&lt;/h4&gt;\\n        &lt;/div&gt;\\n        &lt;div class='botom-box'&gt;\\n        &lt;h2&gt;温馨提示:&lt;/h2&gt;\\n        &lt;h3&gt;请核对信息无误后,张贴在准考证指定位置！&lt;/h3&gt;\\n        &lt;/div&gt;\\n    &lt;/div&gt;\\n    &lt;/body&gt;\\n    &lt;/html&gt;\\n    &lt;style&gt;\\n    .box{\\n        box-sizing: border-box;\\n        padding-top: 10px;  \\n        text-align: center;\\n        font-family: fangsong;\\n    }\\n    .box&gt;h1 {\\n        font-size: 46px;\\n    }\\n    .center-box {\\n        text-align: left;\\n        width:290px;\\n        margin:60px auto;\\n    }\\n    .center-box &gt; h4{\\n        font-size: 18px;\\n    }\\n    .botom-box {\\n        text-align: center;\\n        margin-left: 20px;\\n    }\\n    &lt;/style&gt;\\"</span>\\n    <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">ScreenshotOptions</span> screenshotOptions <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">ScreenshotOptions</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    screenshotOptions<span class=\\"token punctuation\\">.</span>FullPage <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//是否截取整个页面</span>\\n    screenshotOptions<span class=\\"token punctuation\\">.</span>OmitBackground <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//是否使用透明背景，而不是默认白色背景</span>\\n    screenshotOptions<span class=\\"token punctuation\\">.</span>Quality <span class=\\"token operator\\">=</span> <span class=\\"token number\\">100</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//截图质量 0-100（png不可用）</span>\\n    screenshotOptions<span class=\\"token punctuation\\">.</span>Type <span class=\\"token operator\\">=</span> ScreenshotType<span class=\\"token punctuation\\">.</span>Jpeg<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//截图格式</span>\\n    <span class=\\"token keyword\\">await</span> page<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ScreenshotAsync</span><span class=\\"token punctuation\\">(</span>outputFile<span class=\\"token punctuation\\">,</span> screenshotOptions<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre></div>","autoDesc":true}`);export{y as comp,w as data};
