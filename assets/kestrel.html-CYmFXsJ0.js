import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,e as t,o as a}from"./app-BugT5USA.js";const n="/kbms/common/1614391550541-1b0048ad-8301-4c84-bc12-a3d9f11e2c1e.png",r="/kbms/common/1614391550544-8d3fc256-5b15-422c-afbf-9d0392c6cf4a.png",p={};function l(h,s){return a(),e("div",null,s[0]||(s[0]=[t('<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>Kestrel是一个跨平台的Web服务器，支持在windows、masos、linux等操作系统中运行。主要由两种使用模式：<br> 1.直接作为Web服务器，直接接受并处理各类Http请求：<br><img src="'+n+'" alt="image.png" loading="lazy"><br> 2.与各类反向代理服务器（例如Nginx、Apache、IIS）配合使用，反向代理服务器接受Http请求，将这些请求转发到Kestrel Web服务器<br><img src="'+r+`" alt="image.png" loading="lazy"><br> 优点：<br> 对外暴露有限的HTTP服务器<br> 反向代理服务器做了一层过滤、防护和转发<br> 通过反向代理服务器实现负载均衡和动态请求分发路由<br> 减少域名使用，降低WAF防火墙防护成本<br> 安全通讯配置，HTTPS转HTTP，仅反向代理服务器需要证书，并且该服务器内部可以使用普通的HTTP协议与内部网络的应用服务器通信。</p><h2 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式"><span>使用方式</span></a></h2><p>kestrel有两种使用方式:<br> 1.直接使用kestrel代理然后访问项目<br> 2.用过iis、nginx、apache反向代理配置然后调用kestrel</p><h2 id="选项设置" tabindex="-1"><a class="header-anchor" href="#选项设置"><span>选项设置</span></a></h2><p>Kestrel Web服务提供了哪些选项设置：<br> 1.KeepAliveTime：保持活动会话超时时间<br> 默认2分钟，可以用以下代码进行设置<br> serverOptions.Limits.KeepAliveTimeout = TimeSpan.FromMinutes(2);<br> 2. 客户端最大连接数： MaxConcurrentConnections、 MaxConcurrentUpgradedConnections<br>   默认情况下，最大连接数不受限制；<br>   可以通过 MaxConcurrentConnections，设置整个应用设置并发打开的最大 TCP 连接数。<br>   对于已从 HTTP 或 HTTPS 升级到另一个协议（例如，Websocket 请求）的连接，有一个单独的限制MaxConcurrentUpgradedConnections。 连接升级后，不会计入 MaxConcurrentConnections 限制。<br>   可以用以下代码进行设置：<br> serverOptions.Limits.MaxConcurrentConnections = 100;<br> serverOptions.Limits.MaxConcurrentUpgradedConnections = 100;<br> 3. 请求正文最大大小： MaxRequestBodySize<br>   默认的请求正文最大大小为 30,000,000 字节，大约 28.6 MB<br> serverOptions.Limits.MaxRequestBodySize = 10 * 1024;<br>   在 <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core MVC 应用中替代限制的推荐方法是在操作方法上使用 RequestSizeLimitAttribute 属性：<br> [RequestSizeLimit(100000000)]<br> public IActionResult MyActionMethod()<br> 4.请求正文最小数据速率 MinRequestBodyDataRate MinResponseDataRate<br>    Kestrel 每秒检查一次数据是否以指定的速率（字节/秒）传入。 如果速率低于最小值，则连接超时。<br>    宽限期是 Kestrel 提供给客户端用于将其发送速率提升到最小值的时间量；在此期间不会检查速率。 宽限期可以尽可能地避免最初由于 TCP 慢启动而以较慢速率发送数据的连接中断。<br>    默认的最小速率为 240 字节/秒，包含 5 秒的宽限期。<br>    最小速率也适用于HttpResponse响应。 除了属性和接口名称中具有 RequestBody 或 Response 以外，用于设置请求限制和响应限制的代码相同。   <br> serverOptions.Limits.MinRequestBodyDataRate = new MinDataRate(bytesPerSecond: 100, gracePeriod: TimeSpan.FromSeconds(10));<br> serverOptions.Limits.MinResponseDataRate = new MinDataRate(bytesPerSecond: 100, gracePeriod: TimeSpan.FromSeconds(10));<br> 5. 请求Header超时 RequestHeadersTimeout<br>   获取或设置服务器接收请求标头所花费的最大时间量。 默认值为 30 秒。  <br> serverOptions.Limits.RequestHeadersTimeout = TimeSpan.FromMinutes(1);<br> 6. 每个连接的最大的请求流的数量 MaxStreamsPerConnection<br>    Http2.MaxStreamsPerConnection 限制每个 HTTP/2 连接的并发请求流的数量。 拒绝过多的流。   <br> serverOptions.Limits.Http2.MaxStreamsPerConnection = 100;<br> 7. 标题表大小<br>    HPACK 解码器解压缩 HTTP/2 连接的 HTTP 标头。 Http2.HeaderTableSize 限制 HPACK 解码器使用的标头压缩表的大小。 该值以八位字节提供，且必须大于零 (0)。　   <br> serverOptions.Limits.Http2.HeaderTableSize = 4096;<br> 8. 最大帧大小 Http2.MaxFrameSize<br>     Http2.MaxFrameSize 表示服务器接收或发送的 HTTP/2 连接帧有效负载的最大允许大小。 该值以八位字节提供，必须介于 2^14 (16,384) 和 2^24-1 (16,777,215) 之间。  <br> serverOptions.Limits.Http2.MaxFrameSize = 16384;<br> 9. 最大请求头大小 Http2.MaxRequestHeaderFieldSize<br> Http2.MaxRequestHeaderFieldSize 表示请求标头值的允许的最大大小（用八进制表示）。 此限制适用于名称和值的压缩和未压缩表示形式。 该值必须大于零 (0)。     <br> serverOptions.Limits.Http2.MaxRequestHeaderFieldSize = 8192;<br> 10. 初始连接窗口大小 Http2.InitialConnectionWindowSize<br>     Http2.InitialConnectionWindowSize 表示服务器一次性缓存的最大请求主体数据大小（每次连接时在所有请求（流）中汇总，以字节为单位）。 请求也受 Http2.InitialStreamWindowSize 限制。 该值必须大于或等于 65,535，并小于 2^31 (2,147,483,648)。   <br>     默认值为 128 KB (131,072)<br> serverOptions.Limits.Http2.InitialConnectionWindowSize = 131072;<br> 11. 初始流窗口大小 Http2.InitialStreamWindowSize<br>     Http2.InitialStreamWindowSize 表示服务器针对每个请求（流）的一次性缓存的最大请求主体数据大小（以字节为单位）。 请求也受 Http2.InitialConnectionWindowSize 限制。 该值必须大于或等于 65,535，并小于 2^31 (2,147,483,648)。<br>     默认值为 96 KB (98,304)    <br> serverOptions.Limits.Http2.InitialStreamWindowSize = 98304;<br> 12. 同步IO AllowSynchronousIO<br>      AllowSynchronousIO 控制是否允许对请求和响应使用同步 IO。 默认值为 false。这个设置需要注意一下：<br>      大量的阻止同步 IO 操作可能会导致线程池资源不足，进而导致应用无响应。 仅在使用不支持异步 IO 的库时，才启用 AllowSynchronousIO。<br> serverOptions.AllowSynchronousIO = true;</p><h2 id="设置端口" tabindex="-1"><a class="header-anchor" href="#设置端口"><span>设置端口</span></a></h2><p>.Net6之前写法</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-csharp"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">UseUrls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://localhost:5001&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">UseUrls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://localhost:5001&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://localhost:5002&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://*:5003&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//多个地址 *代表绑定所有本机地址 可以局域网访问，拥有外网ip 就可以外网访问</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">UseUrls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://*:8089&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>.Net6</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-csharp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> app</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> WebApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">MapGet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, () =&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello World!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//app.Run(&quot;http://localhost:3000&quot;);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://*:8080&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>设置多个端口</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-csharp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> app</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> WebApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Urls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://localhost:3000&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Urls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://localhost:4000&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">MapGet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, () =&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello World&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p><a href="https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/minimal-apis?view=aspnetcore-6.0#working-with-ports" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/minimal-apis?view=aspnetcore-6.0#working-with-ports</a></p></blockquote><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><p>教程：<a href="https://www.cnblogs.com/Leo_wl/p/8405711.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/Leo_wl/p/8405711.html</a></p>`,16)]))}const d=i(p,[["render",l]]),c=JSON.parse('{"path":"/dotnet/server/kestrel/kestrel.html","title":"Kestrel","lang":"zh-CN","frontmatter":{"title":"Kestrel","lang":"zh-CN","date":"2023-07-02T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"kestrel","slug":"icondd","docsId":"32029463","description":"介绍 Kestrel是一个跨平台的Web服务器，支持在windows、masos、linux等操作系统中运行。主要由两种使用模式： 1.直接作为Web服务器，直接接受并处理各类Http请求： image.png 2.与各类反向代理服务器（例如Nginx、Apache、IIS）配合使用，反向代理服务器接受Http请求，将这些请求转发到Kestrel We...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kestrel\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1614391550541-1b0048ad-8301-4c84-bc12-a3d9f11e2c1e.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1614391550544-8d3fc256-5b15-422c-afbf-9d0392c6cf4a.png\\"],\\"datePublished\\":\\"2023-07-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-27T13:49:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"],["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/server/kestrel/kestrel.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Kestrel"}],["meta",{"property":"og:description","content":"介绍 Kestrel是一个跨平台的Web服务器，支持在windows、masos、linux等操作系统中运行。主要由两种使用模式： 1.直接作为Web服务器，直接接受并处理各类Http请求： image.png 2.与各类反向代理服务器（例如Nginx、Apache、IIS）配合使用，反向代理服务器接受Http请求，将这些请求转发到Kestrel We..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1614391550541-1b0048ad-8301-4c84-bc12-a3d9f11e2c1e.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T13:49:46.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-07-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-27T13:49:46.000Z"}]]},"git":{"createdTime":1697962303000,"updatedTime":1698414586000,"contributors":[{"name":"azrng","username":"","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":4.62,"words":1385},"filePathRelative":"dotnet/server/kestrel/kestrel.md","excerpt":"<h2>介绍</h2>\\n<p>Kestrel是一个跨平台的Web服务器，支持在windows、masos、linux等操作系统中运行。主要由两种使用模式：<br>\\n1.直接作为Web服务器，直接接受并处理各类Http请求：<br>\\n<img src=\\"/common/1614391550541-1b0048ad-8301-4c84-bc12-a3d9f11e2c1e.png\\" alt=\\"image.png\\" loading=\\"lazy\\"><br>\\n2.与各类反向代理服务器（例如Nginx、Apache、IIS）配合使用，反向代理服务器接受Http请求，将这些请求转发到Kestrel Web服务器<br>\\n<img src=\\"/common/1614391550544-8d3fc256-5b15-422c-afbf-9d0392c6cf4a.png\\" alt=\\"image.png\\" loading=\\"lazy\\"><br>\\n优点：<br>\\n对外暴露有限的HTTP服务器<br>\\n反向代理服务器做了一层过滤、防护和转发<br>\\n通过反向代理服务器实现负载均衡和动态请求分发路由<br>\\n减少域名使用，降低WAF防火墙防护成本<br>\\n安全通讯配置，HTTPS转HTTP，仅反向代理服务器需要证书，并且该服务器内部可以使用普通的HTTP协议与内部网络的应用服务器通信。</p>","autoDesc":true}');export{d as comp,c as data};
