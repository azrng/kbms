import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,b as s,e as n,f as e,d as a}from"./app-D8HBJYTp.js";const r={},i=a(`<h2 id="获取项目版本号" tabindex="-1"><a class="header-anchor" href="#获取项目版本号"><span>获取项目版本号</span></a></h2><p>通过以下代码可以获取到项目的版本号</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> assemblyVersion <span class="token operator">=</span> Assembly<span class="token punctuation">.</span><span class="token function">GetEntryAssembly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetCustomAttribute</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>AssemblyInformationalVersionAttribute<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>InformationalVersion<span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>assemblyVersion<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>设置方案</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>PropertyGroup<span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span>OutputType<span class="token operator">&gt;</span>Exe<span class="token operator">&lt;</span><span class="token operator">/</span>OutputType<span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span>TargetFramework<span class="token operator">&gt;</span>net6<span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">-</span>windows7<span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>TargetFramework<span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span>ImplicitUsings<span class="token operator">&gt;</span>enable<span class="token operator">&lt;</span><span class="token operator">/</span>ImplicitUsings<span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span>Nullable<span class="token operator">&gt;</span>enable<span class="token operator">&lt;</span><span class="token operator">/</span>Nullable<span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span>Version<span class="token operator">&gt;</span><span class="token number">5.0</span><span class="token number">.5</span><span class="token operator">&lt;</span><span class="token operator">/</span>Version<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>设置版本号<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>PropertyGroup<span class="token operator">&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果没有设置，默认获取到是1.0.0</p><h2 id="不同程序集相同签名方法调用" tabindex="-1"><a class="header-anchor" href="#不同程序集相同签名方法调用"><span>不同程序集相同签名方法调用</span></a></h2><p>我们可以通过别名的方式来解决这个问题，首先修改项目文件，设置两个程序集的别名：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">Project</span> Sdk<span class="token operator">=</span><span class="token string">&quot;Microsoft.NET.Sdk&quot;</span><span class="token operator">&gt;</span>

  <span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">ProjectReference</span> Include<span class="token operator">=</span><span class="token string">&quot;..\\ClassLibrary1\\ClassLibrary1.csproj&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>Aliases<span class="token operator">&gt;</span>ClassLibrary1<span class="token operator">&lt;</span><span class="token operator">/</span>Aliases<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ProjectReference<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">ProjectReference</span> Include<span class="token operator">=</span><span class="token string">&quot;..\\ClassLibrary2\\ClassLibrary2.csproj&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>Aliases<span class="token operator">&gt;</span>ClassLibrary2<span class="token operator">&lt;</span><span class="token operator">/</span>Aliases<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ProjectReference<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Project<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，我们在控制台应用中调用这两个程序集中的 Where 方法：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">extern</span> <span class="token keyword">alias</span> ClassLibrary1<span class="token punctuation">;</span>
<span class="token keyword">extern</span> <span class="token keyword">alias</span> ClassLibrary2<span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

ClassLibrary1<span class="token punctuation">::</span>Example<span class="token punctuation">.</span>LinqExtensions<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
ClassLibrary2<span class="token punctuation">::</span>Example<span class="token punctuation">.</span>LinqExtensions<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),u={href:"https://mp.weixin.qq.com/s/VC_w4BNYbXiToiZxV3g9iw",target:"_blank",rel:"noopener noreferrer"},k=a(`<h2 id="禁用方法" tabindex="-1"><a class="header-anchor" href="#禁用方法"><span>禁用方法</span></a></h2><p>不让在项目中使用一些方法。 使用场景：禁用DateTime.Now获取时间的方法，而是使用DateTimeOffset获取。</p><p>安装nuget包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>Microsoft<span class="token punctuation">.</span>CodeAnalysis<span class="token punctuation">.</span>BannedApiAnalyzers
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>并且在项目中添加BannedSymbols文件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">AdditionalFiles</span> Include<span class="token operator">=</span><span class="token string">&quot;BannedSymbols.txt&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>文件的内容就是要禁止的项，格式以及示例如下</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">{</span>Documentation Comment ID <span class="token keyword">string</span> <span class="token keyword">for</span> the symbol<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">;</span><span class="token class-name">Description</span> Text<span class="token punctuation">]</span>


P<span class="token punctuation">:</span>System<span class="token punctuation">.</span>DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">;</span>请使用DateTimeOffset<span class="token punctuation">.</span>Now<span class="token punctuation">,</span>因为此项目
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),d={href:"https://github.com/dotnet/roslyn-analyzers/blob/main/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/BannedApiAnalyzers.Help.md",target:"_blank",rel:"noopener noreferrer"},m=a(`<p>当你在项目中使用了禁止使用的内容，会出现警告“此项目：请使用DateTimeOffset，因为此项目中禁用符号“DateTime.Now””；</p><h2 id="链接多个文件" tabindex="-1"><a class="header-anchor" href="#链接多个文件"><span>链接多个文件</span></a></h2><p>在 C## 项目中通过链接方式引入文件可以让我们在项目中使用这些文件中的代码。常见的比如链接 AssemblyInfo.cs 文件，这样我们就可以在项目中使用这个文件中的版本号等信息。但是如果我们想要链接一个文件夹下的所有文件，该怎么做呢？今天我们就来看看如何在 C## 项目中链接一个文件夹下的所有文件。</p><h3 id="编辑项目文件引入单个文件" tabindex="-1"><a class="header-anchor" href="#编辑项目文件引入单个文件"><span>编辑项目文件引入单个文件</span></a></h3><p>在项目文件中，我们可以通过 Compile 标签来引入单个文件。比如我们想要引入 AssemblyInfo.cs 文件，我们可以这样做：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>Project<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Compile</span> Include<span class="token operator">=</span><span class="token string">&quot;../Shared/AssemblyInfo.cs&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Link<span class="token operator">&gt;</span>Properties<span class="token operator">/</span>AssemblyInfo<span class="token punctuation">.</span>cs<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Compile<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Project<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样我们就可以在项目中使用 AssemblyInfo.cs 文件中的代码了。</p><h3 id="编辑项目引入所有文件" tabindex="-1"><a class="header-anchor" href="#编辑项目引入所有文件"><span>编辑项目引入所有文件</span></a></h3><p>那如果想要引入多个文件，我们可以使用通配符来引入文件夹下的所有文件。比如我们想要引入 Shared 文件夹下的所有文件，我们可以这样做</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>Project<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Compile</span> Include<span class="token operator">=</span><span class="token string">&quot;..\\Shared\\**\\*.cs&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Link<span class="token operator">&gt;</span>Properties<span class="token operator">/</span><span class="token operator">%</span><span class="token punctuation">(</span>Filename<span class="token punctuation">)</span><span class="token operator">%</span><span class="token punctuation">(</span>Extension<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Compile<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Project<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样我们就可以在项目中使用 Shared 文件夹下的所有文件中的代码了。 不过这样会使得所有的文件在项目中都会显示在 Properties 文件夹下，这样会让项目文件看起来很乱。我们可以通过修改 Link 标签来修改文件在项目中的显示位置。比如我们想要把 Shared 文件夹下的所有文件都显示在项目的根目录下，我们可以这样做：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>Project<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Compile</span> Include<span class="token operator">=</span><span class="token string">&quot;..\\Shared\\**\\*.cs&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Link<span class="token operator">&gt;</span><span class="token operator">%</span><span class="token punctuation">(</span>RecursiveDir<span class="token punctuation">)</span><span class="token operator">%</span><span class="token punctuation">(</span>Filename<span class="token punctuation">)</span><span class="token operator">%</span><span class="token punctuation">(</span>Extension<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Compile<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Project<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="directory-build-props" tabindex="-1"><a class="header-anchor" href="#directory-build-props"><span>Directory.Build.props</span></a></h3><p>上面的方法都是在项目文件中引入文件的，但是如果我们有很多项目，那么我们就需要在每个项目文件中都引入这些文件。这样会让我们的项目文件变得很乱。我们可以通过使用 Directory.Build.props 文件来解决这个问题。我们可以在解决文件夹下创建一个 Directory.Build.props 文件，然后在这个文件中引入文件夹下的所有文件。比如我们想要引入 Shared 文件夹下的所有文件，我们可以这样做：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>Project<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">Compile</span> Include<span class="token operator">=</span><span class="token string">&quot;..\\Shared\\**\\*.cs&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Link<span class="token operator">&gt;</span><span class="token operator">%</span><span class="token punctuation">(</span>RecursiveDir<span class="token punctuation">)</span><span class="token operator">%</span><span class="token punctuation">(</span>Filename<span class="token punctuation">)</span><span class="token operator">%</span><span class="token punctuation">(</span>Extension<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Compile<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Project<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),v={href:"https://mp.weixin.qq.com/s/Ls1gV2u8t5sBzNGh2RLtxg",target:"_blank",rel:"noopener noreferrer"},b=a(`<h2 id="dependencymodel" tabindex="-1"><a class="header-anchor" href="#dependencymodel"><span>DependencyModel</span></a></h2><p>Microsoft.Extensions.DependencyModel 是一个 .NET Core 库，用于在运行时分析程序集及其依赖项。它是 Microsoft.Extensions 库的一部分，旨在提供跨多个 .NET Core 应用程序和框架的通用功能。</p><p>使用 Microsoft.Extensions.DependencyModel，您可以轻松获取有关应用程序及其依赖项的信息，例如：</p><ul><li>程序集和依赖项的名称</li><li>程序集和依赖项的版本</li><li>程序集和依赖项之间的依赖关系</li></ul><p>安装nuget包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.Extensions.DependencyModel&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;7.0.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="获取所有程序集" tabindex="-1"><a class="header-anchor" href="#获取所有程序集"><span>获取所有程序集</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">AssemblyHelper</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>Assembly<span class="token punctuation">&gt;</span></span> <span class="token function">GetAssemblies</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 需排除的项目程序集后缀</span>
        <span class="token class-name"><span class="token keyword">var</span></span> excludeAssemblyNames <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment">// 需要排除的包</span>
        <span class="token class-name"><span class="token keyword">var</span></span> excludePackageAssembly <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> <span class="token string">&quot;Microsoft&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;System&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;runtime&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> bb <span class="token operator">=</span> DependencyContext<span class="token punctuation">.</span>Default<span class="token punctuation">.</span>RuntimeLibraries
            <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>u <span class="token operator">=&gt;</span>
                <span class="token punctuation">(</span>u<span class="token punctuation">.</span>Type <span class="token operator">==</span> <span class="token string">&quot;project&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>excludeAssemblyNames<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span>j <span class="token operator">=&gt;</span> u<span class="token punctuation">.</span>Name<span class="token punctuation">.</span><span class="token function">EndsWith</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span>
                <span class="token punctuation">(</span>u<span class="token punctuation">.</span>Type <span class="token operator">==</span> <span class="token string">&quot;package&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>excludePackageAssembly<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span>j <span class="token operator">=&gt;</span> u<span class="token punctuation">.</span>Name<span class="token punctuation">.</span><span class="token function">StartsWith</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span>
                u<span class="token punctuation">.</span>Type <span class="token operator">==</span> <span class="token string">&quot;reference&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 非独立发布/非单文件发布</span>
        <span class="token comment">// todo  这点有些dll没有生成到目录下还会报错</span>
        <span class="token class-name"><span class="token keyword">var</span></span> scanAssemblies <span class="token operator">=</span> DependencyContext<span class="token punctuation">.</span>Default<span class="token punctuation">.</span>RuntimeLibraries
            <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>u <span class="token operator">=&gt;</span>
                <span class="token punctuation">(</span>u<span class="token punctuation">.</span>Type <span class="token operator">==</span> <span class="token string">&quot;project&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>excludeAssemblyNames<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span>j <span class="token operator">=&gt;</span> u<span class="token punctuation">.</span>Name<span class="token punctuation">.</span><span class="token function">EndsWith</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span>
                <span class="token punctuation">(</span>u<span class="token punctuation">.</span>Type <span class="token operator">==</span> <span class="token string">&quot;package&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>excludePackageAssembly<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span>j <span class="token operator">=&gt;</span> u<span class="token punctuation">.</span>Name<span class="token punctuation">.</span><span class="token function">StartsWith</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span>
                u<span class="token punctuation">.</span>Type <span class="token operator">==</span> <span class="token string">&quot;reference&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>t <span class="token operator">=&gt;</span> Reflect<span class="token punctuation">.</span><span class="token function">GetAssembly</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> scanAssemblies<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="asmresolver-dotnet" tabindex="-1"><a class="header-anchor" href="#asmresolver-dotnet"><span>AsmResolver.DotNet</span></a></h2><h3 id="是否为系统程序集" tabindex="-1"><a class="header-anchor" href="#是否为系统程序集"><span>是否为系统程序集</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 是否是系统程序集</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>asmPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
 <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">IsSystemAssembly</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> asmPath<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> moduleDef <span class="token operator">=</span> AsmResolver<span class="token punctuation">.</span>DotNet<span class="token punctuation">.</span>ModuleDefinition<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span>asmPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> assembly <span class="token operator">=</span> moduleDef<span class="token punctuation">.</span>Assembly<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>assembly <span class="token keyword">is</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name"><span class="token keyword">var</span></span> asmCompanyAttr <span class="token operator">=</span> assembly<span class="token punctuation">.</span>CustomAttributes<span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span>c <span class="token operator">=&gt;</span>
        c<span class="token punctuation">.</span>Constructor<span class="token punctuation">?.</span>DeclaringType<span class="token punctuation">?.</span>FullName <span class="token operator">==</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">AssemblyCompanyAttribute</span><span class="token punctuation">)</span><span class="token punctuation">.</span>FullName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>asmCompanyAttr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name"><span class="token keyword">var</span></span> companyName <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>AsmResolver<span class="token punctuation">.</span>Utf8String<span class="token punctuation">?</span><span class="token punctuation">)</span>asmCompanyAttr<span class="token punctuation">.</span>Signature<span class="token punctuation">?.</span>FixedArguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Element<span class="token punctuation">)</span><span class="token punctuation">?.</span>Value<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>companyName <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> companyName<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;Microsoft&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function g(h,y){const t=o("ExternalLinkIcon");return c(),l("div",null,[i,s("p",null,[n("内容来自："),s("a",u,[n("https://mp.weixin.qq.com/s/VC_w4BNYbXiToiZxV3g9iw"),e(t)])]),k,s("p",null,[n("格式语法如下："),s("a",d,[n("https://github.com/dotnet/roslyn-analyzers/blob/main/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/BannedApiAnalyzers.Help.md"),e(t)])]),m,s("p",null,[n("内容来自："),s("a",v,[n("https://mp.weixin.qq.com/s/Ls1gV2u8t5sBzNGh2RLtxg"),e(t)])]),b])}const w=p(r,[["render",g],["__file","caozuo.html.vue"]]),A=JSON.parse('{"path":"/dotnet/chengxujicaozuo/caozuo.html","title":"操作","lang":"zh-CN","frontmatter":{"title":"操作","lang":"zh-CN","date":"2023-10-17T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"caozuo","slug":"cfux2m3xt2b7y3sw","docsId":"120401952","description":"获取项目版本号 通过以下代码可以获取到项目的版本号 设置方案 如果没有设置，默认获取到是1.0.0 不同程序集相同签名方法调用 我们可以通过别名的方式来解决这个问题，首先修改项目文件，设置两个程序集的别名： 然后，我们在控制台应用中调用这两个程序集中的 Where 方法： 内容来自：https://mp.weixin.qq.com/s/VC_w4BNY...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/chengxujicaozuo/caozuo.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"操作"}],["meta",{"property":"og:description","content":"获取项目版本号 通过以下代码可以获取到项目的版本号 设置方案 如果没有设置，默认获取到是1.0.0 不同程序集相同签名方法调用 我们可以通过别名的方式来解决这个问题，首先修改项目文件，设置两个程序集的别名： 然后，我们在控制台应用中调用这两个程序集中的 Where 方法： 内容来自：https://mp.weixin.qq.com/s/VC_w4BNY..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"操作\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"获取项目版本号","slug":"获取项目版本号","link":"#获取项目版本号","children":[]},{"level":2,"title":"不同程序集相同签名方法调用","slug":"不同程序集相同签名方法调用","link":"#不同程序集相同签名方法调用","children":[]},{"level":2,"title":"禁用方法","slug":"禁用方法","link":"#禁用方法","children":[]},{"level":2,"title":"链接多个文件","slug":"链接多个文件","link":"#链接多个文件","children":[{"level":3,"title":"编辑项目文件引入单个文件","slug":"编辑项目文件引入单个文件","link":"#编辑项目文件引入单个文件","children":[]},{"level":3,"title":"编辑项目引入所有文件","slug":"编辑项目引入所有文件","link":"#编辑项目引入所有文件","children":[]},{"level":3,"title":"Directory.Build.props","slug":"directory-build-props","link":"#directory-build-props","children":[]}]},{"level":2,"title":"DependencyModel","slug":"dependencymodel","link":"#dependencymodel","children":[{"level":3,"title":"获取所有程序集","slug":"获取所有程序集","link":"#获取所有程序集","children":[]}]},{"level":2,"title":"AsmResolver.DotNet","slug":"asmresolver-dotnet","link":"#asmresolver-dotnet","children":[{"level":3,"title":"是否为系统程序集","slug":"是否为系统程序集","link":"#是否为系统程序集","children":[]}]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":4.39,"words":1318},"filePathRelative":"dotnet/chengxujicaozuo/caozuo.md","localizedDate":"2023年10月17日","excerpt":"<h2>获取项目版本号</h2>\\n<p>通过以下代码可以获取到项目的版本号</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> assemblyVersion <span class=\\"token operator\\">=</span> Assembly<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetEntryAssembly</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">GetCustomAttribute</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span>AssemblyInformationalVersionAttribute<span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>InformationalVersion<span class=\\"token punctuation\\">;</span>\\nConsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span>assemblyVersion<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{w as comp,A as data};
