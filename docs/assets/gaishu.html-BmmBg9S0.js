import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as r,d as n}from"./app-CVU83naM.js";const a={},i=n('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>集成测试，顾名思义就是在单元测试的基础上，将所有的模块组装成子系统或者系统，然后再进行联合测试。与<a href="https://learn.microsoft.com/zh-cn/dotnet/core/testing/" target="_blank" rel="noopener noreferrer">单元测试</a>相比，集成测试可在更广泛的级别上评估应用的组件。 单元测试用于测试独立软件组件，如单独的类方法。 集成测试确认两个或更多应用组件一起工作以生成预期结果，可能包括完整处理请求所需的每个组件。</p><p>常用于测试应用的基础结构和整个框架，包括以下组件</p><ul><li>数据库</li><li>文件系统</li><li>网络设备</li><li>请求-响应管道</li></ul><p>与单元测试相比，集成测试：</p><ul><li>使用应用在生产环境中使用的实际组件。</li><li>需要进行更多代码和数据处理。</li><li>需要更长时间来运行。</li></ul><h2 id="框架" tabindex="-1"><a class="header-anchor" href="#框架"><span>框架</span></a></h2><ul><li><a href="https://docs.microsoft.com/en-us/aspnet/core/test/integration-tests" target="_blank" rel="noopener noreferrer">TestServer</a></li><li>Xunit.DependencyInjection搭配TestServer更加方便的进行集成测试(详情看单元测试的Xunit.DependencyInjection)</li><li><a href="https://github.com/WireMock-Net/WireMock.Net" target="_blank" rel="noopener noreferrer">WireMock-Net</a></li></ul><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><p><a href="https://learn.microsoft.com/zh-cn/aspnet/core/test/integration-tests?view=aspnetcore-7.0" target="_blank" rel="noopener noreferrer">ASP.NET Core 中的集成测试</a> 使用c#破解谷歌浏览器cookie的值：<a href="https://mp.weixin.qq.com/s/xu7ylY_gHh5E_kcH6GMZKg" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/xu7ylY_gHh5E_kcH6GMZKg</a><a href="https://www.cnblogs.com/weihanli/p/13941796.html#%E9%9B%86%E6%88%90%E6%B5%8B%E8%AF%95" target="_blank" rel="noopener noreferrer">在集成测试中使用Xunit.DependencyInjection </a></p><p><a href="https://koukia.ca/integration-testing-in-asp-net-core-2-0-51d14ede3968" target="_blank" rel="noopener noreferrer">Integration Testing in Asp.Net Core 2.0</a></p>',11),o=[i];function l(c,s){return r(),t("div",null,o)}const g=e(a,[["render",l],["__file","gaishu.html.vue"]]),m=JSON.parse('{"path":"/middleware/testMange/jichengceshi/gaishu.html","title":"概述","lang":"zh-CN","frontmatter":{"title":"概述","lang":"zh-CN","date":"2023-10-18T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"gaishu","slug":"nvf4up2k7uozq7xi","docsId":"119506716","description":"概述 集成测试，顾名思义就是在单元测试的基础上，将所有的模块组装成子系统或者系统，然后再进行联合测试。与单元测试相比，集成测试可在更广泛的级别上评估应用的组件。 单元测试用于测试独立软件组件，如单独的类方法。 集成测试确认两个或更多应用组件一起工作以生成预期结果，可能包括完整处理请求所需的每个组件。 常用于测试应用的基础结构和整个框架，包括以下组件 数...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/testMange/jichengceshi/gaishu.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"概述"}],["meta",{"property":"og:description","content":"概述 集成测试，顾名思义就是在单元测试的基础上，将所有的模块组装成子系统或者系统，然后再进行联合测试。与单元测试相比，集成测试可在更广泛的级别上评估应用的组件。 单元测试用于测试独立软件组件，如单独的类方法。 集成测试确认两个或更多应用组件一起工作以生成预期结果，可能包括完整处理请求所需的每个组件。 常用于测试应用的基础结构和整个框架，包括以下组件 数..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-28T13:44:21.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-28T13:44:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"概述\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-28T13:44:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"框架","slug":"框架","link":"#框架","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1714311861000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":1.22,"words":367},"filePathRelative":"middleware/testMange/jichengceshi/gaishu.md","localizedDate":"2023年10月18日","excerpt":"<h2>概述</h2>\\n<p>集成测试，顾名思义就是在单元测试的基础上，将所有的模块组装成子系统或者系统，然后再进行联合测试。与<a href=\\"https://learn.microsoft.com/zh-cn/dotnet/core/testing/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">单元测试</a>相比，集成测试可在更广泛的级别上评估应用的组件。 单元测试用于测试独立软件组件，如单独的类方法。 集成测试确认两个或更多应用组件一起工作以生成预期结果，可能包括完整处理请求所需的每个组件。</p>\\n<p>常用于测试应用的基础结构和整个框架，包括以下组件</p>","autoDesc":true}');export{g as comp,m as data};
