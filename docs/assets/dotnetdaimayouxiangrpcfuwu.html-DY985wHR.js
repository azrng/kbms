import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o,c,b as n,e as s,f as t,d as l}from"./app-D8HBJYTp.js";const i={},r=l(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>该方式适用于多个服务之前都是**.Net项目**的场景 优点：</p><ul><li>可以在 .NET 服务器和客户端之间共享 .NET 服务和数据协定类型。</li><li>无需在 <code>.proto</code> 文件和代码生成过程中定义协定。</li></ul><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="引用组件" tabindex="-1"><a class="header-anchor" href="#引用组件"><span>引用组件</span></a></h3><p>创建一个共享的类库ShareProto，该类库可以被服务端和客户端进行访问，添加下面的包引用</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;protobuf-net.Grpc&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;1.0.152&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;protobuf-net.Grpc.AspNetCore&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;1.0.152&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>protobuf-net.Grpc是一个社区项目，通过属性批注的.Net类型来定义应用的gRPC服务和消息。</p><h3 id="服务端" tabindex="-1"><a class="header-anchor" href="#服务端"><span>服务端</span></a></h3><p>增加一个获取支付信息的grpc服务</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ServiceContract</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IPayProto</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">///获取订单服务</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>request<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>callContext<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token punctuation">[</span>OperationContract<span class="token punctuation">]</span>
    <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>PayResult<span class="token punctuation">&gt;</span></span> <span class="token function">GetPayInfo</span><span class="token punctuation">(</span><span class="token class-name">PayVm</span> request<span class="token punctuation">,</span> <span class="token class-name">CallContext</span> callContext <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DataContract</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PayVm</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DataMember</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Order <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> PayOrderNo <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DataContract</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PayResult</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DataMember</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Order <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> OrderNo <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DataMember</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Order <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">double</span></span> Price <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ServiceContract标识为grpc服务，OperationContract标识为服务下的端点(也可以理解为控制器下的方法)，DataContract标识为请求或者返回的对象。DataMember标识为对象下的属性。 创建PayService来实现IPayProto服务接口</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PayService</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IPayProto</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>PayResult<span class="token punctuation">&gt;</span></span> <span class="token function">GetPayInfo</span><span class="token punctuation">(</span><span class="token class-name">PayVm</span> request<span class="token punctuation">,</span> <span class="token class-name">CallContext</span> callContext <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;接收到的参数是   </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">request<span class="token punctuation">.</span>PayOrderNo</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Task<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PayResult</span> <span class="token punctuation">{</span> OrderNo <span class="token operator">=</span> request<span class="token punctuation">.</span>PayOrderNo<span class="token punctuation">,</span> Price <span class="token operator">=</span> <span class="token number">10.02f</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果没有实现，客户端调用的时候会提示服务没有实现 ConfigureServices中增加服务注册代码优先</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token function">AddGrpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
services<span class="token punctuation">.</span><span class="token function">AddCodeFirstGrpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Configure中启用服务</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>app<span class="token punctuation">.</span><span class="token function">UseEndpoints</span><span class="token punctuation">(</span>endpoints <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    endpoints<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">MapGrpcService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>PayService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    endpoints<span class="token punctuation">.</span><span class="token function">MapControllers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端"><span>客户端</span></a></h3><p>客户端引用ShareProto类库</p><h4 id="控制台" tabindex="-1"><a class="header-anchor" href="#控制台"><span>控制台</span></a></h4><p>引用组件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Grpc.Net.Client&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;2.38.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>调用方法</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> channel <span class="token operator">=</span> GrpcChannel<span class="token punctuation">.</span><span class="token function">ForAddress</span><span class="token punctuation">(</span><span class="token string">&quot;https://localhost:5001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">CreateGrpcService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IPayProto<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> reply <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetPayInfo</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">PayVm</span> <span class="token punctuation">{</span> PayOrderNo <span class="token operator">=</span> <span class="token string">&quot;10&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Greeting: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">reply<span class="token punctuation">.</span><span class="token function">GetAwaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>OrderNo</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2>`,25),u={href:"https://protobuf-net.github.io/protobuf-net.Grpc",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.microsoft.com/zh-cn/aspnet/core/grpc/code-first?view=aspnetcore-3.1",target:"_blank",rel:"noopener noreferrer"};function d(m,g){const a=p("ExternalLinkIcon");return o(),c("div",null,[r,n("blockquote",null,[n("p",null,[s("官网："),n("a",u,[s("https://protobuf-net.github.io/protobuf-net.Grpc"),t(a)]),s(" 代码优先Grpc服务："),n("a",k,[s("https://docs.microsoft.com/zh-cn/aspnet/core/grpc/code-first?view=aspnetcore-3.1"),t(a)])])])])}const h=e(i,[["render",d],["__file","dotnetdaimayouxiangrpcfuwu.html.vue"]]),y=JSON.parse('{"path":"/middleware/grpc/dotnetdaimayouxiangrpcfuwu.html","title":"dotNet代码优先gRPC服务","lang":"zh-CN","frontmatter":{"title":"dotNet代码优先gRPC服务","lang":"zh-CN","date":"2023-09-12T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"dotnetdaimayouxiangrpcfuwu","slug":"qec2zo","docsId":"48210686","description":"介绍 该方式适用于多个服务之前都是**.Net项目**的场景 优点： 可以在 .NET 服务器和客户端之间共享 .NET 服务和数据协定类型。 无需在 .proto 文件和代码生成过程中定义协定。 操作 引用组件 创建一个共享的类库ShareProto，该类库可以被服务端和客户端进行访问，添加下面的包引用 protobuf-net.Grpc是一个社区项...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/grpc/dotnetdaimayouxiangrpcfuwu.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"dotNet代码优先gRPC服务"}],["meta",{"property":"og:description","content":"介绍 该方式适用于多个服务之前都是**.Net项目**的场景 优点： 可以在 .NET 服务器和客户端之间共享 .NET 服务和数据协定类型。 无需在 .proto 文件和代码生成过程中定义协定。 操作 引用组件 创建一个共享的类库ShareProto，该类库可以被服务端和客户端进行访问，添加下面的包引用 protobuf-net.Grpc是一个社区项..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"dotNet代码优先gRPC服务\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"引用组件","slug":"引用组件","link":"#引用组件","children":[]},{"level":3,"title":"服务端","slug":"服务端","link":"#服务端","children":[]},{"level":3,"title":"客户端","slug":"客户端","link":"#客户端","children":[{"level":4,"title":"控制台","slug":"控制台","link":"#控制台","children":[]}]}]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.69,"words":506},"filePathRelative":"middleware/grpc/dotnetdaimayouxiangrpcfuwu.md","localizedDate":"2023年9月12日","excerpt":"<h2>介绍</h2>\\n<p>该方式适用于多个服务之前都是**.Net项目**的场景\\n优点：</p>\\n<ul>\\n<li>可以在 .NET 服务器和客户端之间共享 .NET 服务和数据协定类型。</li>\\n<li>无需在 <code>.proto</code> 文件和代码生成过程中定义协定。</li>\\n</ul>\\n<h2>操作</h2>\\n<h3>引用组件</h3>\\n<p>创建一个共享的类库ShareProto，该类库可以被服务端和客户端进行访问，添加下面的包引用</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">PackageReference</span> Include<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"protobuf-net.Grpc\\"</span> Version<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"1.0.152\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">PackageReference</span> Include<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"protobuf-net.Grpc.AspNetCore\\"</span> Version<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"1.0.152\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n</code></pre></div>","autoDesc":true}');export{h as comp,y as data};
