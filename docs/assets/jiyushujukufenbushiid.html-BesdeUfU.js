import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as i,d as n}from"./app-BuY9BHbl.js";const r={},a=n('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>一个根据数据库来生成分布式ID的组件。 长度：16位，前端可以使用number类型来接收 结构：6位年月日+3位机器码+7位ID 例如：2021年8月31日1号pod生成的第10个数据，2108310010000010</p><blockquote><p>生成内容唯一性待确认</p></blockquote><h2 id="雪花id问题" tabindex="-1"><a class="header-anchor" href="#雪花id问题"><span>雪花ID问题</span></a></h2><ul><li>雪花Id的long类型，需要19位数字，前端的number类型是16位的，需要后端改序列化或前端改成string</li><li>需要一个唯一的工作机器ID，一般用于zookper实现。</li></ul><p>处理方案</p><ul><li>16位ID，前端支持使用</li><li>number类型来接收，不会有精度丢失问题</li><li>使用数据库保证每台pod的workid唯一</li></ul><h2 id="通信" tabindex="-1"><a class="header-anchor" href="#通信"><span>通信</span></a></h2><p>服务启动： 1.服务创建的时候，拉去DB中24小时内活跃的WorkId列表，尝试插入一个不存在的WorkId，插入成功获取到唯一的WorkId 2.删除不活跃的WorkId，24小时内没有上传心跳包的机器 服务运行中： 1.ObjectId.Next，根据时间+WorkId+序列号生成Id，因为序列号是唯一的，所有生成的ObjectId也是唯一的 2.每6个小时上传一次心跳包</p><h2 id="具体代码" tabindex="-1"><a class="header-anchor" href="#具体代码"><span>具体代码</span></a></h2><p>看gitee</p>',11),o=[a];function l(d,p){return i(),t("div",null,o)}const c=e(r,[["render",l],["__file","jiyushujukufenbushiid.html.vue"]]),h=JSON.parse('{"path":"/middleware/identityId/jiyushujukufenbushiid.html","title":"基于数据库分布式ID","lang":"zh-CN","frontmatter":{"title":"基于数据库分布式ID","lang":"zh-CN","date":"2023-08-14T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"jiyushujukufenbushiid","slug":"db7gzi","docsId":"71014524","description":"概述 一个根据数据库来生成分布式ID的组件。 长度：16位，前端可以使用number类型来接收 结构：6位年月日+3位机器码+7位ID 例如：2021年8月31日1号pod生成的第10个数据，2108310010000010 生成内容唯一性待确认 雪花ID问题 雪花Id的long类型，需要19位数字，前端的number类型是16位的，需要后端改序列化或...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/identityId/jiyushujukufenbushiid.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"基于数据库分布式ID"}],["meta",{"property":"og:description","content":"概述 一个根据数据库来生成分布式ID的组件。 长度：16位，前端可以使用number类型来接收 结构：6位年月日+3位机器码+7位ID 例如：2021年8月31日1号pod生成的第10个数据，2108310010000010 生成内容唯一性待确认 雪花ID问题 雪花Id的long类型，需要19位数字，前端的number类型是16位的，需要后端改序列化或..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-08-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基于数据库分布式ID\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"雪花ID问题","slug":"雪花id问题","link":"#雪花id问题","children":[]},{"level":2,"title":"通信","slug":"通信","link":"#通信","children":[]},{"level":2,"title":"具体代码","slug":"具体代码","link":"#具体代码","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.15,"words":344},"filePathRelative":"middleware/identityId/jiyushujukufenbushiid.md","localizedDate":"2023年8月14日","excerpt":"<h2>概述</h2>\\n<p>一个根据数据库来生成分布式ID的组件。\\n长度：16位，前端可以使用number类型来接收\\n结构：6位年月日+3位机器码+7位ID\\n例如：2021年8月31日1号pod生成的第10个数据，2108310010000010</p>\\n<blockquote>\\n<p>生成内容唯一性待确认</p>\\n</blockquote>\\n<h2>雪花ID问题</h2>\\n<ul>\\n<li>雪花Id的long类型，需要19位数字，前端的number类型是16位的，需要后端改序列化或前端改成string</li>\\n<li>需要一个唯一的工作机器ID，一般用于zookper实现。</li>\\n</ul>","autoDesc":true}');export{c as comp,h as data};
