import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as p,c as o,b as n,e as s,f as c,d as l}from"./app-D8HBJYTp.js";const i={},u=l(`<h2 id="发布并传到远程服务器" tabindex="-1"><a class="header-anchor" href="#发布并传到远程服务器"><span>发布并传到远程服务器</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>name<span class="token punctuation">:</span> ASP<span class="token punctuation">.</span>NET Core <span class="token number">6.0</span> Example build <span class="token keyword">and</span> <span class="token class-name">deploy</span>
  
<span class="token keyword">on</span><span class="token punctuation">:</span>
  push<span class="token punctuation">:</span>
    branches<span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;main&quot;</span> <span class="token punctuation">]</span>
  pull_request<span class="token punctuation">:</span>
    branches<span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;main&quot;</span> <span class="token punctuation">]</span>

jobs<span class="token punctuation">:</span>

  build<span class="token punctuation">:</span>
    runs<span class="token operator">-</span><span class="token keyword">on</span><span class="token punctuation">:</span> ubuntu<span class="token operator">-</span><span class="token class-name">latest</span>

    steps<span class="token punctuation">:</span>
    <span class="token operator">-</span> uses<span class="token punctuation">:</span> actions<span class="token operator">/</span>checkout@v3
    <span class="token operator">-</span> name<span class="token punctuation">:</span> <span class="token class-name">Setup <span class="token punctuation">.</span>NET</span>
      uses<span class="token punctuation">:</span> actions<span class="token operator">/</span>setup<span class="token operator">-</span>dotnet<span class="token class-name">@v2</span>
      with<span class="token punctuation">:</span>
        dotnet<span class="token operator">-</span>version<span class="token punctuation">:</span> <span class="token number">6.0</span><span class="token punctuation">.</span>x
        
    <span class="token operator">-</span> name<span class="token punctuation">:</span> Restore <span class="token class-name">dependencies</span>
      run<span class="token punctuation">:</span> dotnet restore
      
    <span class="token operator">-</span> name<span class="token punctuation">:</span> Build <span class="token class-name">package</span>
      run<span class="token punctuation">:</span> dotnet publish <span class="token punctuation">.</span><span class="token operator">/</span>NetByDocker <span class="token operator">-</span>c Release <span class="token operator">-</span>r linux<span class="token operator">-</span>x64 <span class="token operator">--</span>self<span class="token operator">-</span>contained <span class="token boolean">false</span> <span class="token operator">-</span>o deploy
      
    <span class="token operator">-</span> name<span class="token punctuation">:</span> Upload <span class="token class-name">package</span>
      uses<span class="token punctuation">:</span> garygrossgarten<span class="token operator">/</span>github<span class="token operator">-</span>action<span class="token operator">-</span>scp@v0<span class="token punctuation">.</span><span class="token number">7.3</span>
      with<span class="token punctuation">:</span>
        host<span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets<span class="token punctuation">.</span>REMOTE_HOST <span class="token punctuation">}</span><span class="token punctuation">}</span>
        username<span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets<span class="token punctuation">.</span>REMOTE_USER <span class="token punctuation">}</span><span class="token punctuation">}</span>
        password<span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets<span class="token punctuation">.</span>REMOTE_PWD <span class="token punctuation">}</span><span class="token punctuation">}</span>
        port<span class="token punctuation">:</span> <span class="token number">22</span>
        local<span class="token punctuation">:</span> <span class="token operator">/</span>home<span class="token operator">/</span>runner<span class="token operator">/</span>work<span class="token operator">/</span>my<span class="token operator">-</span>example<span class="token operator">/</span>my<span class="token operator">-</span>example<span class="token operator">/</span>deploy<span class="token operator">/</span>
        remote<span class="token punctuation">:</span> <span class="token string">&quot;/home/project/example/&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="打包推送到镜像仓库" tabindex="-1"><a class="header-anchor" href="#打包推送到镜像仓库"><span>打包推送到镜像仓库</span></a></h2><p>项目就是简单的.Net6项目，项目目录下包含有dockerfile文件，如下</p><div class="language-docker line-numbers-mode" data-ext="docker" data-title="docker"><pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> mcr.microsoft.com/dotnet/aspnet:6.0 <span class="token keyword">AS</span> base</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>
<span class="token instruction"><span class="token keyword">EXPOSE</span> 80</span>

<span class="token instruction"><span class="token keyword">FROM</span> mcr.microsoft.com/dotnet/sdk:6.0 <span class="token keyword">AS</span> build</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /src</span>
<span class="token instruction"><span class="token keyword">COPY</span> [<span class="token string">&quot;NetByDocker/NetByDocker.csproj&quot;</span>, <span class="token string">&quot;NetByDocker/&quot;</span>]</span>
<span class="token instruction"><span class="token keyword">RUN</span> dotnet restore <span class="token string">&quot;NetByDocker/NetByDocker.csproj&quot;</span>  ## 还原项目的Nuget包</span>
<span class="token instruction"><span class="token keyword">COPY</span> . .</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token string">&quot;/src/NetByDocker&quot;</span></span>
<span class="token instruction"><span class="token keyword">RUN</span> dotnet build <span class="token string">&quot;NetByDocker.csproj&quot;</span> -c Release -o /app/build ## 在发布模式下生成项目。 生成工件将写入中间映像的 app/build/ 目录。</span>

<span class="token instruction"><span class="token keyword">FROM</span> build <span class="token keyword">AS</span> publish</span>
<span class="token instruction"><span class="token keyword">RUN</span> dotnet publish <span class="token string">&quot;NetByDocker.csproj&quot;</span> -c Release -o /app/publish ## 在发布模式下发布项目。 已发布的捆绑将写入最终映像的 app/publish/ 目录。</span>
 
<span class="token instruction"><span class="token keyword">FROM</span> base <span class="token keyword">AS</span> final</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>
<span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">publish</span></span> /app/publish .</span>
<span class="token instruction"><span class="token keyword">ENTRYPOINT</span> [<span class="token string">&quot;dotnet&quot;</span>, <span class="token string">&quot;NetByDocker.dll&quot;</span>] ## 启动</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打包推送镜像仓库的脚本配置</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token preprocessor property">## 工作流名称</span>
name<span class="token punctuation">:</span> <span class="token class-name">Docker</span>

<span class="token keyword">on</span><span class="token punctuation">:</span>
  push<span class="token punctuation">:</span> ## 推送的时候触发
    branches<span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;main&quot;</span> <span class="token punctuation">]</span> ## 推送的分支
    <span class="token preprocessor property">## Publish semver tags as releases.</span>
    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span> &#39;v<span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span>&#39; <span class="token punctuation">]</span>
  pull_request<span class="token punctuation">:</span>
    branches<span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;main&quot;</span> <span class="token punctuation">]</span>

env<span class="token punctuation">:</span>
  <span class="token preprocessor property">## 仓库地址</span>
  REGISTRY<span class="token punctuation">:</span> registry<span class="token punctuation">.</span>cn<span class="token operator">-</span><span class="token class-name">hangzhou<span class="token punctuation">.</span>aliyuncs<span class="token punctuation">.</span>com</span>
  IMAGE_NAME<span class="token punctuation">:</span> zrng<span class="token operator">/</span><span class="token class-name">myexample</span>
  IMAGE_TAG<span class="token punctuation">:</span> <span class="token class-name">latest</span>


jobs<span class="token punctuation">:</span>
  build<span class="token punctuation">:</span>

    runs<span class="token operator">-</span><span class="token keyword">on</span><span class="token punctuation">:</span> ubuntu<span class="token operator">-</span><span class="token class-name">latest</span>
    permissions<span class="token punctuation">:</span>
      contents<span class="token punctuation">:</span> <span class="token class-name">read</span>
      packages<span class="token punctuation">:</span> write
      <span class="token preprocessor property">## This is used to complete the identity challenge</span>
      <span class="token preprocessor property">## with sigstore/fulcio when running outside of PRs.</span>
      id<span class="token operator">-</span>token<span class="token punctuation">:</span> <span class="token class-name">write</span>

    steps<span class="token punctuation">:</span>
      <span class="token preprocessor property">## 将远程仓库中的源代码领取到workfile自动化构建脚本运行的服务器</span>
      <span class="token operator">-</span> name<span class="token punctuation">:</span> Checkout <span class="token class-name">repository</span>
        uses<span class="token punctuation">:</span> actions<span class="token operator">/</span>checkout@v3 

      <span class="token preprocessor property">## Login against a Docker registry except on PR</span>
      <span class="token preprocessor property">## https://github.com/docker/login-action</span>
      <span class="token operator">-</span> name<span class="token punctuation">:</span> login to $<span class="token punctuation">{</span><span class="token punctuation">{</span> env<span class="token punctuation">.</span>REGISTRY <span class="token punctuation">}</span><span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">:</span> github<span class="token punctuation">.</span>event_name <span class="token operator">!=</span> &#39;pull_request&#39;
        uses<span class="token punctuation">:</span> docker<span class="token operator">/</span>login<span class="token operator">-</span>action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c ## 用于登录docker以便我们后续上传镜像到自己的镜像仓库
        with<span class="token punctuation">:</span>
          registry<span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> env<span class="token punctuation">.</span>REGISTRY <span class="token punctuation">}</span><span class="token punctuation">}</span>
          username<span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets<span class="token punctuation">.</span>USERMAME <span class="token punctuation">}</span><span class="token punctuation">}</span> ## 镜像仓库用户名
          password<span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets<span class="token punctuation">.</span>PASSWORD <span class="token punctuation">}</span><span class="token punctuation">}</span> ## 镜像仓库密码

      <span class="token preprocessor property">## 生成和推送镜像  阿里云镜像仓库推送有问题</span>
      <span class="token preprocessor property">## ## https://github.com/docker/build-push-action</span>
      <span class="token preprocessor property">## - name: Build and push Docker image</span>
      <span class="token preprocessor property">##   id: build-and-push ## 构建docker镜像，推送到自己的docker镜像仓库</span>
      <span class="token preprocessor property">##   uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a</span>
      <span class="token preprocessor property">##   with:</span>
      <span class="token preprocessor property">##     registry: \${{ env.REGISTRY }}</span>
      <span class="token preprocessor property">##     username: \${{ secrets.USERMAME }} ## 镜像仓库用户名</span>
      <span class="token preprocessor property">##     password: \${{ secrets.PASSWORD }} ## 镜像仓库密码</span>
      <span class="token preprocessor property">##     push: \${{ github.event_name != &#39;pull_request&#39; }}</span>
      <span class="token preprocessor property">##     tags: \${{env.IMAGE_NAME}}:\${{env.IMAGE_TAG}}.\${{ github.run_id }}.\${{ github.run_number }} #动态变量镜像TAG 使用github运行job和jobid设置tag</span>
      <span class="token preprocessor property">##     context: . ## 相对以远程仓库根路径的dockerfile的路径</span>
      <span class="token preprocessor property">##     file: ./NetByDocker/Dockerfile ## 指定Dockerfile</span>

      <span class="token operator">-</span> name<span class="token punctuation">:</span> Build the Docker <span class="token class-name">image</span>
        run<span class="token punctuation">:</span> <span class="token operator">|</span>
          docker version
          <span class="token preprocessor property">## 登录阿里云镜像仓库</span>
          docker login <span class="token operator">--</span>username<span class="token operator">=</span>$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets<span class="token punctuation">.</span>USERMAME <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">--</span>password<span class="token operator">=</span>$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets<span class="token punctuation">.</span>PASSWORD <span class="token punctuation">}</span><span class="token punctuation">}</span> registry<span class="token punctuation">.</span>cn<span class="token operator">-</span>hangzhou<span class="token punctuation">.</span>aliyuncs<span class="token punctuation">.</span>com
          <span class="token preprocessor property">## 使用Dockerfile构建镜像  \${{env.IMAGE_TAG}}.\${{ github.run_id }}.\${{ github.run_number }}</span>
          docker build <span class="token punctuation">.</span> <span class="token operator">--</span>file NetByDocker<span class="token operator">/</span>Dockerfile <span class="token operator">--</span>tag registry<span class="token punctuation">.</span>cn<span class="token operator">-</span>hangzhou<span class="token punctuation">.</span>aliyuncs<span class="token punctuation">.</span>com<span class="token operator">/</span>zrng<span class="token operator">/</span>myexample<span class="token punctuation">:</span>$<span class="token punctuation">{</span><span class="token punctuation">{</span>env<span class="token punctuation">.</span>IMAGE_TAG<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">--</span>tag registry<span class="token punctuation">.</span>cn<span class="token operator">-</span>hangzhou<span class="token punctuation">.</span>aliyuncs<span class="token punctuation">.</span>com<span class="token operator">/</span>zrng<span class="token operator">/</span>myexample<span class="token punctuation">:</span>$<span class="token punctuation">{</span><span class="token punctuation">{</span> github<span class="token punctuation">.</span>run_number <span class="token punctuation">}</span><span class="token punctuation">}</span>
          <span class="token preprocessor property">## 推送镜像到镜像仓库</span>
          docker push $<span class="token punctuation">{</span><span class="token punctuation">{</span> env<span class="token punctuation">.</span>REGISTRY <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">/</span>$<span class="token punctuation">{</span><span class="token punctuation">{</span> env<span class="token punctuation">.</span>IMAGE_NAME <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span><span class="token punctuation">{</span>env<span class="token punctuation">.</span>IMAGE_TAG<span class="token punctuation">}</span><span class="token punctuation">}</span>
          docker push $<span class="token punctuation">{</span><span class="token punctuation">{</span> env<span class="token punctuation">.</span>REGISTRY <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">/</span>$<span class="token punctuation">{</span><span class="token punctuation">{</span> env<span class="token punctuation">.</span>IMAGE_NAME <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span><span class="token punctuation">{</span> github<span class="token punctuation">.</span>run_number <span class="token punctuation">}</span><span class="token punctuation">}</span>

      <span class="token preprocessor property">## 列出所有镜像    </span>
      <span class="token operator">-</span> name<span class="token punctuation">:</span> Docker Images <span class="token class-name">Lst</span> 
        run<span class="token punctuation">:</span> docker images
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为上面的是上传到阿里云镜像仓库的所以特殊一点，如果是上传到docker官方仓库，那么直接采用下面的脚本即可</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token comment">## 工作流名称</span>
<span class="token key atrule">name</span><span class="token punctuation">:</span> Docker

<span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token comment">## 推送的时候触发</span>
    <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;main&quot;</span> <span class="token punctuation">]</span> <span class="token comment">## 推送的分支</span>
    <span class="token comment">## Publish semver tags as releases.</span>
    <span class="token key atrule">tags</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">&#39;v*.*.*&#39;</span> <span class="token punctuation">]</span>
  <span class="token key atrule">pull_request</span><span class="token punctuation">:</span>
    <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;main&quot;</span> <span class="token punctuation">]</span>

<span class="token key atrule">env</span><span class="token punctuation">:</span>
  <span class="token comment">## 仓库地址</span>
  <span class="token key atrule">REGISTRY</span><span class="token punctuation">:</span> registry.cn<span class="token punctuation">-</span>hangzhou.aliyuncs.com
  <span class="token comment">## github.repository as &lt;account&gt;/&lt;repo&gt;</span>
  <span class="token key atrule">IMAGE_NAME</span><span class="token punctuation">:</span> zrng/myexample <span class="token comment">## 配置的写法 \${{ github.repository }}</span>
  <span class="token key atrule">IMAGE_TAG</span><span class="token punctuation">:</span> Test


<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">build</span><span class="token punctuation">:</span>

    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">permissions</span><span class="token punctuation">:</span>
      <span class="token key atrule">contents</span><span class="token punctuation">:</span> read
      <span class="token key atrule">packages</span><span class="token punctuation">:</span> write
      <span class="token comment">## This is used to complete the identity challenge</span>
      <span class="token comment">## with sigstore/fulcio when running outside of PRs.</span>
      <span class="token key atrule">id-token</span><span class="token punctuation">:</span> write

    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token comment">## 将远程仓库中的源代码领取到workfile自动化构建脚本运行的服务器</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout repository
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3 

      <span class="token comment">## Login against a Docker registry except on PR</span>
      <span class="token comment">## https://github.com/docker/login-action</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> login to $<span class="token punctuation">{</span><span class="token punctuation">{</span> env.REGISTRY <span class="token punctuation">}</span><span class="token punctuation">}</span>
        <span class="token key atrule">if</span><span class="token punctuation">:</span> github.event_name <span class="token tag">!=</span> &#39;pull_request&#39;
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c <span class="token comment">## 用于登录docker以便我们后续上传镜像到自己的镜像仓库</span>
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">registry</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> env.REGISTRY <span class="token punctuation">}</span><span class="token punctuation">}</span>
          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.USERMAME <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token comment">## 镜像仓库用户名</span>
          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.PASSWORD <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token comment">## 镜像仓库密码</span>

      <span class="token comment">#生成和推送镜像  阿里云推送有问题</span>
      <span class="token comment">## https://github.com/docker/build-push-action</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build and push Docker image
        <span class="token key atrule">id</span><span class="token punctuation">:</span> build<span class="token punctuation">-</span>and<span class="token punctuation">-</span>push <span class="token comment">## 构建docker镜像，推送到自己的docker镜像仓库</span>
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">registry</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> env.REGISTRY <span class="token punctuation">}</span><span class="token punctuation">}</span>
          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.USERMAME <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token comment">## 镜像仓库用户名</span>
          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.PASSWORD <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token comment">## 镜像仓库密码</span>
          <span class="token key atrule">push</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event_name <span class="token tag">!=</span> &#39;pull_request&#39; <span class="token punctuation">}</span><span class="token punctuation">}</span>
          <span class="token key atrule">tags</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span>env.IMAGE_NAME<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span><span class="token punctuation">{</span>env.IMAGE_TAG<span class="token punctuation">}</span><span class="token punctuation">}</span>.$<span class="token punctuation">{</span><span class="token punctuation">{</span> github.run_id <span class="token punctuation">}</span><span class="token punctuation">}</span>.$<span class="token punctuation">{</span><span class="token punctuation">{</span> github.run_number <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token comment">#动态变量镜像TAG 使用github运行job和jobid设置tag</span>
          <span class="token key atrule">context</span><span class="token punctuation">:</span> . <span class="token comment">## 相对以远程仓库根路径的dockerfile的路径</span>
          <span class="token key atrule">file</span><span class="token punctuation">:</span> ./NetByDocker/Dockerfile 

      <span class="token comment">## 列出所有镜像    </span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Docker Images Lst 
        <span class="token key atrule">run</span><span class="token punctuation">:</span> docker images

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,10),r={href:"https://www.cnblogs.com/kawhi187/p/15224138.html",target:"_blank",rel:"noopener noreferrer"};function k(d,v){const a=t("ExternalLinkIcon");return p(),o("div",null,[u,n("p",null,[n("a",r,[s("https://www.cnblogs.com/kawhi187/p/15224138.html"),c(a)]),s(" | github action 实现CI/CD - 九两白菜粥 - 博客园")])])}const h=e(i,[["render",k],["__file","bushu_netfuwu.html.vue"]]),g=JSON.parse('{"path":"/cloud/ciAndCd/github/bushu_netfuwu.html","title":"部署.Net服务","lang":"zh-CN","frontmatter":{"title":"部署.Net服务","lang":"zh-CN","date":"2022-10-16T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["cloud"],"tag":["无"],"filename":"bushu_netfuwu","slug":"fqf1gk","docsId":"93513637","description":"发布并传到远程服务器 打包推送到镜像仓库 项目就是简单的.Net6项目，项目目录下包含有dockerfile文件，如下 打包推送镜像仓库的脚本配置 因为上面的是上传到阿里云镜像仓库的所以特殊一点，如果是上传到docker官方仓库，那么直接采用下面的脚本即可 资料 https://www.cnblogs.com/kawhi187/p/15224138.h...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/cloud/ciAndCd/github/bushu_netfuwu.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"部署.Net服务"}],["meta",{"property":"og:description","content":"发布并传到远程服务器 打包推送到镜像仓库 项目就是简单的.Net6项目，项目目录下包含有dockerfile文件，如下 打包推送镜像仓库的脚本配置 因为上面的是上传到阿里云镜像仓库的所以特殊一点，如果是上传到docker官方仓库，那么直接采用下面的脚本即可 资料 https://www.cnblogs.com/kawhi187/p/15224138.h..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-24T07:50:54.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-10-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-24T07:50:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"部署.Net服务\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-24T07:50:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"发布并传到远程服务器","slug":"发布并传到远程服务器","link":"#发布并传到远程服务器","children":[]},{"level":2,"title":"打包推送到镜像仓库","slug":"打包推送到镜像仓库","link":"#打包推送到镜像仓库","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1695541854000,"updatedTime":1695541854000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":3.5,"words":1049},"filePathRelative":"cloud/ciAndCd/github/bushu_netfuwu.md","localizedDate":"2022年10月16日","excerpt":"<h2>发布并传到远程服务器</h2>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code>name<span class=\\"token punctuation\\">:</span> ASP<span class=\\"token punctuation\\">.</span>NET Core <span class=\\"token number\\">6.0</span> Example build <span class=\\"token keyword\\">and</span> <span class=\\"token class-name\\">deploy</span>\\n  \\n<span class=\\"token keyword\\">on</span><span class=\\"token punctuation\\">:</span>\\n  push<span class=\\"token punctuation\\">:</span>\\n    branches<span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">[</span> <span class=\\"token string\\">\\"main\\"</span> <span class=\\"token punctuation\\">]</span>\\n  pull_request<span class=\\"token punctuation\\">:</span>\\n    branches<span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">[</span> <span class=\\"token string\\">\\"main\\"</span> <span class=\\"token punctuation\\">]</span>\\n\\njobs<span class=\\"token punctuation\\">:</span>\\n\\n  build<span class=\\"token punctuation\\">:</span>\\n    runs<span class=\\"token operator\\">-</span><span class=\\"token keyword\\">on</span><span class=\\"token punctuation\\">:</span> ubuntu<span class=\\"token operator\\">-</span><span class=\\"token class-name\\">latest</span>\\n\\n    steps<span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token operator\\">-</span> uses<span class=\\"token punctuation\\">:</span> actions<span class=\\"token operator\\">/</span>checkout@v3\\n    <span class=\\"token operator\\">-</span> name<span class=\\"token punctuation\\">:</span> <span class=\\"token class-name\\">Setup <span class=\\"token punctuation\\">.</span>NET</span>\\n      uses<span class=\\"token punctuation\\">:</span> actions<span class=\\"token operator\\">/</span>setup<span class=\\"token operator\\">-</span>dotnet<span class=\\"token class-name\\">@v2</span>\\n      with<span class=\\"token punctuation\\">:</span>\\n        dotnet<span class=\\"token operator\\">-</span>version<span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">6.0</span><span class=\\"token punctuation\\">.</span>x\\n        \\n    <span class=\\"token operator\\">-</span> name<span class=\\"token punctuation\\">:</span> Restore <span class=\\"token class-name\\">dependencies</span>\\n      run<span class=\\"token punctuation\\">:</span> dotnet restore\\n      \\n    <span class=\\"token operator\\">-</span> name<span class=\\"token punctuation\\">:</span> Build <span class=\\"token class-name\\">package</span>\\n      run<span class=\\"token punctuation\\">:</span> dotnet publish <span class=\\"token punctuation\\">.</span><span class=\\"token operator\\">/</span>NetByDocker <span class=\\"token operator\\">-</span>c Release <span class=\\"token operator\\">-</span>r linux<span class=\\"token operator\\">-</span>x64 <span class=\\"token operator\\">--</span>self<span class=\\"token operator\\">-</span>contained <span class=\\"token boolean\\">false</span> <span class=\\"token operator\\">-</span>o deploy\\n      \\n    <span class=\\"token operator\\">-</span> name<span class=\\"token punctuation\\">:</span> Upload <span class=\\"token class-name\\">package</span>\\n      uses<span class=\\"token punctuation\\">:</span> garygrossgarten<span class=\\"token operator\\">/</span>github<span class=\\"token operator\\">-</span>action<span class=\\"token operator\\">-</span>scp@v0<span class=\\"token punctuation\\">.</span><span class=\\"token number\\">7.3</span>\\n      with<span class=\\"token punctuation\\">:</span>\\n        host<span class=\\"token punctuation\\">:</span> $<span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">{</span> secrets<span class=\\"token punctuation\\">.</span>REMOTE_HOST <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">}</span>\\n        username<span class=\\"token punctuation\\">:</span> $<span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">{</span> secrets<span class=\\"token punctuation\\">.</span>REMOTE_USER <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">}</span>\\n        password<span class=\\"token punctuation\\">:</span> $<span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">{</span> secrets<span class=\\"token punctuation\\">.</span>REMOTE_PWD <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">}</span>\\n        port<span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">22</span>\\n        local<span class=\\"token punctuation\\">:</span> <span class=\\"token operator\\">/</span>home<span class=\\"token operator\\">/</span>runner<span class=\\"token operator\\">/</span>work<span class=\\"token operator\\">/</span>my<span class=\\"token operator\\">-</span>example<span class=\\"token operator\\">/</span>my<span class=\\"token operator\\">-</span>example<span class=\\"token operator\\">/</span>deploy<span class=\\"token operator\\">/</span>\\n        remote<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"/home/project/example/\\"</span>\\n</code></pre></div>","autoDesc":true}');export{h as comp,g as data};
