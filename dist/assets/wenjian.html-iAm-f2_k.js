import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,a as n,b as s,d as t,e as p}from"./app-vSdX8vi3.js";const i={},u=p(`<h2 id="路径" tabindex="-1"><a class="header-anchor" href="#路径"><span>路径</span></a></h2><p>获取程序运行目录，可以通过引用下面的nuget包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.DotNet.PlatformAbstractions&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;3.1.6&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后获取</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> basePath <span class="token operator">=</span> Microsoft<span class="token punctuation">.</span>DotNet<span class="token punctuation">.</span>PlatformAbstractions<span class="token punctuation">.</span>ApplicationEnvironment<span class="token punctuation">.</span>ApplicationBasePath<span class="token punctuation">;</span><span class="token comment">//获取项目路径</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者使用</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> curr <span class="token operator">=</span> Directory<span class="token punctuation">.</span><span class="token function">GetCurrentDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="文件上传" tabindex="-1"><a class="header-anchor" href="#文件上传"><span>文件上传</span></a></h2><h3 id="uploadstream" tabindex="-1"><a class="header-anchor" href="#uploadstream"><span>uploadstream</span></a></h3>`,9),r={href:"https://github.com/ma1f/uploadstream",target:"_blank",rel:"noopener noreferrer"},k=p(`<h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2><h3 id="zetalongpaths" tabindex="-1"><a class="header-anchor" href="#zetalongpaths"><span>ZetaLongPaths</span></a></h3><h3 id="zetashortpaths" tabindex="-1"><a class="header-anchor" href="#zetashortpaths"><span>ZetaShortPaths</span></a></h3><h2 id="ude-netstandard" tabindex="-1"><a class="header-anchor" href="#ude-netstandard"><span>Ude.NetStandard</span></a></h2><p>探测文件流的编码组件。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> stream <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">CreateReadStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> cdet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CharsetDetector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cdet<span class="token punctuation">.</span><span class="token function">Feed</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
cdet<span class="token punctuation">.</span><span class="token function">DataEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> charset <span class="token operator">=</span> cdet<span class="token punctuation">.</span>Charset<span class="token punctuation">;</span><span class="token comment">//  UTF-8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="压缩与解压缩" tabindex="-1"><a class="header-anchor" href="#压缩与解压缩"><span>压缩与解压缩</span></a></h2><h3 id="system-io-compression" tabindex="-1"><a class="header-anchor" href="#system-io-compression"><span>System.IO.Compression</span></a></h3><p>不需要安装第三方的组件包，微软官方的实现，推荐使用</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//压缩</span>
System<span class="token punctuation">.</span>IO<span class="token punctuation">.</span>Compression<span class="token punctuation">.</span>ZipFile<span class="token punctuation">.</span><span class="token function">CreateFromDirectory</span><span class="token punctuation">(</span><span class="token string">@&quot;C:\\Users\\Pride\\Pictures\\test\\123&quot;</span><span class="token punctuation">,</span> <span class="token string">@&quot;C:\\Users\\Pride\\Pictures\\test\\123.zip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">//解压</span>
System<span class="token punctuation">.</span>IO<span class="token punctuation">.</span>Compression<span class="token punctuation">.</span>ZipFile<span class="token punctuation">.</span><span class="token function">ExtractToDirectory</span><span class="token punctuation">(</span><span class="token string">@&quot;C:\\Users\\Pride\\Pictures\\test\\123.zip&quot;</span><span class="token punctuation">,</span> <span class="token string">@&quot;C:\\Users\\Pride\\Pictures\\test\\1234&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将指定目录压缩为Zip文件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 将指定目录压缩为Zip文件</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>folderPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>文件夹地址 D:/1/ <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zipPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>zip地址 D:/1.zip <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CompressDirectoryZip</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> folderPath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> zipPath<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">DirectoryInfo</span> directoryInfo <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span>zipPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token keyword">if</span> <span class="token punctuation">(</span>directoryInfo<span class="token punctuation">.</span>Parent <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        directoryInfo <span class="token operator">=</span> directoryInfo<span class="token punctuation">.</span>Parent<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>directoryInfo<span class="token punctuation">.</span>Exists<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        directoryInfo<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    ZipFile<span class="token punctuation">.</span><span class="token function">CreateFromDirectory</span><span class="token punctuation">(</span>folderPath<span class="token punctuation">,</span> zipPath<span class="token punctuation">,</span> CompressionLevel<span class="token punctuation">.</span>Optimal<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将指定文件压缩为Zip文件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 将指定文件压缩为Zip文件</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filePath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>文件地址 D:/1.txt <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zipPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>zip地址 D:/1.zip <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CompressFileZip</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> filePath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> zipPath<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
 
    <span class="token class-name">FileInfo</span> fileInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileInfo</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">string</span></span> dirPath <span class="token operator">=</span> fileInfo<span class="token punctuation">.</span>DirectoryName<span class="token punctuation">?.</span><span class="token function">Replace</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">string</span></span> tempPath <span class="token operator">=</span> dirPath <span class="token operator">+</span> Guid<span class="token punctuation">.</span><span class="token function">NewGuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;_temp/&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Directory<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>tempPath<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Directory<span class="token punctuation">.</span><span class="token function">CreateDirectory</span><span class="token punctuation">(</span>tempPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    fileInfo<span class="token punctuation">.</span><span class="token function">CopyTo</span><span class="token punctuation">(</span>tempPath <span class="token operator">+</span> fileInfo<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">CompressDirectoryZip</span><span class="token punctuation">(</span>tempPath<span class="token punctuation">,</span> zipPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">DirectoryInfo</span> directory <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>directory<span class="token punctuation">.</span>Exists<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//将文件夹属性设置为普通,如：只读文件夹设置为普通</span>
        directory<span class="token punctuation">.</span>Attributes <span class="token operator">=</span> FileAttributes<span class="token punctuation">.</span>Normal<span class="token punctuation">;</span>
 
        directory<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解压Zip文件到指定目录(压缩单个文件的逻辑其实就是先将我们要压缩的文件复制到一个临时目录，然后对临时目录执行了压缩动作，压缩完成之后又删除了临时目录)</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 解压Zip文件到指定目录</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zipPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>zip地址 D:/1.zip<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>folderPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>文件夹地址 D:/1/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DecompressZip</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> zipPath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> folderPath<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">DirectoryInfo</span> directoryInfo <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span>folderPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>directoryInfo<span class="token punctuation">.</span>Exists<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        directoryInfo<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    ZipFile<span class="token punctuation">.</span><span class="token function">ExtractToDirectory</span><span class="token punctuation">(</span>zipPath<span class="token punctuation">,</span> folderPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sharpcompress" tabindex="-1"><a class="header-anchor" href="#sharpcompress"><span>SharpCompress</span></a></h3>`,17),d={href:"https://github.com/adamhathcock/sharpcompress",target:"_blank",rel:"noopener noreferrer"},m=p(`<blockquote><p>SharpCompress版本不同，设置ArchiveEncoding的方式也不同，默认设置了UTF8防止解压乱码。 通过设置ArchiveType切换生成不同格式压缩文件</p></blockquote><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 压缩文件/文件夹</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filePath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>需要压缩的文件/文件夹路径<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zipPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>压缩文件路径（zip后缀）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filterExtenList<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>需要过滤的文件后缀名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CompressionFile</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> filePath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> zipPath<span class="token punctuation">,</span> <span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> filterExtenList <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> zip <span class="token operator">=</span> File<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>zipPath<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> option <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">WriterOptions</span><span class="token punctuation">(</span>CompressionType<span class="token punctuation">.</span>Deflate<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                ArchiveEncoding <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SharpCompress<span class="token punctuation">.</span>Common<span class="token punctuation">.</span>ArchiveEncoding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    Default <span class="token operator">=</span> Encoding<span class="token punctuation">.</span>UTF8
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> zipWriter <span class="token operator">=</span> WriterFactory<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>zip<span class="token punctuation">,</span> ArchiveType<span class="token punctuation">.</span>Zip<span class="token punctuation">,</span> option<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>Directory<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">//添加文件夹</span>
                    zipWriter<span class="token punctuation">.</span><span class="token function">WriteAll</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span>
                        <span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> filterExtenList <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">?</span> <span class="token boolean">true</span> <span class="token punctuation">:</span> <span class="token operator">!</span>filterExtenList<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span>d <span class="token operator">=&gt;</span> Path<span class="token punctuation">.</span><span class="token function">GetExtension</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> StringComparison<span class="token punctuation">.</span>OrdinalIgnoreCase<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> SearchOption<span class="token punctuation">.</span>AllDirectories<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>File<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    zipWriter<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>Path<span class="token punctuation">.</span><span class="token function">GetFileName</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">,</span> filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 解压文件</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zipPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>压缩文件路径<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dirPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>解压到文件夹路径<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DeCompressionFile</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> zipPath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> dirPath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> password <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>File<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>zipPath<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArgumentNullException</span><span class="token punctuation">(</span><span class="token string">&quot;zipPath压缩文件不存在&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    Directory<span class="token punctuation">.</span><span class="token function">CreateDirectory</span><span class="token punctuation">(</span>dirPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">Stream</span> stream <span class="token operator">=</span> File<span class="token punctuation">.</span><span class="token function">OpenRead</span><span class="token punctuation">(</span>zipPath<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> option <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ReaderOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                ArchiveEncoding <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SharpCompress<span class="token punctuation">.</span>Common<span class="token punctuation">.</span>ArchiveEncoding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    Default <span class="token operator">=</span> Encoding<span class="token punctuation">.</span>UTF8
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrWhiteSpace</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                option<span class="token punctuation">.</span>Password <span class="token operator">=</span> password<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token class-name"><span class="token keyword">var</span></span> reader <span class="token operator">=</span> ReaderFactory<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>stream<span class="token punctuation">,</span> option<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>reader<span class="token punctuation">.</span><span class="token function">MoveToNextEntry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>reader<span class="token punctuation">.</span>Entry<span class="token punctuation">.</span>IsDirectory<span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    Directory<span class="token punctuation">.</span><span class="token function">CreateDirectory</span><span class="token punctuation">(</span>Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>dirPath<span class="token punctuation">,</span> reader<span class="token punctuation">.</span>Entry<span class="token punctuation">.</span>Key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span>
                <span class="token punctuation">{</span>
                     <span class="token comment">//创建父级目录，防止Entry文件,解压时由于目录不存在报异常</span>
                     <span class="token class-name"><span class="token keyword">var</span></span> file <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>dirPath<span class="token punctuation">,</span> reader<span class="token punctuation">.</span>Entry<span class="token punctuation">.</span>Key<span class="token punctuation">)</span><span class="token punctuation">;</span>
                     Directory<span class="token punctuation">.</span><span class="token function">CreateDirectory</span><span class="token punctuation">(</span>Path<span class="token punctuation">.</span><span class="token function">GetDirectoryName</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                     reader<span class="token punctuation">.</span><span class="token function">WriteEntryToFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),v={href:"https://www.cnblogs.com/cplemom/p/13599181.html",target:"_blank",rel:"noopener noreferrer"},g=n("h3",{id:"sharpziplib",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sharpziplib"},[n("span",null,"SharpZipLib")])],-1),b={href:"http://www.icsharpcode.net/opensource/sharpziplib/",target:"_blank",rel:"noopener noreferrer"},h=n("h3",{id:"dotnetzip",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#dotnetzip"},[n("span",null,"DotNetZip")])],-1),y={href:"http://dotnetzip.codeplex.com/",target:"_blank",rel:"noopener noreferrer"},f=p(`<p>压缩文件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">ZipFile</span> zip <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ZipFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  zip<span class="token punctuation">.</span><span class="token function">AddFile</span><span class="token punctuation">(</span><span class="token string">&quot;c:\\\\photos\\\\personal\\\\7440-N49th.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  zip<span class="token punctuation">.</span><span class="token function">AddFile</span><span class="token punctuation">(</span><span class="token string">&quot;c:\\\\Desktop\\\\2005_Annual_Report.pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  zip<span class="token punctuation">.</span><span class="token function">AddFile</span><span class="token punctuation">(</span><span class="token string">&quot;ReadMe.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  zip<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span><span class="token string">&quot;Archive.zip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 压缩文件/文件夹</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filePath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>需要压缩的文件/文件夹路径<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zipPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>压缩文件路径（zip后缀）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filterExtenList<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>需要过滤的文件后缀名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CompressionFile</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> filePath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> zipPath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> password <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> filterExtenList <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">ZipFile</span> zip <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ZipFile</span><span class="token punctuation">(</span>Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrWhiteSpace</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                zip<span class="token punctuation">.</span>Password <span class="token operator">=</span> password<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>Directory<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>filterExtenList <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    zip<span class="token punctuation">.</span><span class="token function">AddDirectory</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span>
                    <span class="token function">AddDirectory</span><span class="token punctuation">(</span>zip<span class="token punctuation">,</span> filePath<span class="token punctuation">,</span> filePath<span class="token punctuation">,</span> filterExtenList<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>File<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                zip<span class="token punctuation">.</span><span class="token function">AddFile</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            zip<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>zipPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 添加文件夹</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zip<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>ZipFile对象<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dirPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>需要压缩的文件夹路径<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rootPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>根目录路径<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filterExtenList<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>需要过滤的文件后缀名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">AddDirectory</span><span class="token punctuation">(</span><span class="token class-name">ZipFile</span> zip<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> dirPath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> rootPath<span class="token punctuation">,</span> <span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> filterExtenList<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> files <span class="token operator">=</span> Directory<span class="token punctuation">.</span><span class="token function">GetFiles</span><span class="token punctuation">(</span>dirPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> files<span class="token punctuation">.</span>Length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//如果Contains不支持第二个参数，就用.ToLower()</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>filterExtenList <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>filterExtenList <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>filterExtenList<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span>d <span class="token operator">=&gt;</span> Path<span class="token punctuation">.</span><span class="token function">GetExtension</span><span class="token punctuation">(</span>files<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> StringComparison<span class="token punctuation">.</span>OrdinalIgnoreCase<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//获取相对路径作为zip文件中目录路径</span>
            zip<span class="token punctuation">.</span><span class="token function">AddFile</span><span class="token punctuation">(</span>files<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> Path<span class="token punctuation">.</span><span class="token function">GetRelativePath</span><span class="token punctuation">(</span>rootPath<span class="token punctuation">,</span> dirPath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
	    <span class="token comment">//如果没有Path.GetRelativePath方法，可以用下面代码替换</span>
            <span class="token comment">//string relativePath = Path.GetFullPath(dirPath).Replace(Path.GetFullPath(rootPath), &quot;&quot;);</span>
            <span class="token comment">//zip.AddFile(files[i], relativePath);</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token class-name"><span class="token keyword">var</span></span> dirs <span class="token operator">=</span> Directory<span class="token punctuation">.</span><span class="token function">GetDirectories</span><span class="token punctuation">(</span>dirPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> dirs<span class="token punctuation">.</span>Length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">AddDirectory</span><span class="token punctuation">(</span>zip<span class="token punctuation">,</span> dirs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> rootPath<span class="token punctuation">,</span> filterExtenList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更新文件，无需解压</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">ZipFile</span> zip <span class="token operator">=</span> ZipFile<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span><span class="token string">&quot;ExistingArchive.zip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token comment">// 1. remove an entry, given the name</span>
  zip<span class="token punctuation">.</span><span class="token function">RemoveEntry</span><span class="token punctuation">(</span><span class="token string">&quot;README.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 2. Update an existing entry, with content from the filesystem</span>
  zip<span class="token punctuation">.</span><span class="token function">UpdateItem</span><span class="token punctuation">(</span><span class="token string">&quot;Portfolio.doc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 3. modify the filename of an existing entry</span>
  <span class="token comment">// (rename it and move it to a sub directory)</span>
  <span class="token class-name">ZipEntry</span> e <span class="token operator">=</span> zip<span class="token punctuation">[</span><span class="token string">&quot;Table1.jpg&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  e<span class="token punctuation">.</span>FileName <span class="token operator">=</span><span class="token string">&quot;images/Figure1.jpg&quot;</span><span class="token punctuation">;</span>

  <span class="token comment">// 4. insert or modify the comment on the zip archive</span>
  zip<span class="token punctuation">.</span>Comment <span class="token operator">=</span><span class="token string">&quot;This zip archive was updated&quot;</span> <span class="token operator">+</span> System<span class="token punctuation">.</span>DateTime<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token string">&quot;G&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 5. finally, save the modified archive</span>
  zip<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提取文件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">ZipFile</span> zip <span class="token operator">=</span> ZipFile<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span><span class="token string">&quot;ExistingZipFile.zip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">ZipEntry</span> e <span class="token keyword">in</span> zip<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">Extract</span><span class="token punctuation">(</span>TargetDirectory<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true =&gt; overwrite existing files</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="yuicompressor-net" tabindex="-1"><a class="header-anchor" href="#yuicompressor-net"><span>YUICompressor.NET</span></a></h3><p>使用该库可以方便地压缩CSS、JavaScript和HTML等内容，代码示例如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>string filename <span class="token operator">=</span> AppDomain.CurrentDomain.BaseDirectory + <span class="token string">&quot;SliderBar5.0.js&quot;</span><span class="token punctuation">;</span>
string content <span class="token operator">=</span> File.ReadAllText<span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
//执行js压缩
JavaScriptCompressor jsCom <span class="token operator">=</span> new JavaScriptCompressor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
content <span class="token operator">=</span> jsCom.Compress<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
Console.WriteLine<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>

string filename <span class="token operator">=</span> AppDomain.CurrentDomain.BaseDirectory + <span class="token string">&quot;SliderBar5.0.css&quot;</span><span class="token punctuation">;</span>
string content <span class="token operator">=</span> File.ReadAllText<span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
//执行css压缩
CssCompressor cssCom <span class="token operator">=</span> new CssCompressor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
content <span class="token operator">=</span> cssCom.Compress<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
Console.WriteLine<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="masuit-tools-core" tabindex="-1"><a class="header-anchor" href="#masuit-tools-core"><span>Masuit.Tools.Core</span></a></h2><h3 id="真实文件类型探测" tabindex="-1"><a class="header-anchor" href="#真实文件类型探测"><span>真实文件类型探测</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> filePath <span class="token operator">=</span> <span class="token string">&quot;d:\\\\id_cache.db&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//var detector = new FileInfo(filePath).DetectFiletype();</span>
<span class="token class-name"><span class="token keyword">var</span></span> detector <span class="token operator">=</span> File<span class="token punctuation">.</span><span class="token function">OpenRead</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">DetectFiletype</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Precondition:&quot;</span> <span class="token operator">+</span> detector<span class="token punctuation">.</span>Precondition<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//基础文件类型</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Extension:&quot;</span> <span class="token operator">+</span> detector<span class="token punctuation">.</span>Extension<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//真实扩展名</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;MimeType:&quot;</span> <span class="token operator">+</span> detector<span class="token punctuation">.</span>MimeType<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//mineType</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;FormatCategories:&quot;</span> <span class="token operator">+</span> detector<span class="token punctuation">.</span>FormatCategories<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//格式类别</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function w(q,P){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[s("一个基于 .NET 平台的开源项目，提供了一个简单易用的 API，可以在 Web 应用程序中快速集成文件上传功能。 优化多部分流式文件上传性能：减少25%的CPU使用量、50%内存。 仓库地址："),n("a",r,[s("https://github.com/ma1f/uploadstream"),t(a)])]),k,n("p",null,[s("纯C#压缩库，用于.NET Standard 2.0、2.1、.NET Core 3.1和.NET 5.0，支持格式有zip/tar/bzip2/gzip/lzip，功能实现有解压缩rar, 解压缩7zip, 解压缩zip, 解压缩tar解压缩bzip2, 解压缩gzip, 解压缩lzip。 仓库地址："),n("a",d,[s("https://github.com/adamhathcock/sharpcompress"),t(a)]),s(" 缺点：创建压缩文件的时候没法设置密码")]),m,n("p",null,[s("资料："),n("a",v,[s("https://www.cnblogs.com/cplemom/p/13599181.html"),t(a)])]),g,n("p",null,[s("文档："),n("a",b,[s("http://www.icsharpcode.net/opensource/sharpziplib/"),t(a)])]),h,n("p",null,[s("DotNetZip是一个开源的免费类库，主要提供了快速操作zip文件的工具集，VB、C#任何.Net语言都可以通过它创建、解压缩zip文件。我使用该类库最主要的目的还是因为它可以创建带密码保护的压缩文件。 文档："),n("a",y,[s("http://dotnetzip.codeplex.com/"),t(a)])]),f])}const C=e(i,[["render",w],["__file","wenjian.html.vue"]]),E=JSON.parse('{"path":"/dotnet/commonNuget/wenjian.html","title":"文件","lang":"zh-CN","frontmatter":{"title":"文件","lang":"zh-CN","date":"2023-10-05T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"wenjian","slug":"pcb54b","docsId":"73701048","description":"路径 获取程序运行目录，可以通过引用下面的nuget包 然后获取 或者使用 文件上传 uploadstream 一个基于 .NET 平台的开源项目，提供了一个简单易用的 API，可以在 Web 应用程序中快速集成文件上传功能。 优化多部分流式文件上传性能：减少25%的CPU使用量、50%内存。 仓库地址：https://github.com/ma1f/...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/commonNuget/wenjian.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"文件"}],["meta",{"property":"og:description","content":"路径 获取程序运行目录，可以通过引用下面的nuget包 然后获取 或者使用 文件上传 uploadstream 一个基于 .NET 平台的开源项目，提供了一个简单易用的 API，可以在 Web 应用程序中快速集成文件上传功能。 优化多部分流式文件上传性能：减少25%的CPU使用量、50%内存。 仓库地址：https://github.com/ma1f/..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-06T08:01:13.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-06T08:01:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文件\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-06T08:01:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"路径","slug":"路径","link":"#路径","children":[]},{"level":2,"title":"文件上传","slug":"文件上传","link":"#文件上传","children":[{"level":3,"title":"uploadstream","slug":"uploadstream","link":"#uploadstream","children":[]}]},{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[{"level":3,"title":"ZetaLongPaths","slug":"zetalongpaths","link":"#zetalongpaths","children":[]},{"level":3,"title":"ZetaShortPaths","slug":"zetashortpaths","link":"#zetashortpaths","children":[]}]},{"level":2,"title":"Ude.NetStandard","slug":"ude-netstandard","link":"#ude-netstandard","children":[]},{"level":2,"title":"压缩与解压缩","slug":"压缩与解压缩","link":"#压缩与解压缩","children":[{"level":3,"title":"System.IO.Compression","slug":"system-io-compression","link":"#system-io-compression","children":[]},{"level":3,"title":"SharpCompress","slug":"sharpcompress","link":"#sharpcompress","children":[]},{"level":3,"title":"SharpZipLib","slug":"sharpziplib","link":"#sharpziplib","children":[]},{"level":3,"title":"DotNetZip","slug":"dotnetzip","link":"#dotnetzip","children":[]},{"level":3,"title":"YUICompressor.NET","slug":"yuicompressor-net","link":"#yuicompressor-net","children":[]}]},{"level":2,"title":"Masuit.Tools.Core","slug":"masuit-tools-core","link":"#masuit-tools-core","children":[{"level":3,"title":"真实文件类型探测","slug":"真实文件类型探测","link":"#真实文件类型探测","children":[]}]}],"git":{"createdTime":1697962303000,"updatedTime":1712390473000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":5.44,"words":1632},"filePathRelative":"dotnet/commonNuget/wenjian.md","localizedDate":"2023年10月5日","excerpt":"<h2>路径</h2>\\n<p>获取程序运行目录，可以通过引用下面的nuget包</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">PackageReference</span> Include<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"Microsoft.DotNet.PlatformAbstractions\\"</span> Version<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"3.1.6\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n</code></pre></div>","autoDesc":true}');export{C as comp,E as data};
