import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as e,c as o,b as n,e as s,f as c,d as l}from"./app-Bfb6-vFH.js";const i={},u=l(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><ul><li>XML 指可扩展标记语言。</li><li>XML 被设计用来传输和存储数据。</li><li>XML 是一种很像HTML的标记语言。</li><li>XML 的设计宗旨是传输数据，而不是显示数据。</li><li>XML 标签没有被预定义。您需要自行定义标签。</li><li>XML 被设计为具有自我描述性。</li><li>XML 是 W3C 的推荐标准。</li></ul><h2 id="用途" tabindex="-1"><a class="header-anchor" href="#用途"><span>用途</span></a></h2><p>xml把数据从html分离 xml简化数据共享 xml简化数据传输 xml简化平台变更</p><h2 id="基础格式" tabindex="-1"><a class="header-anchor" href="#基础格式"><span>基础格式</span></a></h2><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>note</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>to</span><span class="token punctuation">&gt;</span></span>Tove<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>to</span><span class="token punctuation">&gt;</span></span> 
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">&gt;</span></span>Jani<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>heading</span><span class="token punctuation">&gt;</span></span>Reminder<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>heading</span><span class="token punctuation">&gt;</span></span> 
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>Don&#39;t forget me this weekend!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>note</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基础操作" tabindex="-1"><a class="header-anchor" href="#基础操作"><span>基础操作</span></a></h2><h3 id="写入xml字符串" tabindex="-1"><a class="header-anchor" href="#写入xml字符串"><span>写入XML字符串</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> aa <span class="token operator">=</span> <span class="token string">&quot;&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;&lt;School&gt;&lt;BOOK&gt;&lt;name&gt;323&lt;/name&gt;&lt;/BOOK&gt;&lt;/School&gt; &quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> xdoc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XmlDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
xdoc<span class="token punctuation">.</span><span class="token function">LoadXml</span><span class="token punctuation">(</span>aa<span class="token punctuation">)</span><span class="token punctuation">;</span>
xdoc<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span><span class="token string">&quot;c:\\\\aa.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建xml文件" tabindex="-1"><a class="header-anchor" href="#创建xml文件"><span>创建XML文件</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//通过代码来创建xml文档</span>
<span class="token comment">//1.引用命名空间</span>
<span class="token comment">//2.创建xml文档对象</span>
<span class="token class-name">XmlDocument</span> doc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XmlDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//3.创建第一行描述信息，并且添加到doc文档中</span>
<span class="token class-name">XmlDeclaration</span> dec <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateXmlDeclaration</span><span class="token punctuation">(</span><span class="token string">&quot;1.0&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//最后一个参数如果为null，说明不在声明独立的属性</span>
doc<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>dec<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//4.创建根节点</span>
<span class="token class-name">XmlElement</span> books <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;BOOKS&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//将根节点添加到文档中</span>
doc<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>books<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//5.给根节点books创建子节点</span>
<span class="token class-name">XmlElement</span> book1 <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;BOOK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//将book添加到根节点上</span>
books<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>book1<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//6.给book1添加子节点</span>
<span class="token class-name">XmlElement</span> name1 <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;NAME&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
name1<span class="token punctuation">.</span>InnerText <span class="token operator">=</span> <span class="token string">&quot;黎明&quot;</span><span class="token punctuation">;</span>
book1<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>name1<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">XmlElement</span> price1 <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;Price&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
price1<span class="token punctuation">.</span>InnerText <span class="token operator">=</span> <span class="token string">&quot;70&quot;</span><span class="token punctuation">;</span>
book1<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>price1<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">XmlElement</span> des1 <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;Des&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
des1<span class="token punctuation">.</span>InnerText <span class="token operator">=</span> <span class="token string">&quot;好看&quot;</span><span class="token punctuation">;</span>
book1<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>des1<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//创建第二本书</span>
<span class="token class-name">XmlElement</span> book2 <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;BOOK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
books<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>book2<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">XmlElement</span> name2 <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;NAME&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
name2<span class="token punctuation">.</span>InnerText <span class="token operator">=</span> <span class="token string">&quot;黎明之后&quot;</span><span class="token punctuation">;</span>
book2<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>name2<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">XmlElement</span> price2 <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;Price&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
price2<span class="token punctuation">.</span>InnerText <span class="token operator">=</span> <span class="token string">&quot;90&quot;</span><span class="token punctuation">;</span>
book2<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>price2<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">XmlElement</span> des2 <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;Des&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
des2<span class="token punctuation">.</span>InnerText <span class="token operator">=</span> <span class="token string">&quot;好看呀&quot;</span><span class="token punctuation">;</span>
book2<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>des2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> path <span class="token operator">=</span> <span class="token string">&quot;c:\\\\books.xml&quot;</span><span class="token punctuation">;</span>
doc<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建带命名空间xml" tabindex="-1"><a class="header-anchor" href="#创建带命名空间xml"><span>创建带命名空间XML</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> doc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XmlDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> dec <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateXmlDeclaration</span><span class="token punctuation">(</span><span class="token string">&quot;1.0&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;yes&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
doc<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>dec<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">XmlElement</span> order <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;Order&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
doc<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">XmlElement</span> customerName <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;CustomerName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
customerName<span class="token punctuation">.</span>InnerText <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">;</span>
order<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>customerName<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//XmlElement shuxing = doc.CreateElement(&quot;shuxing&quot;);</span>
<span class="token doc-comment comment">////添加属性</span>
<span class="token comment">//shuxing.SetAttribute(&quot;ID&quot;,&quot;1&quot;);</span>
<span class="token comment">//customerName.AppendChild(shuxing);</span>

<span class="token class-name">XmlElement</span> customerNumber <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;CustomerNumber&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
customerNumber<span class="token punctuation">.</span>InnerText <span class="token operator">=</span> <span class="token string">&quot;1010101&quot;</span><span class="token punctuation">;</span>
order<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>customerNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">XmlElement</span> items <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;Items&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
order<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">XmlElement</span> orderItem1 <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;OrderItem&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//给节点添加属性</span>
orderItem1<span class="token punctuation">.</span><span class="token function">SetAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;Name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;单反&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
orderItem1<span class="token punctuation">.</span><span class="token function">SetAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;Count&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1120&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
items<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>orderItem1<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">XmlElement</span> orderItem2 <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;OrderItem&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//给节点添加属性</span>
orderItem2<span class="token punctuation">.</span><span class="token function">SetAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;Name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;书&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
orderItem2<span class="token punctuation">.</span><span class="token function">SetAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;Count&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;30&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
items<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>orderItem2<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">XmlElement</span> orderItem3 <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;OrderItem&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//给节点添加属性</span>
orderItem3<span class="token punctuation">.</span><span class="token function">SetAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;Name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;手机&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
orderItem3<span class="token punctuation">.</span><span class="token function">SetAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;Count&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
items<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>orderItem3<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> path <span class="token operator">=</span> <span class="token string">&quot;c:\\\\Order.xml&quot;</span><span class="token punctuation">;</span>
doc<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="追加内容" tabindex="-1"><a class="header-anchor" href="#追加内容"><span>追加内容</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> path <span class="token operator">=</span> <span class="token string">&quot;c:\\\\books.xml&quot;</span><span class="token punctuation">;</span>

<span class="token comment">//追加XML文档</span>
<span class="token class-name"><span class="token keyword">var</span></span> doc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XmlDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">XmlElement</span> books<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>System<span class="token punctuation">.</span>IO<span class="token punctuation">.</span>File<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//如果文件存在 加载XML</span>
    doc<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//获得文件的根节点</span>
    books <span class="token operator">=</span> doc<span class="token punctuation">.</span>DocumentElement<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
    <span class="token comment">//如果文件不存在</span>
    <span class="token comment">//创建第一行</span>
    <span class="token class-name">XmlDeclaration</span> dec <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateXmlDeclaration</span><span class="token punctuation">(</span><span class="token string">&quot;1.0&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    doc<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>dec<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//创建跟节点</span>
    books <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;Books&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    doc<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>books<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//5、给根节点Books创建子节点</span>
<span class="token class-name">XmlElement</span> book1 <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;Book&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//将book添加到根节点</span>
books<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>book1<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//6、给Book1添加子节点</span>
<span class="token class-name">XmlElement</span> name1 <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;Name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
name1<span class="token punctuation">.</span>InnerText <span class="token operator">=</span> <span class="token string">&quot;c#开发大全&quot;</span><span class="token punctuation">;</span>
book1<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>name1<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">XmlElement</span> price1 <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;Price&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
price1<span class="token punctuation">.</span>InnerText <span class="token operator">=</span> <span class="token string">&quot;110&quot;</span><span class="token punctuation">;</span>
book1<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>price1<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">XmlElement</span> des1 <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;Des&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
des1<span class="token punctuation">.</span>InnerText <span class="token operator">=</span> <span class="token string">&quot;看不懂&quot;</span><span class="token punctuation">;</span>
book1<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>des1<span class="token punctuation">)</span><span class="token punctuation">;</span>
doc<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="基础读取" tabindex="-1"><a class="header-anchor" href="#基础读取"><span>基础读取</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//将xml加载进来</span>
<span class="token class-name"><span class="token keyword">var</span></span> path <span class="token operator">=</span> <span class="token string">&quot;c:\\\\xmlString.xml&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> document <span class="token operator">=</span> XDocument<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//获取到xml的根元素进行操作</span>
<span class="token class-name"><span class="token keyword">var</span></span> root <span class="token operator">=</span> document<span class="token punctuation">.</span>Root<span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> ele <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">Element</span><span class="token punctuation">(</span><span class="token string">&quot;BOOK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//获取name标签的值</span>
<span class="token class-name"><span class="token keyword">var</span></span> shuxing <span class="token operator">=</span> ele<span class="token punctuation">.</span><span class="token function">Element</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//获取name的值</span>
<span class="token class-name"><span class="token keyword">var</span></span> name <span class="token operator">=</span> shuxing<span class="token punctuation">.</span>Value<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用Linq去读取节点</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> xmlString <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>&quot;
                <span class="token operator">&lt;</span><span class="token class-name">Envelope</span> xmlns<span class="token punctuation">:</span>s<span class="token operator">=</span><span class="token string">&quot;http://www.w3.org/2003/05/soap-envelope&quot;</span> xmlns<span class="token punctuation">:</span>xsd<span class="token operator">=</span><span class="token string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span> xmlns<span class="token punctuation">:</span>xsi<span class="token operator">=</span><span class="token string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span>Header<span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span><span class="token class-name">Action</span> s<span class="token punctuation">:</span>mustUnderstand<span class="token operator">=</span><span class="token string">&quot;1&quot;</span> xmlns<span class="token operator">=</span><span class="token string">&quot;http://www.w3.org/2005/08/addressing&quot;</span><span class="token operator">&gt;</span>
                            urn<span class="token punctuation">:</span>hl7<span class="token operator">-</span>org<span class="token punctuation">:</span>v3<span class="token operator">/</span>DocumentV2Service<span class="token operator">/</span>HIPMessageServerResponse
                        <span class="token operator">&lt;</span><span class="token operator">/</span>Action<span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span><span class="token operator">/</span>Header<span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span>Body<span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span><span class="token class-name">HIPMessageServerResponse</span> xmlns<span class="token operator">=</span><span class="token string">&quot;urn:hl7-org:v3&quot;</span><span class="token operator">&gt;</span>
                            <span class="token operator">&lt;</span>HIPMessageServerResult<span class="token operator">&gt;</span>
                                <span class="token operator">&lt;</span><span class="token class-name">RCMR_IN000030UV01</span> ITSVersion<span class="token operator">=</span><span class="token string">&quot;XML_1.0&quot;</span> xmlns<span class="token punctuation">:</span>xsi<span class="token operator">=</span><span class="token string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> xmlns<span class="token operator">=</span><span class="token string">&quot;urn:hl7-org:v3&quot;</span> xsi<span class="token punctuation">:</span>schemaLocation<span class="token operator">=</span><span class="token string">&quot;urn:hl7-org:v3 ../multicacheschemas/RCMR_IN000030UV01.xsd&quot;</span><span class="token operator">&gt;</span>
                                    <span class="token operator">&lt;</span><span class="token class-name">id</span> root<span class="token operator">=</span><span class="token string">&quot;2.16.156.10011.2.5.1.1&quot;</span> extension<span class="token operator">=</span><span class="token string">&quot;c045b149-9384-4361-a454-19ba37d7dbe5&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                                <span class="token operator">&lt;</span><span class="token operator">/</span>RCMR_IN000030UV01<span class="token operator">&gt;</span>
                            <span class="token operator">&lt;</span><span class="token operator">/</span>HIPMessageServerResult<span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span><span class="token operator">/</span>HIPMessageServerResponse<span class="token operator">&gt;</span>
                    <span class="token operator">&lt;</span><span class="token operator">/</span>Body<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>Envelope<span class="token operator">&gt;</span>
                <span class="token string">&quot;&quot;</span>&quot;<span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> doc <span class="token operator">=</span> XDocument<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>xmlString<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 使用linq读取节点</span>
<span class="token class-name"><span class="token keyword">var</span></span> rcmr <span class="token operator">=</span> doc
           <span class="token punctuation">.</span><span class="token function">Descendants</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
           <span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span>e <span class="token operator">=&gt;</span> e<span class="token punctuation">.</span>Name<span class="token punctuation">.</span>LocalName <span class="token operator">==</span> <span class="token string">&quot;RCMR_IN000030UV01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="循环读取" tabindex="-1"><a class="header-anchor" href="#循环读取"><span>循环读取</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> path <span class="token operator">=</span> <span class="token string">&quot;c:\\\\books.xml&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> doc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XmlDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//加载要读取的XML</span>
doc<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//获得根节点</span>
<span class="token class-name"><span class="token keyword">var</span></span> books <span class="token operator">=</span> doc<span class="token punctuation">.</span>DocumentElement<span class="token punctuation">;</span>

<span class="token comment">//获得子节点 返回节点的集合</span>
<span class="token class-name"><span class="token keyword">var</span></span> childNodes <span class="token operator">=</span> books<span class="token punctuation">.</span>ChildNodes<span class="token punctuation">;</span>

<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">XmlNode</span> item <span class="token keyword">in</span> childNodes<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>InnerText<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>循环读取并取值</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> xml <span class="token operator">=</span> &quot;<span class="token operator">&lt;</span>ROWID<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>row<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>patName<span class="token operator">&gt;</span>刘XX<span class="token operator">&lt;</span><span class="token operator">/</span>patName<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>sex<span class="token operator">&gt;</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>sex<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>age<span class="token operator">&gt;</span><span class="token number">50</span>岁<span class="token operator">&lt;</span><span class="token operator">/</span>age<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>examId<span class="token operator">&gt;</span><span class="token number">16377042</span><span class="token operator">||</span><span class="token number">8</span><span class="token operator">&lt;</span><span class="token operator">/</span>examId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>patientId<span class="token operator">&gt;</span><span class="token number">16543990</span><span class="token operator">&lt;</span><span class="token operator">/</span>patientId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>lodgeDept<span class="token operator">&gt;</span>消化内科<span class="token operator">&lt;</span><span class="token operator">/</span>lodgeDept<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>lodgeDoctor<span class="token operator">&gt;</span>陆XX<span class="token operator">&lt;</span><span class="token operator">/</span>lodgeDoctor<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>bedNo<span class="token operator">&gt;</span><span class="token operator">+</span><span class="token number">28</span><span class="token operator">&lt;</span><span class="token operator">/</span>bedNo<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>outHosNo<span class="token operator">&gt;</span>OP0013927016<span class="token operator">&lt;</span><span class="token operator">/</span>outHosNo<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>inHosNo<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>inHosNo<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>birthday<span class="token operator">&gt;</span><span class="token number">1968</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">&lt;</span><span class="token operator">/</span>birthday<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>clinicDiag<span class="token operator">&gt;</span>测试临床诊断<span class="token operator">&lt;</span><span class="token operator">/</span>clinicDiag<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>OEORIDate<span class="token operator">&gt;</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">18</span><span class="token operator">&lt;</span><span class="token operator">/</span>OEORIDate<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>row<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>row<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>patName<span class="token operator">&gt;</span>刘XX<span class="token operator">&lt;</span><span class="token operator">/</span>patName<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>sex<span class="token operator">&gt;</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>sex<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>age<span class="token operator">&gt;</span><span class="token number">50</span>岁<span class="token operator">&lt;</span><span class="token operator">/</span>age<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>examId<span class="token operator">&gt;</span><span class="token number">16377042</span><span class="token operator">||</span><span class="token number">7</span><span class="token operator">&lt;</span><span class="token operator">/</span>examId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>patientId<span class="token operator">&gt;</span><span class="token number">16543990</span><span class="token operator">&lt;</span><span class="token operator">/</span>patientId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>lodgeDept<span class="token operator">&gt;</span>消化内科<span class="token operator">&lt;</span><span class="token operator">/</span>lodgeDept<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>lodgeDoctor<span class="token operator">&gt;</span>陆XX<span class="token operator">&lt;</span><span class="token operator">/</span>lodgeDoctor<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>bedNo<span class="token operator">&gt;</span>无床号<span class="token operator">&lt;</span><span class="token operator">/</span>bedNo<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>outHosNo<span class="token operator">&gt;</span>OP0013927016<span class="token operator">&lt;</span><span class="token operator">/</span>outHosNo<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>inHosNo<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>inHosNo<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>birthday<span class="token operator">&gt;</span><span class="token number">1968</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">&lt;</span><span class="token operator">/</span>birthday<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>clinicDiag<span class="token operator">&gt;</span>慢性胃炎；肠道功能紊乱<span class="token operator">&lt;</span><span class="token operator">/</span>clinicDiag<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>OEORIDate<span class="token operator">&gt;</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">&lt;</span><span class="token operator">/</span>OEORIDate<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>row<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ROWID<span class="token operator">&gt;</span>&quot;<span class="token punctuation">;</span>


<span class="token class-name">XmlDocument</span> xmldoc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XmlDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
xmldoc<span class="token punctuation">.</span><span class="token function">LoadXml</span><span class="token punctuation">(</span>xml<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">DateTime</span> date <span class="token operator">=</span> Convert<span class="token punctuation">.</span><span class="token function">ToDateTime</span><span class="token punctuation">(</span><span class="token string">&quot;2018-01-01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">XmlNodeList</span> PatInfo <span class="token operator">=</span> xmldoc<span class="token punctuation">.</span><span class="token function">SelectNodes</span><span class="token punctuation">(</span><span class="token string">&quot;ROWID//row&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">XmlElement</span> element <span class="token keyword">in</span> PatInfo<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">DateTime</span> dt <span class="token operator">=</span> Convert<span class="token punctuation">.</span><span class="token function">ToDateTime</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span><span class="token function">GetElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;OEORIDate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>InnerText<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dt<span class="token operator">&gt;</span>date<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        date <span class="token operator">=</span> Convert<span class="token punctuation">.</span><span class="token function">ToDateTime</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span><span class="token function">GetElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;OEORIDate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>InnerText<span class="token punctuation">)</span><span class="token punctuation">;</span>

        textBox1<span class="token punctuation">.</span>Text <span class="token operator">=</span> element<span class="token punctuation">.</span><span class="token function">GetElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;patientId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>InnerText<span class="token punctuation">;</span>

        textBox2<span class="token punctuation">.</span>Text <span class="token operator">=</span> element<span class="token punctuation">.</span><span class="token function">GetElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;patName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>InnerText<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>              
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="读取带属性的xml文件" tabindex="-1"><a class="header-anchor" href="#读取带属性的xml文件"><span>读取带属性的xml文件</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> path <span class="token operator">=</span> System<span class="token punctuation">.</span>Web<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>Server<span class="token punctuation">.</span><span class="token function">MapPath</span><span class="token punctuation">(</span><span class="token string">&quot;Order.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//读取带属性的XML文档</span>
<span class="token class-name">XmlDocument</span> doc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XmlDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
doc<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">XmlNodeList</span> xnl <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">SelectNodes</span><span class="token punctuation">(</span><span class="token string">&quot;/Order/Items/OrderItem&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">XmlNode</span> node <span class="token keyword">in</span> xnl<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
   Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>Attributes<span class="token punctuation">[</span><span class="token string">&quot;Name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value<span class="token punctuation">)</span><span class="token punctuation">;</span>
   Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>Attributes<span class="token punctuation">[</span><span class="token string">&quot;Count&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改xml属性的值" tabindex="-1"><a class="header-anchor" href="#修改xml属性的值"><span>修改xml属性的值</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> path <span class="token operator">=</span> System<span class="token punctuation">.</span>Web<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>Server<span class="token punctuation">.</span><span class="token function">MapPath</span><span class="token punctuation">(</span><span class="token string">&quot;Order.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//改变属性的值</span>
<span class="token class-name">XmlDocument</span> doc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XmlDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
doc<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">XmlNode</span> xn <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">SelectSingleNode</span><span class="token punctuation">(</span><span class="token string">&quot;/Order/Items/OrderItem[@Name=&#39;单反&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//把name为单反的那个修改为了电脑</span>
xn<span class="token punctuation">.</span>Attributes<span class="token punctuation">[</span><span class="token string">&quot;Count&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token string">&quot;2000&quot;</span><span class="token punctuation">;</span>
xn<span class="token punctuation">.</span>Attributes<span class="token punctuation">[</span><span class="token string">&quot;Name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token string">&quot;电脑&quot;</span><span class="token punctuation">;</span>
doc<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;保存成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除xml节点" tabindex="-1"><a class="header-anchor" href="#删除xml节点"><span>删除xml节点</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> path <span class="token operator">=</span> System<span class="token punctuation">.</span>Web<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>Server<span class="token punctuation">.</span><span class="token function">MapPath</span><span class="token punctuation">(</span><span class="token string">&quot;Order.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">XmlDocument</span> doc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XmlDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
doc<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">XmlNode</span> xn <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">SelectSingleNode</span><span class="token punctuation">(</span><span class="token string">&quot;/Order/Items&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
xn<span class="token punctuation">.</span><span class="token function">RemoveAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
doc<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;删除成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">ReadKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="xmldocument" tabindex="-1"><a class="header-anchor" href="#xmldocument"><span>XmlDocument</span></a></h2><ul><li><p>读写能力：XmlDocument提供了完整的读写能力，允许创建、修改、删除XML文档中的节点。这使得它成为构建、编辑XML文档的理想选择。</p></li><li><p>灵活性：支持更多的DOM（文档对象模型）操作，如添加、删除、替换节点等，适用于需要动态修改XML结构的场景。</p></li><li><p>性能与内存：对于频繁修改或需要高度交互操作的较小XML文档来说，XmlDocument是合适的。然而，处理大型文档时，由于 保持整个文档在内存中的完整结构，可能会导致较高的内存消耗和较慢的查询速度。</p></li><li><p>兼容性：由于其全面的DOM支持，XmlDocument与W3C DOM标准更加兼容，适合需要广泛DOM操作功能的应用。</p></li></ul><h3 id="命名空间读取" tabindex="-1"><a class="header-anchor" href="#命名空间读取"><span>命名空间读取</span></a></h3><p>通过XPath读取带命名空间的xml内容</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> xmlContent <span class="token operator">=</span> File<span class="token punctuation">.</span><span class="token function">ReadAllText</span><span class="token punctuation">(</span><span class="token string">@&quot;E:\\temp\\esb.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> doc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XmlDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
doc<span class="token punctuation">.</span><span class="token function">LoadXml</span><span class="token punctuation">(</span>xmlContent<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> root <span class="token operator">=</span> doc<span class="token punctuation">.</span>DocumentElement<span class="token punctuation">;</span>
<span class="token comment">// Add the namespace.</span>
<span class="token class-name"><span class="token keyword">var</span></span> nsmgr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XmlNamespaceManager</span><span class="token punctuation">(</span>doc<span class="token punctuation">.</span>NameTable<span class="token punctuation">)</span><span class="token punctuation">;</span>
nsmgr<span class="token punctuation">.</span><span class="token function">AddNamespace</span><span class="token punctuation">(</span><span class="token string">&quot;soap&quot;</span><span class="token punctuation">,</span> root<span class="token punctuation">.</span>NamespaceURI<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> xmlPath <span class="token operator">=</span> <span class="token string">&quot;/soap:RCMR_IN000030UV01/soap:controlActProcess/soap:subject&quot;</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> nodes <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">SelectNodes</span><span class="token punctuation">(</span>xmlPath<span class="token punctuation">,</span> nsmgr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>DocumentRetrieveResultBo<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nodes<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// soap:clinicalDocument代表从当前节点再次做xpath，如果加/或者//就是绝对路径匹配</span>
	<span class="token class-name"><span class="token keyword">var</span></span> effectiveTime <span class="token operator">=</span> nodes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">SelectSingleNode</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;soap:clinicalDocument/soap:effectiveTime/@value&quot;</span></span><span class="token punctuation">,</span> nsmgr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="xpathdocument" tabindex="-1"><a class="header-anchor" href="#xpathdocument"><span>XPathDocument</span></a></h2><ul><li>只读：XPathDocument主要用于读取XML数据，它是不可编辑的，即一旦创建就无法修改XML内容。这使得它在处理大型XML文档时更为高效，因为它可以优化存储结构以提高查询性能。</li><li>性能优化：特别设计用于XPath查询，提供了快速的XPath查询支持。由于其内部实现是基于XPath数据模型的，因此在执行XPath查询时速度较快。</li><li>内存占用低：相比XmlDocument，XPathDocument在处理大型文档时通常占用更少的内存，因为它是为快速读取和查询而优化的。</li><li>排序与节点创建：不支持直接在文档中创建新节点或进行排序操作，它主要用于查询和读取。</li></ul><h3 id="命名空间读取-1" tabindex="-1"><a class="header-anchor" href="#命名空间读取-1"><span>命名空间读取</span></a></h3><p>通过XPath读取带命名空间的xml内容</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> xmlFilePath <span class="token operator">=</span> <span class="token string">@&quot;E:\\temp\\esb.xml&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// 读取XML文件内容</span>
<span class="token class-name"><span class="token keyword">string</span></span> xmlContent <span class="token operator">=</span> File<span class="token punctuation">.</span><span class="token function">ReadAllText</span><span class="token punctuation">(</span>xmlFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 创建XmlNamespaceManager以处理命名空间</span>
<span class="token class-name">XmlNamespaceManager</span> nsManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XmlNamespaceManager</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NameTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
nsManager<span class="token punctuation">.</span><span class="token function">AddNamespace</span><span class="token punctuation">(</span><span class="token string">&quot;soap&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;urn:hl7-org:v3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 解析XML内容</span>
<span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">StringReader</span> stringReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringReader</span><span class="token punctuation">(</span>xmlContent<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">// 创建XPathDocument对象</span>
	<span class="token class-name">XPathDocument</span> xpathDoc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XPathDocument</span><span class="token punctuation">(</span>stringReader<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// 创建XPath导航器</span>
	<span class="token class-name">XPathNavigator</span> nav <span class="token operator">=</span> xpathDoc<span class="token punctuation">.</span><span class="token function">CreateNavigator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// 使用XPath表达式选取controlActProcess元素</span>
	<span class="token class-name">XPathNodeIterator</span> iterator <span class="token operator">=</span> nav<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token string">&quot;/soap:RCMR_IN000030UV01/soap:controlActProcess/soap:subject&quot;</span><span class="token punctuation">,</span> nsManager<span class="token punctuation">)</span><span class="token punctuation">;</span>
	iterator<span class="token punctuation">.</span>Count<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> iterator<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token class-name"><span class="token keyword">var</span></span> curr <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">MoveNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// soap:clinicalDocument代表从当前节点再次做xpath，如果加/或者//就是绝对路径匹配</span>
		<span class="token class-name"><span class="token keyword">var</span></span> effectiveTime <span class="token operator">=</span> iterator<span class="token punctuation">.</span>Current<span class="token punctuation">.</span><span class="token function">SelectSingleNode</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;soap:clinicalDocument/soap:effectiveTime/@value&quot;</span></span><span class="token punctuation">,</span> nsManager<span class="token punctuation">)</span><span class="token punctuation">;</span>

		effectiveTime<span class="token punctuation">?.</span>Value<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="xml-path" tabindex="-1"><a class="header-anchor" href="#xml-path"><span>XML Path</span></a></h2>`,40),r={href:"https://www.runoob.com/xpath/xpath-syntax.html",target:"_blank",rel:"noopener noreferrer"};function k(d,m){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[s("XPath语法："),n("a",r,[s("https://www.runoob.com/xpath/xpath-syntax.html"),c(a)])])])}const g=t(i,[["render",k],["__file","xml.html.vue"]]),h=JSON.parse(`{"path":"/otherLanguage/xml.html","title":"XML","lang":"zh-CN","frontmatter":{"title":"XML","lang":"zh-CN","date":"2023-09-13T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["otherLanguage"],"tag":["XML"],"description":"概述 XML 指可扩展标记语言。 XML 被设计用来传输和存储数据。 XML 是一种很像HTML的标记语言。 XML 的设计宗旨是传输数据，而不是显示数据。 XML 标签没有被预定义。您需要自行定义标签。 XML 被设计为具有自我描述性。 XML 是 W3C 的推荐标准。 用途 xml把数据从html分离 xml简化数据共享 xml简化数据传输 xml...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/otherLanguage/xml.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"XML"}],["meta",{"property":"og:description","content":"概述 XML 指可扩展标记语言。 XML 被设计用来传输和存储数据。 XML 是一种很像HTML的标记语言。 XML 的设计宗旨是传输数据，而不是显示数据。 XML 标签没有被预定义。您需要自行定义标签。 XML 被设计为具有自我描述性。 XML 是 W3C 的推荐标准。 用途 xml把数据从html分离 xml简化数据共享 xml简化数据传输 xml..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-17T15:48:27.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"XML"}],["meta",{"property":"article:published_time","content":"2023-09-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-17T15:48:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"XML\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-13T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-17T15:48:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"用途","slug":"用途","link":"#用途","children":[]},{"level":2,"title":"基础格式","slug":"基础格式","link":"#基础格式","children":[]},{"level":2,"title":"基础操作","slug":"基础操作","link":"#基础操作","children":[{"level":3,"title":"写入XML字符串","slug":"写入xml字符串","link":"#写入xml字符串","children":[]},{"level":3,"title":"创建XML文件","slug":"创建xml文件","link":"#创建xml文件","children":[]},{"level":3,"title":"创建带命名空间XML","slug":"创建带命名空间xml","link":"#创建带命名空间xml","children":[]},{"level":3,"title":"追加内容","slug":"追加内容","link":"#追加内容","children":[]},{"level":3,"title":"基础读取","slug":"基础读取","link":"#基础读取","children":[]},{"level":3,"title":"循环读取","slug":"循环读取","link":"#循环读取","children":[]},{"level":3,"title":"读取带属性的xml文件","slug":"读取带属性的xml文件","link":"#读取带属性的xml文件","children":[]},{"level":3,"title":"修改xml属性的值","slug":"修改xml属性的值","link":"#修改xml属性的值","children":[]},{"level":3,"title":"删除xml节点","slug":"删除xml节点","link":"#删除xml节点","children":[]}]},{"level":2,"title":"XmlDocument","slug":"xmldocument","link":"#xmldocument","children":[{"level":3,"title":"命名空间读取","slug":"命名空间读取","link":"#命名空间读取","children":[]}]},{"level":2,"title":"XPathDocument","slug":"xpathdocument","link":"#xpathdocument","children":[{"level":3,"title":"命名空间读取","slug":"命名空间读取-1","link":"#命名空间读取-1","children":[]}]},{"level":2,"title":"XML Path","slug":"xml-path","link":"#xml-path","children":[]}],"git":{"createdTime":1715960907000,"updatedTime":1715960907000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":6.44,"words":1933},"filePathRelative":"otherLanguage/xml.md","localizedDate":"2023年9月13日","excerpt":"<h2>概述</h2>\\n<ul>\\n<li>XML 指可扩展标记语言。</li>\\n<li>XML 被设计用来传输和存储数据。</li>\\n<li>XML 是一种很像HTML的标记语言。</li>\\n<li>XML 的设计宗旨是传输数据，而不是显示数据。</li>\\n<li>XML 标签没有被预定义。您需要自行定义标签。</li>\\n<li>XML 被设计为具有自我描述性。</li>\\n<li>XML 是 W3C 的推荐标准。</li>\\n</ul>\\n<h2>用途</h2>\\n<p>xml把数据从html分离\\nxml简化数据共享\\nxml简化数据传输\\nxml简化平台变更</p>\\n<h2>基础格式</h2>\\n<div class=\\"language-xml\\" data-ext=\\"xml\\" data-title=\\"xml\\"><pre class=\\"language-xml\\"><code><span class=\\"token prolog\\">&lt;?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?&gt;</span> \\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>note</span><span class=\\"token punctuation\\">&gt;</span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>to</span><span class=\\"token punctuation\\">&gt;</span></span>Tove<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>to</span><span class=\\"token punctuation\\">&gt;</span></span> \\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>from</span><span class=\\"token punctuation\\">&gt;</span></span>Jani<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>from</span><span class=\\"token punctuation\\">&gt;</span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>heading</span><span class=\\"token punctuation\\">&gt;</span></span>Reminder<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>heading</span><span class=\\"token punctuation\\">&gt;</span></span> \\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>body</span><span class=\\"token punctuation\\">&gt;</span></span>Don't forget me this weekend!<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>body</span><span class=\\"token punctuation\\">&gt;</span></span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>note</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre></div>","autoDesc":true}`);export{g as comp,h as data};
