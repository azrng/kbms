import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as a,b as e}from"./app-Bw62I61B.js";const t={},l=e(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p>下面示例创建的mysql实例其数据都在容器内部存储，容器删除数据就没了，所以如果要保存数据要考虑挂载容器</p></div><h2 id="docker部署mysql" tabindex="-1"><a class="header-anchor" href="#docker部署mysql"><span>docker部署mysql</span></a></h2><p>拉取镜像</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>docker pull mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建mysql实例创建MySQL实例</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>docker run <span class="token operator">-</span>p <span class="token number">3306</span><span class="token punctuation">:</span><span class="token number">3306</span> <span class="token operator">--</span>name mysql <span class="token operator">-</span><span class="token class-name">e</span> MYSQL_ROOT_PASSWORD<span class="token operator">=</span><span class="token number">123456</span> <span class="token operator">-</span><span class="token class-name">e</span> TZ<span class="token punctuation">:</span>Asia<span class="token operator">/</span>Shanghai <span class="token operator">-</span>d mysql <span class="token operator">--</span>lower_case_table_names<span class="token operator">=</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>操作数据库</p><p>进入容器命令：docker exec -it mysql bash 登录命令：mysql -uroot -p 123456 显示当前数据库 命令：show databases;</p><h2 id="docker-compose部署mysql" tabindex="-1"><a class="header-anchor" href="#docker-compose部署mysql"><span>docker-compose部署mysql</span></a></h2><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.8&#39;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span> 
  <span class="token key atrule">mysql</span><span class="token punctuation">:</span>  <span class="token comment">#mysql数据库</span>
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> mysql
    <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql
    <span class="token key atrule">ports</span><span class="token punctuation">:</span> 
      <span class="token punctuation">-</span> <span class="token string">&quot;3306:3306&quot;</span>
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">environment</span><span class="token punctuation">:</span> 
      <span class="token key atrule">MYSQL_DATABASE</span><span class="token punctuation">:</span> <span class="token string">&quot;test&quot;</span>
      <span class="token key atrule">MYSQL_ROOT_PASSWORD</span><span class="token punctuation">:</span> <span class="token string">&quot;123456&quot;</span>
      <span class="token key atrule">TZ</span><span class="token punctuation">:</span> Asia/Shanghai
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> $PWD/conf<span class="token punctuation">:</span>/etc/mysql/conf.d
      <span class="token punctuation">-</span> $PWD/logs<span class="token punctuation">:</span>/logs
      <span class="token punctuation">-</span> $PWD/data<span class="token punctuation">:</span>/var/lib/mysql
    <span class="token key atrule">logging</span><span class="token punctuation">:</span> 
      <span class="token key atrule">driver</span><span class="token punctuation">:</span> <span class="token string">&quot;json-file&quot;</span>
      <span class="token key atrule">options</span><span class="token punctuation">:</span> 
        <span class="token key atrule">max-size</span><span class="token punctuation">:</span> <span class="token string">&quot;5g&quot;</span>
    <span class="token key atrule">networks</span><span class="token punctuation">:</span> 
      <span class="token punctuation">-</span> my<span class="token punctuation">-</span>bridge
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后拉取镜像启动成功：当前环境已经可以正常外部连接 进入容器 命令：docker exec -it mysql bash 登录mysql 命令：mysql -uroot -p 输入密码</p>`,11),o=[l];function p(c,i){return n(),a("div",null,o)}const u=s(t,[["render",p],["__file","dockerInstall.html.vue"]]),m=JSON.parse('{"path":"/dataBase/mysql/install/dockerInstall.html","title":"容器安装","lang":"zh-CN","frontmatter":{"title":"容器安装","lang":"zh-CN","date":"2021-05-14T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"description":"提示 下面示例创建的mysql实例其数据都在容器内部存储，容器删除数据就没了，所以如果要保存数据要考虑挂载容器 docker部署mysql 拉取镜像 创建mysql实例创建MySQL实例 操作数据库 进入容器命令：docker exec -it mysql bash 登录命令：mysql -uroot -p 123456 显示当前数据库 命令：show...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/mysql/install/dockerInstall.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"容器安装"}],["meta",{"property":"og:description","content":"提示 下面示例创建的mysql实例其数据都在容器内部存储，容器删除数据就没了，所以如果要保存数据要考虑挂载容器 docker部署mysql 拉取镜像 创建mysql实例创建MySQL实例 操作数据库 进入容器命令：docker exec -it mysql bash 登录命令：mysql -uroot -p 123456 显示当前数据库 命令：show..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-18T14:41:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2021-05-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-18T14:41:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"容器安装\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-05-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-18T14:41:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"docker部署mysql","slug":"docker部署mysql","link":"#docker部署mysql","children":[]},{"level":2,"title":"docker-compose部署mysql","slug":"docker-compose部署mysql","link":"#docker-compose部署mysql","children":[]}],"git":{"createdTime":1695484404000,"updatedTime":1702910488000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.8,"words":239},"filePathRelative":"dataBase/mysql/install/dockerInstall.md","localizedDate":"2021年5月14日","excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>下面示例创建的mysql实例其数据都在容器内部存储，容器删除数据就没了，所以如果要保存数据要考虑挂载容器</p>\\n</div>\\n<h2>docker部署mysql</h2>\\n<p>拉取镜像</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code>docker pull mysql\\n</code></pre></div>","autoDesc":true}');export{u as comp,m as data};
