import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o,c,a as n,d as s,e as t,b as i}from"./app-qB9_Bjjp.js";const l={},r=i(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>Windows 服务是一种在后台运行的应用程序，它可以在系统启动时自动启动，并且以系统级别权限运行。Windows 服务是基于Windows操作系统的服务控制管理器（Service Control Manager）进行管理的。开发者可以使用编程语言（如C#、C++等）编写Windows服务，然后通过安装到操作系统中来实现长期运行和提供某种功能。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="获取进程对应的服务名" tabindex="-1"><a class="header-anchor" href="#获取进程对应的服务名"><span>获取进程对应的服务名</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> host<span class="token punctuation">.</span><span class="token function">StartAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> processId <span class="token operator">=</span> Process<span class="token punctuation">.</span><span class="token function">GetCurrentProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Id<span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> query <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;SELECT * FROM Win32_Service WHERE ProcessId = </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">processId</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> searcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ManagementObjectSearcher</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> services <span class="token operator">=</span> searcher<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> serviceName <span class="token operator">=</span> services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Cast</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ManagementObject<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>s <span class="token operator">=&gt;</span> s<span class="token punctuation">[</span><span class="token string">&quot;Name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;The service name is </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">serviceName</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> host<span class="token punctuation">.</span><span class="token function">WaitForShutdownAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意，必须在调用 host.StartAsync 之后才能获取与当前进程对应的 Windows 服务。</p>`,6),u={href:"https://mp.weixin.qq.com/s/hQJlYZZRTrtaJKSZ5UVS5Q",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"资料",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#资料"},[n("span",null,"资料")])],-1),d={href:"https://mp.weixin.qq.com/s/ZXKEGNNQ1Z9Vrm6zRBolUg",target:"_blank",rel:"noopener noreferrer"},m={href:"https://mp.weixin.qq.com/s/C90gf18kxvQ4TeTlcwvbGA",target:"_blank",rel:"noopener noreferrer"},h={href:"https://mp.weixin.qq.com/s/upIraVWSu4hgwSuqqLHm0g",target:"_blank",rel:"noopener noreferrer"},g=n("p",null,"https://mp.weixin.qq.com/s/bH2f6Tjy_MX51flXxKTgFw | 使用.NET Core创建Windows服务",-1);function v(w,f){const a=p("ExternalLinkIcon");return o(),c("div",null,[r,n("blockquote",null,[n("p",null,[s("参考资料："),n("a",u,[s("https://mp.weixin.qq.com/s/hQJlYZZRTrtaJKSZ5UVS5Q"),t(a)])])]),k,n("p",null,[n("a",d,[s("https://mp.weixin.qq.com/s/ZXKEGNNQ1Z9Vrm6zRBolUg"),t(a)]),s(" | .NET 6 中将 ASP.NET Core 注册成 Windows Service "),n("a",m,[s("https://mp.weixin.qq.com/s/C90gf18kxvQ4TeTlcwvbGA"),t(a)]),s(" | .NET 实现启动时重定向程序运行路径及 Windows 服务运行模式部署 "),n("a",h,[s("https://mp.weixin.qq.com/s/upIraVWSu4hgwSuqqLHm0g"),t(a)]),s(" | .NET Worker Service 作为 Windows 服务运行及优雅退出改进")]),g])}const b=e(l,[["render",v],["__file","index.html.vue"]]),q=JSON.parse('{"path":"/dotnet/windowsservice/","title":"说明","lang":"zh-CN","frontmatter":{"title":"说明","lang":"zh-CN","date":"2023-10-17T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"readme","slug":"pte11ylgp6brdsao","docsId":"132667194","description":"概述 Windows 服务是一种在后台运行的应用程序，它可以在系统启动时自动启动，并且以系统级别权限运行。Windows 服务是基于Windows操作系统的服务控制管理器（Service Control Manager）进行管理的。开发者可以使用编程语言（如C#、C++等）编写Windows服务，然后通过安装到操作系统中来实现长期运行和提供某种功能。 ...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/windowsservice/"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"说明"}],["meta",{"property":"og:description","content":"概述 Windows 服务是一种在后台运行的应用程序，它可以在系统启动时自动启动，并且以系统级别权限运行。Windows 服务是基于Windows操作系统的服务控制管理器（Service Control Manager）进行管理的。开发者可以使用编程语言（如C#、C++等）编写Windows服务，然后通过安装到操作系统中来实现长期运行和提供某种功能。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-25T13:43:35.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-25T13:43:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"说明\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-25T13:43:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"获取进程对应的服务名","slug":"获取进程对应的服务名","link":"#获取进程对应的服务名","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1700919815000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":1.01,"words":304},"filePathRelative":"dotnet/windowsservice/readme.md","localizedDate":"2023年10月17日","excerpt":"<h2>概述</h2>\\n<p>Windows 服务是一种在后台运行的应用程序，它可以在系统启动时自动启动，并且以系统级别权限运行。Windows 服务是基于Windows操作系统的服务控制管理器（Service Control Manager）进行管理的。开发者可以使用编程语言（如C#、C++等）编写Windows服务，然后通过安装到操作系统中来实现长期运行和提供某种功能。</p>\\n<h2>操作</h2>\\n<h3>获取进程对应的服务名</h3>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token keyword\\">await</span> host<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">StartAsync</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> processId <span class=\\"token operator\\">=</span> Process<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetCurrentProcess</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>Id<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> query <span class=\\"token operator\\">=</span> <span class=\\"token interpolation-string\\"><span class=\\"token string\\">$\\"SELECT * FROM Win32_Service WHERE ProcessId = </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span><span class=\\"token expression language-csharp\\">processId</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> searcher <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">ManagementObjectSearcher</span><span class=\\"token punctuation\\">(</span>query<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> services <span class=\\"token operator\\">=</span> searcher<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Get</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> serviceName <span class=\\"token operator\\">=</span> services<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Cast</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span>ManagementObject<span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Select</span><span class=\\"token punctuation\\">(</span>s <span class=\\"token operator\\">=&gt;</span> s<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"Name\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">FirstOrDefault</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nlogger<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">LogInformation</span><span class=\\"token punctuation\\">(</span><span class=\\"token interpolation-string\\"><span class=\\"token string\\">$\\"The service name is </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span><span class=\\"token expression language-csharp\\">serviceName</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">await</span> host<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WaitForShutdownAsync</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{b as comp,q as data};
