import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as t}from"./app-Bfb6-vFH.js";const e={},p=t(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>StackExchange.Redis通过使用异步方法和IO多路复用等技术，提高了Redis访问的性能和并发性。它还提供了丰富的功能和选项，如连接池、管道、事务、发布/订阅、Lua脚本等，支持多种序列化和压缩方式，可以轻松地与其他.NET应用程序集成。 StackExchange.Redis还支持Redis Sentinel和Redis Cluster等高可用性和集群方案，使得应用程序可以更容易地管理和扩展Redis实例。因此，它是.NET平台上访问Redis的首选客户端库之一。</p><h2 id="调优" tabindex="-1"><a class="header-anchor" href="#调优"><span>调优</span></a></h2><p>解决改为异步处理后执行速度有点慢的情况。 StackExchange.Redis 2.0已经从重构了异步队列，使用管道方式解决异步慢的问题。如果发现还有问题，可以试试添加如下代码：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>ConnectionMultiplexer<span class="token punctuation">.</span><span class="token function">SetFeatureFlag</span><span class="token punctuation">(</span><span class="token string">&quot;preventthreadtheft&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="错误" tabindex="-1"><a class="header-anchor" href="#错误"><span>错误</span></a></h2><h3 id="超时问题" tabindex="-1"><a class="header-anchor" href="#超时问题"><span>超时问题</span></a></h3><p>错误信息</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>One <span class="token keyword">or</span> more errors occurred<span class="token punctuation">.</span> <span class="token punctuation">(</span>Timeout performing <span class="token class-name">GET</span> CR360<span class="token punctuation">:</span>crcontentkey<span class="token punctuation">:</span>not_valid_visit_record_state_ids <span class="token punctuation">(</span>5000ms<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">inst</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">qs</span><span class="token punctuation">:</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">914</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">serverEndpoint</span><span class="token punctuation">:</span> Unspecified<span class="token operator">/</span>view360<span class="token operator">-</span>redis<span class="token punctuation">:</span><span class="token number">6379</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">mgr</span><span class="token punctuation">:</span> <span class="token number">10</span> of <span class="token number">10</span> available<span class="token punctuation">,</span> <span class="token named-parameter punctuation">clientName</span><span class="token punctuation">:</span> view360<span class="token operator">-</span>be<span class="token operator">-</span>755f6bc5f6<span class="token operator">-</span>btp9d<span class="token punctuation">,</span> <span class="token named-parameter punctuation">IOCP</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>Busy<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>Free<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span>Min<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>Max<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">WORKER</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>Busy<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">,</span>Free<span class="token operator">=</span><span class="token number">32727</span><span class="token punctuation">,</span>Min<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>Max<span class="token operator">=</span><span class="token number">32767</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">v</span><span class="token punctuation">:</span> <span class="token number">2.0</span><span class="token number">.519</span><span class="token number">.65453</span> <span class="token punctuation">(</span>Please take a look at <span class="token keyword">this</span> article <span class="token keyword">for</span> some common client<span class="token operator">-</span>side issues that can <span class="token class-name">cause</span> timeouts<span class="token punctuation">:</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>stackexchange<span class="token punctuation">.</span>github<span class="token punctuation">.</span>io<span class="token operator">/</span>StackExchange<span class="token punctuation">.</span>Redis<span class="token operator">/</span>Timeouts<span class="token punctuation">)</span><span class="token punctuation">)</span>Timeout performing GET CR360
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>有问题的组件包版本：2.0.519 解决方案： 更新包版本到：2.2.50 出现的原因：工作线程比较多 模拟场景：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">// ThreadPool.SetMinThreads(200, 200);</span>
 <span class="token class-name"><span class="token keyword">var</span></span> ts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Task<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     <span class="token class-name"><span class="token keyword">var</span></span> a <span class="token operator">=</span> i<span class="token punctuation">;</span>
     <span class="token class-name"><span class="token keyword">var</span></span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Task</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
     <span class="token punctuation">{</span>
         <span class="token class-name"><span class="token keyword">var</span></span> l <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Context<span class="token punctuation">.</span><span class="token function">TryGetLock</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         Trace<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">a</span><span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">l<span class="token operator">!=</span> <span class="token keyword">null</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token class-name"><span class="token keyword">int</span></span> workerThreads<span class="token punctuation">,</span> completionPortThreads<span class="token punctuation">;</span>
         ThreadPool<span class="token punctuation">.</span><span class="token function">GetAvailableThreads</span><span class="token punctuation">(</span><span class="token keyword">out</span> workerThreads<span class="token punctuation">,</span> <span class="token keyword">out</span> completionPortThreads<span class="token punctuation">)</span><span class="token punctuation">;</span>
         Trace<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Available: WorkerThreads: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">workerThreads</span><span class="token punctuation">}</span></span><span class="token string">, CompletionPortThreads: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">completionPortThreads</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     t<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

     ts<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

 Task<span class="token punctuation">.</span><span class="token function">WaitAll</span><span class="token punctuation">(</span>ts<span class="token punctuation">.</span><span class="token function">ToArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>问题复现了，就是提示类似错误，把注释ThreadPool.SetMinThreads(200, 200);开启，问题消除。</p>`,12),o=[p];function c(i,l){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","shuiming.html.vue"]]),d=JSON.parse('{"path":"/dataBase/redis/zujian/stackexchange/shuiming.html","title":"说明","lang":"zh-CN","frontmatter":{"title":"说明","lang":"zh-CN","date":"2023-09-02T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"filename":"shuiming","slug":"wtfwe4","docsId":"29714473","description":"概述 StackExchange.Redis通过使用异步方法和IO多路复用等技术，提高了Redis访问的性能和并发性。它还提供了丰富的功能和选项，如连接池、管道、事务、发布/订阅、Lua脚本等，支持多种序列化和压缩方式，可以轻松地与其他.NET应用程序集成。 StackExchange.Redis还支持Redis Sentinel和Redis Clus...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/redis/zujian/stackexchange/shuiming.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"说明"}],["meta",{"property":"og:description","content":"概述 StackExchange.Redis通过使用异步方法和IO多路复用等技术，提高了Redis访问的性能和并发性。它还提供了丰富的功能和选项，如连接池、管道、事务、发布/订阅、Lua脚本等，支持多种序列化和压缩方式，可以轻松地与其他.NET应用程序集成。 StackExchange.Redis还支持Redis Sentinel和Redis Clus..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-23T15:53:24.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-23T15:53:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"说明\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-23T15:53:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"调优","slug":"调优","link":"#调优","children":[]},{"level":2,"title":"错误","slug":"错误","link":"#错误","children":[{"level":3,"title":"超时问题","slug":"超时问题","link":"#超时问题","children":[]}]}],"git":{"createdTime":1695484404000,"updatedTime":1695484404000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.48,"words":443},"filePathRelative":"dataBase/redis/zujian/stackexchange/shuiming.md","localizedDate":"2023年9月2日","excerpt":"<h2>概述</h2>\\n<p>StackExchange.Redis通过使用异步方法和IO多路复用等技术，提高了Redis访问的性能和并发性。它还提供了丰富的功能和选项，如连接池、管道、事务、发布/订阅、Lua脚本等，支持多种序列化和压缩方式，可以轻松地与其他.NET应用程序集成。\\nStackExchange.Redis还支持Redis Sentinel和Redis Cluster等高可用性和集群方案，使得应用程序可以更容易地管理和扩展Redis实例。因此，它是.NET平台上访问Redis的首选客户端库之一。</p>\\n<h2>调优</h2>\\n<p>解决改为异步处理后执行速度有点慢的情况。\\nStackExchange.Redis 2.0已经从重构了异步队列，使用管道方式解决异步慢的问题。如果发现还有问题，可以试试添加如下代码：</p>","autoDesc":true}');export{k as comp,d as data};
