import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as e,c as o,a as n,d as s,e as c,b as l}from"./app-DMmdIwn0.js";const i={},u=l(`<p>这里用的是 DataStax 提供的 <strong>CassandraCSharpDriver</strong> 客户端。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="写入" tabindex="-1"><a class="header-anchor" href="#写入"><span>写入</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> cluster <span class="token operator">=</span> Cassandra<span class="token punctuation">.</span>Cluster<span class="token punctuation">.</span><span class="token function">Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">AddContactPoints</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">WithDefaultKeyspace</span><span class="token punctuation">(</span><span class="token string">&quot;messaging&quot;</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> inqId <span class="token operator">=</span> <span class="token string">&quot;xxxxxx&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> sendTime <span class="token operator">=</span> DateTimeOffset<span class="token punctuation">.</span>UtcNow<span class="token punctuation">.</span><span class="token function">ToUnixTimeMilliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> senderId <span class="token operator">=</span> <span class="token string">&quot;xxxx&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> senderRole <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> msgType <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> msgBody <span class="token operator">=</span> <span class="token string">&quot;zzzz&quot;</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">string</span></span> INSERT_SQL <span class="token operator">=</span> <span class="token string">@&quot; INSERT INTO messages(inq_id, send_time, sender_id, sender_role, msg_type, msg_body)
VALUES (?, ?, ?, ?, ?, ?) &quot;</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> session <span class="token operator">=</span> cluster<span class="token punctuation">.</span><span class="token function">Connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> stmt <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">Prepare</span><span class="token punctuation">(</span>INSERT_SQL<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span>inqId<span class="token punctuation">,</span> sendTime<span class="token punctuation">,</span> senderId<span class="token punctuation">,</span> senderRole<span class="token punctuation">,</span> msgType<span class="token punctuation">,</span> msgBody<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

session<span class="token punctuation">.</span><span class="token function">Execute</span><span class="token punctuation">(</span>stmt<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="读取" tabindex="-1"><a class="header-anchor" href="#读取"><span>读取</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> cluster <span class="token operator">=</span> Cassandra<span class="token punctuation">.</span>Cluster<span class="token punctuation">.</span><span class="token function">Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">AddContactPoints</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">WithDefaultKeyspace</span><span class="token punctuation">(</span><span class="token string">&quot;messaging&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> inqId <span class="token operator">=</span> <span class="token string">&quot;xxxxxx&quot;</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">string</span></span> GET_MSG_SQL <span class="token operator">=</span> <span class="token string">@&quot; SELECT * FROM messages WHERE inq_id = ? &quot;</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> session <span class="token operator">=</span> cluster<span class="token punctuation">.</span><span class="token function">Connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> stmt <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">Prepare</span><span class="token punctuation">(</span>GET_MSG_SQL<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span>inqId<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> rowset <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">Execute</span><span class="token punctuation">(</span>stmt<span class="token punctuation">)</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;患者\\t\\t\\t\\t\\t医生&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> row <span class="token keyword">in</span> rowset<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// 解析从 cassandra 中返回的行</span>
    <span class="token class-name"><span class="token keyword">var</span></span> msg_body <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetValue</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;msg_body&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> sender_role <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetValue</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">sbyte</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;sender_role&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>sender_role <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">msg_body</span><span class="token punctuation">}</span></span><span class="token string">\\t\\t\\t\\t\\t&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;\\t\\t\\t\\t\\t</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">msg_body</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2>`,7),r={href:"https://mp.weixin.qq.com/s/xY3jE079iwPksnMZzMt72w",target:"_blank",rel:"noopener noreferrer"};function k(d,m){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,n("blockquote",null,[n("p",null,[s("聊一聊关于聊天记录的存储："),n("a",r,[s("https://mp.weixin.qq.com/s/xY3jE079iwPksnMZzMt72w"),c(a)])])])])}const b=t(i,[["render",k],["__file","jibencaozuo.html.vue"]]),h=JSON.parse('{"path":"/dataBase/cassandra/jibencaozuo.html","title":"基本操作","lang":"zh-CN","frontmatter":{"title":"基本操作","lang":"zh-CN","date":"2021-07-14T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"filename":"jibencaozuo","slug":"xyk7pt","docsId":"49028245","description":"这里用的是 DataStax 提供的 CassandraCSharpDriver 客户端。 操作 写入 读取 参考文档 聊一聊关于聊天记录的存储：https://mp.weixin.qq.com/s/xY3jE079iwPksnMZzMt72w","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/cassandra/jibencaozuo.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"基本操作"}],["meta",{"property":"og:description","content":"这里用的是 DataStax 提供的 CassandraCSharpDriver 客户端。 操作 写入 读取 参考文档 聊一聊关于聊天记录的存储：https://mp.weixin.qq.com/s/xY3jE079iwPksnMZzMt72w"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-23T15:53:24.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2021-07-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-23T15:53:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基本操作\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-07-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-23T15:53:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"写入","slug":"写入","link":"#写入","children":[]},{"level":3,"title":"读取","slug":"读取","link":"#读取","children":[]}]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1695484404000,"updatedTime":1695484404000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.7,"words":209},"filePathRelative":"dataBase/cassandra/jibencaozuo.md","localizedDate":"2021年7月14日","excerpt":"<p>这里用的是 DataStax 提供的&nbsp;<strong>CassandraCSharpDriver</strong>&nbsp;客户端。</p>\\n<h2>操作</h2>\\n<h3>写入</h3>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> cluster <span class=\\"token operator\\">=</span> Cassandra<span class=\\"token punctuation\\">.</span>Cluster<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Builder</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n                        <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AddContactPoints</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"127.0.0.1\\"</span><span class=\\"token punctuation\\">)</span>\\n                        <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WithDefaultKeyspace</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"messaging\\"</span><span class=\\"token punctuation\\">)</span>\\n                        <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Build</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> inqId <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"xxxxxx\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> sendTime <span class=\\"token operator\\">=</span> DateTimeOffset<span class=\\"token punctuation\\">.</span>UtcNow<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ToUnixTimeMilliseconds</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> senderId <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"xxxx\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> senderRole <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> msgType <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> msgBody <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"zzzz\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">string</span></span> INSERT_SQL <span class=\\"token operator\\">=</span> <span class=\\"token string\\">@\\" INSERT INTO messages(inq_id, send_time, sender_id, sender_role, msg_type, msg_body)\\nVALUES (?, ?, ?, ?, ?, ?) \\"</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> session <span class=\\"token operator\\">=</span> cluster<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Connect</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> stmt <span class=\\"token operator\\">=</span> session<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Prepare</span><span class=\\"token punctuation\\">(</span>INSERT_SQL<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Bind</span><span class=\\"token punctuation\\">(</span>inqId<span class=\\"token punctuation\\">,</span> sendTime<span class=\\"token punctuation\\">,</span> senderId<span class=\\"token punctuation\\">,</span> senderRole<span class=\\"token punctuation\\">,</span> msgType<span class=\\"token punctuation\\">,</span> msgBody<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\nsession<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Execute</span><span class=\\"token punctuation\\">(</span>stmt<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{b as comp,h as data};
