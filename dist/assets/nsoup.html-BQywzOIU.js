import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-vSdX8vi3.js";const p={},e=t(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>操作html的工具</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="获取文本" tabindex="-1"><a class="header-anchor" href="#获取文本"><span>获取文本</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> nsoup <span class="token operator">=</span> NSoup<span class="token punctuation">.</span>NSoupClient<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>htmltxt<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> str <span class="token operator">=</span> nsoup<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符串操作" tabindex="-1"><a class="header-anchor" href="#字符串操作"><span>字符串操作</span></a></h3><p>通过NSoup.Standard组件来实现将html格式的字符串转html，然后可以使用html的方法操作字符串。</p><p>使用场景</p><ul><li>循环所有元素，对执行元素执行匿名化</li><li>获取指定标签内容</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 获取Html字符串中指定标签的指定属性的值</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>html<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Html字符<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>指定标签名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>attr<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>指定属性名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetHtmlAttr</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> html<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> tag<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> attr<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Regex</span> re <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string">&quot;(&lt;&quot;</span> <span class="token operator">+</span> tag <span class="token operator">+</span> <span class="token string">@&quot;[\\w\\W].+?&gt;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> imgreg <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token function">Matches</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> m_Attributes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Regex</span> attrReg <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string">@&quot;([a-zA-Z1-9_-]+)\\s*=\\s*(\\x27|\\x22)([^\\x27\\x22]*)(\\x27|\\x22)&quot;</span><span class="token punctuation">,</span> RegexOptions<span class="token punctuation">.</span>IgnoreCase<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> imgreg<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">MatchCollection</span> matchs <span class="token operator">=</span> attrReg<span class="token punctuation">.</span><span class="token function">Matches</span><span class="token punctuation">(</span>imgreg<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> matchs<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">GroupCollection</span> groups <span class="token operator">=</span> matchs<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>Groups<span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Equals</span><span class="token punctuation">(</span>attr<span class="token punctuation">,</span> groups<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value<span class="token punctuation">,</span> StringComparison<span class="token punctuation">.</span>CurrentCultureIgnoreCase<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                m_Attributes<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>groups<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> m_Attributes<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[e];function c(l,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","nsoup.html.vue"]]),d=JSON.parse('{"path":"/middleware/office/nsoup.html","title":"NSoup","lang":"zh-CN","frontmatter":{"title":"NSoup","lang":"zh-CN","date":"2023-10-18T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"nsoup","slug":"vgns7g","docsId":"67741047","description":"概述 操作html的工具 操作 获取文本 字符串操作 通过NSoup.Standard组件来实现将html格式的字符串转html，然后可以使用html的方法操作字符串。 使用场景 循环所有元素，对执行元素执行匿名化 获取指定标签内容","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/office/nsoup.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"NSoup"}],["meta",{"property":"og:description","content":"概述 操作html的工具 操作 获取文本 字符串操作 通过NSoup.Standard组件来实现将html格式的字符串转html，然后可以使用html的方法操作字符串。 使用场景 循环所有元素，对执行元素执行匿名化 获取指定标签内容"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"NSoup\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-18T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"获取文本","slug":"获取文本","link":"#获取文本","children":[]},{"level":3,"title":"字符串操作","slug":"字符串操作","link":"#字符串操作","children":[]}]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.84,"words":251},"filePathRelative":"middleware/office/nsoup.md","localizedDate":"2023年10月18日","excerpt":"<h2>概述</h2>\\n<p>操作html的工具</p>\\n<h2>操作</h2>\\n<h3>获取文本</h3>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> nsoup <span class=\\"token operator\\">=</span> NSoup<span class=\\"token punctuation\\">.</span>NSoupClient<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Parse</span><span class=\\"token punctuation\\">(</span>htmltxt<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> str <span class=\\"token operator\\">=</span> nsoup<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Text</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
