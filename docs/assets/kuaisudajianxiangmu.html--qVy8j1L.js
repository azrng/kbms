import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as i,b as n,e as s,f as t,d as e}from"./app-Bfb6-vFH.js";const l="/kbms/common/1651303351185-79194594-6ce2-4469-96b7-43151af5237e.png",u="/kbms/common/1651306115060-07c9bb35-636e-4e40-987b-6941b2d5a386.png",r="/kbms/common/1651307074673-76d24686-57bf-41ed-b3ac-ded9469782a2.png",d="/kbms/common/1651307538598-b7045ec0-904e-4de5-99ca-ed66027c0bc0.png",k={},v=e('<blockquote><p>以下的项目示例都是基于IdentityServer4 「4.x」版本以上进行说明。 示例环境：VS2022+.Net6 本文内容模仿自：公众号【元说技术】</p></blockquote><h2 id="_1-快速搭建项目" tabindex="-1"><a class="header-anchor" href="#_1-快速搭建项目"><span>1. 快速搭建项目</span></a></h2><h3 id="_1-1-创建项目" tabindex="-1"><a class="header-anchor" href="#_1-1-创建项目"><span>1.1 创建项目</span></a></h3><p>建立一个空的Asp.Net Core项目(AuthCenterInMemory) ，使用Empty空模板 <img src="'+l+`" alt="image.png" loading="lazy"></p><h3 id="_1-2-安装配置" tabindex="-1"><a class="header-anchor" href="#_1-2-安装配置"><span>1.2 安装配置</span></a></h3><h4 id="_1-2-1-安装组件" tabindex="-1"><a class="header-anchor" href="#_1-2-1-安装组件"><span>1.2.1 安装组件</span></a></h4><ul><li>命令行安装安装</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>NuGet<span class="token operator">&gt;</span>Install<span class="token operator">-</span>Package IdentityServer4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>通过包管理器安装</li></ul><p>添加IdentityServer4包</p><p>安装结果</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;IdentityServer4&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;4.1.2&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-2-2-配置管道" tabindex="-1"><a class="header-anchor" href="#_1-2-2-配置管道"><span>1.2.2 配置管道</span></a></h4><p>如果是.Net6以下：「修改Configure方法，注入到容器」 .Net6直接修改Program文件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>app<span class="token punctuation">.</span><span class="token function">UseIdentityServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_1-2-3-配置内容" tabindex="-1"><a class="header-anchor" href="#_1-2-3-配置内容"><span>1.2.3 配置内容</span></a></h4><p>「将服务注入到容器后，还需要对IdentityServce进行配置内容」</p><blockquote><ul><li>哪些API需要Authorization Server进行资源保护</li><li>哪些Client可以使用这个Authorization Server</li><li>哪些User可以被这个AuthorizationServer识别并授权</li><li>哪些资源可以指定作用域</li></ul></blockquote><p>这里方便演示，直接以静态化的形式展示，实际开发应用中，可结合数据库或reidis缓存的数据持久化方式获取。 建立配置内容文件IdentityConfig.cs（具体的 OpenID Connect 配置信息来源文件）</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">IdentityConfig</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 资源</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>IdentityResource<span class="token punctuation">&gt;</span></span> IdentityResources <span class="token operator">=&gt;</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">IdentityResource<span class="token punctuation">[</span><span class="token punctuation">]</span></span>
        <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">IdentityResources<span class="token punctuation">.</span>OpenId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">IdentityResources<span class="token punctuation">.</span>Profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// Authorization Server保护了哪些 API Scope（作用域）</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>ApiScope<span class="token punctuation">&gt;</span></span> <span class="token function">GetApiScopes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ApiScope</span><span class="token punctuation">(</span><span class="token string">&quot;ApiScope1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ApiScope1DisplayName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 哪些客户端 Client（应用） 可以使用这个 Authorization Server</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>Client<span class="token punctuation">&gt;</span></span> <span class="token function">GetClients</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Client</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                ClientId <span class="token operator">=</span> <span class="token string">&quot;ConsoleApp1&quot;</span><span class="token punctuation">,</span> <span class="token comment">//客户端的标识，要是唯一的</span>
                ClientSecrets <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Secret</span><span class="token punctuation">(</span><span class="token string">&quot;secrets&quot;</span><span class="token punctuation">.</span><span class="token function">Sha256</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//客户端密码，进行了加密</span>
                AllowedGrantTypes <span class="token operator">=</span>
                    GrantTypes
                        <span class="token punctuation">.</span>ClientCredentials<span class="token punctuation">,</span> <span class="token comment">//授权方式，这里采用的是客户端认证模式，只要ClientId，以及ClientSecrets正确即可访问对应的AllowedScopes里面的api资源</span>
                AllowedScopes <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token string">&quot;ApiScope1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//定义这个客户端可以访问的APi资源数组，上面只有一个api</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 哪些User可以被这个AuthorizationServer识别并授权</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>TestUser<span class="token punctuation">&gt;</span></span> <span class="token function">GetTestUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TestUser</span>
            <span class="token punctuation">{</span>
                SubjectId <span class="token operator">=</span> <span class="token string">&quot;001&quot;</span><span class="token punctuation">,</span>
                Username <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
                Password <span class="token operator">=</span> <span class="token string">&quot;123456&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-2-4-添加配置服务" tabindex="-1"><a class="header-anchor" href="#_1-2-4-添加配置服务"><span>1.2.4 添加配置服务</span></a></h4><p>如果是.Net6以下：「在Startup.cs文件，ConfigureServices方法中」 .Net6直接修改Program文件为</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">AuthCenterInMemory</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> WebApplication<span class="token punctuation">.</span><span class="token function">CreateBuilder</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>

builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddIdentityServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddDeveloperSigningCredential</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddTestUsers</span><span class="token punctuation">(</span>IdentityConfig<span class="token punctuation">.</span><span class="token function">GetTestUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddInMemoryClients</span><span class="token punctuation">(</span>IdentityConfig<span class="token punctuation">.</span><span class="token function">GetClients</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddInMemoryApiScopes</span><span class="token punctuation">(</span>IdentityConfig<span class="token punctuation">.</span><span class="token function">GetApiScopes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> app <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">MapGet</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">UseIdentityServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>我们现在是本地调试，可以告诉identity server4在程序的运行时候对这项工作进行设定: AddDeveloperSigningCredential()，它默认会存到硬盘上的， 所以每次重启服务不会破坏开发时的数据同步。这个方法只适合用于identity server4在单个机器运行， 如果是 production 你得使用AddSigningCredential()这个方法</p></blockquote><p>以上操作完成后， 启动项目，通过它的 .well-known 端点来访问服务器的配置信息，在浏览器的地址栏中，输入地址：http://localhost:Port/.well-known/openid-configuration，并回车。应该可以看到如下的响应信息。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">{</span>
    <span class="token string">&quot;issuer&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://localhost:5014&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;jwks_uri&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://localhost:5014/.well-known/openid-configuration/jwks&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;authorization_endpoint&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://localhost:5014/connect/authorize&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;token_endpoint&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://localhost:5014/connect/token&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;userinfo_endpoint&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://localhost:5014/connect/userinfo&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;end_session_endpoint&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://localhost:5014/connect/endsession&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;check_session_iframe&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://localhost:5014/connect/checksession&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;revocation_endpoint&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://localhost:5014/connect/revocation&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;introspection_endpoint&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://localhost:5014/connect/introspect&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;device_authorization_endpoint&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://localhost:5014/connect/deviceauthorization&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;frontchannel_logout_supported&quot;</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token string">&quot;frontchannel_logout_session_supported&quot;</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token string">&quot;backchannel_logout_supported&quot;</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token string">&quot;backchannel_logout_session_supported&quot;</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token string">&quot;scopes_supported&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;ApiScope1&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;offline_access&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&quot;claims_supported&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&quot;grant_types_supported&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;authorization_code&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;client_credentials&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;refresh_token&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;implicit&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;urn:ietf:params:oauth:grant-type:device_code&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&quot;response_types_supported&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;code&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;token&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;id_token&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;id_token token&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;code id_token&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;code token&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;code id_token token&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&quot;response_modes_supported&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;form_post&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;query&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;fragment&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&quot;token_endpoint_auth_methods_supported&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;client_secret_basic&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;client_secret_post&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&quot;id_token_signing_alg_values_supported&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;RS256&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&quot;subject_types_supported&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;public&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&quot;code_challenge_methods_supported&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;plain&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;S256&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&quot;request_parameter_supported&quot;</span><span class="token punctuation">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-获取token" tabindex="-1"><a class="header-anchor" href="#_1-3-获取token"><span>1.3 获取Token</span></a></h3><h4 id="_1-3-1-启动项目" tabindex="-1"><a class="header-anchor" href="#_1-3-1-启动项目"><span>1.3.1 启动项目</span></a></h4><h4 id="_1-3-2-测试访问地址" tabindex="-1"><a class="header-anchor" href="#_1-3-2-测试访问地址"><span>1.3.2 测试访问地址</span></a></h4>`,29),m={href:"http://localhost:5050/connect/token",target:"_blank",rel:"noopener noreferrer"},b=e('<p>body参数：application/x-www-form-urlencoded (post) <img src="'+u+`" alt="image.png" loading="lazy"> 对应的RestSharp代码</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RestClient</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:5014/connect/token&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
client<span class="token punctuation">.</span>Timeout <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RestRequest</span><span class="token punctuation">(</span>Method<span class="token punctuation">.</span>POST<span class="token punctuation">)</span><span class="token punctuation">;</span>
request<span class="token punctuation">.</span><span class="token function">AddParameter</span><span class="token punctuation">(</span><span class="token string">&quot;client_id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ConsoleApp1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
request<span class="token punctuation">.</span><span class="token function">AddParameter</span><span class="token punctuation">(</span><span class="token string">&quot;client_secret&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;secrets&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
request<span class="token punctuation">.</span><span class="token function">AddParameter</span><span class="token punctuation">(</span><span class="token string">&quot;grant_type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;client_credentials&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">IRestResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">Execute</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>Content<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回结果</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">{</span>
    <span class="token string">&quot;access_token&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;eyJhbGciOiJSUzI1NiIsImtpZCI6IjA1RjgyNTYyNUU3QTU3NzQyQTAzNTU1Mzg2Mzc4NzhCIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NTEzMDYwNTEsImV4cCI6MTY1MTMwOTY1MSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDE0IiwiY2xpZW50X2lkIjoiQ29uc29sZUFwcDEiLCJqdGkiOiIzNTZGQjg3MThBREY2Q0M0QzY1Njg4NTE3Q0VFN0U2QSIsImlhdCI6MTY1MTMwNjA1MSwic2NvcGUiOlsiQXBpU2NvcGUxIl19.Q_0IyrJ8g6vQ3bm7dwyomfgbPb2iQ3wjZulbCqEKC1A9q5RmLrL2YqeZX4QXbpuBMe3axhDoWvFDmUqp-cwMNx_kZPpPiWn7o1xj4sIxGG6oG9_wD1wCycDZwCj3J8ARDgOCrvwUPfkQ8qtu-QHCbU99_gXxWup2G5pNH7mTUtB2HyY06PDlqO07UwG-rUQUWLmi-KEvH5Sx_OeIfOgCBrsUeU7VLMVAavWKKUV2hfoLVWY6Bu4RO7TbTkNKzoCMcDnwnTdpdATz-rGpyvBTVDuXoHOaQH5JDkseT0Gv6tHGUjN6clJhwXUOjmF2NOlo1jTSfnrXP1xftnT0oS_Mfg&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;expires_in&quot;</span><span class="token punctuation">:</span> <span class="token number">3600</span><span class="token punctuation">,</span>
    <span class="token string">&quot;token_type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Bearer&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;scope&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;ApiScope1&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-3-access-token" tabindex="-1"><a class="header-anchor" href="#_2-3-3-access-token"><span>2.3.3 Access_Token</span></a></h4><p>将上面的内容进行解码</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//头部</span>
<span class="token punctuation">{</span>
  <span class="token string">&quot;alg&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;RS256&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;kid&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;05F825625E7A57742A0355538637878B&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;typ&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;at+jwt&quot;</span>
<span class="token punctuation">}</span>

<span class="token comment">//载荷</span>
<span class="token punctuation">{</span>
  <span class="token string">&quot;nbf&quot;</span><span class="token punctuation">:</span> <span class="token number">1651306051</span><span class="token punctuation">,</span>
  <span class="token string">&quot;exp&quot;</span><span class="token punctuation">:</span> <span class="token number">1651309651</span><span class="token punctuation">,</span>
  <span class="token string">&quot;iss&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://localhost:5014&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;client_id&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;ConsoleApp1&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;jti&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;356FB8718ADF6CC4C65688517CEE7E6A&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;iat&quot;</span><span class="token punctuation">:</span> <span class="token number">1651306051</span><span class="token punctuation">,</span>
  <span class="token string">&quot;scope&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;ApiScope1&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-ui界面" tabindex="-1"><a class="header-anchor" href="#_2-ui界面"><span>2. UI界面</span></a></h2><p>考虑IdentityServer4需要进行管理查看，添加页面管理界面 官方为我们提供了一个快速启动的UI界面，我们只需要下载下来即可，这里有两个方法</p><h3 id="_2-1-quickstart-ui界面" tabindex="-1"><a class="header-anchor" href="#_2-1-quickstart-ui界面"><span>2.1 QuickStart UI界面</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token number">1</span>、直接从这个地址下来下载，拷贝到项目中，一共三个文件夹；<span class="token comment">// https://github.com/IdentityServer/IdentityServer4.Quickstart.UI</span>

<span class="token number">2</span>、在当前文件夹中执行命令，自动下载；

iex <span class="token punctuation">(</span><span class="token punctuation">(</span>New<span class="token operator">-</span>Object System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>WebClient<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">DownloadString</span><span class="token punctuation">(</span>&#39;https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>raw<span class="token punctuation">.</span>githubusercontent<span class="token punctuation">.</span>com<span class="token operator">/</span>IdentityServer<span class="token operator">/</span>IdentityServer4<span class="token punctuation">.</span>Quickstart<span class="token punctuation">.</span>UI<span class="token operator">/</span>master<span class="token operator">/</span>getmaster<span class="token punctuation">.</span>ps1&#39;<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-默认目录" tabindex="-1"><a class="header-anchor" href="#_2-2-默认目录"><span>2.2 默认目录</span></a></h3><p><img src="`+r+`" alt="image.png" loading="lazy"> 下载完官方提供的默认UI界面后，会提供默认的三个目录文件夹分别为：Quickstart (控制器方法)、Views(视图)、wwwroot (静态文件)</p><h3 id="_2-3-修改配置" tabindex="-1"><a class="header-anchor" href="#_2-3-修改配置"><span>2.3 修改配置</span></a></h3><p>配置中间件来使用静态文件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>app<span class="token punctuation">.</span><span class="token function">UseStaticFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>完整配置变成</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">AuthCenterInMemory</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> WebApplication<span class="token punctuation">.</span><span class="token function">CreateBuilder</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>

builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddControllersWithViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddIdentityServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddDeveloperSigningCredential</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddTestUsers</span><span class="token punctuation">(</span>IdentityConfig<span class="token punctuation">.</span><span class="token function">GetTestUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddInMemoryClients</span><span class="token punctuation">(</span>IdentityConfig<span class="token punctuation">.</span><span class="token function">GetClients</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddInMemoryApiScopes</span><span class="token punctuation">(</span>IdentityConfig<span class="token punctuation">.</span><span class="token function">GetApiScopes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> app <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>app<span class="token punctuation">.</span>Environment<span class="token punctuation">.</span><span class="token function">IsDevelopment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    app<span class="token punctuation">.</span><span class="token function">UseExceptionHandler</span><span class="token punctuation">(</span><span class="token string">&quot;/Home/Error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

app<span class="token punctuation">.</span><span class="token function">UseStaticFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">UseRouting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">UseIdentityServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">UseAuthorization</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">MapControllerRoute</span><span class="token punctuation">(</span>
    <span class="token named-parameter punctuation">name</span><span class="token punctuation">:</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
    <span class="token named-parameter punctuation">pattern</span><span class="token punctuation">:</span> <span class="token string">&quot;{controller=Home}/{action=Index}/{id?}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-运行" tabindex="-1"><a class="header-anchor" href="#_2-4-运行"><span>2.4 运行</span></a></h3><p>运行展示效果，启动默认的地址 <img src="`+d+`" alt="image.png" loading="lazy"> 运行项目后，可以发现启动默认的欢迎界面，看到对应的项目版本，我们这里用的是最新的IdentityServer4版本为4.1.2，以及点击 「discovery document」，可以看到了我们上边说到的 token 获取的接口地址 ，其中对应的端点地址信息。</p><blockquote><p><strong>「通过它的 .well-known 端点来访问服务器的配置信息，在浏览器的地址栏中，输入地址：http://localhost:5014/.well-known/openid-configuration，并回车,可以看到对应的响应信息。」</strong></p></blockquote><h3 id="_2-5-模板" tabindex="-1"><a class="header-anchor" href="#_2-5-模板"><span>2.5 模板</span></a></h3><p>在上文中，我们通过手动搭建的方式，从一个空模板的搭建，到引用对应的Nuget包，安装修改配置，并搭配了官方提供的UI界面，初步形成了一个简易的IdentityServer4初始化项目框架，这种一步步的构建项目的方式。</p><p>官方也给我们提供了对应的快捷创建项目的模板，所以，如果你不想创建MVC项目，可以用官方提供的模板方式进行创建初始化项目。</p><h4 id="_2-5-1-安装模板" tabindex="-1"><a class="header-anchor" href="#_2-5-1-安装模板"><span>2.5.1 安装模板</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>dotnet <span class="token keyword">new</span> <span class="token operator">-</span>i IdentityServer4<span class="token punctuation">.</span>Templates
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在命令的输出中，可以看到已经安装了多个关于IdentityServer4的模板</p><table><thead><tr><th><strong>模板</strong></th><th><strong>简称</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>IdentityServer4 with AdminUI</td><td>is4admin</td><td>这为用户、身份、客户端和资源提供了一个基于web的管理界面.该社区版本旨在测试IdentityServer集成场景，并且仅限于本地主机：5000、SQLite、10个用户和2个客户端。社区版不适合生产应用。</td></tr><tr><td>IdentityServer4 with ASP.NET Core Identity</td><td>is4aspid</td><td>添加使用ASP.NET标识进行用户管理的基本IdentityServer。如果您自动启动数据库，您将得到两个用户：Alice和bob--都带有密码Pass123$。检查SeedData.cs文件。</td></tr><tr><td>IdentityServer4 Empty</td><td>is4empty</td><td>在没有UI的情况下创建一个最小的IdentityServer4项目。</td></tr><tr><td>IdentityServer4 with Entity Framework Stores</td><td>is4ef</td><td>添加使用实体框架进行配置和状态管理的基本IdentityServer。如果您启动数据库，您将获得一些基本的客户端和资源注册，请检查SeedData.cs文件。</td></tr><tr><td>IdentityServer4 with In-Memory Stores and Test Users</td><td>is4inmem</td><td>添加具有UI、测试用户和示例客户端和资源的基本IdentityServer。显示内存中的代码和JSON配置。</td></tr><tr><td>IdentityServer4 Quickstart UI (UI assets only)</td><td>is4ui</td><td>将快速启动UI添加到当前项目(例如，可以在is4empty的基础上添加)</td></tr></tbody></table><h4 id="_2-5-2-选择项目" tabindex="-1"><a class="header-anchor" href="#_2-5-2-选择项目"><span>2.5.2 选择项目</span></a></h4><p>这里面最为简单的项目模版就是 IdentityServer4 with In-Memory Stores and Test Users 了，它简称为 is4inmem ，我们下面就使用它来创建项目。</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code><span class="token comment">## dotnet new 模板名称 -n 项目名称</span>

<span class="token comment">## 创建一个空的ids4项目</span>
dotnet new is4empty <span class="token operator">-</span>n IdentityEmptyServer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以直接双击已经下载好的项目的*.csproj文件进行启动，可以看到项目的效果跟我们之前一步步搭建的效果是一样的，这说明我们已经创建了第一个可运行的 IdentityServer4 服务器了。</p><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><h3 id="hs256与rs256" tabindex="-1"><a class="header-anchor" href="#hs256与rs256"><span>HS256与RS256</span></a></h3><p>JWT签名算法中，一般有两个选择，一个采用HS256,另外一个就是采用RS256。</p><blockquote><p>「签名实际上是一个加密的过程，生成一段标识（也是JWT的一部分）作为接收方验证信息是否被篡改的依据。」</p></blockquote><ol><li>「HS256」 使用密钥生成「固定的签名」，简单地说，HS256 必须与任何想要验证 JWT的 客户端或 API 「共享密钥」，因此必须注意确保密钥不被泄露。</li><li>「RS256」 生成「非对称签名」，这意味着必须使用私钥来签签名 JWT，并且必须使用对应的公钥来验证签名。与对称算法不同，使用 RS256 可以保证服务端是 JWT 的签名者，因为服务端是唯一拥有私钥的一方。这样做将不再需要在许多应用程序之间共享私钥。</li></ol><p>因此，在开发应用的时候启用JWT时候，使用RS256更加安全，你可以控制谁能使用什么类型的密钥。同时可以让服务端是唯一拥有私钥的一方，不需共享私钥。</p><h3 id="关于证书" tabindex="-1"><a class="header-anchor" href="#关于证书"><span>关于证书</span></a></h3><p>生产环境（负载集群）一般需要使用固定的证书签名与验签,以确保重启服务端或负载的时候 Token 都能验签通过。（不使用临时证书）</p><h4 id="创建证书" tabindex="-1"><a class="header-anchor" href="#创建证书"><span>创建证书</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token preprocessor property">#生成私钥文件</span>
openssl genrsa <span class="token operator">-</span><span class="token keyword">out</span> idsrv4<span class="token punctuation">.</span>key <span class="token number">2048</span>
<span class="token preprocessor property">#创建证书签名请求文件 CSR（Certificate Signing Request），用于提交给证书颁发机构（即 </span><span class="token return-type class-name">Certification</span> Authority <span class="token punctuation">(</span>CA<span class="token punctuation">)</span>）即对证书签名，申请一个数字证书。
openssl req <span class="token operator">-</span><span class="token keyword">new</span> <span class="token operator">-</span>key idsrv4<span class="token punctuation">.</span>key <span class="token operator">-</span><span class="token keyword">out</span> idsrv4<span class="token punctuation">.</span>csr
<span class="token preprocessor property">#生成自签名证书（证书颁发机构（CA）签名后的证书，因为自己做测试那么证书的申请机构和颁发机构都是自己,crt 证书包含持有人的信息，持有人的公钥，以及签署者的签名等信息。当用户安装了证书之后，便意味着信任了这份证书，同时拥有了其中的公钥。）</span>
openssl x509 <span class="token operator">-</span>req <span class="token operator">-</span>days <span class="token number">365</span> <span class="token operator">-</span><span class="token keyword">in</span> idsrv4<span class="token punctuation">.</span>csr <span class="token operator">-</span>signkey idsrv4<span class="token punctuation">.</span>key <span class="token operator">-</span><span class="token keyword">out</span> idsrv4<span class="token punctuation">.</span>crt
<span class="token preprocessor property">#自签名证书与私匙合并成一个文件</span>
openssl pkcs12 <span class="token operator">-</span>export <span class="token operator">-</span><span class="token keyword">in</span> idsrv4<span class="token punctuation">.</span>crt <span class="token operator">-</span>inkey idsrv4<span class="token punctuation">.</span>key <span class="token operator">-</span><span class="token keyword">out</span> idsrv4<span class="token punctuation">.</span>pfx

或
openssl req <span class="token operator">-</span><span class="token class-name">newkey</span> rsa<span class="token punctuation">:</span><span class="token number">2048</span> <span class="token operator">-</span>nodes <span class="token operator">-</span>keyout idsrv4<span class="token punctuation">.</span>key <span class="token operator">-</span>x509 <span class="token operator">-</span>days <span class="token number">365</span> <span class="token operator">-</span><span class="token keyword">out</span> idsrv4<span class="token punctuation">.</span>cer
openssl pkcs12 <span class="token operator">-</span>export <span class="token operator">-</span><span class="token keyword">in</span> idsrv4<span class="token punctuation">.</span>cer <span class="token operator">-</span>inkey idsrv4<span class="token punctuation">.</span>key <span class="token operator">-</span><span class="token keyword">out</span> idsrv4<span class="token punctuation">.</span>pfx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>中途提示让你输入Export Password,这个password后面会用到。</p><h4 id="项目配置" tabindex="-1"><a class="header-anchor" href="#项目配置"><span>项目配置</span></a></h4><p>拷贝生成的证书，放到认证/授权服务器项目中。(VS中配置文件设置文件始终复制)，最后把证书路径和密码配置到 IdentityServer 中，因为我们自签名的证书是 PKCS12 (个人数字证书标准，Public Key Cryptography Standards #12) 标准包含私钥与公钥）标准，包含了公钥和私钥。 A、在appsetting.json 配置文件中添加如下：此处需要配置password，即生成证书的时候输入的密码。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>
<span class="token punctuation">{</span>
    <span class="token string">&quot;Certificates&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;CerPath&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;certificate\\\\idsrv4.pfx&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;Password&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;P@ssw0rd&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>B、在starup.cs中ConfigureServices方法中配置如下即可。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> basePath <span class="token operator">=</span> PlatformServices<span class="token punctuation">.</span>Default<span class="token punctuation">.</span>Application<span class="token punctuation">.</span>ApplicationBasePath<span class="token punctuation">;</span>
services<span class="token punctuation">.</span><span class="token function">AddIdentityServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddSigningCredential</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">X509Certificate2</span><span class="token punctuation">(</span>
Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>basePath<span class="token punctuation">,</span>Configuration<span class="token punctuation">[</span><span class="token string">&quot;Certificates:CerPath&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
Configuration<span class="token punctuation">[</span><span class="token string">&quot;Certificates:Password&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>C、配置完后即可。我们启动IDS4项目即可生成加密的token。</p><h4 id="提取证书" tabindex="-1"><a class="header-anchor" href="#提取证书"><span>提取证书</span></a></h4><p>OpenSSL 提取 pfx 证书公钥与私钥</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>提取pfx证书公钥和私钥
从pfx证书中提取密钥信息，并转换为key格式（pfx使用pkcs12模式补足）
<span class="token number">1</span><span class="token punctuation">.</span> 提取密钥对<span class="token punctuation">(</span>如果pfx证书已加密，会提示输入密码<span class="token punctuation">)</span>
openssl pkcs12 <span class="token operator">-</span><span class="token keyword">in</span> idsrv4<span class="token punctuation">.</span>pfx <span class="token operator">-</span>nocerts <span class="token operator">-</span>nodes <span class="token operator">-</span><span class="token keyword">out</span> idsrv4<span class="token punctuation">.</span>key
<span class="token number">2</span><span class="token punctuation">.</span> 从密钥对提取公钥
openssl rsa <span class="token operator">-</span><span class="token keyword">in</span> idsrv4<span class="token punctuation">.</span>key <span class="token operator">-</span>pubout <span class="token operator">-</span><span class="token keyword">out</span> idsrv4_pub<span class="token punctuation">.</span>key
<span class="token number">3</span><span class="token punctuation">.</span> 从密钥对提取私钥
openssl rsa <span class="token operator">-</span><span class="token keyword">in</span>  idsrv4<span class="token punctuation">.</span>key <span class="token operator">-</span><span class="token keyword">out</span> idsrv4_pri<span class="token punctuation">.</span>key
<span class="token number">4</span><span class="token punctuation">.</span> 因为RSA算法使用的是 pkcs8 模式补足，需要对提取的私钥进一步处理得到最终私钥
openssl pkcs8 <span class="token operator">-</span>topk8 <span class="token operator">-</span>inform PEM <span class="token operator">-</span><span class="token keyword">in</span> idsrv4_pri<span class="token punctuation">.</span>key <span class="token operator">-</span>outform PEM <span class="token operator">-</span>nocrypt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>将得到的token在jwt.io 网站来认证一下,需要将 crt 公钥、key私钥复制到验证中，发现认证ok,则说明实现防篡改。 后缀为crt公钥需要带着 -----BEGIN CERTIFICATE----- 和 -----END CERTIFICATE----- 一起复制。后缀为key私钥私钥需要带着 -----BEGIN RSA PRIVATE KEY----- 和 -----END RSA PRIVATE KEY----- 一起复制。</p></blockquote><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,54),g={href:"https://mp.weixin.qq.com/s/N2ADahdfAAJug6Tk46RfOA",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/i3yuan/Yuan.IdentityServer4.Demo",target:"_blank",rel:"noopener noreferrer"};function q(y,_){const a=o("ExternalLinkIcon");return c(),i("div",null,[v,n("blockquote",null,[n("p",null,[n("a",m,[s("http://localhost:5050/connect/token"),t(a)])])]),b,n("p",null,[n("a",g,[s("https://mp.weixin.qq.com/s/N2ADahdfAAJug6Tk46RfOA"),t(a)]),s(" | IdentityServer4系列 | 快速搭建简易项目 源码："),n("a",h,[s("https://github.com/i3yuan/Yuan.IdentityServer4.Demo"),t(a)])])])}const S=p(k,[["render",q],["__file","kuaisudajianxiangmu.html.vue"]]),I=JSON.parse('{"path":"/middleware/authorize/identityserver4/kuaisudajianxiangmu.html","title":"快速搭建项目","lang":"zh-CN","frontmatter":{"title":"快速搭建项目","lang":"zh-CN","date":"2023-02-19T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"kuaisudajianxiangmu","slug":"igundm","docsId":"72069672","description":"以下的项目示例都是基于IdentityServer4 「4.x」版本以上进行说明。 示例环境：VS2022+.Net6 本文内容模仿自：公众号【元说技术】 1. 快速搭建项目 1.1 创建项目 建立一个空的Asp.Net Core项目(AuthCenterInMemory) ，使用Empty空模板 image.png 1.2 安装配置 1.2.1 安装...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/authorize/identityserver4/kuaisudajianxiangmu.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"快速搭建项目"}],["meta",{"property":"og:description","content":"以下的项目示例都是基于IdentityServer4 「4.x」版本以上进行说明。 示例环境：VS2022+.Net6 本文内容模仿自：公众号【元说技术】 1. 快速搭建项目 1.1 创建项目 建立一个空的Asp.Net Core项目(AuthCenterInMemory) ，使用Empty空模板 image.png 1.2 安装配置 1.2.1 安装..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1651303351185-79194594-6ce2-4469-96b7-43151af5237e.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-16T05:03:06.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-02-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-16T05:03:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"快速搭建项目\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1651303351185-79194594-6ce2-4469-96b7-43151af5237e.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1651306115060-07c9bb35-636e-4e40-987b-6941b2d5a386.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1651307074673-76d24686-57bf-41ed-b3ac-ded9469782a2.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1651307538598-b7045ec0-904e-4de5-99ca-ed66027c0bc0.png\\"],\\"datePublished\\":\\"2023-02-19T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-16T05:03:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"1. 快速搭建项目","slug":"_1-快速搭建项目","link":"#_1-快速搭建项目","children":[{"level":3,"title":"1.1 创建项目","slug":"_1-1-创建项目","link":"#_1-1-创建项目","children":[]},{"level":3,"title":"1.2 安装配置","slug":"_1-2-安装配置","link":"#_1-2-安装配置","children":[{"level":4,"title":"1.2.1 安装组件","slug":"_1-2-1-安装组件","link":"#_1-2-1-安装组件","children":[]},{"level":4,"title":"1.2.2 配置管道","slug":"_1-2-2-配置管道","link":"#_1-2-2-配置管道","children":[]},{"level":4,"title":"1.2.3 配置内容","slug":"_1-2-3-配置内容","link":"#_1-2-3-配置内容","children":[]},{"level":4,"title":"1.2.4 添加配置服务","slug":"_1-2-4-添加配置服务","link":"#_1-2-4-添加配置服务","children":[]}]},{"level":3,"title":"1.3 获取Token","slug":"_1-3-获取token","link":"#_1-3-获取token","children":[{"level":4,"title":"1.3.1 启动项目","slug":"_1-3-1-启动项目","link":"#_1-3-1-启动项目","children":[]},{"level":4,"title":"1.3.2 测试访问地址","slug":"_1-3-2-测试访问地址","link":"#_1-3-2-测试访问地址","children":[]},{"level":4,"title":"2.3.3 Access_Token","slug":"_2-3-3-access-token","link":"#_2-3-3-access-token","children":[]}]}]},{"level":2,"title":"2. UI界面","slug":"_2-ui界面","link":"#_2-ui界面","children":[{"level":3,"title":"2.1 QuickStart UI界面","slug":"_2-1-quickstart-ui界面","link":"#_2-1-quickstart-ui界面","children":[]},{"level":3,"title":"2.2 默认目录","slug":"_2-2-默认目录","link":"#_2-2-默认目录","children":[]},{"level":3,"title":"2.3 修改配置","slug":"_2-3-修改配置","link":"#_2-3-修改配置","children":[]},{"level":3,"title":"2.4 运行","slug":"_2-4-运行","link":"#_2-4-运行","children":[]},{"level":3,"title":"2.5 模板","slug":"_2-5-模板","link":"#_2-5-模板","children":[{"level":4,"title":"2.5.1 安装模板","slug":"_2-5-1-安装模板","link":"#_2-5-1-安装模板","children":[]},{"level":4,"title":"2.5.2 选择项目","slug":"_2-5-2-选择项目","link":"#_2-5-2-选择项目","children":[]}]}]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[{"level":3,"title":"HS256与RS256","slug":"hs256与rs256","link":"#hs256与rs256","children":[]},{"level":3,"title":"关于证书","slug":"关于证书","link":"#关于证书","children":[{"level":4,"title":"创建证书","slug":"创建证书","link":"#创建证书","children":[]},{"level":4,"title":"项目配置","slug":"项目配置","link":"#项目配置","children":[]},{"level":4,"title":"提取证书","slug":"提取证书","link":"#提取证书","children":[]}]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1708059786000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":10.11,"words":3033},"filePathRelative":"middleware/authorize/identityserver4/kuaisudajianxiangmu.md","localizedDate":"2023年2月19日","excerpt":"<blockquote>\\n<p>以下的项目示例都是基于IdentityServer4 「4.x」版本以上进行说明。\\n示例环境：VS2022+.Net6\\n本文内容模仿自：公众号【元说技术】</p>\\n</blockquote>\\n<h2>1. 快速搭建项目</h2>\\n<h3>1.1 创建项目</h3>\\n<p>建立一个空的Asp.Net Core项目(AuthCenterInMemory) ，使用Empty空模板\\n<img src=\\"/common/1651303351185-79194594-6ce2-4469-96b7-43151af5237e.png\\" alt=\\"image.png\\" loading=\\"lazy\\"></p>","autoDesc":true}');export{S as comp,I as data};
