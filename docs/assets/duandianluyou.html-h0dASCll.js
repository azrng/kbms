import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as r,c as l,a as n,d as t,e as s,b as p}from"./app-Bw62I61B.js";const i={},c=p(`<h2 id="mapcontrollerroute" tabindex="-1"><a class="header-anchor" href="#mapcontrollerroute"><span>MapControllerRoute</span></a></h2><h5 id="约定路由-conventional-routing-通常用在mvc项目中" tabindex="-1"><a class="header-anchor" href="#约定路由-conventional-routing-通常用在mvc项目中"><span>约定路由(conventional routing), 通常用在MVC项目中；</span></a></h5><p>需要传参name pattern defaults constraints dataTokens； 你可以在项目中这样写：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>endpoints<span class="token punctuation">.</span><span class="token function">MapControllerRoute</span><span class="token punctuation">(</span>
  <span class="token named-parameter punctuation">name</span><span class="token punctuation">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
  <span class="token named-parameter punctuation">pattern</span><span class="token punctuation">:</span><span class="token string">&quot;{controller=Home}/{action=index}/{id?}&quot;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果请求url满足 {host}{controller_name}{action_name}{option_id} ， 将命中Controller=controller_name Action=action_name的方法体；如果url不提供controller、action名称，默认命中home/index 方法体。</p><blockquote><p>是MVC web项目的早期写法，让用户请求的url去匹配开发者的Controller-Action名称。如今约定路由并不是主流，因为所谓的约定路由对于用户浏览并不友好，而且暴露了后端开发者定义的琐碎的Controller、Action名称。</p></blockquote><p>实际上，不应该让用户的url去匹配开发者定义的Controller-Action名称（太丑陋的行为），而应该让开发者去匹配用户想要使用的url， 这样特性路由出现了。</p><h2 id="mapdefaultcontrollerroute" tabindex="-1"><a class="header-anchor" href="#mapdefaultcontrollerroute"><span>MapDefaultControllerRoute</span></a></h2><p>endpoints.MapDefaultControllerRoute(); 正是上面约定路由的默认样例.</p><h2 id="mapcontrollers" tabindex="-1"><a class="header-anchor" href="#mapcontrollers"><span>MapControllers</span></a></h2><p>不对约定路由做任何假设，也就是不使用约定路由，依赖用户的特性路由， 一般用在WebAPI项目中。</p><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,12),u={href:"https://mp.weixin.qq.com/s/rolFlSE6K3n5iMn_peD1uQ",target:"_blank",rel:"noopener noreferrer"};function d(m,h){const e=o("ExternalLinkIcon");return r(),l("div",null,[c,n("p",null,[n("a",u,[t("https://mp.weixin.qq.com/s/rolFlSE6K3n5iMn_peD1uQ"),s(e)]),t(" | ASP.NET Core端点路由中三种让人困惑的路由函数")])])}const v=a(i,[["render",d],["__file","duandianluyou.html.vue"]]),_=JSON.parse('{"path":"/dotnet/base/luyou/duandianluyou.html","title":"端点路由","lang":"zh-CN","frontmatter":{"title":"端点路由","lang":"zh-CN","date":"2023-02-05T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"duandianluyou","slug":"wie36d","docsId":"65366896","description":"MapControllerRoute 约定路由(conventional routing), 通常用在MVC项目中； 需要传参name pattern defaults constraints dataTokens； 你可以在项目中这样写： 如果请求url满足 {host}{controller_name}{action_name}{option_id...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/base/luyou/duandianluyou.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"端点路由"}],["meta",{"property":"og:description","content":"MapControllerRoute 约定路由(conventional routing), 通常用在MVC项目中； 需要传参name pattern defaults constraints dataTokens； 你可以在项目中这样写： 如果请求url满足 {host}{controller_name}{action_name}{option_id..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-25T13:23:37.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-02-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-25T13:23:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"端点路由\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-05T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-25T13:23:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"MapControllerRoute","slug":"mapcontrollerroute","link":"#mapcontrollerroute","children":[{"level":5,"title":"约定路由(conventional routing), 通常用在MVC项目中；","slug":"约定路由-conventional-routing-通常用在mvc项目中","link":"#约定路由-conventional-routing-通常用在mvc项目中","children":[]}]},{"level":2,"title":"MapDefaultControllerRoute","slug":"mapdefaultcontrollerroute","link":"#mapdefaultcontrollerroute","children":[]},{"level":2,"title":"MapControllers","slug":"mapcontrollers","link":"#mapcontrollers","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1698240217000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.09,"words":328},"filePathRelative":"dotnet/base/luyou/duandianluyou.md","localizedDate":"2023年2月5日","excerpt":"<h2>MapControllerRoute</h2>\\n<h5>约定路由(conventional routing), 通常用在MVC项目中；</h5>\\n<p>需要传参name  pattern defaults  constraints dataTokens；\\n你可以在项目中这样写：</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code>endpoints<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">MapControllerRoute</span><span class=\\"token punctuation\\">(</span>\\n  <span class=\\"token named-parameter punctuation\\">name</span><span class=\\"token punctuation\\">:</span><span class=\\"token string\\">\\"default\\"</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token named-parameter punctuation\\">pattern</span><span class=\\"token punctuation\\">:</span><span class=\\"token string\\">\\"{controller=Home}/{action=index}/{id?}\\"</span>\\n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{v as comp,_ as data};
