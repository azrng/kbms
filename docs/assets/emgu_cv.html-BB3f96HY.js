import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as p,c as o,a as n,d as a,e as c,b as i}from"./app-Bw62I61B.js";const l={},u=n("h2",{id:"概述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#概述"},[n("span",null,"概述")])],-1),r={href:"https://emgu.com/wiki/index.php/Main_Page",target:"_blank",rel:"noopener noreferrer"},d=i(`<h2 id="功能概述" tabindex="-1"><a class="header-anchor" href="#功能概述"><span>功能概述</span></a></h2><p>图像加载和保存：读取和保存各种图像格式。 图像处理：包括滤波、边缘检测、形态学操作等图像处理操作。 特征提取：提取图像的特征点、描述符等。 目标检测：提供多种目标检测算法，如人脸检测、目标跟踪等。 图像分割：实现图像分割和对象提取。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="识别二维码" tabindex="-1"><a class="header-anchor" href="#识别二维码"><span>识别二维码</span></a></h3><p>引入OpenCV的两个包，Emgu.CV 和 Emgu.CV.runtime.windows</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">DecodeQRCodeByOpenCv</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> imagePath<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">Image<span class="token punctuation">&lt;</span>Bgr<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">&gt;</span></span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Image<span class="token punctuation">&lt;</span>Bgr<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>imagePath<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">QRCodeDetector</span> qrdetector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">QRCodeDetector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token class-name"><span class="token keyword">string</span></span> decodedInfo <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
                    <span class="token class-name">Mat</span> points <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Mat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>qrdetector<span class="token punctuation">.</span><span class="token function">Detect</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> points<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token class-name">Mat</span> straightQrCode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Mat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        decodedInfo <span class="token operator">=</span> qrdetector<span class="token punctuation">.</span><span class="token function">Decode</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> points<span class="token punctuation">,</span> straightQrCode<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        straightQrCode<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    points<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> decodedInfo<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function k(m,g){const s=t("ExternalLinkIcon");return p(),o("div",null,[u,n("p",null,[a("Emgu.CV是一个基于OpenCV（开源计算机视觉库）的.NET封装库，开源使用，提供了丰富的图像处理和计算机视觉功能。 它提供了对OpenCV的高效访问和易于使用的接口，适用于图像处理、计算机视觉和机器学习等应用领域。 文档："),n("a",r,[a("https://emgu.com/wiki/index.php/Main_Page"),c(s)])]),d])}const y=e(l,[["render",k],["__file","emgu_cv.html.vue"]]),b=JSON.parse('{"path":"/middleware/tuxiangchuli/opencv/emgu_cv.html","title":"Emgu.CV","lang":"zh-CN","frontmatter":{"title":"Emgu.CV","lang":"zh-CN","date":"2023-09-02T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"emgu_cv","slug":"gx6sto6mynlxim9k","docsId":"135370550","description":"概述 Emgu.CV是一个基于OpenCV（开源计算机视觉库）的.NET封装库，开源使用，提供了丰富的图像处理和计算机视觉功能。 它提供了对OpenCV的高效访问和易于使用的接口，适用于图像处理、计算机视觉和机器学习等应用领域。 文档：https://emgu.com/wiki/index.php/Main_Page 功能概述 图像加载和保存：读取和保...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/tuxiangchuli/opencv/emgu_cv.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Emgu.CV"}],["meta",{"property":"og:description","content":"概述 Emgu.CV是一个基于OpenCV（开源计算机视觉库）的.NET封装库，开源使用，提供了丰富的图像处理和计算机视觉功能。 它提供了对OpenCV的高效访问和易于使用的接口，适用于图像处理、计算机视觉和机器学习等应用领域。 文档：https://emgu.com/wiki/index.php/Main_Page 功能概述 图像加载和保存：读取和保..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T05:34:48.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-27T05:34:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Emgu.CV\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-27T05:34:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"功能概述","slug":"功能概述","link":"#功能概述","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"识别二维码","slug":"识别二维码","link":"#识别二维码","children":[]}]}],"git":{"createdTime":1697724028000,"updatedTime":1698384888000,"contributors":[{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":0.93,"words":279},"filePathRelative":"middleware/tuxiangchuli/opencv/emgu_cv.md","localizedDate":"2023年9月2日","excerpt":"<h2>概述</h2>\\n<p>Emgu.CV是一个基于OpenCV（开源计算机视觉库）的.NET封装库，开源使用，提供了丰富的图像处理和计算机视觉功能。\\n它提供了对OpenCV的高效访问和易于使用的接口，适用于图像处理、计算机视觉和机器学习等应用领域。\\n文档：<a href=\\"https://emgu.com/wiki/index.php/Main_Page\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://emgu.com/wiki/index.php/Main_Page</a></p>\\n<h2>功能概述</h2>\\n<p>图像加载和保存：读取和保存各种图像格式。\\n图像处理：包括滤波、边缘检测、形态学操作等图像处理操作。\\n特征提取：提取图像的特征点、描述符等。\\n目标检测：提供多种目标检测算法，如人脸检测、目标跟踪等。\\n图像分割：实现图像分割和对象提取。</p>","autoDesc":true}');export{y as comp,b as data};
