import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as i,b as e}from"./app-mrI7cTrN.js";const o={},r=e("h2",{id:"介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#介绍"},[e("span",null,"介绍")])],-1),a=e("p",null,"幂等（Idempotence）是一个数学和计算科学概念，简单的来说就是一个操作多次执行产生的结果与一次执行产生的结果一致。   为什么需要幂等性？ 在计算机应用中，可能遇到网络抖动，临时故障，或者服务调用失败，尤其是分布式系统中，接口调用失败更为常见。为了保证服务的完整性，我们可能会发起接口的重试调用，如果接口不处理幂等，可能对系统造成很大的影响，因此接口的幂等设计尤其更为重要。  在订单的支付中，如果没有幂等性，接口的重试可能造成重复支付。     对于HTTP请求的POST、GET、PUT和DELETE，按照HTTP方法的定义，PUT、GET和DELETE都是幂等的。 PUT：用于创建或者更新一个资源，如果资源存在就更新资源，如果资源不存在就创建资源。我们常用的方式为PUT /xxxx/id，指定了一个id，更新或者创建都是针对这个id的，因此PUT属于幂等的。GET：用于获取一个资源，这个方法无需过多解释，方法肯定属于幂等的。DELETE：删除一个资源，删除资源是需要指定ID，例如：DELTE /xxxx/id，这种方式删除一个资源执行多次结果是相同的。影响以属于幂等的。POST：创建一个资源，提交请求中的实体到服务端，用于创建需要的资源。常用格式为POST /XXXX/Order，无需指定资源的ID。明显此方法属于非幂等的。以上是按照HTTP方法的定义来说的，可能有人会说，我用的GET就不是幂等，你也可以这样用，协议没有限制不让这么做，这是一个非强制性契约。",-1),d=e("h2",{id:"实现的建议",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#实现的建议"},[e("span",null,"实现的建议")])],-1),p=e("p",null,"对于创造性的接口如果要实现幂等，可以用唯一ID加上查询结果来决定是否创建资源（有时候防止并发，可以加锁）使用数据库的唯一索引，防止新增脏数据，这种实现简单，但是需要处理异常情况使用分布式锁机制（Redis，zk或者数据库实现）",-1),c=[r,a,d,p];function l(s,m){return i(),n("div",null,c)}const h=t(o,[["render",l],["__file","midengxing.html.vue"]]),E=JSON.parse('{"path":"/dotnet/api/controllerApi/idempotent/midengxing.html","title":"幂等性","lang":"zh-CN","frontmatter":{"title":"幂等性","lang":"zh-CN","date":"2021-12-27T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"midengxing","slug":"cz0ngk","docsId":"29633874","description":"介绍 幂等（Idempotence）是一个数学和计算科学概念，简单的来说就是一个操作多次执行产生的结果与一次执行产生的结果一致。 为什么需要幂等性？ 在计算机应用中，可能遇到网络抖动，临时故障，或者服务调用失败，尤其是分布式系统中，接口调用失败更为常见。为了保证服务的完整性，我们可能会发起接口的重试调用，如果接口不处理幂等，可能对系统造成很大的影响，因...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/api/controllerApi/idempotent/midengxing.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"幂等性"}],["meta",{"property":"og:description","content":"介绍 幂等（Idempotence）是一个数学和计算科学概念，简单的来说就是一个操作多次执行产生的结果与一次执行产生的结果一致。 为什么需要幂等性？ 在计算机应用中，可能遇到网络抖动，临时故障，或者服务调用失败，尤其是分布式系统中，接口调用失败更为常见。为了保证服务的完整性，我们可能会发起接口的重试调用，如果接口不处理幂等，可能对系统造成很大的影响，因..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-25T09:26:24.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2021-12-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-25T09:26:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"幂等性\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-12-27T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-25T09:26:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"实现的建议","slug":"实现的建议","link":"#实现的建议","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1708853184000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":2.03,"words":609},"filePathRelative":"dotnet/api/controllerApi/idempotent/midengxing.md","localizedDate":"2021年12月27日","excerpt":"<h2>介绍</h2>\\n<p>幂等（Idempotence）是一个数学和计算科学概念，简单的来说就是一个操作多次执行产生的结果与一次执行产生的结果一致。\\n&nbsp;\\n为什么需要幂等性？\\n在计算机应用中，可能遇到网络抖动，临时故障，或者服务调用失败，尤其是分布式系统中，接口调用失败更为常见。为了保证服务的完整性，我们可能会发起接口的重试调用，如果接口不处理幂等，可能对系统造成很大的影响，因此接口的幂等设计尤其更为重要。\\n&nbsp;在订单的支付中，如果没有幂等性，接口的重试可能造成重复支付。\\n&nbsp;\\n&nbsp;\\n对于HTTP请求的POST、GET、PUT和DELETE，按照HTTP方法的定义，PUT、GET和DELETE都是幂等的。\\nPUT：用于创建或者更新一个资源，如果资源存在就更新资源，如果资源不存在就创建资源。我们常用的方式为PUT /xxxx/id，指定了一个id，更新或者创建都是针对这个id的，因此PUT属于幂等的。GET：用于获取一个资源，这个方法无需过多解释，方法肯定属于幂等的。DELETE：删除一个资源，删除资源是需要指定ID，例如：DELTE /xxxx/id，这种方式删除一个资源执行多次结果是相同的。影响以属于幂等的。POST：创建一个资源，提交请求中的实体到服务端，用于创建需要的资源。常用格式为POST /XXXX/Order，无需指定资源的ID。明显此方法属于非幂等的。以上是按照HTTP方法的定义来说的，可能有人会说，我用的GET就不是幂等，你也可以这样用，协议没有限制不让这么做，这是一个非强制性契约。</p>","autoDesc":true}');export{h as comp,E as data};
