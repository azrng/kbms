import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,e as n,o as s}from"./app-SmdjEsew.js";const t="/kbms/common/1620135949798-6301cf62-0e49-4c51-b8d8-7c704d875eb1.png",o="/kbms/common/1621095951874-191aeaaa-f8f6-4ab0-8658-f4604793bbb1.png",r="/kbms/common/1621095975910-82a168cd-f4ab-411b-89e4-7365a9684d92.png",p="/kbms/common/1621095563934-fb08ca06-b7c9-4bc9-b67d-654ab8133746.png",c="/kbms/common/1621096008677-afb175df-cd4f-4b73-9247-b285fad63f53.png",g="/kbms/common/1621096585525-8671e46e-f051-4a04-8eb7-93e109ef926d.png",d="/kbms/common/1621096633945-1c143e6a-68a2-4a1e-8ed4-e114e501bf37.png",m="/kbms/common/1621096835031-db68bc4f-d350-42af-98f0-87f371d6e772.png",l="/kbms/common/1621095730126-3384e893-324e-4971-a6c6-dd561f9584c5.png",h="/kbms/common/1621095762304-608bc695-597f-480c-b9bd-629010c25824.png",b="/kbms/common/1621097722708-69bd76cf-366f-4fe2-9809-a366c16ca8ce.png",f="/kbms/common/1620136320377-d206d608-7a02-422c-83eb-1f93e69b44d7.png",k="/kbms/common/1621097450042-8abb9d94-4479-4d21-9e34-c12010694bea.png",u="/kbms/common/1621097784255-3e29f9c4-893a-4aae-b1df-6f0ef4665cc4.png",y="/kbms/common/1620137115051-8c55ba52-01f8-4acc-a981-5ce8a416a00a.png",_="/kbms/common/1621097898862-bced3729-6b4f-4f3e-bc50-4813761b4bbc.png",A={};function x(z,a){return s(),i("div",null,a[0]||(a[0]=[n(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>YApi 是<strong>高效</strong>、<strong>易用</strong>、<strong>功能强大</strong>的 api 管理平台，旨在为开发、产品、测试人员提供更优雅的接口管理服务。可以帮助开发者轻松创建、发布、维护 API，YApi 还为用户提供了优秀的交互体验，开发人员只需利用平台提供的接口数据写入工具以及简单的点击操作就可以实现接口的管理。</p><p>当下稍微正式一点的公司都会要求前后端联调要求编写接口文档，比如说要求word或者excel等了，这个时候你要说那么我们可以使用swagger，但是领导又会说swagger不能留档，并且显得不太正式，结果就强制要求使用word，奈何太浪费时间，通过yapi，它可以直接导出文件进行存档，并且接口内容也可以通过swagger定时同步。</p><blockquote><p>GitHub：<a href="https://github.com/YMFE/yapi" target="_blank" rel="noopener noreferrer">https://github.com/YMFE/yapi</a><br> Docker部署：<a href="https://github.com/fjc0k/docker-YApi" target="_blank" rel="noopener noreferrer">https://github.com/fjc0k/docker-YApi</a></p></blockquote><h2 id="安装yapi" tabindex="-1"><a class="header-anchor" href="#安装yapi"><span>安装Yapi</span></a></h2><h3 id="自己搭建mongo" tabindex="-1"><a class="header-anchor" href="#自己搭建mongo"><span>自己搭建mongo</span></a></h3><p>前提是需要安装mongdb用于存储数据，当前我已经安装了MongoDB，配置如下</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">docker run -p 27017:27017 --name mongo -e TZ=Asia/Shanghai  -d mongo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">服务地址：192.168.1.12</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">端口：27017</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">数据库：yapi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>因为设置带密码的mongodb一直没成功，所以采用了无密码的</p></blockquote><p>通过docker生成yapi服务</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">docker run -p 8009:3000 --name yapiweb -e YAPI_ADMIN_ACCOUNT=itzhangyunpeng@163.com -e YAPI_ADMIN_PASSWORD=123456 -e YAPI_CLOSE_REGISTER=true -e YAPI_DB_SERVERNAME=192.168.1.6 -e YAPI_DB_PORT=27017 -e YAPI_DB_DATABASE=yapi -e YAPI_MAIL_ENABLE=false -e YAPI_LDAP_LOGIN_ENABLE=false  -d jayfong/yapi:latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>使用了大佬提供的镜像：jayfong/yapi<br> 详细配置还得看GitHub文档介绍，注意数据库的地址信息</p></blockquote><h3 id="开箱即用版本" tabindex="-1"><a class="header-anchor" href="#开箱即用版本"><span>开箱即用版本</span></a></h3><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 纯粹的</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">docker run --rm -p 8009:3000 -d  jayfong/yapi:play</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 带插件的</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">docker run --rm -p 8009:3000 -e YAPI_PLUGINS=&#39;[{&quot;name&quot;:&quot;interface-oauth2-token&quot;}]&#39; -d jayfong/yapi:play</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>默认的管理员账号：<code>admin@docker.yapi</code>，管理员密码：<code>adm1n</code>。</p></blockquote><h2 id="基本使用yapi" tabindex="-1"><a class="header-anchor" href="#基本使用yapi"><span>基本使用Yapi</span></a></h2><h3 id="登录" tabindex="-1"><a class="header-anchor" href="#登录"><span>登录</span></a></h3><p>通过浏览器访问地址：<a href="http://localhost:8009/" target="_blank" rel="noopener noreferrer">http://localhost:8009/</a><br><img src="`+t+'" alt="image.png" loading="lazy"></p><blockquote><p>帐号密码就是上面配置的管理员密码：YAPI_ADMIN_ACCOUNT=itzhangyunpeng@163.com YAPI_ADMIN_PASSWORD=123456</p></blockquote><h3 id="用户管理" tabindex="-1"><a class="header-anchor" href="#用户管理"><span>用户管理</span></a></h3><h4 id="查看用户" tabindex="-1"><a class="header-anchor" href="#查看用户"><span>查看用户</span></a></h4><figure><img src="'+o+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h4 id="添加用户" tabindex="-1"><a class="header-anchor" href="#添加用户"><span>添加用户</span></a></h4><figure><img src="'+r+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="个人项目" tabindex="-1"><a class="header-anchor" href="#个人项目"><span>个人项目</span></a></h3><h4 id="创建" tabindex="-1"><a class="header-anchor" href="#创建"><span>创建</span></a></h4><figure><img src="'+p+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h4 id="展示个人项目" tabindex="-1"><a class="header-anchor" href="#展示个人项目"><span>展示个人项目</span></a></h4><figure><img src="'+c+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><blockquote><p>该个人项目只能自己才看看到</p></blockquote><h3 id="分组" tabindex="-1"><a class="header-anchor" href="#分组"><span>分组</span></a></h3><h4 id="创建分组" tabindex="-1"><a class="header-anchor" href="#创建分组"><span>创建分组</span></a></h4><figure><img src="'+g+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><blockquote><p>一个项目组一般为一个分组，然后其他的人都在该分组中编辑本分组的项目</p></blockquote><h4 id="分组成员" tabindex="-1"><a class="header-anchor" href="#分组成员"><span>分组成员</span></a></h4><figure><img src="'+d+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><blockquote><p>管理本分组人员操作和简单操作权限。</p></blockquote><h4 id="分组动态" tabindex="-1"><a class="header-anchor" href="#分组动态"><span>分组动态</span></a></h4><figure><img src="'+m+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><blockquote><p>展示分组内每个用户的操作记录</p></blockquote><h3 id="添加接口" tabindex="-1"><a class="header-anchor" href="#添加接口"><span>添加接口</span></a></h3><figure><img src="'+l+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="修改接口" tabindex="-1"><a class="header-anchor" href="#修改接口"><span>修改接口</span></a></h3><figure><img src="'+h+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h2 id="搭配swagger" tabindex="-1"><a class="header-anchor" href="#搭配swagger"><span>搭配swagger</span></a></h2><p>关于swagger基础配置可以查看：<a href="https://mp.weixin.qq.com/s/mIawFR2JNP0t5DS4FEvS-Q" target="_blank" rel="noopener noreferrer">此处</a></p><h3 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目"><span>创建项目</span></a></h3><p>使用前文的.net程序，并显示swagger信息，swagger地址为：<a href="http://azrng.cn1.utools.club/swagger/index.html" target="_blank" rel="noopener noreferrer">http://azrng.cn1.utools.club/swagger/index.html</a><br><img src="'+b+'" alt="image.png" loading="lazy"><br> 获取swagger的json地址<br><img src="'+f+'" alt="image.png" loading="lazy"></p><h3 id="yapi配置" tabindex="-1"><a class="header-anchor" href="#yapi配置"><span>Yapi配置</span></a></h3><figure><img src="'+k+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><blockquote><p>本次使用的是完全覆盖，通过cron表达式配置自动同步时间。</p></blockquote><h3 id="查看同步数据" tabindex="-1"><a class="header-anchor" href="#查看同步数据"><span>查看同步数据</span></a></h3><p>然后我们查看接口列表，这个时候我们已经看到项目的接口已经都被同步过来了<br><img src="'+u+'" alt="image.png" loading="lazy"></p><h3 id="数据管理" tabindex="-1"><a class="header-anchor" href="#数据管理"><span>数据管理</span></a></h3><h4 id="数据导出导入" tabindex="-1"><a class="header-anchor" href="#数据导出导入"><span>数据导出导入</span></a></h4><p>在数据管理我们可以导入数据，或者导出数据<br><img src="'+y+'" alt="image.png" loading="lazy"></p><blockquote><p>对于我来说我常用的就是数据导出为html给留档使用。</p></blockquote><h4 id="导出预览" tabindex="-1"><a class="header-anchor" href="#导出预览"><span>导出预览</span></a></h4><figure><img src="'+_+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><blockquote><p>更多配置还需要查看官方文档</p></blockquote>',60)]))}const Y=e(A,[["render",x]]),I=JSON.parse('{"path":"/middleware/office/yapi/","title":"说明","lang":"zh-CN","frontmatter":{"title":"说明","lang":"zh-CN","date":"2023-10-18T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"readme","slug":"rw32fc","docsId":"44509099","description":"概述 YApi 是高效、易用、功能强大的 api 管理平台，旨在为开发、产品、测试人员提供更优雅的接口管理服务。可以帮助开发者轻松创建、发布、维护 API，YApi 还为用户提供了优秀的交互体验，开发人员只需利用平台提供的接口数据写入工具以及简单的点击操作就可以实现接口的管理。 当下稍微正式一点的公司都会要求前后端联调要求编写接口文档，比如说要求wor...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"说明\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1620135949798-6301cf62-0e49-4c51-b8d8-7c704d875eb1.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621095951874-191aeaaa-f8f6-4ab0-8658-f4604793bbb1.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621095975910-82a168cd-f4ab-411b-89e4-7365a9684d92.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621095563934-fb08ca06-b7c9-4bc9-b67d-654ab8133746.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621096008677-afb175df-cd4f-4b73-9247-b285fad63f53.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621096585525-8671e46e-f051-4a04-8eb7-93e109ef926d.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621096633945-1c143e6a-68a2-4a1e-8ed4-e114e501bf37.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621096835031-db68bc4f-d350-42af-98f0-87f371d6e772.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621095730126-3384e893-324e-4971-a6c6-dd561f9584c5.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621095762304-608bc695-597f-480c-b9bd-629010c25824.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621097722708-69bd76cf-366f-4fe2-9809-a366c16ca8ce.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1620136320377-d206d608-7a02-422c-83eb-1f93e69b44d7.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621097450042-8abb9d94-4479-4d21-9e34-c12010694bea.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621097784255-3e29f9c4-893a-4aae-b1df-6f0ef4665cc4.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1620137115051-8c55ba52-01f8-4acc-a981-5ce8a416a00a.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621097898862-bced3729-6b4f-4f3e-bc50-4813761b4bbc.png\\"],\\"datePublished\\":\\"2023-10-18T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"],["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/office/yapi/"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"说明"}],["meta",{"property":"og:description","content":"概述 YApi 是高效、易用、功能强大的 api 管理平台，旨在为开发、产品、测试人员提供更优雅的接口管理服务。可以帮助开发者轻松创建、发布、维护 API，YApi 还为用户提供了优秀的交互体验，开发人员只需利用平台提供的接口数据写入工具以及简单的点击操作就可以实现接口的管理。 当下稍微正式一点的公司都会要求前后端联调要求编写接口文档，比如说要求wor..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1620135949798-6301cf62-0e49-4c51-b8d8-7c704d875eb1.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}]]},"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","username":"","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":3.17,"words":950},"filePathRelative":"middleware/office/yapi/readme.md","excerpt":"<h2>概述</h2>\\n<p>YApi 是<strong>高效</strong>、<strong>易用</strong>、<strong>功能强大</strong>的 api 管理平台，旨在为开发、产品、测试人员提供更优雅的接口管理服务。可以帮助开发者轻松创建、发布、维护 API，YApi 还为用户提供了优秀的交互体验，开发人员只需利用平台提供的接口数据写入工具以及简单的点击操作就可以实现接口的管理。</p>\\n<p>当下稍微正式一点的公司都会要求前后端联调要求编写接口文档，比如说要求word或者excel等了，这个时候你要说那么我们可以使用swagger，但是领导又会说swagger不能留档，并且显得不太正式，结果就强制要求使用word，奈何太浪费时间，通过yapi，它可以直接导出文件进行存档，并且接口内容也可以通过swagger定时同步。</p>","autoDesc":true}');export{Y as comp,I as data};
