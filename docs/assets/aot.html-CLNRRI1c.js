import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as p,c as o,a as n,d as a,e as t,b as i}from"./app-qB9_Bjjp.js";const c={},r=i(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>.NET Native Ahead-of-Time （AOT） 编译是 .NET 平台中的前沿技术。使用 AOT，C# 代码被编译为开发人员计算机上的本机代码。这与传统方法形成鲜明对比，在传统方法中代码是在运行时被编译为本机代码。</p><p>官方文档：https://learn.microsoft.com/zh-cn/dotnet/core/deploying/native-aot</p><h2 id="优缺点" tabindex="-1"><a class="header-anchor" href="#优缺点"><span>优缺点</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>资料来自Aot优缺点：https://blog.ndepend.com/net-native-aot-explained/</p></div><h3 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span>优点</span></a></h3><p>.NET Native Ahead-of-Time （AOT） 编译带来了一系列优势：</p><ul><li>增强的性能：通过将代码预编译为本机计算机指令，.NET Native AOT 可显著缩短启动时间并提高整体应用程序性能。运行时没有 JIT 编译开销，这意味着执行速度更快，从而提供更流畅的用户体验。</li><li>简化部署：AOT 编译的应用程序通常会产生具有零或更少依赖项的独立可执行文件。这简化了部署过程，可以更轻松地在各种平台和设备上分发应用程序，而无需额外的安装或运行时组件。</li><li>更小的应用程序大小：通过剪裁不必要的代码，AOT 可以大大减小应用程序的大小。这不仅节省了存储空间，还优化了应用程序的内存占用，这在移动设备或物联网设备等资源受限的环境中尤为重要。</li><li>增强的知识产权保护：AOT 编译将源代码转换为优化的机器代码，使逆向工程尝试更具挑战性。生成的本机代码比 IL 代码更模糊，更难破译，IL 代码可以很容易地反编译为原始 C# 代码。这增强了应用程序中嵌入的敏感算法、业务逻辑和专有方法的安全性。</li></ul><h3 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点"><span>缺点</span></a></h3><p>使用 AOT 获得的好处不可避免地伴随着某些缺点。他们来了：</p><ul><li>特定于平台的编译：.NET Native AOT 生成特定于平台的本机代码，这些代码针对特定体系结构或操作系统进行定制。例如，与常规 .NET 程序集不同，在具有 AOT 的 Windows 上生成的可执行文件在 Linux 上不起作用。</li><li>不支持跨操作系统编译。例如，从 Windows 机器中，您无法编译 Linux 本机版本，反之亦然。</li><li>对反射的部分支持：反射依赖于动态代码生成和运行时类型发现，这与 AOT 编译代码的预编译和静态特性相冲突。但是，我们将在本文末尾看到，通常的 Reflection 用法与 AOT 配合得很好。</li><li>需要 AOT 兼容依赖项：AOT 编译要求项目中使用的所有库和依赖项都与 AOT 兼容。依赖于反射、运行时代码生成或其他动态行为的库可能与 AOT 不兼容，从而可能导致冲突或运行时错误。</li><li>增加构建时间：AOT 编译涉及在构建过程中预先生成本机代码。这个额外的步骤可以显著增加构建时间，特别是对于具有广泛代码库的大型项目或应用程序。</li><li>需要适用于 C++ 的桌面开发工具：AOT 只能在安装这些工具的情况下进行编译。</li></ul><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景"><span>使用场景</span></a></h2><ul><li>FaaS类服务，对于一些复杂算法，独立计算类小服务，可以用AOT来发布。</li><li>对于一些基础服务，调用频率高，要求更高的性价比：占用资源少，产出高，如果采用AOT发布，我们启动两个Pod，资源用不到原来的一半，RPS却有大幅增加，这是很划算的性价。</li><li>再有就是一些简单，功能单一的业务服务也可以考虑用AOT发布，因为业务复杂的服务，所需的技术就会复杂，这对现阶段的AOT开发有一定的开发代价。</li></ul><p>资料：https://mp.weixin.qq.com/s/lbl3Pl_XkATpQ7nNWukB7g</p><h2 id="命令" tabindex="-1"><a class="header-anchor" href="#命令"><span>命令</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>需要具有“使用 C++ 的桌面开发”的工作负载</p></div><p>项目文件配置</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PropertyGroup</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OutputType</span><span class="token punctuation">&gt;</span></span>Exe<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>OutputType</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TargetFrameworks</span><span class="token punctuation">&gt;</span></span>net7.0;net8.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TargetFrameworks</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImplicitUsings</span><span class="token punctuation">&gt;</span></span>enable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ImplicitUsings</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Nullable</span><span class="token punctuation">&gt;</span></span>enable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Nullable</span><span class="token punctuation">&gt;</span></span>
	<span class="token comment">&lt;!--aot发布--&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PublishAot</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PublishAot</span><span class="token punctuation">&gt;</span></span>
	<span class="token comment">&lt;!--引入的大小与速度选项--&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OptimizationPreference</span><span class="token punctuation">&gt;</span></span>Size<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>OptimizationPreference</span><span class="token punctuation">&gt;</span></span>
	<span class="token comment">&lt;!--不需要特定于全球化的代码和数据，使用固定模式--&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>InvariantGlobalization</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>InvariantGlobalization</span><span class="token punctuation">&gt;</span></span>
	<span class="token comment">&lt;!--不关心在发生异常时拥有良好的堆栈跟踪--&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackTraceSupport</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackTraceSupport</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PropertyGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后执行下面的命令去进行发布</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">## 发布linux</span>
dotnet publish <span class="token parameter variable">-f</span> net8.0 <span class="token parameter variable">-r</span> linux-x64 <span class="token parameter variable">-c</span> Release

<span class="token comment">## 发布win</span>
dotnet publish <span class="token parameter variable">-f</span> net8.0 <span class="token parameter variable">-r</span> win-x64 <span class="token parameter variable">-c</span> Release
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rd-xml" tabindex="-1"><a class="header-anchor" href="#rd-xml"><span>Rd.xml</span></a></h2><p>官网文档：https://learn.microsoft.com/zh-cn/windows/uwp/dotnet-native/runtime-directives-rd-xml-configuration-file-reference</p><p>写法示例：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Directives</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.microsoft.com/netfx/2013/01/metadata<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Application</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Assembly</span> <span class="token attr-name">Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Semi.Avalonia<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Serialize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Required Public<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Assembly</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Application</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Directives</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>aot 中Rd.xml 文件格式语法中文说明以及处理错误的实战案例：https://www.jianshu.com/p/56e9d8246784</p><h2 id="开源组件" tabindex="-1"><a class="header-anchor" href="#开源组件"><span>开源组件</span></a></h2><h3 id="publishaotcompressed" tabindex="-1"><a class="header-anchor" href="#publishaotcompressed"><span>PublishAotCompressed</span></a></h3>`,27),u={href:"https://upx.github.io/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://learn.microsoft.com/en-us/dotnet/core/deploying/native-aot/",target:"_blank",rel:"noopener noreferrer"},m=n("p",null,"说明：https://www.nuget.org/packages/PublishAotCompressed",-1),h=n("h2",{id:"资料",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#资料"},[n("span",null,"资料")])],-1),g={href:"https://mp.weixin.qq.com/s/s9NO75My21oC3Erz_64-Wg",target:"_blank",rel:"noopener noreferrer"},k={href:"https://learn.microsoft.com/zh-cn/aspnet/core/fundamentals/native-aot?view=aspnetcore-8.0",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.cnblogs.com/InCerry/p/Single-File-And-AOT-Publish.html",target:"_blank",rel:"noopener noreferrer"},b=n("p",null,"NET 8 NativeAOT 用法指南：https://mp.weixin.qq.com/s/aRhem0fJ2HNzRgtis5BhbQ",-1);function T(A,f){const s=l("ExternalLinkIcon");return p(),o("div",null,[r,n("p",null,[a("这是一个AOT压缩的NuGet 包，其中包含 MSBuild 目标，用于使用 "),n("a",u,[a("UPX"),t(s)]),a(" 压缩 "),n("a",d,[a("PublishAot"),t(s)]),a(" 的结果。只需添加对此包的引用，然后像往常一样发布即可。AOT 编译的结果将被压缩。UPX 通常可节省 60% 或更多的尺寸。")]),m,h,n("p",null,[a("AOT的使用以及.net与Go相互调用："),n("a",g,[a("https://mp.weixin.qq.com/s/s9NO75My21oC3Erz_64-Wg"),t(s)]),a(" 本机 AOT 的 ASP.NET Core支持："),n("a",k,[a("https://learn.microsoft.com/zh-cn/aspnet/core/fundamentals/native-aot?view=aspnetcore-8.0"),t(s)]),a(" AOT和单位件发布对程序性能的影响："),n("a",v,[a("https://www.cnblogs.com/InCerry/p/Single-File-And-AOT-Publish.html"),t(s)])]),b])}const _=e(c,[["render",T],["__file","aot.html.vue"]]),N=JSON.parse('{"path":"/dotnet/buildAndRelease/aot.html","title":"AOT","lang":"zh-CN","frontmatter":{"title":"AOT","lang":"zh-CN","date":"2023-09-14T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"readme","slug":"ru7m7o41ti8lt2g1","docsId":"125498061","description":"概述 .NET Native Ahead-of-Time （AOT） 编译是 .NET 平台中的前沿技术。使用 AOT，C# 代码被编译为开发人员计算机上的本机代码。这与传统方法形成鲜明对比，在传统方法中代码是在运行时被编译为本机代码。 官方文档：https://learn.microsoft.com/zh-cn/dotnet/core/deployi...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/buildAndRelease/aot.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"AOT"}],["meta",{"property":"og:description","content":"概述 .NET Native Ahead-of-Time （AOT） 编译是 .NET 平台中的前沿技术。使用 AOT，C# 代码被编译为开发人员计算机上的本机代码。这与传统方法形成鲜明对比，在传统方法中代码是在运行时被编译为本机代码。 官方文档：https://learn.microsoft.com/zh-cn/dotnet/core/deployi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-06T08:08:04.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-06T08:08:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AOT\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-14T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-06T08:08:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"优缺点","slug":"优缺点","link":"#优缺点","children":[{"level":3,"title":"优点","slug":"优点","link":"#优点","children":[]},{"level":3,"title":"缺点","slug":"缺点","link":"#缺点","children":[]}]},{"level":2,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":2,"title":"命令","slug":"命令","link":"#命令","children":[]},{"level":2,"title":"Rd.xml","slug":"rd-xml","link":"#rd-xml","children":[]},{"level":2,"title":"开源组件","slug":"开源组件","link":"#开源组件","children":[{"level":3,"title":"PublishAotCompressed","slug":"publishaotcompressed","link":"#publishaotcompressed","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1702044169000,"updatedTime":1712390884000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":6}]},"readingTime":{"minutes":4.65,"words":1395},"filePathRelative":"dotnet/buildAndRelease/aot.md","localizedDate":"2023年9月14日","excerpt":"<h2>概述</h2>\\n<p>.NET Native Ahead-of-Time （AOT） 编译是 .NET 平台中的前沿技术。使用 AOT，C# 代码被编译为开发人员计算机上的本机代码。这与传统方法形成鲜明对比，在传统方法中代码是在运行时被编译为本机代码。</p>\\n<p>官方文档：https://learn.microsoft.com/zh-cn/dotnet/core/deploying/native-aot</p>\\n<h2>优缺点</h2>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>资料来自Aot优缺点：https://blog.ndepend.com/net-native-aot-explained/</p>\\n</div>","autoDesc":true}');export{_ as comp,N as data};
