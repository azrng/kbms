import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as e,c as o,b as n,e as s,f as c,d as i}from"./app-D8HBJYTp.js";const l="/kbms/common/1621827213711-d39bdb74-13ef-4acd-8ad8-a275354b48ff.png",u={},r=i(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>浏览器的安全策略上的限制可以有效组织Ajax向另外的一个服务发起请求，这就是著名的同源策略。跨域仅仅是浏览器的行为，通过代理服务器，或者其他工具可以绕过。 不同的域名、不用的端口、不用的协议之间请求都会出现跨域问题。</p><p>跨域对同源的要求有三点：协议相同、ip相同、端口相同。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="cors" tabindex="-1"><a class="header-anchor" href="#cors"><span>Cors</span></a></h3><h4 id="注册服务" tabindex="-1"><a class="header-anchor" href="#注册服务"><span>注册服务</span></a></h4><p>如何突破这种限制，可以使用CORS。NetF中可以使用microsoft.aspnet.webapi.cors包来解决跨域问题。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">AddCommon</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IServiceCollection</span> services<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            services<span class="token punctuation">.</span><span class="token function">AddCors</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
            <span class="token punctuation">{</span>
               options<span class="token punctuation">.</span><span class="token function">AddPolicy</span><span class="token punctuation">(</span><span class="token string">&quot;AllowAll&quot;</span><span class="token punctuation">,</span> p <span class="token operator">=&gt;</span>
                <span class="token punctuation">{</span>
                    p<span class="token punctuation">.</span><span class="token function">AllowAnyOrigin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//允许任务来源的主机访问</span>
                      <span class="token punctuation">.</span><span class="token function">AllowAnyMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//允许任何请求方式</span>
                      <span class="token punctuation">.</span><span class="token function">AllowAnyHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//允许任何头部</span>
                      <span class="token comment">//.AllowCredentials();//允许任何证书     </span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Core3.0之后不允许Origin和Credentials都不做限制 SetIsOriginAllowed((_) =&gt; true) 这样子就可以和AllowCredentials进行搭配，或者</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token function">AddCors</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    options<span class="token punctuation">.</span><span class="token function">AddPolicy</span><span class="token punctuation">(</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span> policy <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        policy<span class="token punctuation">.</span><span class="token function">AllowAnyOrigin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">AllowAnyHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">AllowAnyMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>AddCors</strong>来添加一个跨域处理方式，<strong>AddPolicy</strong>就是加个巡逻官，看看符合规则的放进来，不符合的直接赶出去。</p><table><thead><tr><th><strong>方法</strong></th><th><strong>介绍</strong></th></tr></thead><tbody><tr><td>AllowAnyOrigin</td><td>允许所有的域名请求</td></tr><tr><td>AllowAnyMethod</td><td>允许所有的请求方式GET/POST/PUT/DELETE</td></tr><tr><td>AllowAnyHeader</td><td>允许所有的头部参数</td></tr><tr><td>AllowCredentials</td><td>允许携带Cookie</td></tr></tbody></table><p>这里我使用的是允许所有，可以根据自身业务需要来调整，比如只允许部分域名访问，部分请求方式，部分Header：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token function">AddCors</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
            <span class="token punctuation">{</span>
               options<span class="token punctuation">.</span><span class="token function">AddPolicy</span><span class="token punctuation">(</span><span class="token string">&quot;AllowSome&quot;</span><span class="token punctuation">,</span> p <span class="token operator">=&gt;</span>
                 <span class="token punctuation">{</span>
                    p<span class="token punctuation">.</span><span class="token function">WithOrigins</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.baidu.com&quot;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">WithMethods</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">WithHeaders</span><span class="token punctuation">(</span>HeaderNames<span class="token punctuation">.</span>ContentType<span class="token punctuation">,</span> <span class="token string">&quot;x-custom-header&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="允许跨域" tabindex="-1"><a class="header-anchor" href="#允许跨域"><span>允许跨域</span></a></h4><p>在Configure中声明全局跨域</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Configure</span><span class="token punctuation">(</span><span class="token class-name">IApplicationBuilder</span> app<span class="token punctuation">,</span> <span class="token class-name">IWebHostEnvironment</span> env<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token function">IsDevelopment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        app<span class="token punctuation">.</span><span class="token function">UseDeveloperExceptionPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        app<span class="token punctuation">.</span><span class="token function">UseSwagger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        app<span class="token punctuation">.</span><span class="token function">UseSwaggerUI</span><span class="token punctuation">(</span>c <span class="token operator">=&gt;</span> c<span class="token punctuation">.</span><span class="token function">SwaggerEndpoint</span><span class="token punctuation">(</span><span class="token string">&quot;/swagger/v1/swagger.json&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;WebApplication2 v1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    app<span class="token punctuation">.</span><span class="token function">UseRouting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           
    <span class="token comment">//使用cors</span>
    app<span class="token punctuation">.</span><span class="token function">UseCors</span><span class="token punctuation">(</span><span class="token string">&quot;AllowAll&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    app<span class="token punctuation">.</span><span class="token function">UseAuthorization</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    app<span class="token punctuation">.</span><span class="token function">UseEndpoints</span><span class="token punctuation">(</span>endpoints <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        endpoints<span class="token punctuation">.</span><span class="token function">MapControllers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只对某一些控制器支持跨域请求</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Route</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;api/[controller]/[action]&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ApiController</span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">EnableCors</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;AllowSome&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>  <span class="token comment">// 跨域</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BaseController</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ControllerBase</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只对某一些方法(Action)支持跨域请求</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">EnableCors</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;AllowSome&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> <span class="token function">Delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对某个Action限制不允许跨域请求</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DisableCors</span></span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="iis解决跨域" tabindex="-1"><a class="header-anchor" href="#iis解决跨域"><span>IIS解决跨域</span></a></h3><p>环境：windows server 2008、IIS 7</p><p>为解决IIS发布资源前端调用报错跨域问题</p><h4 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h4><p>点击发布网站，在右侧&quot;功能视图&quot;中，找到&quot;HTTP 响应标头&quot;，双击进入 点击页面右侧&quot;添加&quot; <img src="`+l+`" alt="" loading="lazy"> 分别添加如下键值对</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>Access<span class="token operator">-</span>Control<span class="token operator">-</span>Allow<span class="token operator">-</span>Headers：Content<span class="token operator">-</span>Type<span class="token punctuation">,</span> api_key<span class="token punctuation">,</span> Authorization
Access<span class="token operator">-</span>Control<span class="token operator">-</span>Allow<span class="token operator">-</span>Origin：<span class="token operator">*</span>
Access<span class="token operator">-</span>Control<span class="token operator">-</span>Allow<span class="token operator">-</span>Methods：GET<span class="token punctuation">,</span>POST<span class="token punctuation">,</span>PUT<span class="token punctuation">,</span>DELETE<span class="token punctuation">,</span>OPTIONS
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29),d={href:"https://blog.csdn.net/guzicheng1990/article/details/106253104/",target:"_blank",rel:"noopener noreferrer"};function k(m,v){const a=p("ExternalLinkIcon");return e(),o("div",null,[r,n("blockquote",null,[n("p",null,[s("原文链接："),n("a",d,[s("https://blog.csdn.net/guzicheng1990/article/details/106253104/"),c(a)])])])])}const h=t(u,[["render",k],["__file","kuayuqingqiu.html.vue"]]),f=JSON.parse('{"path":"/dotnet/api/controllerApi/kuayuqingqiu.html","title":"跨域请求","lang":"zh-CN","frontmatter":{"title":"跨域请求","lang":"zh-CN","date":"2023-10-05T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"kuayuqingqiu","slug":"budtnd","docsId":"30607009","description":"概述 浏览器的安全策略上的限制可以有效组织Ajax向另外的一个服务发起请求，这就是著名的同源策略。跨域仅仅是浏览器的行为，通过代理服务器，或者其他工具可以绕过。 不同的域名、不用的端口、不用的协议之间请求都会出现跨域问题。 跨域对同源的要求有三点：协议相同、ip相同、端口相同。 操作 Cors 注册服务 如何突破这种限制，可以使用CORS。NetF中可...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/api/controllerApi/kuayuqingqiu.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"跨域请求"}],["meta",{"property":"og:description","content":"概述 浏览器的安全策略上的限制可以有效组织Ajax向另外的一个服务发起请求，这就是著名的同源策略。跨域仅仅是浏览器的行为，通过代理服务器，或者其他工具可以绕过。 不同的域名、不用的端口、不用的协议之间请求都会出现跨域问题。 跨域对同源的要求有三点：协议相同、ip相同、端口相同。 操作 Cors 注册服务 如何突破这种限制，可以使用CORS。NetF中可..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1621827213711-d39bdb74-13ef-4acd-8ad8-a275354b48ff.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-25T09:26:24.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-25T09:26:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"跨域请求\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1621827213711-d39bdb74-13ef-4acd-8ad8-a275354b48ff.png\\"],\\"datePublished\\":\\"2023-10-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-25T09:26:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"Cors","slug":"cors","link":"#cors","children":[{"level":4,"title":"注册服务","slug":"注册服务","link":"#注册服务","children":[]},{"level":4,"title":"允许跨域","slug":"允许跨域","link":"#允许跨域","children":[]}]},{"level":3,"title":"IIS解决跨域","slug":"iis解决跨域","link":"#iis解决跨域","children":[{"level":4,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[]}]}]}],"git":{"createdTime":1697962303000,"updatedTime":1708853184000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":2.13,"words":638},"filePathRelative":"dotnet/api/controllerApi/kuayuqingqiu.md","localizedDate":"2023年10月5日","excerpt":"<h2>概述</h2>\\n<p>浏览器的安全策略上的限制可以有效组织Ajax向另外的一个服务发起请求，这就是著名的同源策略。跨域仅仅是浏览器的行为，通过代理服务器，或者其他工具可以绕过。\\n不同的域名、不用的端口、不用的协议之间请求都会出现跨域问题。</p>\\n<p>跨域对同源的要求有三点：协议相同、ip相同、端口相同。</p>\\n<h2>操作</h2>\\n<h3>Cors</h3>\\n<h4>注册服务</h4>\\n<p>如何突破这种限制，可以使用CORS。NetF中可以使用microsoft.aspnet.webapi.cors包来解决跨域问题。</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">void</span></span> <span class=\\"token function\\">AddCommon</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span> <span class=\\"token class-name\\">IServiceCollection</span> services<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            services<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AddCors</span><span class=\\"token punctuation\\">(</span>options <span class=\\"token operator\\">=&gt;</span>\\n            <span class=\\"token punctuation\\">{</span>\\n               options<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AddPolicy</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"AllowAll\\"</span><span class=\\"token punctuation\\">,</span> p <span class=\\"token operator\\">=&gt;</span>\\n                <span class=\\"token punctuation\\">{</span>\\n                    p<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AllowAnyOrigin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token comment\\">//允许任务来源的主机访问</span>\\n                      <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AllowAnyMethod</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token comment\\">//允许任何请求方式</span>\\n                      <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AllowAnyHeader</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//允许任何头部</span>\\n                      <span class=\\"token comment\\">//.AllowCredentials();//允许任何证书     </span>\\n                <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{h as comp,f as data};
