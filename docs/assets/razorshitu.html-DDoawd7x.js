import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as t}from"./app-D8HBJYTp.js";const p="/kbms/common/1612855084630-06c2331d-581c-4d52-9ff2-0c66d9f62b28.png",e={},o=t(`<h2 id="默认控件" tabindex="-1"><a class="header-anchor" href="#默认控件"><span>默认控件</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>@Html<span class="token punctuation">.</span><span class="token function">ActionLink</span><span class="token punctuation">(</span><span class="token string">&quot;Index&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Order&quot;</span><span class="token punctuation">)</span>

@Html<span class="token punctuation">.</span><span class="token function">ActionLink</span><span class="token punctuation">(</span><span class="token string">&quot;带控制器&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;action名称&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;控制器名称&quot;</span><span class="token punctuation">)</span>

@Html<span class="token punctuation">.</span><span class="token function">ActionLink</span><span class="token punctuation">(</span><span class="token string">&quot;带路由器信息&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;action名称&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string">&quot;李思&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token operator">&lt;</span><span class="token class-name">a</span> href<span class="token operator">=</span><span class="token string">&quot;/Html/Action/1?name=1&amp;height=5&quot;</span><span class="token operator">&gt;</span>带路由信息<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>

@Html<span class="token punctuation">.</span><span class="token function">RouteLink</span><span class="token punctuation">(</span><span class="token string">&quot;LinkText&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> action <span class="token operator">=</span> <span class="token string">&quot;ActionName&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

@Html<span class="token punctuation">.</span><span class="token function">RouteLink</span><span class="token punctuation">(</span><span class="token string">&quot;LinkText&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> action <span class="token operator">=</span> <span class="token string">&quot;Index&quot;</span><span class="token punctuation">,</span> controller <span class="token operator">=</span> <span class="token string">&quot;Order&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

@Html<span class="token punctuation">.</span><span class="token function">RouteLink</span><span class="token punctuation">(</span><span class="token string">&quot;LinkText&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> action <span class="token operator">=</span> <span class="token string">&quot;Index&quot;</span><span class="token punctuation">,</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="扩展控件" tabindex="-1"><a class="header-anchor" href="#扩展控件"><span>扩展控件</span></a></h2><h3 id="方案一" tabindex="-1"><a class="header-anchor" href="#方案一"><span>方案一</span></a></h3><blockquote><p>本质：通过一个后台方法，返回一个<strong>已经存在</strong>的HTML标签的字符串，浏览器在读取的时候就获取成一个html标签</p></blockquote><p>通过静态类的方式定义静态拓展方法，扩展IHemlHelper，返回IHtmlContent类型</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 扩展类</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">HtmlHelperExtensions</span>
    <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 扩展br标签</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>helper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IHtmlContent</span> <span class="token function">Br</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IHtmlHelper</span> helper<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HtmlString</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;&lt;br/&gt;&gt;&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 格式化标签</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>helper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IHtmlContent</span> <span class="token function">Pre</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IHtmlHelper</span> helper<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> content<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HtmlString</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;&lt;pre&gt;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">content</span><span class="token punctuation">}</span></span><span class="token string">&lt;/pre&gt;&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用示例(引用命名空间)</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>@Html<span class="token punctuation">.</span><span class="token function">Br</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
@Html<span class="token punctuation">.</span><span class="token function">Pre</span><span class="token punctuation">(</span><span class="token string">&quot;我是  格式化  标签&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方案二" tabindex="-1"><a class="header-anchor" href="#方案二"><span>方案二</span></a></h3><blockquote><p>本质：通过一个后台方法，返回一个<strong>不存在</strong>的HTML标签的字符串，在读取的时候，通过后台的方法，去生成我们制定的标签。</p></blockquote><p>定义一个类(类名称建议以TagHelper结尾)</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HtmlTargetElement</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;SimpleTagHelper&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span><span class="token comment">//标签名称</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomTagSimTagHelper</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">TagHelper</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> PageIndex <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Process</span><span class="token punctuation">(</span><span class="token class-name">TagHelperContext</span> context<span class="token punctuation">,</span> <span class="token class-name">TagHelperOutput</span> output<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> _id <span class="token operator">=</span> Id<span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> _name <span class="token operator">=</span> Name<span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> _pageIndex <span class="token operator">=</span> PageIndex<span class="token punctuation">;</span>

            output<span class="token punctuation">.</span>TagName <span class="token operator">=</span> <span class="token string">&quot;div&quot;</span><span class="token punctuation">;</span>
            output<span class="token punctuation">.</span>Attributes<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;dir&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            output<span class="token punctuation">.</span>Attributes<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;我的名字&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            output<span class="token punctuation">.</span>PreContent<span class="token punctuation">.</span><span class="token function">SetContent</span><span class="token punctuation">(</span><span class="token string">&quot;这个是我自定义的标签&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：建议标记HtmlTargetElement，不写的情况下会去掉后缀作为标签名称</p></blockquote><p>使用方法</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">SimpleTagHelper</span> id<span class="token operator">=</span><span class="token number">11</span> name<span class="token operator">=</span><span class="token string">&quot;lisi&quot;</span> page<span class="token operator">-</span>index<span class="token operator">=</span><span class="token string">&quot;第一页&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>SimpleTagHelper<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>注意： 1.需要在_ViewImports中进行注册才能使用 @addTagHelper *,MvcStudy 2.如果属性是两个字符，第二个字母是大写，那么前台的写法是：第一个字母小写-第二个字母小写</p></blockquote><h2 id="局部视图" tabindex="-1"><a class="header-anchor" href="#局部视图"><span>局部视图</span></a></h2><h3 id="创建局部视图" tabindex="-1"><a class="header-anchor" href="#创建局部视图"><span>创建局部视图</span></a></h3><figure><img src="`+p+`" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="简单配置局部视图" tabindex="-1"><a class="header-anchor" href="#简单配置局部视图"><span>简单配置局部视图</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>@model <span class="token keyword">string</span>

<span class="token operator">&lt;</span><span class="token class-name">div</span> style<span class="token operator">=</span><span class="token string">&quot;background-color:red;width:300px;height:200px&quot;</span><span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>这个是我的局部视图<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
    名称：@Model
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="供其他页面使用" tabindex="-1"><a class="header-anchor" href="#供其他页面使用"><span>供其他页面使用</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>@<span class="token punctuation">{</span>
    ViewData<span class="token punctuation">[</span><span class="token string">&quot;Title&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Index3&quot;</span><span class="token punctuation">;</span>
    Layout <span class="token operator">=</span> <span class="token string">&quot;~/Views/Shared/_Layout.cshtml&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span>局部视图使用<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span>
@Html<span class="token punctuation">.</span><span class="token function">Partial</span><span class="token punctuation">(</span><span class="token string">&quot;PartialView&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lisi&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>使用场景：有一部分页面内容多个页面都需要用到，那么可以考虑将该部分做成一个局部视图，供其他多个页面引用使用</p></blockquote><h2 id="视图组件" tabindex="-1"><a class="header-anchor" href="#视图组件"><span>视图组件</span></a></h2><p>场景：</p><ul><li>呈现页面响应的某一部分 而不是整个响应</li><li>控制器和视图之间发现的关注分离</li><li>可以具有参数和业务逻辑</li><li>通常在页面布局中调用</li></ul><h3 id="具体操作" tabindex="-1"><a class="header-anchor" href="#具体操作"><span>具体操作</span></a></h3><h4 id="新建带搜索组件类" tabindex="-1"><a class="header-anchor" href="#新建带搜索组件类"><span>新建带搜索组件类</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ViewComponent</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;CustomList&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ListViewComponet</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ViewComponent</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>IViewComponentResult<span class="token punctuation">&gt;</span></span> <span class="token function">InvokeAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> searchString<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> list <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">GetStudentList</span><span class="token punctuation">(</span>searchString<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//默认返回路径 组件在shared目录下</span>
            <span class="token keyword">return</span> <span class="token function">View</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//如果组件不在share目录下</span>
            <span class="token comment">//return View(&quot;~/View/Test/TestDefault.cshtml&quot;, list);</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span>Student<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetStudentList</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> searchString<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> Task<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Student<span class="token punctuation">&gt;</span></span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Student</span> <span class="token punctuation">{</span>Id <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Student</span> <span class="token punctuation">{</span>Id <span class="token operator">=</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;李四&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Student</span> <span class="token punctuation">{</span>Id <span class="token operator">=</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;王五&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Student</span> <span class="token punctuation">{</span>Id <span class="token operator">=</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;赵六&quot;</span><span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>t <span class="token operator">=&gt;</span> t<span class="token punctuation">.</span>Name<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>searchString<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span>
    <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 标识</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 名称</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>类名后缀是：ViewComponet 默认该类和Shared:Components:组件名:Default 对应</p></blockquote><h4 id="创建视图" tabindex="-1"><a class="header-anchor" href="#创建视图"><span>创建视图</span></a></h4><p>在Views\\Shared\\Components\\CustomList目录下创建空视图Default.cshtml</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>@<span class="token keyword">using</span> <span class="token namespace">MvcStudy<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>ViewComponetExtension</span><span class="token punctuation">;</span>

@model <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>Student<span class="token punctuation">&gt;</span></span>


@<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> item <span class="token keyword">in</span> Model<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  
    <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>用户ID：@item<span class="token punctuation">.</span>Id  用户名：@item<span class="token punctuation">.</span>Name<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="其他页面使用" tabindex="-1"><a class="header-anchor" href="#其他页面使用"><span>其他页面使用</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token return-type class-name">@<span class="token keyword">await</span></span> Component<span class="token punctuation">.</span><span class="token function">InvokeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;CustomList&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> searchString <span class="token operator">=</span> <span class="token string">&quot;张&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>通过这种方法就可以把一个带操作逻辑的视图当成组件引入到另一个视图中</p></blockquote>`,38),c=[o];function l(i,u){return s(),a("div",null,c)}const d=n(e,[["render",l],["__file","razorshitu.html.vue"]]),m=JSON.parse('{"path":"/dotnet/webyingyong/mvc/razorshitu.html","title":"Razor视图","lang":"zh-CN","frontmatter":{"title":"Razor视图","lang":"zh-CN","date":"2023-09-21T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"razorshitu","slug":"zgo953","docsId":"31379924","description":"默认控件 扩展控件 方案一 本质：通过一个后台方法，返回一个已经存在的HTML标签的字符串，浏览器在读取的时候就获取成一个html标签 通过静态类的方式定义静态拓展方法，扩展IHemlHelper，返回IHtmlContent类型 调用示例(引用命名空间) 方案二 本质：通过一个后台方法，返回一个不存在的HTML标签的字符串，在读取的时候，通过后台的方...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/webyingyong/mvc/razorshitu.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Razor视图"}],["meta",{"property":"og:description","content":"默认控件 扩展控件 方案一 本质：通过一个后台方法，返回一个已经存在的HTML标签的字符串，浏览器在读取的时候就获取成一个html标签 通过静态类的方式定义静态拓展方法，扩展IHemlHelper，返回IHtmlContent类型 调用示例(引用命名空间) 方案二 本质：通过一个后台方法，返回一个不存在的HTML标签的字符串，在读取的时候，通过后台的方..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1612855084630-06c2331d-581c-4d52-9ff2-0c66d9f62b28.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Razor视图\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1612855084630-06c2331d-581c-4d52-9ff2-0c66d9f62b28.png\\"],\\"datePublished\\":\\"2023-09-21T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"默认控件","slug":"默认控件","link":"#默认控件","children":[]},{"level":2,"title":"扩展控件","slug":"扩展控件","link":"#扩展控件","children":[{"level":3,"title":"方案一","slug":"方案一","link":"#方案一","children":[]},{"level":3,"title":"方案二","slug":"方案二","link":"#方案二","children":[]}]},{"level":2,"title":"局部视图","slug":"局部视图","link":"#局部视图","children":[{"level":3,"title":"创建局部视图","slug":"创建局部视图","link":"#创建局部视图","children":[]},{"level":3,"title":"简单配置局部视图","slug":"简单配置局部视图","link":"#简单配置局部视图","children":[]},{"level":3,"title":"供其他页面使用","slug":"供其他页面使用","link":"#供其他页面使用","children":[]}]},{"level":2,"title":"视图组件","slug":"视图组件","link":"#视图组件","children":[{"level":3,"title":"具体操作","slug":"具体操作","link":"#具体操作","children":[{"level":4,"title":"新建带搜索组件类","slug":"新建带搜索组件类","link":"#新建带搜索组件类","children":[]},{"level":4,"title":"创建视图","slug":"创建视图","link":"#创建视图","children":[]},{"level":4,"title":"其他页面使用","slug":"其他页面使用","link":"#其他页面使用","children":[]}]}]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":3.09,"words":928},"filePathRelative":"dotnet/webyingyong/mvc/razorshitu.md","localizedDate":"2023年9月21日","excerpt":"<h2>默认控件</h2>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code>@Html<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ActionLink</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Index\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Order\\"</span><span class=\\"token punctuation\\">)</span>\\n\\n@Html<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ActionLink</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"带控制器\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"action名称\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"控制器名称\\"</span><span class=\\"token punctuation\\">)</span>\\n\\n@Html<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ActionLink</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"带路由器信息\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"action名称\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span> <span class=\\"token punctuation\\">{</span> id <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"李思\\"</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">a</span> href<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"/Html/Action/1?name=1&amp;height=5\\"</span><span class=\\"token operator\\">&gt;</span>带路由信息<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>a<span class=\\"token operator\\">&gt;</span>\\n\\n@Html<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">RouteLink</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"LinkText\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span> <span class=\\"token punctuation\\">{</span> action <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"ActionName\\"</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n@Html<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">RouteLink</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"LinkText\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span> <span class=\\"token punctuation\\">{</span> action <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"Index\\"</span><span class=\\"token punctuation\\">,</span> controller <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"Order\\"</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n@Html<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">RouteLink</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"LinkText\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span> <span class=\\"token punctuation\\">{</span> action <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"Index\\"</span><span class=\\"token punctuation\\">,</span> id <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,m as data};
