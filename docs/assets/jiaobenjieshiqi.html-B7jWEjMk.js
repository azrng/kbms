import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-Bw62I61B.js";const e={},p=t(`<h2 id="jint" tabindex="-1"><a class="header-anchor" href="#jint"><span>Jint</span></a></h2><p>Jint 是 .NET 的 Javascript 解释器，可以在任何现代 .NET 平台上运行，因为它支持 .NET 标准 2.0 和 .NET 4.6.2 目标（及更高版本）。</p><p>下载量：6.06M</p><h3 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h3><p>引用nuget包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Jint&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;2.11.58&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="基础运算" tabindex="-1"><a class="header-anchor" href="#基础运算"><span>基础运算</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> engine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Engine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>engine<span class="token punctuation">.</span><span class="token function">Execute</span><span class="token punctuation">(</span><span class="token string">&quot;20*20&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetCompletionValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="引用c-函数执行" tabindex="-1"><a class="header-anchor" href="#引用c-函数执行"><span>引用C#函数执行</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> script <span class="token operator">=</span> <span class="token string">@&quot;function calc(x)
{
    var res = x+1;
    alert(&#39;这是JS解释的&#39;+res);
    return res * 1000;
}
&quot;</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> JSEngine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Engine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
JSEngine<span class="token punctuation">.</span><span class="token function">SetValue</span><span class="token punctuation">(</span><span class="token string">&quot;alert&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>Alert<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">try</span>
<span class="token punctuation">{</span>
    JSEngine<span class="token punctuation">.</span><span class="token function">Execute</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> res <span class="token operator">=</span> JSEngine<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token string">&quot;calc&quot;</span><span class="token punctuation">,</span> <span class="token number">9000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;calc 的计算结果 </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">res</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Jint<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>JavaScriptException</span> Ex<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>Ex<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Message<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Alert</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> Message<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="调用js函数" tabindex="-1"><a class="header-anchor" href="#调用js函数"><span>调用js函数</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> engine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Engine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> fromValue <span class="token operator">=</span> engine<span class="token punctuation">.</span><span class="token function">Execute</span><span class="token punctuation">(</span><span class="token string">&quot;function jsAdd(a, b) { return a + b; }&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetValue</span><span class="token punctuation">(</span><span class="token string">&quot;jsAdd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>fromValue<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>engine<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token string">&quot;jsAdd&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="javascriptengineswitcher" tabindex="-1"><a class="header-anchor" href="#javascriptengineswitcher"><span>JavaScriptEngineSwitcher</span></a></h2><p>JavaScript引擎切换器决定了访问流行JavaScript引擎(ChakraCore, jerp . JavaScript)基本特性的统一接口。NodeJS, Jint，侏罗纪，MSIE JavaScript引擎。net, nl . js, Microsoft ClearScript。V8和VroomJs)。这个库允许您快速轻松地切换到使用另一个JavaScript引擎。</p><p>下载量：6.15M</p><h3 id="操作-1" tabindex="-1"><a class="header-anchor" href="#操作-1"><span>操作</span></a></h3><p>引用组件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;JavaScriptEngineSwitcher.Core&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;3.19.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="csharpscript" tabindex="-1"><a class="header-anchor" href="#csharpscript"><span>CSharpScript</span></a></h2><p>提供一个C#脚本的包；功能是传入一段C#代码，返回代码执行的结果，需要提供return，并且返回值是string类型。</p><h3 id="操作-2" tabindex="-1"><a class="header-anchor" href="#操作-2"><span>操作</span></a></h3><p>引用nuget包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;CSharpScript&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;1.0.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="jurassic" tabindex="-1"><a class="header-anchor" href="#jurassic"><span>Jurassic</span></a></h2><p>Jurassic是一个开源的托管JavaScript执行引擎，使用MS-PL授权协议。它的目标是成为.NET平台上功能最强，最为标准的JavaScript引擎。</p><p>https://mp.weixin.qq.com/s/rYbWTTOyzOssKCuIAc0A_Q | .NET 开发的JavaScript执行引擎</p>`,26),c=[p];function o(i,l){return s(),a("div",null,c)}const d=n(e,[["render",o],["__file","jiaobenjieshiqi.html.vue"]]),k=JSON.parse('{"path":"/dotnet/commonNuget/jiaobenjieshiqi.html","title":"脚本解释器","lang":"zh-CN","frontmatter":{"title":"脚本解释器","lang":"zh-CN","date":"2023-08-09T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"jiaobenjieshiqi","slug":"axq6ik","docsId":"92330326","description":"Jint Jint 是 .NET 的 Javascript 解释器，可以在任何现代 .NET 平台上运行，因为它支持 .NET 标准 2.0 和 .NET 4.6.2 目标（及更高版本）。 下载量：6.06M 操作 引用nuget包 基础运算 引用C#函数执行 调用js函数 JavaScriptEngineSwitcher JavaScript引擎切换...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/commonNuget/jiaobenjieshiqi.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"脚本解释器"}],["meta",{"property":"og:description","content":"Jint Jint 是 .NET 的 Javascript 解释器，可以在任何现代 .NET 平台上运行，因为它支持 .NET 标准 2.0 和 .NET 4.6.2 目标（及更高版本）。 下载量：6.06M 操作 引用nuget包 基础运算 引用C#函数执行 调用js函数 JavaScriptEngineSwitcher JavaScript引擎切换..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-06T08:01:13.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-08-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-06T08:01:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"脚本解释器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-09T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-06T08:01:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"Jint","slug":"jint","link":"#jint","children":[{"level":3,"title":"操作","slug":"操作","link":"#操作","children":[{"level":4,"title":"基础运算","slug":"基础运算","link":"#基础运算","children":[]},{"level":4,"title":"引用C#函数执行","slug":"引用c-函数执行","link":"#引用c-函数执行","children":[]},{"level":4,"title":"调用js函数","slug":"调用js函数","link":"#调用js函数","children":[]}]}]},{"level":2,"title":"JavaScriptEngineSwitcher","slug":"javascriptengineswitcher","link":"#javascriptengineswitcher","children":[{"level":3,"title":"操作","slug":"操作-1","link":"#操作-1","children":[]}]},{"level":2,"title":"CSharpScript","slug":"csharpscript","link":"#csharpscript","children":[{"level":3,"title":"操作","slug":"操作-2","link":"#操作-2","children":[]}]},{"level":2,"title":"Jurassic","slug":"jurassic","link":"#jurassic","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1712390473000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.34,"words":403},"filePathRelative":"dotnet/commonNuget/jiaobenjieshiqi.md","localizedDate":"2023年8月9日","excerpt":"<h2>Jint</h2>\\n<p>Jint 是 .NET 的 Javascript 解释器，可以在任何现代 .NET 平台上运行，因为它支持 .NET 标准 2.0 和 .NET 4.6.2 目标（及更高版本）。</p>\\n<p>下载量：6.06M</p>\\n<h3>操作</h3>\\n<p>引用nuget包</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">PackageReference</span> Include<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"Jint\\"</span> Version<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"2.11.58\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,k as data};
