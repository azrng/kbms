import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-DMmdIwn0.js";const p={},e=t(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>提供了一种方便的机制来测量运行时间，使用了操作系统和硬件提供的最高分辨率机制，通常少于1毫秒。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> stopwatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Stopwatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
stopwatch<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 开始监视代码运行时间</span>
<span class="token comment">//开始计时</span>
Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
stopwatch<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//终止计时</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>stopwatch<span class="token punctuation">.</span>Elapsed<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//返回消耗的时间间隔</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;总毫秒数&quot;</span> <span class="token operator">+</span> stopwatch<span class="token punctuation">.</span>ElapsedMilliseconds<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//返回总毫秒数</span>

<span class="token class-name"><span class="token keyword">var</span></span> elapsed <span class="token operator">=</span> stopwatch<span class="token punctuation">.</span>Elapsed<span class="token punctuation">;</span><span class="token comment">//获取当前实例测量得出的总运行时间。</span>
<span class="token class-name"><span class="token keyword">var</span></span> seconds <span class="token operator">=</span> elapsed<span class="token punctuation">.</span>TotalSeconds<span class="token punctuation">;</span>  <span class="token comment">//  总秒数</span>
<span class="token class-name"><span class="token keyword">var</span></span> milliseconds <span class="token operator">=</span> elapsed<span class="token punctuation">.</span>TotalMilliseconds<span class="token punctuation">;</span>  <span class="token comment">//  总毫秒数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","stopwatchlei.html.vue"]]),d=JSON.parse('{"path":"/dotnet/csharp/zhenduan/stopwatchlei.html","title":"Stopwatch类","lang":"zh-CN","frontmatter":{"title":"Stopwatch类","lang":"zh-CN","date":"2023-10-22T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["csharp"],"tag":["无"],"filename":"stopwatchlei","slug":"rfm7cy","docsId":"62476885","description":"介绍 提供了一种方便的机制来测量运行时间，使用了操作系统和硬件提供的最高分辨率机制，通常少于1毫秒。 操作","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/csharp/zhenduan/stopwatchlei.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Stopwatch类"}],["meta",{"property":"og:description","content":"介绍 提供了一种方便的机制来测量运行时间，使用了操作系统和硬件提供的最高分辨率机制，通常少于1毫秒。 操作"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-17T14:50:44.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-17T14:50:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Stopwatch类\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-17T14:50:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[]}],"git":{"createdTime":1700232644000,"updatedTime":1700232644000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.55,"words":164},"filePathRelative":"dotnet/csharp/zhenduan/stopwatchlei.md","localizedDate":"2023年10月22日","excerpt":"<h2>介绍</h2>\\n<p>提供了一种方便的机制来测量运行时间，使用了操作系统和硬件提供的最高分辨率机制，通常少于1毫秒。</p>\\n<h2>操作</h2>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> stopwatch <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Stopwatch</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nstopwatch<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Start</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">// 开始监视代码运行时间</span>\\n<span class=\\"token comment\\">//开始计时</span>\\nThread<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Sleep</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3000</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nstopwatch<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Stop</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//终止计时</span>\\nConsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span>stopwatch<span class=\\"token punctuation\\">.</span>Elapsed<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//返回消耗的时间间隔</span>\\nConsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"总毫秒数\\"</span> <span class=\\"token operator\\">+</span> stopwatch<span class=\\"token punctuation\\">.</span>ElapsedMilliseconds<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//返回总毫秒数</span>\\n\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> elapsed <span class=\\"token operator\\">=</span> stopwatch<span class=\\"token punctuation\\">.</span>Elapsed<span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//获取当前实例测量得出的总运行时间。</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> seconds <span class=\\"token operator\\">=</span> elapsed<span class=\\"token punctuation\\">.</span>TotalSeconds<span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">//  总秒数</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> milliseconds <span class=\\"token operator\\">=</span> elapsed<span class=\\"token punctuation\\">.</span>TotalMilliseconds<span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">//  总毫秒数</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
