import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as t}from"./app-CBxp4zeL.js";const p="/kbms/common/1615016591442-f0fdd49f-c1c1-4dd0-9ef0-0467826a16e1.png",o="/kbms/common/1614566647851-9a4c1cf8-9a2d-43eb-b5b7-8953b94bfbee.png",c="/kbms/common/1622630545320-a298077b-7791-40cb-bda7-21540a9ca576.png",e="/kbms/common/1622630649055-ae3ae4f4-9d46-4d79-aa8e-7015418775b6.png",u="/kbms/common/1622630743655-9416e8ab-a38a-4e2e-ae78-3ee69ffeab82.png",l="/kbms/common/1622630820370-40f33194-dc98-40ca-a5fd-e3fb372e9fad.png",i={},k=t('<h2 id="数据结构" tabindex="-1"><a class="header-anchor" href="#数据结构"><span>数据结构</span></a></h2><p>一种数据结构类型对应多种数据结构来实现 <img src="'+p+`" alt="" loading="lazy"> 例如，String、Set 在存储 int 数据时，会采用整数编码存储。Hash、ZSet 在元素数量比较少时（可配置），会采用压缩列表（ziplist）存储，在存储比较多的数据时，才会转换为哈希表和跳表。</p><h2 id="string字符串" tabindex="-1"><a class="header-anchor" href="#string字符串"><span>String字符串</span></a></h2><p>一个键对应一个值，值是字符串</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>					<span class="token comment">//存储单个</span>
                    client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Set</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;aa&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;aa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//默认是序列化后然后存储的</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> <span class="token keyword">value</span> <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetValue</span><span class="token punctuation">(</span><span class="token string">&quot;aa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//这种方式还得序列化</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> value2 <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Get</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;aa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//推荐这种</span>

                    <span class="token comment">//批量写入</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> dic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
                        <span class="token punctuation">{</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;001&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                        <span class="token punctuation">{</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;lisi&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                        <span class="token punctuation">{</span> <span class="token string">&quot;address&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;南京&quot;</span><span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">SetAll</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token punctuation">;</span>


                    <span class="token comment">//批量读取</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> list <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetAll</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;address&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//设置过期时间</span>
                    client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Set</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;bbb&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bbb&quot;</span><span class="token punctuation">,</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//指定时间过期</span>
                    client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Set</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;ccc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ccc&quot;</span><span class="token punctuation">,</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">AddDays</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//追加</span>
                    client<span class="token punctuation">.</span><span class="token function">AppendToValue</span><span class="token punctuation">(</span><span class="token string">&quot;zhuijia&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;I&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">AppendToValue</span><span class="token punctuation">(</span><span class="token string">&quot;zhuijia&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Love&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">AppendToValue</span><span class="token punctuation">(</span><span class="token string">&quot;zhuijia&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;You&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> zhuijia <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Get</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;zhuijia&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//获取之前的值，然后赋值新的</span>
                    client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Set</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lisi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> oldValue <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetAndSetValue</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;wangwu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> newValue <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Get</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//自增自减少</span>

                    <span class="token comment">//自增然后返回结果</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> a <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">Increment</span><span class="token punctuation">(</span><span class="token string">&quot;count&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">Increment</span><span class="token punctuation">(</span><span class="token string">&quot;count&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">Increment</span><span class="token punctuation">(</span><span class="token string">&quot;count&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Get</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;count&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//自减返回结果</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> b <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">Decrement</span><span class="token punctuation">(</span><span class="token string">&quot;countb&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">Decrement</span><span class="token punctuation">(</span><span class="token string">&quot;countb&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">Decrement</span><span class="token punctuation">(</span><span class="token string">&quot;countb&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Get</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;countb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//add和set</span>
                    <span class="token comment">//如果已经存在就添加不进去，不存在就可以添加</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Add</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;addvalue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Add</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;addvalue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Add</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;addvalue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>
                    <span class="token comment">//直接替换值</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Set</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;setvalue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Set</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;setvalue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Set</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;setvalue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>

                    <span class="token comment">//判断数据库中是否存在key</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">ContainsKey</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">ContainsKey</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//判断这个key是哪种类型</span>
                    client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Set</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> type <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetEntryType</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hash哈希" tabindex="-1"><a class="header-anchor" href="#hash哈希"><span>Hash哈希</span></a></h2><p>存储结构类似 <img src="`+o+'" alt="image.png" loading="lazy"><img src="'+c+`" alt="image.png" loading="lazy"></p><p>底层结构分为ziplist(如果总长度小于512，并且单个元素长度小于64用这个)和hastTable</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> hashId <span class="token operator">=</span> <span class="token string">&quot;stu&quot;</span><span class="token punctuation">;</span>
                    <span class="token comment">//新增</span>
                    client<span class="token punctuation">.</span><span class="token function">SetEntryInHash</span><span class="token punctuation">(</span>hashId<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//查询</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">GetValueFromHash</span><span class="token punctuation">(</span>hashId<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">SetEntryInHash</span><span class="token punctuation">(</span>hashId<span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">GetValueFromHash</span><span class="token punctuation">(</span>hashId<span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//批量的操作</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    stu<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    stu<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">SetRangeInHash</span><span class="token punctuation">(</span>hashId<span class="token punctuation">,</span> stu<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//id的值不会被替换</span>

                    <span class="token comment">//批量读取</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> dic <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetAllEntriesFromHash</span><span class="token punctuation">(</span>hashId<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//如果存在相同的k/v的时候，则新增失败，返回false，否则新增成功</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">SetEntryInHashIfNotExists</span><span class="token punctuation">(</span>hashId<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;clay&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//存储对象  必须有id，并且key是Id的值</span>
                    client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">StoreAsHash</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UserInfo<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;bbb&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> bb <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetFromHash</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UserInfo<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//读取hash里面key的总数,key列表</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> stu2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    stu2<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zhagnsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    stu2<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">SetRangeInHash</span><span class="token punctuation">(</span><span class="token string">&quot;stu2&quot;</span><span class="token punctuation">,</span> stu2<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">GetHashCount</span><span class="token punctuation">(</span><span class="token string">&quot;stu2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> keys <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetHashKeys</span><span class="token punctuation">(</span><span class="token string">&quot;stu2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取所有的key</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> values <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetHashValues</span><span class="token punctuation">(</span><span class="token string">&quot;stu2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取所有的值</span>
                    <span class="token comment">//删除hash数据集中指定key的数据</span>
                    client<span class="token punctuation">.</span><span class="token function">RemoveEntryFromHash</span><span class="token punctuation">(</span><span class="token string">&quot;stu2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">GetHashCount</span><span class="token punctuation">(</span><span class="token string">&quot;stu2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//判断hash中是否包含执行的key数据</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">HashContainsEntry</span><span class="token punctuation">(</span><span class="token string">&quot;stu2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//追加值</span>
                    client<span class="token punctuation">.</span><span class="token function">IncrementValueInHash</span><span class="token punctuation">(</span><span class="token string">&quot;stu2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> getHashStu2 <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetAllEntriesFromHash</span><span class="token punctuation">(</span><span class="token string">&quot;stu2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="list集合" tabindex="-1"><a class="header-anchor" href="#list集合"><span>List集合</span></a></h2><p><img src="`+e+`" alt="image.png" loading="lazy"> 底层数据结构：单行链表</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>					<span class="token comment">//添加</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> libai <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token string">&quot;001&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;李白&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">AddItemToList</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span> JsonConvert<span class="token punctuation">.</span><span class="token function">SerializeObject</span><span class="token punctuation">(</span>libai<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> caocao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token string">&quot;002&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;曹操&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">AddItemToList</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span> JsonConvert<span class="token punctuation">.</span><span class="token function">SerializeObject</span><span class="token punctuation">(</span>caocao<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//追加  从左侧向list添加</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> liubei <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token string">&quot;003&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;刘备&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">PushItemToList</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span> JsonConvert<span class="token punctuation">.</span><span class="token function">SerializeObject</span><span class="token punctuation">(</span>liubei<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">// 从右侧向list添加</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> guanyu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token string">&quot;004&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;关羽&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">PrependItemToList</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span> JsonConvert<span class="token punctuation">.</span><span class="token function">SerializeObject</span><span class="token punctuation">(</span>guanyu<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//设置过期时间</span>
                    client<span class="token punctuation">.</span><span class="token function">ExpireEntryAt</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">AddSeconds</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">GetListCount</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//4</span>
                    Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">GetListCount</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//4  正常应该是0的 这个延迟没有起作用</span>

                    <span class="token comment">//批量操作</span>
                    client<span class="token punctuation">.</span><span class="token function">AddRangeToList</span><span class="token punctuation">(</span><span class="token string">&quot;list2&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span> <span class="token string">&quot;00&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;11&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;222&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;333&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//根据下标读取  参数是开始下标到结束的下标</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> values <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetRangeFromList</span><span class="token punctuation">(</span><span class="token string">&quot;list2&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//list 队列    后进的先出</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> libai <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token string">&quot;001&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;李白&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">AddItemToList</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span> JsonConvert<span class="token punctuation">.</span><span class="token function">SerializeObject</span><span class="token punctuation">(</span>libai<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> caocao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token string">&quot;002&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;曹操&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">AddItemToList</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span> JsonConvert<span class="token punctuation">.</span><span class="token function">SerializeObject</span><span class="token punctuation">(</span>caocao<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> liubei <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token string">&quot;003&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;刘备&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">AddItemToList</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span> JsonConvert<span class="token punctuation">.</span><span class="token function">SerializeObject</span><span class="token punctuation">(</span>liubei<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//移除尾部并返回结果</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">RemoveEndFromList</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">RemoveEndFromList</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">RemoveEndFromList</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">RemoveEndFromList</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//移除头部，并返回结果</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">RemoveStartFromList</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">RemoveStartFromList</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">RemoveStartFromList</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//扩展</span>
                    <span class="token comment">//从一个list的尾部移除一个元素，然后把这个数据添加到另一个list头部，并返回移动的值</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">PopAndPushItemBetweenLists</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;newlist&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//获取当前key的过期时间</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">GetTimeToLive</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//修改指定下标的值</span>
                    client<span class="token punctuation">.</span><span class="token function">SetItemInList</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="set去重集合" tabindex="-1"><a class="header-anchor" href="#set去重集合"><span>Set去重集合</span></a></h2><p>自动去重的集合，底层结构分为两种，intzset和HashTable 如果值不是数字，并且长度不超过512，这个时候会默认选择intzset，其他情况使用HashTable <img src="`+u+`" alt="image.png" loading="lazy"> 值不能重复</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>         <span class="token comment">//自动去重的集合（list是一个可以重复的集合）</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> libai <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token string">&quot;001&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;lisi&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">AddItemToSet</span><span class="token punctuation">(</span><span class="token string">&quot;setid&quot;</span><span class="token punctuation">,</span> JsonConvert<span class="token punctuation">.</span><span class="token function">SerializeObject</span><span class="token punctuation">(</span>libai<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">AddItemToSet</span><span class="token punctuation">(</span><span class="token string">&quot;setid&quot;</span><span class="token punctuation">,</span> JsonConvert<span class="token punctuation">.</span><span class="token function">SerializeObject</span><span class="token punctuation">(</span>libai<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">AddItemToSet</span><span class="token punctuation">(</span><span class="token string">&quot;setid&quot;</span><span class="token punctuation">,</span> JsonConvert<span class="token punctuation">.</span><span class="token function">SerializeObject</span><span class="token punctuation">(</span>libai<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//输出数量</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">GetSetCount</span><span class="token punctuation">(</span><span class="token string">&quot;setid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//添加数组</span>
                    client<span class="token punctuation">.</span><span class="token function">AddRangeToSet</span><span class="token punctuation">(</span><span class="token string">&quot;setids&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span> <span class="token string">&quot;001&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;002&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;002&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;003&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">GetSetCount</span><span class="token punctuation">(</span><span class="token string">&quot;setids&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//获取所有值</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> sets <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetAllItemsFromSet</span><span class="token punctuation">(</span><span class="token string">&quot;setids&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//随机抽奖  随机获取集合中的任意一个元素值并返回结果</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">GetRandomItemFromSet</span><span class="token punctuation">(</span><span class="token string">&quot;setids&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">GetRandomItemFromSet</span><span class="token punctuation">(</span><span class="token string">&quot;setids&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">GetRandomItemFromSet</span><span class="token punctuation">(</span><span class="token string">&quot;setids&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">GetRandomItemFromSet</span><span class="token punctuation">(</span><span class="token string">&quot;setids&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//随机删除集合中的元素并返回结果</span>
                    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">PopItemFromSet</span><span class="token punctuation">(</span><span class="token string">&quot;setids&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//根据我们的值去删除指定元素</span>
                    client<span class="token punctuation">.</span><span class="token function">RemoveItemFromSet</span><span class="token punctuation">(</span><span class="token string">&quot;setids&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//从一个集合中移动到另一个新的集合中</span>
                    client<span class="token punctuation">.</span><span class="token function">MoveBetweenSets</span><span class="token punctuation">(</span><span class="token string">&quot;setid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;newsetid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//交叉并补</span>
                    client<span class="token punctuation">.</span><span class="token function">AddRangeToSet</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span> <span class="token string">&quot;001&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;002&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;003&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">AddRangeToSet</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span> <span class="token string">&quot;002&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;003&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;004&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> jjlist <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetIntersectFromSets</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//交集</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> bingjiList <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetUnionFromSets</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//并集</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="zset-自动去重有序集合" tabindex="-1"><a class="header-anchor" href="#zset-自动去重有序集合"><span>Zset：自动去重有序集合</span></a></h2><p>自动去重的有序集合，自动排序 底层结构zipList：有序集合保存的元素数量小于128，所有元素的长度小于64字节。 <img src="`+l+`" alt="image.png" loading="lazy"> 自动去重带排序字段集合</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>					 <span class="token comment">//添加</span>
                    client<span class="token punctuation">.</span><span class="token function">AddItemToSortedSet</span><span class="token punctuation">(</span><span class="token string">&quot;zsetid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    client<span class="token punctuation">.</span><span class="token function">AddItemToSortedSet</span><span class="token punctuation">(</span><span class="token string">&quot;zsetid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//批量添加</span>
                    client<span class="token punctuation">.</span><span class="token function">AddRangeToSortedSet</span><span class="token punctuation">(</span><span class="token string">&quot;zsetid2&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span> <span class="token string">&quot;aa&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bb&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;cc&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//获取</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> zsetlist1 <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetAllItemsFromSortedSet</span><span class="token punctuation">(</span><span class="token string">&quot;zsetid2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//正序</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> zsetlist2 <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetAllItemsFromSortedSetDesc</span><span class="token punctuation">(</span><span class="token string">&quot;zsetid2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//倒叙</span>

                    <span class="token comment">//根据下标获取  从下标索引开始   取一个</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> dic <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetRangeFromSortedSet</span><span class="token punctuation">(</span><span class="token string">&quot;zsetid2&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//获取并返回分数</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> dic2 <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetRangeWithScoresFromSortedSet</span><span class="token punctuation">(</span><span class="token string">&quot;zsetid2&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="bitmaps" tabindex="-1"><a class="header-anchor" href="#bitmaps"><span>BitMaps</span></a></h2><h2 id="hyperlogloss" tabindex="-1"><a class="header-anchor" href="#hyperlogloss"><span>HyperLogLoss</span></a></h2><h2 id="streams" tabindex="-1"><a class="header-anchor" href="#streams"><span>Streams</span></a></h2>`,21),r=[k];function d(m,g){return s(),a("div",null,r)}const q=n(i,[["render",d],["__file","redisshujuleixing.html.vue"]]),f=JSON.parse('{"path":"/dataBase/redis/redisshujuleixing/redisshujuleixing.html","title":"Redis数据类型","lang":"zh-CN","frontmatter":{"title":"Redis数据类型","lang":"zh-CN","date":"2023-08-08T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"filename":"redisshujuleixing","slug":"sxi0zo","docsId":"31906479","description":"数据结构 一种数据结构类型对应多种数据结构来实现 例如，String、Set 在存储 int 数据时，会采用整数编码存储。Hash、ZSet 在元素数量比较少时（可配置），会采用压缩列表（ziplist）存储，在存储比较多的数据时，才会转换为哈希表和跳表。 String字符串 一个键对应一个值，值是字符串 Hash哈希 存储结构类似 image.png...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/redis/redisshujuleixing/redisshujuleixing.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Redis数据类型"}],["meta",{"property":"og:description","content":"数据结构 一种数据结构类型对应多种数据结构来实现 例如，String、Set 在存储 int 数据时，会采用整数编码存储。Hash、ZSet 在元素数量比较少时（可配置），会采用压缩列表（ziplist）存储，在存储比较多的数据时，才会转换为哈希表和跳表。 String字符串 一个键对应一个值，值是字符串 Hash哈希 存储结构类似 image.png..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1615016591442-f0fdd49f-c1c1-4dd0-9ef0-0467826a16e1.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-23T15:53:24.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-08-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-23T15:53:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis数据类型\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1615016591442-f0fdd49f-c1c1-4dd0-9ef0-0467826a16e1.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1614566647851-9a4c1cf8-9a2d-43eb-b5b7-8953b94bfbee.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1622630545320-a298077b-7791-40cb-bda7-21540a9ca576.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1622630649055-ae3ae4f4-9d46-4d79-aa8e-7015418775b6.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1622630743655-9416e8ab-a38a-4e2e-ae78-3ee69ffeab82.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1622630820370-40f33194-dc98-40ca-a5fd-e3fb372e9fad.png\\"],\\"datePublished\\":\\"2023-08-08T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-23T15:53:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"数据结构","slug":"数据结构","link":"#数据结构","children":[]},{"level":2,"title":"String字符串","slug":"string字符串","link":"#string字符串","children":[]},{"level":2,"title":"Hash哈希","slug":"hash哈希","link":"#hash哈希","children":[]},{"level":2,"title":"List集合","slug":"list集合","link":"#list集合","children":[]},{"level":2,"title":"Set去重集合","slug":"set去重集合","link":"#set去重集合","children":[]},{"level":2,"title":"Zset：自动去重有序集合","slug":"zset-自动去重有序集合","link":"#zset-自动去重有序集合","children":[]},{"level":2,"title":"BitMaps","slug":"bitmaps","link":"#bitmaps","children":[]},{"level":2,"title":"HyperLogLoss","slug":"hyperlogloss","link":"#hyperlogloss","children":[]},{"level":2,"title":"Streams","slug":"streams","link":"#streams","children":[]}],"git":{"createdTime":1695484404000,"updatedTime":1695484404000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":4.96,"words":1487},"filePathRelative":"dataBase/redis/redisshujuleixing/redisshujuleixing.md","localizedDate":"2023年8月8日","excerpt":"<h2>数据结构</h2>\\n<p>一种数据结构类型对应多种数据结构来实现\\n<img src=\\"/common/1615016591442-f0fdd49f-c1c1-4dd0-9ef0-0467826a16e1.png\\" alt=\\"\\" loading=\\"lazy\\">\\n例如，String、Set 在存储 int 数据时，会采用整数编码存储。Hash、ZSet 在元素数量比较少时（可配置），会采用压缩列表（ziplist）存储，在存储比较多的数据时，才会转换为哈希表和跳表。</p>\\n<h2>String字符串</h2>\\n<p>一个键对应一个值，值是字符串</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code>\\t\\t\\t\\t\\t<span class=\\"token comment\\">//存储单个</span>\\n                    client<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Set</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"aa\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"aa\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//默认是序列化后然后存储的</span>\\n                    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> <span class=\\"token keyword\\">value</span> <span class=\\"token operator\\">=</span> client<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetValue</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"aa\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//这种方式还得序列化</span>\\n                    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> value2 <span class=\\"token operator\\">=</span> client<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Get</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"aa\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//推荐这种</span>\\n\\n                    <span class=\\"token comment\\">//批量写入</span>\\n                    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> dic <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Dictionary<span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token punctuation\\">{</span>\\n                        <span class=\\"token punctuation\\">{</span> <span class=\\"token string\\">\\"id\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"001\\"</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n                        <span class=\\"token punctuation\\">{</span> <span class=\\"token string\\">\\"name\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"lisi\\"</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n                        <span class=\\"token punctuation\\">{</span> <span class=\\"token string\\">\\"address\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"南京\\"</span><span class=\\"token punctuation\\">}</span>\\n                    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n                    client<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">SetAll</span><span class=\\"token punctuation\\">(</span>dic<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n                    <span class=\\"token comment\\">//批量读取</span>\\n                    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> list <span class=\\"token operator\\">=</span> client<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">GetAll</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\"><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span></span> <span class=\\"token punctuation\\">{</span> <span class=\\"token string\\">\\"id\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"name\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"address\\"</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n                    <span class=\\"token comment\\">//设置过期时间</span>\\n                    client<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Set</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"bbb\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"bbb\\"</span><span class=\\"token punctuation\\">,</span> TimeSpan<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">FromSeconds</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    <span class=\\"token comment\\">//指定时间过期</span>\\n                    client<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Set</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"ccc\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"ccc\\"</span><span class=\\"token punctuation\\">,</span> DateTime<span class=\\"token punctuation\\">.</span>Now<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AddDays</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n                    <span class=\\"token comment\\">//追加</span>\\n                    client<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AppendToValue</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"zhuijia\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"I\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    client<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AppendToValue</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"zhuijia\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Love\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    client<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AppendToValue</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"zhuijia\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"You\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> zhuijia <span class=\\"token operator\\">=</span> client<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Get</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"zhuijia\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n                    <span class=\\"token comment\\">//获取之前的值，然后赋值新的</span>\\n                    client<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Set</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"name\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"lisi\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> oldValue <span class=\\"token operator\\">=</span> client<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetAndSetValue</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"name\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"wangwu\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> newValue <span class=\\"token operator\\">=</span> client<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Get</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"name\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n                    <span class=\\"token comment\\">//自增自减少</span>\\n\\n                    <span class=\\"token comment\\">//自增然后返回结果</span>\\n                    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> a <span class=\\"token operator\\">=</span> client<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Increment</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"count\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    client<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Increment</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"count\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    client<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Increment</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"count\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    Console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span>client<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Get</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"count\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n                    <span class=\\"token comment\\">//自减返回结果</span>\\n                    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> b <span class=\\"token operator\\">=</span> client<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Decrement</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"countb\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    client<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Decrement</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"countb\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    client<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Decrement</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"countb\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    Console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span>client<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Get</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"countb\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n                    <span class=\\"token comment\\">//add和set</span>\\n                    <span class=\\"token comment\\">//如果已经存在就添加不进去，不存在就可以添加</span>\\n                    Console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span>client<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Add</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"addvalue\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"name\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//true</span>\\n                    Console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span>client<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Add</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"addvalue\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"name2\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//false</span>\\n                    Console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span>client<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Add</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"addvalue\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"name3\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//false</span>\\n                    <span class=\\"token comment\\">//直接替换值</span>\\n                    Console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span>client<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Set</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"setvalue\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"name\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//true</span>\\n                    Console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span>client<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Set</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"setvalue\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"name2\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//true</span>\\n                    Console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span>client<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Set</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"setvalue\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"name3\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//true</span>\\n\\n                    <span class=\\"token comment\\">//判断数据库中是否存在key</span>\\n                    Console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span>client<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ContainsKey</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"name\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    Console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span>client<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ContainsKey</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"abc\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n                    <span class=\\"token comment\\">//判断这个key是哪种类型</span>\\n                    client<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">Set</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"name\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"123\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> type <span class=\\"token operator\\">=</span> client<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetEntryType</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"name\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{q as comp,f as data};
