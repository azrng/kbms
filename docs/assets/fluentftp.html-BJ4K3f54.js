import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,a as n,d as s,e as t,b as e}from"./app-DMmdIwn0.js";const i={},u=n("h2",{id:"说明",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#说明"},[n("span",null,"说明")])],-1),r={href:"https://github.com/robinrodricks/FluentFTP",target:"_blank",rel:"noopener noreferrer"},d=e(`<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;FluentFTP&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;35.2.3&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="开始" tabindex="-1"><a class="header-anchor" href="#开始"><span>开始</span></a></h2><p>首先第一步，new一个Client：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">/*
第一个参数是FTP地址，注意要加协议名
第二个参数是端口，默认21
第三个参数是FTP用户名
第四个参数是FTP密码
正常情况下配置三个属性即可，大家按需选择:
EncryptionMode是指定加密方式，这里我选择None不加密，
DataConnectionType是连接方式，一般都是选PASV被动模式或PORT主动模式，根据FTPServer情况修改
Encoding是指定编码
*/</span>
<span class="token class-name"><span class="token keyword">var</span></span> ftpClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FtpClient</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;ftp://</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">host</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> port<span class="token punctuation">,</span> userName<span class="token punctuation">,</span> passWord<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    EncryptionMode <span class="token operator">=</span> FtpEncryptionMode<span class="token punctuation">.</span>None<span class="token punctuation">,</span>
    DataConnectionType <span class="token operator">=</span> FtpDataConnectionType<span class="token punctuation">.</span>PASV<span class="token punctuation">,</span>
    Encoding <span class="token operator">=</span> Encoding<span class="token punctuation">.</span>UTF8
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来第二步，登录FTP：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//IsConnected是判断client是否与远程服务建立了连接</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ftpClient<span class="token punctuation">.</span>IsConnected<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//发起连接登录</span>
    <span class="token keyword">await</span> ftpClient<span class="token punctuation">.</span><span class="token function">ConnectAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//启用UTF8传输</span>
    <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> ftpClient<span class="token punctuation">.</span><span class="token function">Execute</span><span class="token punctuation">(</span><span class="token string">&quot;OPTS UTF8 ON&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">.</span>Code<span class="token punctuation">.</span><span class="token function">Equals</span><span class="token punctuation">(</span><span class="token string">&quot;200&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>result<span class="token punctuation">.</span>Code<span class="token punctuation">.</span><span class="token function">Equals</span><span class="token punctuation">(</span><span class="token string">&quot;202&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        ftpClient<span class="token punctuation">.</span>Encoding <span class="token operator">=</span> Encoding<span class="token punctuation">.</span><span class="token function">GetEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;ISO-8859-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果上传的文件名称是中文，上传后文件名会变成乱码，原因是因为有一些FTPServer默认是不开启utf8编码传输的，甚至不支持utf8编码传输，这个时候需要我们手动开启一下</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>ftpClient<span class="token punctuation">.</span><span class="token function">Execute</span><span class="token punctuation">(</span><span class="token string">&quot;OPTS UTF8 ON&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个时候FTPServer会返回一个状态码，200表示开启成功；202是always enable，表示FTPServer会一直处于开启UTF-8编码的状态，不需要手动开启。 但除此之外，还有刚才提到的，FTPServer本身不支持UTF8编码的传输，这个时候我们需要将之前的Encoding设置为ISO-8859-1即可：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>ftpClient<span class="token punctuation">.</span>Encoding <span class="token operator">=</span> Encoding<span class="token punctuation">.</span><span class="token function">GetEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;ISO-8859-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>第三步，上传文件：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 上传单个文件</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sourcePath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>文件源路径<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>destPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>上传到指定的ftp文件夹路径<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">UploadFile</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> sourcePath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> destPath<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>File<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>sourcePath<span class="token punctuation">)</span><span class="token punctuation">)</span>
         <span class="token keyword">return</span><span class="token punctuation">;</span>
     <span class="token class-name"><span class="token keyword">var</span></span> fileInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileInfo</span><span class="token punctuation">(</span>sourcePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">await</span> ftpClient<span class="token punctuation">.</span><span class="token function">UploadFileAsync</span><span class="token punctuation">(</span>sourcePath<span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">destPath</span><span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">fileInfo<span class="token punctuation">.</span>Name</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">createRemoteDir</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果想批量上传文件，则使用ftpClient.UploadDirectoryAsync()，可以直接上传整个文件夹。</p><p>这里有个比较坑的地方是，如果FTPServer目录下的文件特别多（注意：不是你上传文件的数量），上传所需的时间会特别长。</p><p>在我查看了FTPServer日志后发现，在使用UploadDirectoryAsync()的时候，FluentFTP会先去获取所有文件和文件夹的列表，在获取完所有列表信息后，才开始上传操作，非常浪费时间。在尝试解决无果后，我去github上找了一下，作者的回复是：</p><p>Currently we support 2 modes, update and mirror. In any mode, the remote directory is fully listed, then compared, then the actually upload begins. This is done in order to skip files that are already uploaded. We can support a third mode, maybe like BlindTransfer which will not list the remote directory.</p><p>google翻译：目前，我们支持2种模式：更新和镜像。在任何模式下，远程目录都会完整列出，然后进行比较，然后开始实际的上载。这样做是为了跳过已经上传的文件。我们可以支持第三种模式，例如BlindTransfer，它不会列出远程目录。</p><p>但在目前最新版本33.0.3版本下，仍旧只支持Mirror和Update两种模式。</p>`,19),k={href:"https://github.com/robinrodricks/FluentFTP/issues/616",target:"_blank",rel:"noopener noreferrer"},m=e(`<p>所以，如果需要批量上传，可以在单文件上传的基础上自己再做一层封装，至于其它的下载、删除、查看等功能，暂未发现其它的坑，环境.net core 3.1。</p><p>这里举几个常用的方法，其余的不在这里赘述，大家看文档和框架的注释就行：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//下载文件</span>
ftpClient<span class="token punctuation">.</span><span class="token function">DownloadFileAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//下载文件夹</span>
ftpClient<span class="token punctuation">.</span><span class="token function">DownloadDirectoryAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//删除文件</span>
ftpClient<span class="token punctuation">.</span><span class="token function">DeleteFileAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//删除文件夹</span>
ftpClient<span class="token punctuation">.</span><span class="token function">DeleteDirectoryAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//判断文件是否存在</span>
ftpClient<span class="token punctuation">.</span><span class="token function">FileExistsAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//判断文件夹是否存在</span>
ftpClient<span class="token punctuation">.</span><span class="token function">DirectoryExistsAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//获取列表的详细信息</span>
ftpClient<span class="token punctuation">.</span><span class="token function">GetListingAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后，记住登出、释放资源：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>ftpClient<span class="token punctuation">.</span>IsConnected<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//关闭</span>
    <span class="token keyword">await</span> ftpClient<span class="token punctuation">.</span><span class="token function">DisconnectAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ftpClient<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>FluentFTP除了上述的坑以外，功能还是非常齐全、强大的，提供了各种各样的方法和配置.</p><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,7),v={href:"https://mp.weixin.qq.com/s/RcDDPjYiZt6ak5DvVyj0Pg",target:"_blank",rel:"noopener noreferrer"};function g(h,b){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[s("项目中经常涉及到将文件批量上传到其它空间或服务器，这个时候我们有可能需要用到FTP协议进行传输，所以这里我推荐使用FluentFTP，一款很好用的FTP传输框架。 github地址："),n("a",r,[s("https://github.com/robinrodricks/FluentFTP"),t(a)])]),d,n("p",null,[s("Issues："),n("a",k,[s("https://github.com/robinrodricks/FluentFTP/issues/616"),t(a)])]),m,n("p",null,[n("a",v,[s("https://mp.weixin.qq.com/s/RcDDPjYiZt6ak5DvVyj0Pg"),t(a)]),s(" | 快速高效的C#FTP文件传输库FluentFTP")])])}const y=p(i,[["render",g],["__file","fluentftp.html.vue"]]),T=JSON.parse('{"path":"/dotnet/commonNuget/fluentftp.html","title":"FluentFTP","lang":"zh-CN","frontmatter":{"title":"FluentFTP","lang":"zh-CN","date":"2023-09-12T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"fluentftp","slug":"uocoh8","docsId":"29435934","description":"说明 项目中经常涉及到将文件批量上传到其它空间或服务器，这个时候我们有可能需要用到FTP协议进行传输，所以这里我推荐使用FluentFTP，一款很好用的FTP传输框架。 github地址：https://github.com/robinrodricks/FluentFTP 安装 开始 首先第一步，new一个Client： 接下来第二步，登录FTP： 如...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/commonNuget/fluentftp.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"FluentFTP"}],["meta",{"property":"og:description","content":"说明 项目中经常涉及到将文件批量上传到其它空间或服务器，这个时候我们有可能需要用到FTP协议进行传输，所以这里我推荐使用FluentFTP，一款很好用的FTP传输框架。 github地址：https://github.com/robinrodricks/FluentFTP 安装 开始 首先第一步，new一个Client： 接下来第二步，登录FTP： 如..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-06T08:01:13.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-06T08:01:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"FluentFTP\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-06T08:01:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"说明","slug":"说明","link":"#说明","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"开始","slug":"开始","link":"#开始","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1712390473000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":3.66,"words":1097},"filePathRelative":"dotnet/commonNuget/fluentftp.md","localizedDate":"2023年9月12日","excerpt":"<h2>说明</h2>\\n<p>项目中经常涉及到将文件批量上传到其它空间或服务器，这个时候我们有可能需要用到FTP协议进行传输，所以这里我推荐使用FluentFTP，一款很好用的FTP传输框架。\\ngithub地址：<a href=\\"https://github.com/robinrodricks/FluentFTP\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/robinrodricks/FluentFTP</a></p>\\n<h2>安装</h2>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">PackageReference</span> Include<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"FluentFTP\\"</span> Version<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"35.2.3\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n</code></pre></div>","autoDesc":true}');export{y as comp,T as data};
