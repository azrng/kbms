import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,o as a,d as t}from"./app-mrI7cTrN.js";const n={},o=t('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>NET Compiler Platform (Roslyn) 分析器会检查 C## 或 Visual Basic 代码的代码质量和样式问题。 从 .NET 5 开始，这些分析器包含在 .NET SDK 中，无需单独安装。 如果项目面向 .NET 5 或更高版本，则默认启用代码分析(无需在配置)。 如果项目面向其他 .NET 实现（例如 .NET Core(低版本)、.NET Standard 或 .NET Framework），则必须将 EnableNETAnalyzers 属性设置为 来手动启用代码分析。 如果你不想移动到 .NET 5+ SDK、具有非 SDK 样式的 .NET Framework 项目或更倾向于使用基于 NuGet 包的模型，则也可以安装Nuget包 Microsoft.CodeAnalysis.NetAnalyzers来使用该分析器。</p><p>通过代码质量分析(CAxxxx)规则，可在代码库中检查C#或Visual Basic代码的安全性、性能、设计及其他问题。 通过代码样式分析(IDExxxx)规则，可在代码库中定义和维护一致的代码样式。</p><h2 id="第三方分析器" tabindex="-1"><a class="header-anchor" href="#第三方分析器"><span>第三方分析器</span></a></h2><p>除了官方 .NET 分析器外，你也可以安装第三方分析器，如 <a href="https://www.nuget.org/packages/StyleCop.Analyzers/" target="_blank" rel="noopener noreferrer">StyleCop</a>、<a href="https://www.nuget.org/packages/Roslynator.Analyzers/" target="_blank" rel="noopener noreferrer">Roslynator</a>、<a href="https://www.nuget.org/packages/xunit.analyzers/" target="_blank" rel="noopener noreferrer">XUnit Analyzers</a> 和 <a href="https://www.nuget.org/packages/SonarAnalyzer.CSharp/" target="_blank" rel="noopener noreferrer">Sonar Analyzer</a>。</p><h3 id="sonarlint" tabindex="-1"><a class="header-anchor" href="#sonarlint"><span>SonarLint</span></a></h3><p>官网：<a href="https://www.sonarsource.com/products/sonarlint/" target="_blank" rel="noopener noreferrer">https://www.sonarsource.com/products/sonarlint/</a> 包含有VS扩展：<a href="https://marketplace.visualstudio.com/items?itemName=SonarSource.SonarLintforVisualStudio2022" target="_blank" rel="noopener noreferrer">https://marketplace.visualstudio.com/items?itemName=SonarSource.SonarLintforVisualStudio2022</a> 关于C#的静态分析规则：<a href="https://rules.sonarsource.com/csharp" target="_blank" rel="noopener noreferrer">https://rules.sonarsource.com/csharp</a></p><p><a href="https://www.cnblogs.com/myzony/p/9233667.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/myzony/p/9233667.html</a> | (oﾟvﾟ)ノ Hi - 使用 SonarQube 来分析 .NET Core 项目代码问题 <a href="https://blog.csdn.net/zuozewei/article/details/88874240" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/zuozewei/article/details/88874240</a> | Visual Studio 中使用 SonarLint 分析 C## 代码_zuozewei的博客-CSDN博客_sonarlint分析</p><p>Nuget包：<a href="https://www.nuget.org/packages/SonarAnalyzer.CSharp" target="_blank" rel="noopener noreferrer">https://www.nuget.org/packages/SonarAnalyzer.CSharp</a> 介绍：Roslyn 分析器可发现代码中的错误、漏洞和代码异味。为了获得更好的整体体验，您可以使用 SonarLint for Visual Studio 或 Rider，这是一个免费的扩展 （<a href="https://www.sonarlint.org/visualstudio/" target="_blank" rel="noopener noreferrer">https://www.sonarlint.org/visualstudio/</a>），可以独立使用，也可以与 SonarQube （<a href="https://www.sonarqube.org/" target="_blank" rel="noopener noreferrer">https://www.sonarqube.org/</a>） 和/或 SonarCloud （<a href="https://sonarcloud.io/" target="_blank" rel="noopener noreferrer">https://sonarcloud.io/</a>） 一起使用。</p><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><p>源代码分析：<a href="https://docs.microsoft.com/zh-cn/dotnet/fundamentals/code-analysis/overview" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/zh-cn/dotnet/fundamentals/code-analysis/overview</a></p>',11),s=[o];function l(i,p){return a(),r("div",null,s)}const d=e(n,[["render",l],["__file","yuandaimafenxi.html.vue"]]),m=JSON.parse('{"path":"/dotnet/daimafenxi/yuandaimafenxi.html","title":"源代码分析","lang":"zh-CN","frontmatter":{"title":"源代码分析","lang":"zh-CN","date":"2023-06-13T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"yuandaimafenxi","slug":"liqkdy","docsId":"70146455","description":"概述 NET Compiler Platform (Roslyn) 分析器会检查 C## 或 Visual Basic 代码的代码质量和样式问题。 从 .NET 5 开始，这些分析器包含在 .NET SDK 中，无需单独安装。 如果项目面向 .NET 5 或更高版本，则默认启用代码分析(无需在配置)。 如果项目面向其他 .NET 实现（例如 .NET ...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/daimafenxi/yuandaimafenxi.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"源代码分析"}],["meta",{"property":"og:description","content":"概述 NET Compiler Platform (Roslyn) 分析器会检查 C## 或 Visual Basic 代码的代码质量和样式问题。 从 .NET 5 开始，这些分析器包含在 .NET SDK 中，无需单独安装。 如果项目面向 .NET 5 或更高版本，则默认启用代码分析(无需在配置)。 如果项目面向其他 .NET 实现（例如 .NET ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-06-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"源代码分析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-13T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"第三方分析器","slug":"第三方分析器","link":"#第三方分析器","children":[{"level":3,"title":"SonarLint","slug":"sonarlint","link":"#sonarlint","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.65,"words":496},"filePathRelative":"dotnet/daimafenxi/yuandaimafenxi.md","localizedDate":"2023年6月13日","excerpt":"<h2>概述</h2>\\n<p>NET Compiler Platform (Roslyn) 分析器会检查 C## 或 Visual Basic 代码的代码质量和样式问题。 从 .NET 5 开始，这些分析器包含在 .NET SDK 中，无需单独安装。 如果项目面向 .NET 5 或更高版本，则默认启用代码分析(无需在配置)。 如果项目面向其他 .NET 实现（例如 .NET Core(低版本)、.NET Standard 或 .NET Framework），则必须将 EnableNETAnalyzers 属性设置为 来手动启用代码分析。\\n如果你不想移动到 .NET 5+ SDK、具有非 SDK 样式的 .NET Framework 项目或更倾向于使用基于 NuGet 包的模型，则也可以安装Nuget包 Microsoft.CodeAnalysis.NetAnalyzers来使用该分析器。</p>","autoDesc":true}');export{d as comp,m as data};
