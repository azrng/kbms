import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as i,c,a,d as n,e as s,b as o}from"./app-qB9_Bjjp.js";const p="/kbms/common/1630392393921-c9133767-a427-43ac-b77a-96685c75485b.png",r="/kbms/common/1630392436742-b7a1a83e-d915-430d-a960-f1612a97a4e4.png",d="/kbms/common/1630392346545-d3be811e-20e6-4b75-85a2-1981b345a0af.png",m="/kbms/common/1630393079166-dcd56a70-64f3-41dd-8e48-4d97d69cbdf5.png",u="/kbms/common/1630393092662-6540ad2c-d30e-4bee-8dac-48b234344ede.png",b="/kbms/common/1630393112625-6ee295f7-70e6-4a1c-a3f0-194d972f223c.png",g="/kbms/common/1630393132266-4b5613af-43c7-41cf-88ec-da38a3db7e70.png",v="/kbms/common/1630393150839-203c3d29-88c8-4c59-9af1-273e8bce2933.png",k={},h=a("h2",{id:"概述",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#概述"},[a("span",null,"概述")])],-1),y=a("p",null,"Gitlab是利用 Ruby on Rails 一个开源的版本管理系统，实现一个自托管的Git项目仓库，可通过Web界面进行访问公开的或者私人项目。 Gitlab-CI就是一套配合GitLab使用的持续集成系统，GitLab8.0以后的版本是默认集成了GitLab-CI并且默认启用的。 Gitlab-Pages是一个go语言写的HTTP服务，原来只在Gitlab.com和Gitlab企业版中可用，在8.17版本的时候在Gitlab社区版支持。 Gitlab-Runner是配合GitLab-CI进行使用的，它是一个用来执行软件集成脚本的工具。",-1),_={href:"https://mp.weixin.qq.com/s/nqpXN75M5vMUtmzVcgewVg",target:"_blank",rel:"noopener noreferrer"},f=o(`<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><h3 id="生成容器" tabindex="-1"><a class="header-anchor" href="#生成容器"><span>生成容器</span></a></h3><p>下面的脚本只是测试使用，不建议生产使用(像一些挂载的需要自行处理)</p><h4 id="docker-compose" tabindex="-1"><a class="header-anchor" href="#docker-compose"><span>docker-compose</span></a></h4><blockquote><p>安装Gitlab要求内存至少是4g</p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3&#39;</span>
 
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">gitlab</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">&#39;gitlab/gitlab-ce:14.10.2-ce.0&#39;</span>
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always                  
    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> <span class="token string">&#39;www.mygitlab.com&#39;</span>
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">TZ</span><span class="token punctuation">:</span> <span class="token string">&#39;Asia/Shanghai&#39;</span>       
      <span class="token key atrule">GITLAB_OMNIBUS_CONFIG</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
        external_url &#39;http://172.16.0.86:3000&#39;  ## web站点访问地址
        gitlab_rails[&#39;gitlab_shell_ssh_port&#39;] = 2222</span>
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">&#39;3000:3000&#39;</span> <span class="token comment">## 注意宿主机和容器内部的端口要一致，否则external_url无法访问</span>
      <span class="token punctuation">-</span> <span class="token string">&#39;8443:443&#39;</span>
      <span class="token punctuation">-</span> <span class="token string">&#39;2222:22&#39;</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> ./config<span class="token punctuation">:</span>/etc/gitlab
      <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/var/opt/gitlab
      <span class="token punctuation">-</span> ./logs<span class="token punctuation">:</span>/var/log/gitlab
    <span class="token key atrule">logging</span><span class="token punctuation">:</span> 
      <span class="token key atrule">driver</span><span class="token punctuation">:</span> <span class="token string">&quot;json-file&quot;</span>
      <span class="token key atrule">options</span><span class="token punctuation">:</span> 
        <span class="token key atrule">max-size</span><span class="token punctuation">:</span> <span class="token string">&quot;2g&quot;</span>
        <span class="token key atrule">max-file</span><span class="token punctuation">:</span> <span class="token string">&quot;2&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>docker</span></a></h4><p>这里是9006:9006是因为external_url 配置了9006，请往下看</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">## 挂载</span>
<span class="token function">docker</span> run <span class="token parameter variable">-d</span>  <span class="token parameter variable">-p</span> <span class="token number">9443</span>:443 <span class="token parameter variable">-p</span> <span class="token number">9006</span>:9006 <span class="token parameter variable">-p</span> <span class="token number">9022</span>:22 <span class="token parameter variable">--name</span> gitlab <span class="token parameter variable">--restart</span> always <span class="token parameter variable">-v</span> /home/gitlab/config:/etc/gitlab <span class="token parameter variable">-v</span> /home/gitlab/logs:/var/log/gitlab <span class="token parameter variable">-v</span> /home/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce

<span class="token comment">## 不挂载</span>
<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">9443</span>:443 <span class="token parameter variable">-p</span> <span class="token number">443</span>:443 <span class="token parameter variable">-p</span> <span class="token number">9006</span>:9006 <span class="token parameter variable">-p</span> <span class="token number">9022</span>:22 <span class="token parameter variable">--name</span> gitlab gitlab/gitlab-ce

<span class="token comment">## windows挂载</span>
<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">9443</span>:443 <span class="token parameter variable">-p</span> <span class="token number">9006</span>:9006 <span class="token parameter variable">-p</span> <span class="token number">9022</span>:22 <span class="token parameter variable">--name</span> gitlab  <span class="token parameter variable">-v</span>  D:/Soft/gitlab/etcconfig:/etc/gitlab  gitlab/gitlab-ce
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>-d：后台运行 -p：将容器内部端口向外映射 --name：命名容器名称 -v：将容器内数据文件夹或者日志、配置等文件夹挂载到宿主机指定目录</p></blockquote><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h3><p><img src="`+p+'" alt="image.png" loading="lazy"> 进入容器内去编辑配置或者编辑挂载目录的文件 <img src="'+r+`" alt="image.png" loading="lazy"></p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>docker exec <span class="token punctuation">-</span>it gitlab bash
vi /etc/gitlab/gitlab.rb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>该文件要修改的配置是注释状态，所以直接可以在文件头部增加配置</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>external_url &#39;http<span class="token punctuation">:</span>//172.30.112.1<span class="token punctuation">:</span>9006&#39;
<span class="token comment">#ssh主机ip</span>
gitlab_rails<span class="token punctuation">[</span><span class="token string">&#39;gitlab_ssh_host&#39;</span><span class="token punctuation">]</span> = &#39;172.30.112.1&#39;
<span class="token comment">## ssh连接端口</span>
gitlab_rails<span class="token punctuation">[</span><span class="token string">&#39;gitlab_shell_ssh_port&#39;</span><span class="token punctuation">]</span> = 9022
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存并退出，然后gitlab.yml该文件可以编辑也可以不编辑(因为gitlab.rb内配置会覆盖这个，为了防止没有成功覆盖所以我在这里进行配置)</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>vi opt/gitlab/embedded/service/gitlab<span class="token punctuation">-</span>rails/config/gitlab.yml
修改：gitlab setting=》host（172.30.112.1） 、port（9006）、ssh_host（172.30.112.1）
		 gitlab shell setting =》ssh_port（9022）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存退出，在容器内执行更新配置</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>gitlab<span class="token punctuation">-</span>ctl reconfigure
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重启服务</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>gitlab<span class="token punctuation">-</span>ctl restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="查找密码" tabindex="-1"><a class="header-anchor" href="#查找密码"><span>查找密码</span></a></h4><p>gitlab默认用户是root， 不进入容器直接查询初始密码</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>docker exec <span class="token punctuation">-</span>it gitlab grep &#39;Password<span class="token punctuation">:</span>&#39; /etc/gitlab/initial_root_password
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在容器内查找初始密码</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>cat /etc/gitlab/initial_root_password
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+d+`" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h4 id="容器内修改密码" tabindex="-1"><a class="header-anchor" href="#容器内修改密码"><span>容器内修改密码</span></a></h4><p>在容器内进入gitlab的bin目录</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>cd /opt/gitlab/bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行gitlab-rails console命令 <img src="`+m+'" alt="image.png" loading="lazy"> 找到root的用户，输入u=User.where(id:1).first，然后回车 <img src="'+u+`" alt="image.png" loading="lazy"> 修改password，输入u.password=&#39;123456789&#39;然后回车</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>u.password=&#39;123456789&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+b+`" alt="image.png" loading="lazy"> 修改确认密码</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>u.password_confirmation=&#39;123456789&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+g+'" alt="image.png" loading="lazy"> 保存修改，输入u.save，然后回车，等到输出true，这时，密码修改成功。 <img src="'+v+'" alt="image.png" loading="lazy"> 这里密码已经修改成功，可以用123456789密码登录进去了</p><h2 id="注意点" tabindex="-1"><a class="header-anchor" href="#注意点"><span>注意点</span></a></h2>',36),x={href:"http://172.30.112.1:9006",target:"_blank",rel:"noopener noreferrer"},G=a("h2",{id:"参考文档",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#参考文档"},[a("span",null,"参考文档")])],-1),z={href:"https://docs.gitlab.com/ee/install/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://blog.csdn.net/weixin_45649746/article/details/119816809",target:"_blank",rel:"noopener noreferrer"};function q(T,C){const e=l("ExternalLinkIcon");return i(),c("div",null,[h,y,a("blockquote",null,[a("p",null,[n("来源："),a("a",_,[n("https://mp.weixin.qq.com/s/nqpXN75M5vMUtmzVcgewVg"),s(e)])])]),f,a("p",null,[n("因为我们想是实现将容器内的80端口往外映射，所以我们在docker run的时候设置了-p 9006:80，但是因为我们在代码里面配置了external_url "),a("a",x,[n("http://172.30.112.1:9006"),s(e)]),n("后就应该使用-p 9006:9006否则一直访问不到。")]),G,a("p",null,[n("官网："),a("a",z,[n("https://docs.gitlab.com/ee/install/"),s(e)]),n(" docker安装gitlab： "),a("a",w,[n("https://blog.csdn.net/weixin_45649746/article/details/119816809"),s(e)])])])}const N=t(k,[["render",q],["__file","anzhuang.html.vue"]]),P=JSON.parse('{"path":"/cloud/ciAndCd/gitlab/anzhuang.html","title":"安装","lang":"zh-CN","frontmatter":{"title":"安装","lang":"zh-CN","date":"2023-09-08T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["cloud"],"tag":["无"],"filename":"anzhuang","slug":"idxata","docsId":"52169771","description":"概述 Gitlab是利用 Ruby on Rails 一个开源的版本管理系统，实现一个自托管的Git项目仓库，可通过Web界面进行访问公开的或者私人项目。 Gitlab-CI就是一套配合GitLab使用的持续集成系统，GitLab8.0以后的版本是默认集成了GitLab-CI并且默认启用的。 Gitlab-Pages是一个go语言写的HTTP服务，原来...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/cloud/ciAndCd/gitlab/anzhuang.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"安装"}],["meta",{"property":"og:description","content":"概述 Gitlab是利用 Ruby on Rails 一个开源的版本管理系统，实现一个自托管的Git项目仓库，可通过Web界面进行访问公开的或者私人项目。 Gitlab-CI就是一套配合GitLab使用的持续集成系统，GitLab8.0以后的版本是默认集成了GitLab-CI并且默认启用的。 Gitlab-Pages是一个go语言写的HTTP服务，原来..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1630392393921-c9133767-a427-43ac-b77a-96685c75485b.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-24T07:50:54.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-24T07:50:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"安装\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1630392393921-c9133767-a427-43ac-b77a-96685c75485b.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1630392436742-b7a1a83e-d915-430d-a960-f1612a97a4e4.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1630392346545-d3be811e-20e6-4b75-85a2-1981b345a0af.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1630393079166-dcd56a70-64f3-41dd-8e48-4d97d69cbdf5.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1630393092662-6540ad2c-d30e-4bee-8dac-48b234344ede.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1630393112625-6ee295f7-70e6-4a1c-a3f0-194d972f223c.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1630393132266-4b5613af-43c7-41cf-88ec-da38a3db7e70.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1630393150839-203c3d29-88c8-4c59-9af1-273e8bce2933.png\\"],\\"datePublished\\":\\"2023-09-08T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-24T07:50:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"生成容器","slug":"生成容器","link":"#生成容器","children":[{"level":4,"title":"docker-compose","slug":"docker-compose","link":"#docker-compose","children":[]},{"level":4,"title":"docker","slug":"docker","link":"#docker","children":[]}]},{"level":3,"title":"配置","slug":"配置","link":"#配置","children":[{"level":4,"title":"查找密码","slug":"查找密码","link":"#查找密码","children":[]},{"level":4,"title":"容器内修改密码","slug":"容器内修改密码","link":"#容器内修改密码","children":[]}]}]},{"level":2,"title":"注意点","slug":"注意点","link":"#注意点","children":[]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1695541854000,"updatedTime":1695541854000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":3.18,"words":954},"filePathRelative":"cloud/ciAndCd/gitlab/anzhuang.md","localizedDate":"2023年9月8日","excerpt":"<h2>概述</h2>\\n<p>Gitlab是利用 Ruby on Rails 一个开源的版本管理系统，实现一个自托管的Git项目仓库，可通过Web界面进行访问公开的或者私人项目。\\nGitlab-CI就是一套配合GitLab使用的持续集成系统，GitLab8.0以后的版本是默认集成了GitLab-CI并且默认启用的。\\nGitlab-Pages是一个go语言写的HTTP服务，原来只在Gitlab.com和Gitlab企业版中可用，在8.17版本的时候在Gitlab社区版支持。\\nGitlab-Runner是配合GitLab-CI进行使用的，它是一个用来执行软件集成脚本的工具。</p>\\n<blockquote>\\n<p>来源：<a href=\\"https://mp.weixin.qq.com/s/nqpXN75M5vMUtmzVcgewVg\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://mp.weixin.qq.com/s/nqpXN75M5vMUtmzVcgewVg</a></p>\\n</blockquote>","autoDesc":true}');export{N as comp,P as data};
