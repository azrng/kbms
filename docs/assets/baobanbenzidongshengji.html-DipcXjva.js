import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as n,d as t}from"./app-CBxp4zeL.js";const e={},o=t(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>因为公司有自己的私有包服务，但是在发包的过程中，时常会出现忘记升级包版本的情况，导致需要重新发包，就显得比较麻烦，于是就有了实现自动升级包版本的想法。鉴于服务是区分为四个环境的（dev，test，staging和master），所以对应的包版本标识也应该有四个。 预设的环境与包版本标识对应关系如下</p><table><thead><tr><th>环境</th><th>包版本标识</th><th>举例</th></tr></thead><tbody><tr><td>dev</td><td>alpha</td><td>1.0.1-alpha.2108211136</td></tr><tr><td>test</td><td>beta</td><td>1.0.1-beta.2108211137</td></tr><tr><td>staging</td><td>rc</td><td>1.0.1-rc.2108211138</td></tr><tr><td>master</td><td>release</td><td>1.0.1.2</td></tr></tbody></table><h2 id="自动升级包版本" tabindex="-1"><a class="header-anchor" href="#自动升级包版本"><span>自动升级包版本</span></a></h2><p>自动升级包版本是实现通过调整csproj文件的配置来实现的。 两个生成版本号的逻辑</p><ol><li>版本号由每次编译打包时的当前时间去确定的。</li><li>版本号通过传入的参数去确定的。</li></ol><h3 id="版本号由每次编译打包时的当前时间去确定的" tabindex="-1"><a class="header-anchor" href="#版本号由每次编译打包时的当前时间去确定的"><span>版本号由每次编译打包时的当前时间去确定的</span></a></h3><p>打开需要实现自动升级包版本的项目的csproj文件,调整如下</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">Project</span> Sdk<span class="token operator">=</span><span class="token string">&quot;Microsoft.NET.Sdk&quot;</span><span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span>PropertyGroup<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>TargetFramework<span class="token operator">&gt;</span>net7<span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>TargetFramework<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>ImplicitUsings<span class="token operator">&gt;</span>enable<span class="token operator">&lt;</span><span class="token operator">/</span>ImplicitUsings<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>Nullable<span class="token operator">&gt;</span>enable<span class="token operator">&lt;</span><span class="token operator">/</span>Nullable<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>编译时候是否生成nuget包<span class="token operator">--</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>GeneratePackageOnBuild<span class="token operator">&gt;</span><span class="token boolean">true</span><span class="token operator">&lt;</span><span class="token operator">/</span>GeneratePackageOnBuild<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>包环境标识<span class="token operator">--</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>PackageVersion<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>PackageVersion<span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span><span class="token operator">/</span>PropertyGroup<span class="token operator">&gt;</span>

	<span class="token operator">&lt;</span>PropertyGroup<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>版本<span class="token operator">--</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>VersionPrefix<span class="token operator">&gt;</span><span class="token number">1.0</span><span class="token number">.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>VersionPrefix<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>VersionSuffix顺序不能乱<span class="token operator">--</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token class-name">VersionSuffix</span> Condition<span class="token operator">=</span><span class="token string">&quot;&#39;$(Package_Version)&#39; == &#39;&#39;&quot;</span><span class="token operator">&gt;</span>alpha<span class="token punctuation">.</span>$<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>DateTime</span></span><span class="token punctuation">]</span><span class="token punctuation">::</span>Now<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span>\`yyMMddHHmm\`<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>VersionSuffix<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token class-name">VersionSuffix</span> Condition<span class="token operator">=</span><span class="token string">&quot;&#39;$(Package_Version)&#39; != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>$<span class="token punctuation">(</span>Package_Version<span class="token punctuation">)</span><span class="token punctuation">.</span>$<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>DateTime</span></span><span class="token punctuation">]</span><span class="token punctuation">::</span>Now<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span>\`yyMMddHHmm\`<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>VersionSuffix<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token class-name">VersionSuffix</span> Condition<span class="token operator">=</span><span class="token string">&quot;&#39;$(Package_Version)&#39; == &#39;release&#39;&quot;</span> <span class="token operator">&gt;</span>$<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>DateTime</span></span><span class="token punctuation">]</span><span class="token punctuation">::</span>UtcNow<span class="token punctuation">.</span>Date<span class="token punctuation">.</span><span class="token function">Subtract</span><span class="token punctuation">(</span>$<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>DateTime</span></span><span class="token punctuation">]</span><span class="token punctuation">::</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;2021-01-01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>TotalDays<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>VersionSuffix<span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span><span class="token operator">/</span>PropertyGroup<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span><span class="token operator">/</span>Project<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 VersionPrefix 为包版本的前缀，VersionSuffix 为包版本的后缀，两个组合起来为当前的包版本。Package_Version 为自定义参数，用于辅助生成对应环境的nuget包，不传默认为是alpha，即对应dev环境的包。 每次build都会生成一个新的包,包的环境默认为alpha，版本号为build时的当前时间。如果需要打包其他环境的包可以通过打包命令去生成。 打包命令为</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>dotnet build <span class="token operator">/</span>p<span class="token punctuation">:</span>Package_Version<span class="token operator">=</span>alpha
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="版本号通过传入的参数去确定的" tabindex="-1"><a class="header-anchor" href="#版本号通过传入的参数去确定的"><span>版本号通过传入的参数去确定的</span></a></h3><p>打开需要实现自动升级包版本的项目的csproj文件,调整如下</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">Project</span> Sdk<span class="token operator">=</span><span class="token string">&quot;Microsoft.NET.Sdk&quot;</span><span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span>PropertyGroup<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>TargetFramework<span class="token operator">&gt;</span>net7<span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>TargetFramework<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>ImplicitUsings<span class="token operator">&gt;</span>enable<span class="token operator">&lt;</span><span class="token operator">/</span>ImplicitUsings<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>Nullable<span class="token operator">&gt;</span>enable<span class="token operator">&lt;</span><span class="token operator">/</span>Nullable<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>GeneratePackageOnBuild<span class="token operator">&gt;</span><span class="token boolean">true</span><span class="token operator">&lt;</span><span class="token operator">/</span>GeneratePackageOnBuild<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>编译时是否生成nuget包<span class="token operator">--</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>Package_Version<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Package_Version<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>包环境标识<span class="token operator">--</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>Build_Version<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Build_Version<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>包版本号标识<span class="token operator">--</span><span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span><span class="token operator">/</span>PropertyGroup<span class="token operator">&gt;</span>

	<span class="token operator">&lt;</span>PropertyGroup<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>版本<span class="token operator">--</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>VersionPrefix<span class="token operator">&gt;</span><span class="token number">1.0</span><span class="token number">.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>VersionPrefix<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>VersionSuffix顺序不能乱<span class="token operator">--</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token class-name">VersionSuffix</span> Condition<span class="token operator">=</span><span class="token string">&quot;&#39;$(Package_Version)&#39; == &#39;&#39;&quot;</span><span class="token operator">&gt;</span>alpha<span class="token punctuation">.</span>$<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">System<span class="token punctuation">.</span>DateTime</span></span><span class="token punctuation">]</span><span class="token punctuation">::</span>Now<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span>\`yyMMddHHmm\`<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>VersionSuffix<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token class-name">VersionSuffix</span> Condition<span class="token operator">=</span><span class="token string">&quot;&#39;$(Package_Version)&#39; != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>$<span class="token punctuation">(</span>Package_Version<span class="token punctuation">)</span><span class="token punctuation">.</span>$<span class="token punctuation">(</span>Build_Version<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>VersionSuffix<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token class-name">VersionSuffix</span> Condition<span class="token operator">=</span><span class="token string">&quot;&#39;$(Package_Version)&#39;==&#39;release&#39;&quot;</span><span class="token operator">&gt;</span>$<span class="token punctuation">(</span>Build_Version<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>VersionSuffix<span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span><span class="token operator">/</span>PropertyGroup<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Project<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 VersionPrefix 为包版本的前缀，VersionSuffix 为包版本的后缀，两个组合起来为当前的包版本。Package_Version 为自定义参数，用于辅助生成对应环境的nuget包，不传默认为是alpha，即对应dev环境的包。Build_Version 为自定义参数，用于指定生成包的最后一位版本号。 每次build都会生成一个新的包,包的环境默认为alpha，版本号为build时的当前时间。如果需要打包其他环境的包或者指定版本号的包可以通过打包命令去生成。命令如下 打包命令为</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>dotnet build <span class="token operator">/</span>p<span class="token punctuation">:</span>Package_Version<span class="token operator">=</span>alpha <span class="token operator">/</span>p<span class="token punctuation">:</span>Build_Version<span class="token operator">=</span><span class="token number">11</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="资料来源" tabindex="-1"><a class="header-anchor" href="#资料来源"><span>资料来源</span></a></h2><p>来源: 小猫的代码之旅 文章作者: caty 文章链接: https://blog.chcaty.cn/2021/08/22/net-core-nuget-bao-ban-ben-zi-dong-sheng-ji-shi-xian 本文章著作权归作者所有，任何形式的转载都请注明出处。</p>`,18),p=[o];function r(l,c){return s(),n("div",null,p)}const u=a(e,[["render",r],["__file","baobanbenzidongshengji.html.vue"]]),d=JSON.parse('{"path":"/dotnet/nuget/baobanbenzidongshengji.html","title":"包版本自动升级","lang":"zh-CN","frontmatter":{"title":"包版本自动升级","lang":"zh-CN","date":"2023-03-16T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"baobanbenzidongshengji","slug":"gkg6fpdqqb7dg310","docsId":"113668819","description":"前言 因为公司有自己的私有包服务，但是在发包的过程中，时常会出现忘记升级包版本的情况，导致需要重新发包，就显得比较麻烦，于是就有了实现自动升级包版本的想法。鉴于服务是区分为四个环境的（dev，test，staging和master），所以对应的包版本标识也应该有四个。 预设的环境与包版本标识对应关系如下 自动升级包版本 自动升级包版本是实现通过调整cs...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/nuget/baobanbenzidongshengji.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"包版本自动升级"}],["meta",{"property":"og:description","content":"前言 因为公司有自己的私有包服务，但是在发包的过程中，时常会出现忘记升级包版本的情况，导致需要重新发包，就显得比较麻烦，于是就有了实现自动升级包版本的想法。鉴于服务是区分为四个环境的（dev，test，staging和master），所以对应的包版本标识也应该有四个。 预设的环境与包版本标识对应关系如下 自动升级包版本 自动升级包版本是实现通过调整cs..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T15:13:29.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-03-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-27T15:13:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"包版本自动升级\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-27T15:13:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"自动升级包版本","slug":"自动升级包版本","link":"#自动升级包版本","children":[{"level":3,"title":"版本号由每次编译打包时的当前时间去确定的","slug":"版本号由每次编译打包时的当前时间去确定的","link":"#版本号由每次编译打包时的当前时间去确定的","children":[]},{"level":3,"title":"版本号通过传入的参数去确定的","slug":"版本号通过传入的参数去确定的","link":"#版本号通过传入的参数去确定的","children":[]}]},{"level":2,"title":"资料来源","slug":"资料来源","link":"#资料来源","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1698419609000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":2.84,"words":851},"filePathRelative":"dotnet/nuget/baobanbenzidongshengji.md","localizedDate":"2023年3月16日","excerpt":"<h2>前言</h2>\\n<p>因为公司有自己的私有包服务，但是在发包的过程中，时常会出现忘记升级包版本的情况，导致需要重新发包，就显得比较麻烦，于是就有了实现自动升级包版本的想法。鉴于服务是区分为四个环境的（dev，test，staging和master），所以对应的包版本标识也应该有四个。\\n预设的环境与包版本标识对应关系如下</p>\\n<table>\\n<thead>\\n<tr>\\n<th>环境</th>\\n<th>包版本标识</th>\\n<th>举例</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>dev</td>\\n<td>alpha</td>\\n<td>1.0.1-alpha.2108211136</td>\\n</tr>\\n<tr>\\n<td>test</td>\\n<td>beta</td>\\n<td>1.0.1-beta.2108211137</td>\\n</tr>\\n<tr>\\n<td>staging</td>\\n<td>rc</td>\\n<td>1.0.1-rc.2108211138</td>\\n</tr>\\n<tr>\\n<td>master</td>\\n<td>release</td>\\n<td>1.0.1.2</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{u as comp,d as data};
