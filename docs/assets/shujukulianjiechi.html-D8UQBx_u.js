import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as a,d as n}from"./app-2OrQE2Jp.js";const l={},e=n(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><h5 id="_1-net数据库连接池的背景" tabindex="-1"><a class="header-anchor" href="#_1-net数据库连接池的背景"><span>1. .NET数据库连接池的背景</span></a></h5><p>数据库连接是一个耗时的行为，大多数应用程序只使用1到几种数据库连接，为了最小化打开连接的成本，ado.net使用了一种称为连接池的优化技术。</p><h5 id="_2-net-数据库连接池的表现" tabindex="-1"><a class="header-anchor" href="#_2-net-数据库连接池的表现"><span>2. .NET 数据库连接池的表现</span></a></h5><p>数据库连接池减少了必须打开新连接的次数，池程序维护了数据库物理连接。 通过为每个特定的连接配置保持一组活动的连接对象来管理连接。 每当应用程序尝试Open连接，池程序就会在池中找到可用的连接，如果有则返回给调用者； 应用程序Close连接对象时，池程序将连接对象返回到池中(Sleep), 这个连接可以在下一次Open调用中重用。 看黑板，下面是这次的重点：</p><h5 id="_3-net是如何形成数据库连接池的" tabindex="-1"><a class="header-anchor" href="#_3-net是如何形成数据库连接池的"><span>3. .NET是如何形成数据库连接池的?</span></a></h5><p>只有相同的连接配置才能被池化，.NET为不同的配置维护了不同的连接池。 相同的配置限制为： 进程相同、 连接字符串相同、 连接字符串关键key顺序相同。 (连接字符串提供的关键字顺序不同也将被分到不同的池)。 连接池中的可用连接的数量由连接字符串Max Pool Size决定。 在一个应用程序中，有如下代码：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">SqlConnection</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> connection</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> SqlConnection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  &quot;Integrated Security=SSPI;Initial Catalog=Northwind&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    {  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        connection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Open</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">        // Pool A is created.  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">SqlConnection</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> connection</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> SqlConnection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  &quot;Integrated Security=SSPI;Initial Catalog=pubs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    {  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        connection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Open</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">        // Pool B is created because the connection strings differ.  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">SqlConnection</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> connection</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> SqlConnection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  &quot;Integrated Security=SSPI;Initial Catalog=Northwind&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    {  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        connection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Open</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">        // The connection string matches pool A.  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面创建了三个Connection对象，但是只形成了两个数据库连接池。 还是以上代码，如果有两个相同的应用程序，理论上就形成了四个数据库连接池。</p><h5 id="_4-连接池中的连接什么时候被移除" tabindex="-1"><a class="header-anchor" href="#_4-连接池中的连接什么时候被移除"><span>4. 连接池中的连接什么时候被移除？</span></a></h5><p>连接池中的连接空闲4-8 分钟，池程序会移除这个连接。 应用程序下线，连接池直接被清空。</p><h2 id="主动清空连接池" tabindex="-1"><a class="header-anchor" href="#主动清空连接池"><span>主动清空连接池</span></a></h2><p>目的：切换数据库连接配置的时候，清空原连接池。 .NET提供了 ClearAllPools、ClearPool静态方法用于清空连接池。 • ClearAllPools：清空与这个DBProvider相关的所有连接池 • ClearPool(DBConnection conn) 清空与这个连接对象相关的连接池 很明显，我们这次要使用ClearPool(DBConnection conn) 方法。</p><p>压测/queryapi 产生一个包含大量连接对象的连接池； 适当的时候，调用/clearpoolapi清空连接池。</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> MySqlController</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Controller</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">        // GET: MySql</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Route</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;query&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Index</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">            var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> s</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;User ID=teinfra_neo_netreplay;Password=123456;DataBase=teinfra_neo_netreplay;Server=10.100.41.196;Port=3980;Min Pool Size=1;Max Pool Size=28;CharSet=utf8;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">            using</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> conn</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> MySqlConnection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">                var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> comm</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> conn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">CreateCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">                comm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">CommandText</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;select count(*) from usertest;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">                conn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Open</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">                var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> ret</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> comm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ExecuteScalar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">                comm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">CommandText</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;select count(*) from information_schema.PROCESSLIST WHERE HOST like  &#39;10.22.12.245%&#39;;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">                var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> len</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> comm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ExecuteScalar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">                return</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> $&quot;查询结果:{</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ret</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">} ,顺便查一下当前连接池的连接对象个数: {</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">len</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Route</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;clearpool&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Switch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">            var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> s</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;User ID=teinfra_neo_netreplay;Password=123456;DataBase=teinfra_neo_netreplay;Server=10.100.41.196;Port=3980;Min Pool Size=1;Max Pool Size=28;CharSet=utf8;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">            using</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> conn</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> MySqlConnection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">                conn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Open</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">                MySqlConnection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ClearPool</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">conn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">            using</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> conn</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> MySqlConnection</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">                conn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Open</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">                var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> comm</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> conn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">CreateCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">                comm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">CommandText</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;select count(*) from information_schema.PROCESSLIST WHERE HOST like  &#39;10.22.12.245%&#39;;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">                var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> len</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> comm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ExecuteScalar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">                return</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> $&quot;之前已经清空连接池， 此次查询连接池有 {</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">v1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">}  个连接对象&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>mysql的连接数查询命令： (host是web服务器IP)：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> information_schema</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">PROCESSLIST</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> HOST</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> like</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;10.22.12.245%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>调用/clearpoolapi，清空连接池</p><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><p><a href="https://mp.weixin.qq.com/s/nmbZcBzfxz4haa4aunPPTQ" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/nmbZcBzfxz4haa4aunPPTQ</a> | 如何主动清空.NET数据库连接池？ sql连接池(ado.net): https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql-server-connection-pooling</p>`,20),h=[e];function t(k,p){return a(),i("div",null,h)}const B=s(l,[["render",t],["__file","shujukulianjiechi.html.vue"]]),c=JSON.parse('{"path":"/dataBase/gongyoubufen/shujukulianjiechi.html","title":"数据库连接池","lang":"zh-CN","frontmatter":{"title":"数据库连接池","lang":"zh-CN","date":"2023-09-23T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"filename":"shujukulianjiechi","slug":"fcmb37","docsId":"65198746","description":"概述 1. .NET数据库连接池的背景 数据库连接是一个耗时的行为，大多数应用程序只使用1到几种数据库连接，为了最小化打开连接的成本，ado.net使用了一种称为连接池的优化技术。 2. .NET 数据库连接池的表现 数据库连接池减少了必须打开新连接的次数，池程序维护了数据库物理连接。 通过为每个特定的连接配置保持一组活动的连接对象来管理连接。 每当应...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/gongyoubufen/shujukulianjiechi.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"数据库连接池"}],["meta",{"property":"og:description","content":"概述 1. .NET数据库连接池的背景 数据库连接是一个耗时的行为，大多数应用程序只使用1到几种数据库连接，为了最小化打开连接的成本，ado.net使用了一种称为连接池的优化技术。 2. .NET 数据库连接池的表现 数据库连接池减少了必须打开新连接的次数，池程序维护了数据库物理连接。 通过为每个特定的连接配置保持一组活动的连接对象来管理连接。 每当应..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-23T15:53:24.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-23T15:53:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据库连接池\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-23T15:53:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[{"level":5,"title":"1. .NET数据库连接池的背景","slug":"_1-net数据库连接池的背景","link":"#_1-net数据库连接池的背景","children":[]},{"level":5,"title":"2. .NET 数据库连接池的表现","slug":"_2-net-数据库连接池的表现","link":"#_2-net-数据库连接池的表现","children":[]},{"level":5,"title":"3. .NET是如何形成数据库连接池的?","slug":"_3-net是如何形成数据库连接池的","link":"#_3-net是如何形成数据库连接池的","children":[]},{"level":5,"title":"4. 连接池中的连接什么时候被移除？","slug":"_4-连接池中的连接什么时候被移除","link":"#_4-连接池中的连接什么时候被移除","children":[]}]},{"level":2,"title":"主动清空连接池","slug":"主动清空连接池","link":"#主动清空连接池","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1695484404000,"updatedTime":1695484404000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":3.08,"words":923},"filePathRelative":"dataBase/gongyoubufen/shujukulianjiechi.md","localizedDate":"2023年9月23日","excerpt":"<h2>概述</h2>\\n<h5>1. .NET数据库连接池的背景</h5>\\n<p>数据库连接是一个耗时的行为，大多数应用程序只使用1到几种数据库连接，为了最小化打开连接的成本，ado.net使用了一种称为连接池的优化技术。</p>\\n<h5>2. .NET 数据库连接池的表现</h5>\\n<p>数据库连接池减少了必须打开新连接的次数，池程序维护了数据库物理连接。\\n通过为每个特定的连接配置保持一组活动的连接对象来管理连接。\\n每当应用程序尝试Open连接，池程序就会在池中找到可用的连接，如果有则返回给调用者；\\n应用程序Close连接对象时，池程序将连接对象返回到池中(Sleep), 这个连接可以在下一次Open调用中重用。\\n看黑板，下面是这次的重点：</p>","autoDesc":true}');export{B as comp,c as data};
