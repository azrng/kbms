import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e,o as n}from"./app-BIR_P--4.js";const t="/kbms/common/1629346436931-7827203b-7003-4c14-8397-b1ba3a67bee4.png",h="/kbms/common/1629345827282-1af8d8e0-a0c8-44e5-9e39-2de2cdec1f62.png",p={};function l(k,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>服务端缓存，将东西存储在服务器，如果服务器缓存中有，那么就直接返回结果，并不会重新访问Action的内容。</p><p>可以对来自不同客户端的相同请求或者不支持客户端缓存的客户端进行处理，能降级服务器端的压力。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>ConfigureServices使用</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-csharp"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">AddResponseCaching</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">MaximumBodySize</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1024</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//用于指定单个缓存项的最大尺寸，默认65mb</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">UseCaseSensitivePaths</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//指定response cache是否对缓存key区分大小写</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //options.SizeLimit = 1024 * 100;//用户指定response cache的最大缓存尺寸，默认是100mb</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Configure使用</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-csharp"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//使用cache</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">UseResponseCaching</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>方法上使用</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-csharp"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ResponseCache</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#ABB2BF;">Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)] </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 为了测试效果</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">HttpGet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> string</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> DateTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ToString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>参数说明<br> Duration：用于指定 Response Cache 的存活时间(秒)。<br> Location：用于指定 Response Cache 缓存的位置，有：Any，Client,None。<br> NoStore：用于指定是否存储数据在客户端。<br> CacheProfileName：用于指定 cache profile 的名字。<br> VaryByHeader：用于指定Vary响应头。<br> VaryByQueryKeys：基于 querystring 参数来实现缓存。</p></blockquote><p>关于配置查看</p><blockquote><p>通过查看响应头：Cache-Control: public,max-age=10 可以看出来被缓存了10s<br> 该中间件只缓存http 200的服务端响应，非200的或者一些错误是没有被缓存的。</p></blockquote><h2 id="请求示例" tabindex="-1"><a class="header-anchor" href="#请求示例"><span>请求示例</span></a></h2><p>当按照上面配置后，我通过postman发现并没有效果，经过检查发现<br><img src="`+t+'" alt="image.png" loading="lazy"><br> 这是因为postman默认发送了不缓存的请求头，通过浏览器查看，直接用过地址栏访问该Get接口，也会自动发送不缓存的请求头，不过经过swagger调用则不会增加该请求头，会出来我们想要的结果。</p><h2 id="了解源码" tabindex="-1"><a class="header-anchor" href="#了解源码"><span>了解源码</span></a></h2><p>请求的内容使用IMemoryCache进行缓存的<br><img src="'+h+'" alt="image.png" loading="lazy"></p><h2 id="鸡肋" tabindex="-1"><a class="header-anchor" href="#鸡肋"><span>鸡肋</span></a></h2><p>为什么感觉很鸡肋？<br> 1.无法解决恶意请求给服务器带来的压力(如果调用方给请求头设置不缓存，那么服务端缓存就不会生效)。<br> 2.服务器端缓存还有很多限制，包括但是不限于：响应码状态为200的get或者head响应才可能被缓存，报文头不能含有Authorization、Set-Cookie等。</p>',19)]))}const c=s(p,[["render",l]]),d=JSON.parse('{"path":"/dotnet/base/huancun/fuwuqihuancunresponsecaching.html","title":"服务器缓存ResponseCaching","lang":"zh-CN","frontmatter":{"title":"服务器缓存ResponseCaching","lang":"zh-CN","date":"2023-08-20T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"fuwuqihuancunresponsecaching","slug":"zisdsv","docsId":"30869209","description":"介绍 服务端缓存，将东西存储在服务器，如果服务器缓存中有，那么就直接返回结果，并不会重新访问Action的内容。 可以对来自不同客户端的相同请求或者不支持客户端缓存的客户端进行处理，能降级服务器端的压力。 操作 ConfigureServices使用 Configure使用 方法上使用 参数说明 Duration：用于指定 Response Cache...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"服务器缓存ResponseCaching\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1629346436931-7827203b-7003-4c14-8397-b1ba3a67bee4.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1629345827282-1af8d8e0-a0c8-44e5-9e39-2de2cdec1f62.png\\"],\\"datePublished\\":\\"2023-08-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-25T13:23:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"],["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/base/huancun/fuwuqihuancunresponsecaching.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"服务器缓存ResponseCaching"}],["meta",{"property":"og:description","content":"介绍 服务端缓存，将东西存储在服务器，如果服务器缓存中有，那么就直接返回结果，并不会重新访问Action的内容。 可以对来自不同客户端的相同请求或者不支持客户端缓存的客户端进行处理，能降级服务器端的压力。 操作 ConfigureServices使用 Configure使用 方法上使用 参数说明 Duration：用于指定 Response Cache..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1629346436931-7827203b-7003-4c14-8397-b1ba3a67bee4.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-25T13:23:37.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-08-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-25T13:23:37.000Z"}]]},"git":{"createdTime":1697962303000,"updatedTime":1698240217000,"contributors":[{"name":"azrng","username":"","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":1.98,"words":595},"filePathRelative":"dotnet/base/huancun/fuwuqihuancunresponsecaching.md","excerpt":"<h2>介绍</h2>\\n<p>服务端缓存，将东西存储在服务器，如果服务器缓存中有，那么就直接返回结果，并不会重新访问Action的内容。</p>\\n<p>可以对来自不同客户端的相同请求或者不支持客户端缓存的客户端进行处理，能降级服务器端的压力。</p>\\n<h2>操作</h2>\\n<p>ConfigureServices使用</p>\\n<div class=\\"language-csharp line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"csharp\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-csharp\\"><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">services</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">AddResponseCaching</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">options</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> =&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">    options</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">MaximumBodySize</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 1024</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">//用于指定单个缓存项的最大尺寸，默认65mb</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">    options</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">UseCaseSensitivePaths</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> true</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">//指定response cache是否对缓存key区分大小写</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">    //options.SizeLimit = 1024 * 100;//用户指定response cache的最大缓存尺寸，默认是100mb</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">});</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{c as comp,d as data};
