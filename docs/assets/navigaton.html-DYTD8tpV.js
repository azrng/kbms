import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,b as e}from"./app-qB9_Bjjp.js";const t={},p=e(`<h2 id="说明" tabindex="-1"><a class="header-anchor" href="#说明"><span>说明</span></a></h2><p>文档地址：https://learn.microsoft.com/zh-cn/aspnet/core/blazor/fundamentals/routing?view=aspnetcore-8.0</p><h3 id="路由模板" tabindex="-1"><a class="header-anchor" href="#路由模板"><span>路由模板</span></a></h3><p>Blazor 使用名为 Router 组件的专用组件路由请求。 它在 App.razor 中配置如下：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">Router</span> AppAssembly<span class="token operator">=</span><span class="token string">&quot;@typeof(Program).Assembly&quot;</span><span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span><span class="token class-name">Found</span> Context<span class="token operator">=</span><span class="token string">&quot;routeData&quot;</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token class-name">RouteView</span> RouteData<span class="token operator">=</span><span class="token string">&quot;@routeData&quot;</span> DefaultLayout<span class="token operator">=</span><span class="token string">&quot;@typeof(MainLayout)&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span><span class="token operator">/</span>Found<span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span>NotFound<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>Sorry<span class="token punctuation">,</span> we haven&#39;t found any pizzas here<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span><span class="token operator">/</span>NotFound<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Router<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>应用启动时，Blazor 会检查 AppAssembly 属性，以了解它应扫描哪个程序集。 它会扫描该程序集，以寻找具有 RouteAttribute 的组件。 Blazor 使用这些值编译 RouteData 对象，该对象指定如何将请求路由到组件。 编写应用代码时，可以在每个组件中使用 @page 指令来修复 RouteAttribute。 在以上代码中，<code>&lt;Found&gt;</code> 标记指定在运行时处理路由的组件：RouteView 组件。 此组件接收 RouteData 对象以及来自 URI 或查询字符串的任何参数。 然后，它呈现指定的组件及其布局。 可以使用 <code>&lt;Found&gt;</code> 标记来指定默认布局，当所选组件未通过 @layout 指令指定布局时，将使用该布局。</p><p>在 <code>&lt;Router&gt;</code> 组件中，还可使用 <code>&lt;NotFound&gt;</code> 标记指定在不存在匹配路由时返回给用户的内容。 上面的示例返回单个 <code>&lt;p&gt;</code> 段落，但你可以呈现更复杂的 HTML。</p><h3 id="page路由" tabindex="-1"><a class="header-anchor" href="#page路由"><span>page路由</span></a></h3><p>在 Blazor 组件中，@page 指令指定该组件应直接处理请求。 可以在 @page 指令中指定 RouteAttribute，方法是以字符串的形式传递它。 例如，使用此属性指定页面处理对 /Pizzas 路由的请求：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>@page <span class="token string">&quot;/Pizzas&quot;</span>

<span class="token comment">## 或者指定多个路由</span>
@page <span class="token string">&quot;/Pizzas&quot;</span>
@page <span class="token string">&quot;/CustomPizzas&quot;</span> 
    
<span class="token comment"># 传递参数</span>
@page <span class="token string">&quot;/route-parameter-2/{text}&quot;</span>
<span class="token comment"># 传递可选参数</span>
@page <span class="token string">&quot;/route-parameter-2/{text?}&quot;</span>

<span class="token comment"># 路由约束</span>
@page <span class="token string">&quot;/FavoritePizza/{preferredsize:int}&quot;</span>

<span class="token comment"># 捕捉全部参数 如：favoritepizza/margherita/hawaiian</span>
@page <span class="token string">&quot;/FavoritePizza/{*favorites}&quot;</span> <span class="token comment"># favorites收到是 margherita/hawaiian</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取uri位置信息" tabindex="-1"><a class="header-anchor" href="#获取uri位置信息"><span>获取uri位置信息</span></a></h3><p>用来接收指定url的页面(/pizzas/margherita?extratopping=pineapple)</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>@page <span class="token string">&quot;/pizzas/margherita&quot;</span>
@<span class="token keyword">using</span> Microsoft<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>Primitives
@<span class="token keyword">using</span> Microsoft<span class="token punctuation">.</span>AspNetCore<span class="token punctuation">.</span>WebUtilities
@inject NavigationManager navManger

<span class="token comment">// 请求地址 http://localhost:5043/pizzas/margherita?extratopping=pineapple</span>

<span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span>Buy a Pizza<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>I want to <span class="token class-name">order</span> a<span class="token punctuation">:</span> @PizzaName<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>I want to <span class="token keyword">add</span> <span class="token keyword">this</span> topping<span class="token punctuation">:</span> @ToppingName<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>


@code <span class="token punctuation">{</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Parameter</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> PizzaName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ToppingName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnInitialized</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">StringValues</span> extraTopping<span class="token punctuation">;</span>
        <span class="token comment">// 获取绝对url</span>
        <span class="token class-name"><span class="token keyword">var</span></span> uri <span class="token operator">=</span> navManger<span class="token punctuation">.</span><span class="token function">ToAbsoluteUri</span><span class="token punctuation">(</span>navManger<span class="token punctuation">.</span>Uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 获取query并且从中取值</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>QueryHelpers<span class="token punctuation">.</span><span class="token function">ParseQuery</span><span class="token punctuation">(</span>uri<span class="token punctuation">.</span>Query<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">TryGetValue</span><span class="token punctuation">(</span><span class="token string">&quot;extratopping&quot;</span><span class="token punctuation">,</span> <span class="token keyword">out</span> extraTopping<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            ToppingName <span class="token operator">=</span> extraTopping<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>点击按钮跳转到首页</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>@page <span class="token string">&quot;/pizzas&quot;</span>
@inject NavigationManager NavManager

<span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>Buy a Pizza<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>I want to <span class="token class-name">order</span> a<span class="token punctuation">:</span> @PizzaName<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span><span class="token class-name">a</span> href<span class="token operator">=</span>@HomePageURI<span class="token operator">&gt;</span>Home Page<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>

@code <span class="token punctuation">{</span>
	<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Parameter</span></span><span class="token punctuation">]</span>
	<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> PizzaName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> HomePageURI <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
	
	<span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnInitialized</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		HomePageURI <span class="token operator">=</span> NavManager<span class="token punctuation">.</span>BaseUri
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>跳转到其他页面</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>@page <span class="token string">&quot;/pizzas/{pizzaname}&quot;</span>
@inject NavigationManager NavManager

<span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>Buy a Pizza<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>I want to <span class="token class-name">order</span> a<span class="token punctuation">:</span> @PizzaName<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>button <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;btn&quot;</span> @onclick<span class="token operator">=</span><span class="token string">&quot;NavigateToPaymentPage&quot;</span><span class="token operator">&gt;</span>
	Buy <span class="token keyword">this</span> pizza<span class="token operator">!</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>

@code <span class="token punctuation">{</span>
	<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Parameter</span></span><span class="token punctuation">]</span>
	<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> PizzaName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
	
	<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">NavigateToPaymentPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		NavManager<span class="token punctuation">.</span><span class="token function">NavigateTo</span><span class="token punctuation">(</span><span class="token string">&quot;buypizza&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="navlink" tabindex="-1"><a class="header-anchor" href="#navlink"><span>NavLink</span></a></h3><p>Blazor 中，使用 NavLink 组件来呈现 <code>&lt;a&gt;</code> 标记，因为它在链接的 href 属性与当前 URL 匹配时将切换 active CSS 类。 通过设置 active 类的样式，可以让用户清楚地了解当前页面对应哪个导航链接。</p><p>NavLink 组件中的 Match 属性用于管理突出显示连接的时间。 有两个选项：</p><ul><li>NavLinkMatch.All：使用此值时，只有在链接的 href 与当前 URL 完全匹配时，该链接才突出显示为活动链接。</li><li>NavLinkMatch.Prefix：使用此值时，当链接的 href 与当前 URL 的第一部分匹配时，该链接就突出显示为活动链接。 例如，假设你拥有链接 <code>&lt;NavLink href=&quot;pizzas&quot; Match=&quot;NavLinkMatch.Prefix&quot;&gt;</code>。 当前 URL 为 http://www.contoso.com/pizzas 及该 URL 中的任意位置（例如 http://www.contoso.com/pizzas/formaggio）时，此链接将突出显示为活动链接。 此行为可帮助用户了解自己当前正在查看网站的哪一部分。</li></ul>`,21),o=[p];function l(i,r){return a(),s("div",null,o)}const d=n(t,[["render",l],["__file","navigaton.html.vue"]]),k=JSON.parse(`{"path":"/web/blazor/baseOperator/navigaton.html","title":"导航","lang":"zh-CN","frontmatter":{"title":"导航","lang":"zh-CN","date":"2023-02-02T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":false,"category":["dotNET"],"tag":["无"],"filename":"daohang","slug":"ubkapln7qyg2lp22","docsId":"113173299","description":"说明 文档地址：https://learn.microsoft.com/zh-cn/aspnet/core/blazor/fundamentals/routing?view=aspnetcore-8.0 路由模板 Blazor 使用名为 Router 组件的专用组件路由请求。 它在 App.razor 中配置如下： 应用启动时，Blazor 会检查 A...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/web/blazor/baseOperator/navigaton.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"导航"}],["meta",{"property":"og:description","content":"说明 文档地址：https://learn.microsoft.com/zh-cn/aspnet/core/blazor/fundamentals/routing?view=aspnetcore-8.0 路由模板 Blazor 使用名为 Router 组件的专用组件路由请求。 它在 App.razor 中配置如下： 应用启动时，Blazor 会检查 A..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-14T12:02:46.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-02-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-14T12:02:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"导航\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-14T12:02:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"说明","slug":"说明","link":"#说明","children":[{"level":3,"title":"路由模板","slug":"路由模板","link":"#路由模板","children":[]},{"level":3,"title":"page路由","slug":"page路由","link":"#page路由","children":[]},{"level":3,"title":"获取uri位置信息","slug":"获取uri位置信息","link":"#获取uri位置信息","children":[]},{"level":3,"title":"NavLink","slug":"navlink","link":"#navlink","children":[]}]}],"git":{"createdTime":1697962303000,"updatedTime":1702555366000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1},{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":3.04,"words":912},"filePathRelative":"web/blazor/baseOperator/navigaton.md","localizedDate":"2023年2月2日","excerpt":"<h2>说明</h2>\\n<p>文档地址：https://learn.microsoft.com/zh-cn/aspnet/core/blazor/fundamentals/routing?view=aspnetcore-8.0</p>\\n<h3>路由模板</h3>\\n<p>Blazor 使用名为 Router 组件的专用组件路由请求。 它在 App.razor 中配置如下：</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">Router</span> AppAssembly<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"@typeof(Program).Assembly\\"</span><span class=\\"token operator\\">&gt;</span>\\n\\t<span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">Found</span> Context<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"routeData\\"</span><span class=\\"token operator\\">&gt;</span>\\n\\t\\t<span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">RouteView</span> RouteData<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"@routeData\\"</span> DefaultLayout<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"@typeof(MainLayout)\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n\\t<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>Found<span class=\\"token operator\\">&gt;</span>\\n\\t<span class=\\"token operator\\">&lt;</span>NotFound<span class=\\"token operator\\">&gt;</span>\\n\\t\\t<span class=\\"token operator\\">&lt;</span>p<span class=\\"token operator\\">&gt;</span>Sorry<span class=\\"token punctuation\\">,</span> we haven't found any pizzas here<span class=\\"token punctuation\\">.</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>p<span class=\\"token operator\\">&gt;</span>\\n\\t<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>NotFound<span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>Router<span class=\\"token operator\\">&gt;</span>\\n</code></pre></div>","autoDesc":true}`);export{d as comp,k as data};
