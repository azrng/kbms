import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as r,c as o,a as e,d as n,e as s,b as l}from"./app-qB9_Bjjp.js";const p="/kbms/soft/image-20240302154531240.png",c="/kbms/soft/image-20240302154730950.png",d={},u=l(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>Prometheus是一个时间序列数据库。但是，它不仅仅是一个时间序列数据库。它涵盖了可以绑定的整个生态系统工具集及其功能。也是一种开源的系统监控和警报工具。它最初由 SoundCloud 开发，并成为 Cloud Native Computing Foundation（CNCF）的一部分。主要用于对基础设施的监控，包括服务器(CPU、MEM等)、数据库(MYSQL、PostgreSQL等)、Web服务等，几乎所有东西都可以通过Prometheus进行监控。而它的数据，则是通过配置，建立与数据源的联系来获取的。</p><h2 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h2><p>Prometheus 具有以下核心特征：</p><ul><li>多维数据模型：Prometheus 采用时序数据库作为存储，可以灵活的存储多维度的数据。</li><li>灵活的查询语言：Prometheus 使用了功能强大的 PromQL 查询语言，可以实时查询和聚合时序数据。</li><li>拉取式采集：Prometheus 通过 HTTP 协议周期性抓取被监控组件状态，而不是通过端口接收推送数据。</li><li>服务发现：Prometheus 支持各种服务发现机制，可以自动发现监控目标，如果需要监控的服务比较少，也可以使用静态配置。</li><li>多种可视化组件：如 Grafana、PromDash 等，可以用来展示监控数据，本次系列文章中使用 Grafana 做可视化展示。</li><li>告警管理：通过 Alertmanager 负责实现报警功能，既可以使用邮件，也能通过 Webhook 自定义告警处理方式。</li></ul><h2 id="数据写入" tabindex="-1"><a class="header-anchor" href="#数据写入"><span>数据写入</span></a></h2><p>把数据写入prometheus有两种方式，一种是pull，一种是push。</p><p>pull是让prometheus主动去拉取我们产生的数据，只要我们暴露一个地址出来即可，这种也是比较推荐的做法。</p><p>push方式要借助pushgateway，埋点数据要先主动推送到pushgateway，后面在由pushgateway把数据写进prometheus。</p><p>默认情况下，我们会将数据暴露在 <strong>http://ip:port/metrics</strong> 这个地址上，然后知道要用pull的方式后，还要做什么呢？当然就是要去配置promethues的 <code>scrape_configs</code> 了。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="prometheus-net操作" tabindex="-1"><a class="header-anchor" href="#prometheus-net操作"><span>prometheus-net操作</span></a></h3><p>prometheus-net的工作原理是，在应用内部埋点，通过prometheus采集数据，然后通过grafana把采集到的数据展现出来。</p><p>引用组件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>Install<span class="token operator">-</span>Package prometheus<span class="token operator">-</span>net<span class="token punctuation">.</span>AspNetCore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>基本使用</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Prometheus</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> WebApplication<span class="token punctuation">.</span><span class="token function">CreateBuilder</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> app <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">MapGet</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;OK&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">MapMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">UseHttpMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p>docker-compose安装脚本：https://gitee.com/zhangzonghai/prometheus-docker-compose</p><h3 id="告警服务alertmanager" tabindex="-1"><a class="header-anchor" href="#告警服务alertmanager"><span>告警服务Alertmanager</span></a></h3><p>Alertmanager 是 Prometheus 生态系统中的一个组件，负责处理和管理告警。当 Prometheus 检测到异常或达到某个预定的阈值时，它将生成告警并将其发送到 Alertmanager。Alertmanager 可以进行静默、分组、抑制和路由告警，并将它们发送到不同的接收端，如电子邮件、Slack 等</p><h3 id="指标收集器node-exporter" tabindex="-1"><a class="header-anchor" href="#指标收集器node-exporter"><span>指标收集器node Exporter</span></a></h3><p>Node Exporter 是一个用于在 Unix/Linux 系统上暴露系统信息的 Prometheus Exporter。它会收集关于系统资源使用情况、性能指标等方面的信息，并将这些信息提供给 Prometheus 进行监控。Node Exporter 通常与 Prometheus 配合使用，以监控主机上的各种系统级别的指标，例如 CPU 使用率、内存使用率、磁盘空间等。</p><p>在服务器上执行下面的命令进行包下载和安装</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#arm平台</span>
<span class="token function">wget</span> https://github.com/prometheus/node_exporter/releases/download/v1.6.1/node_exporter-1.6.1.linux-arm64.tar.gz
<span class="token function">tar</span> <span class="token parameter variable">-xzf</span> node_exporter-1.6.1.linux-arm64.tar.gz
<span class="token function">cp</span> node_exporter-1.6.1.linux-arm64/node_exporter /usr/local/bin/

<span class="token comment">#amd平台</span>
<span class="token function">wget</span> https://github.com/prometheus/node_exporter/releases/download/v1.6.1/node_exporter-1.6.1.linux-amd64.tar.gz
<span class="token function">tar</span> <span class="token parameter variable">-xzf</span> node_exporter-1.6.1.linux-amd64.tar.gz
<span class="token function">cp</span> node_exporter-1.6.1.linux-amd64/node_exporter /usr/local/bin/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置为系统服务，执行命令执行命令创建服务文件</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>cat &gt; /etc/systemd/system/notdeexporter.service &lt;&lt; EOF

# 内容如下

[Unit]
Description=notdeexporter
After=network.target network-online.target nss-lookup.target

[Service]
Type=simple
StandardError=journal
ExecStart = /usr/local/bin/node_exporter
ExecReload=/bin/kill -HUP $MAINPID
LimitNOFILE=512000
Restart=on-failure
RestartSec=10s

[Install]
WantedBy=multi-user.target
EOF
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置开启自动启动</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl daemon-reload
systemctl start notdeexporter
systemctl <span class="token builtin class-name">enable</span> notdeexporter
systemctl status notdeexporter
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当看到绿色的active(running)的时候代表安装成功。访问宿主+9100端口出来下面的界面，说明ok</p><figure><img src="`+p+'" alt="image-20240302154531240" tabindex="0" loading="lazy"><figcaption>image-20240302154531240</figcaption></figure><h4 id="配置node-exporter" tabindex="-1"><a class="header-anchor" href="#配置node-exporter"><span>配置node_exporter</span></a></h4><p>修改 Prometheus 的配置文件，添加 node_exporter 的绑定，执行命令 <code>vi vi /usr/local/prometheus/prometheus.yml </code>：</p><figure><img src="'+c+'" alt="image-20240302154730950" tabindex="0" loading="lazy"><figcaption>image-20240302154730950</figcaption></figure><p>执行命令 <code>systemctl restart prometheus</code> 重启 Prometheus ，然后就可以在grafana等平台配置该Prometheus作为数据源了</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2>',36),m={href:"https://mp.weixin.qq.com/s/AEY87HZa_x6-1w0Tpa4W2Q",target:"_blank",rel:"noopener noreferrer"},h={href:"https://mp.weixin.qq.com/s/E8XF5JDU1K5lo7N3qPEBCg",target:"_blank",rel:"noopener noreferrer"},g=e("p",null,"https://www.aiwanyun.cn/archives/174 | 搭建高级的性能监控系统",-1),v=e("p",null,"配置prometheus：https://learn.microsoft.com/zh-cn/dotnet/core/diagnostics/metrics-collection#view-metrics-in-grafana-with-opentelemetry-and-prometheus",-1);function b(k,x){const a=i("ExternalLinkIcon");return r(),o("div",null,[u,e("p",null,[e("a",m,[n("Prometheus系列教程"),s(a)])]),e("p",null,[e("a",h,[n("https://mp.weixin.qq.com/s/E8XF5JDU1K5lo7N3qPEBCg"),s(a)]),n(" | 基于Prometheus和Grafana打造业务监控看板")]),g,v])}const y=t(d,[["render",b],["__file","prometheus.html.vue"]]),P=JSON.parse('{"path":"/middleware/smallService/distributedObservability/distributedMonitoring/prometheus.html","title":"Prometheus","lang":"zh-CN","frontmatter":{"title":"Prometheus","lang":"zh-CN","date":"2023-09-27T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["监控"],"filename":"prometheus","slug":"xyfcw6","docsId":"72941081","description":"概述 Prometheus是一个时间序列数据库。但是，它不仅仅是一个时间序列数据库。它涵盖了可以绑定的整个生态系统工具集及其功能。也是一种开源的系统监控和警报工具。它最初由 SoundCloud 开发，并成为 Cloud Native Computing Foundation（CNCF）的一部分。主要用于对基础设施的监控，包括服务器(CPU、MEM等)...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/smallService/distributedObservability/distributedMonitoring/prometheus.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Prometheus"}],["meta",{"property":"og:description","content":"概述 Prometheus是一个时间序列数据库。但是，它不仅仅是一个时间序列数据库。它涵盖了可以绑定的整个生态系统工具集及其功能。也是一种开源的系统监控和警报工具。它最初由 SoundCloud 开发，并成为 Cloud Native Computing Foundation（CNCF）的一部分。主要用于对基础设施的监控，包括服务器(CPU、MEM等)..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/soft/image-20240302154531240.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-02T08:43:04.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"监控"}],["meta",{"property":"article:published_time","content":"2023-09-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-02T08:43:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Prometheus\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/soft/image-20240302154531240.png\\",\\"https://azrng.gitee.io/kbms/kbms/soft/image-20240302154730950.png\\"],\\"datePublished\\":\\"2023-09-27T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-02T08:43:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":2,"title":"数据写入","slug":"数据写入","link":"#数据写入","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"prometheus-net操作","slug":"prometheus-net操作","link":"#prometheus-net操作","children":[]}]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"告警服务Alertmanager","slug":"告警服务alertmanager","link":"#告警服务alertmanager","children":[]},{"level":3,"title":"指标收集器node Exporter","slug":"指标收集器node-exporter","link":"#指标收集器node-exporter","children":[{"level":4,"title":"配置node_exporter","slug":"配置node-exporter","link":"#配置node-exporter","children":[]}]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1709368984000,"contributors":[{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":3},{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":3.79,"words":1137},"filePathRelative":"middleware/smallService/distributedObservability/distributedMonitoring/prometheus.md","localizedDate":"2023年9月27日","excerpt":"<h2>概述</h2>\\n<p>Prometheus是一个时间序列数据库。但是，它不仅仅是一个时间序列数据库。它涵盖了可以绑定的整个生态系统工具集及其功能。也是一种开源的系统监控和警报工具。它最初由 SoundCloud 开发，并成为 Cloud Native Computing Foundation（CNCF）的一部分。主要用于对基础设施的监控，包括服务器(CPU、MEM等)、数据库(MYSQL、PostgreSQL等)、Web服务等，几乎所有东西都可以通过Prometheus进行监控。而它的数据，则是通过配置，建立与数据源的联系来获取的。</p>\\n<h2>特点</h2>\\n<p>Prometheus 具有以下核心特征：</p>","autoDesc":true}');export{y as comp,P as data};
