import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as a,o as l}from"./app-B3EhLA94.js";const i={};function r(o,e){return l(),n("div",null,e[0]||(e[0]=[a('<h2 id="返回啥" tabindex="-1"><a class="header-anchor" href="#返回啥"><span>返回啥？</span></a></h2><p>一般常见的四种错误返回情况：错误码、null值、空对象、异常对象。</p><h3 id="返回错误码" tabindex="-1"><a class="header-anchor" href="#返回错误码"><span>返回错误码</span></a></h3><p>一种是直接将错误码给返回类，正常返回错误信息。<br> 另一种是将错误码定义为全局变量，函数执行出错的时候，函数调用者通过这个全局变量来获取错误信息。</p><h3 id="返回null值" tabindex="-1"><a class="header-anchor" href="#返回null值"><span>返回NULL值</span></a></h3><p>如果返回null值，我们在使用的时候一定要做null值判断，否则就会抛出空指针异常。</p><p>针对查询等，查询不到应该返回null值(或者说是查看项目中其他类似的接口是如何返回的，只要整个项目遵从统一的约定即可)，如果是修改添加等操作更推荐抛出异常。</p><p>弊端：使用的时候必须要记得做null值判断</p><h3 id="返回空对象" tabindex="-1"><a class="header-anchor" href="#返回空对象"><span>返回空对象</span></a></h3><p>当函数返回的数据是字符串类型或者集合类型的时候，我们可以使用空字符串或者空集合替代null值，来表示不存在的情况，这样子，我们在使用函数的时候，就不用做null值判断。</p><h3 id="抛出异常对象" tabindex="-1"><a class="header-anchor" href="#抛出异常对象"><span>抛出异常对象</span></a></h3><p>优点<br> 隐藏可以携带更多的错误信息，比如函数调用栈信息。<br> 异常可以将正常逻辑和异常逻辑处理分离开来，这样子代码的可读性就会更好。</p><p>对于try里面套用了try，异常是否往上继续抛出，要看上层代码是否关心这个异常，关心就将它排除，否则就直接吞掉，是否需要包装成新的异常抛出，看上层代码是否能理解这个异常、是否和业务相关。如果能理解、业务相关就直接抛出，否则就封装成新的异常抛出。</p>',13)]))}const u=t(i,[["render",r],["__file","chucuodefanhuizhi.html.vue"]]),c=JSON.parse('{"path":"/softwareDesign/highQualityCode/guifanyuchonggou/chucuodefanhuizhi.html","title":"出错的返回值","lang":"zh-CN","frontmatter":{"title":"出错的返回值","lang":"zh-CN","date":"2022-06-25T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["软件设计"],"tag":["无"],"filename":"chucuodefanhuizhi","slug":"yv59s0","docsId":"81436444","description":"返回啥？ 一般常见的四种错误返回情况：错误码、null值、空对象、异常对象。 返回错误码 一种是直接将错误码给返回类，正常返回错误信息。 另一种是将错误码定义为全局变量，函数执行出错的时候，函数调用者通过这个全局变量来获取错误信息。 返回NULL值 如果返回null值，我们在使用的时候一定要做null值判断，否则就会抛出空指针异常。 针对查询等，查询不...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/softwareDesign/highQualityCode/guifanyuchonggou/chucuodefanhuizhi.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"出错的返回值"}],["meta",{"property":"og:description","content":"返回啥？ 一般常见的四种错误返回情况：错误码、null值、空对象、异常对象。 返回错误码 一种是直接将错误码给返回类，正常返回错误信息。 另一种是将错误码定义为全局变量，函数执行出错的时候，函数调用者通过这个全局变量来获取错误信息。 返回NULL值 如果返回null值，我们在使用的时候一定要做null值判断，否则就会抛出空指针异常。 针对查询等，查询不..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-23T01:45:31.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-06-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-23T01:45:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"出错的返回值\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-25T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-23T01:45:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"返回啥？","slug":"返回啥","link":"#返回啥","children":[{"level":3,"title":"返回错误码","slug":"返回错误码","link":"#返回错误码","children":[]},{"level":3,"title":"返回NULL值","slug":"返回null值","link":"#返回null值","children":[]},{"level":3,"title":"返回空对象","slug":"返回空对象","link":"#返回空对象","children":[]},{"level":3,"title":"抛出异常对象","slug":"抛出异常对象","link":"#抛出异常对象","children":[]}]}],"git":{"createdTime":1693926838000,"updatedTime":1698025531000,"contributors":[{"name":"zhangyunpeng","username":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1},{"name":"azrng","username":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.67,"words":501},"filePathRelative":"softwareDesign/highQualityCode/guifanyuchonggou/chucuodefanhuizhi.md","localizedDate":"2022年6月25日","excerpt":"<h2>返回啥？</h2>\\n<p>一般常见的四种错误返回情况：错误码、null值、空对象、异常对象。</p>\\n<h3>返回错误码</h3>\\n<p>一种是直接将错误码给返回类，正常返回错误信息。<br>\\n另一种是将错误码定义为全局变量，函数执行出错的时候，函数调用者通过这个全局变量来获取错误信息。</p>\\n<h3>返回NULL值</h3>\\n<p>如果返回null值，我们在使用的时候一定要做null值判断，否则就会抛出空指针异常。</p>\\n<p>针对查询等，查询不到应该返回null值(或者说是查看项目中其他类似的接口是如何返回的，只要整个项目遵从统一的约定即可)，如果是修改添加等操作更推荐抛出异常。</p>","autoDesc":true}');export{u as comp,c as data};
