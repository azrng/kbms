import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,o as g,c as m,a as e,d as a,e as n,w as t,b as o}from"./app-Bw62I61B.js";const v={},b=e("h2",{id:"netcorebeauty",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#netcorebeauty"},[e("span",null,"NetCoreBeauty")])],-1),y={href:"https://github.com/nulastudio/NetCoreBeauty",target:"_blank",rel:"noopener noreferrer"},h=o(`<blockquote><p>NetCoreBeauty 只适用于独立部署发布模式的程序，不要勾选生成单个文件</p></blockquote><p>为项目添加 Nuget 引用：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>dotnet <span class="token keyword">add</span> package nulastudio<span class="token punctuation">.</span>NetCoreBeauty
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h3><p>编辑项目配置文件（*.csproj）应该和下面的代码类似：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>
<span class="token operator">&lt;</span><span class="token class-name">Project</span> Sdk<span class="token operator">=</span><span class="token string">&quot;Microsoft.NET.Sdk&quot;</span><span class="token operator">&gt;</span>

  <span class="token operator">&lt;</span>PropertyGroup<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>OutputType<span class="token operator">&gt;</span>Exe<span class="token operator">&lt;</span><span class="token operator">/</span>OutputType<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>TargetFramework<span class="token operator">&gt;</span>netcoreapp2<span class="token punctuation">.</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>TargetFramework<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> beauty <span class="token keyword">into</span> sub<span class="token operator">-</span>directory<span class="token punctuation">,</span> <span class="token keyword">default</span> <span class="token keyword">is</span> <span class="token class-name">libs</span><span class="token punctuation">,</span> quote with <span class="token string">&quot;&quot;</span> <span class="token keyword">if</span> contains space  <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 要移动到字母名称，默认是 libs 目录，如果需要包含空格，请用双引号括起来 <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>BeautyLibsDir<span class="token operator">&gt;</span>libraries<span class="token operator">&lt;</span><span class="token operator">/</span>BeautyLibsDir<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 设置一些你不想被移动或者不能被移动到子目录的文件名，支持匹配。<span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> dlls that you don&#39;t want to be moved <span class="token keyword">or</span> can <span class="token keyword">not</span> be moved <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>BeautyExcludes<span class="token operator">&gt;</span>dll1<span class="token punctuation">.</span>dll<span class="token punctuation">;</span>lib<span class="token operator">*</span><span class="token punctuation">;</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>BeautyExcludes<span class="token operator">&gt;</span> <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 最终用户不会使用到的文件，可以在这里配置隐藏掉。<span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> dlls that end users <span class="token class-name">never</span> needed<span class="token punctuation">,</span> so hide them <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>BeautyHiddens<span class="token operator">&gt;</span>hostfxr<span class="token punctuation">;</span>hostpolicy<span class="token punctuation">;</span><span class="token operator">*</span><span class="token punctuation">.</span>deps<span class="token punctuation">.</span>json<span class="token punctuation">;</span><span class="token operator">*</span><span class="token punctuation">.</span>runtimeconfig<span class="token operator">*</span><span class="token punctuation">.</span>json<span class="token operator">&lt;</span><span class="token operator">/</span>BeautyHiddens<span class="token operator">&gt;</span> <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 如果不想执行移动操作，可以设置为 True <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token keyword">set</span> to True <span class="token keyword">if</span> you want to disable <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>DisableBeauty<span class="token operator">&gt;</span>False<span class="token operator">&lt;</span><span class="token operator">/</span>DisableBeauty<span class="token operator">&gt;</span>
    
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token keyword">set</span> to True <span class="token keyword">if</span> you don&#39;t want to generate NetCoreBeauty flag file <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token keyword">do</span> <span class="token keyword">not</span> beauty twice since there <span class="token keyword">is</span> <span class="token class-name">no</span> flag file to determine <span class="token keyword">if</span> beauty already <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>NoBeautyFlag<span class="token operator">&gt;</span>False<span class="token operator">&lt;</span><span class="token operator">/</span>NoBeautyFlag<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>ForceBeauty<span class="token operator">&gt;</span>False<span class="token operator">&lt;</span><span class="token operator">/</span>ForceBeauty<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>BeautyAfterTasks<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>BeautyAfterTasks<span class="token operator">&gt;</span> <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token keyword">set</span> to True <span class="token keyword">if</span> you want to disable <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>DisablePatch<span class="token operator">&gt;</span>False<span class="token operator">&lt;</span><span class="token operator">/</span>DisablePatch<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token class-name">valid</span> values<span class="token punctuation">:</span> Error<span class="token operator">|</span>Detail<span class="token operator">|</span>Info <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>BeautyLogLevel<span class="token operator">&gt;</span>Error<span class="token operator">&lt;</span><span class="token operator">/</span>BeautyLogLevel<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 设置仓库镜像，如果你不能链接到 GitHub 的话可以采用该设置。推荐大陆用户打开这个配置。<span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token keyword">set</span> to a repo mirror <span class="token keyword">if</span> you <span class="token class-name">have</span> troble <span class="token keyword">in</span> connecting github <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>GitCDN<span class="token operator">&gt;</span>https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>gitee<span class="token punctuation">.</span>com<span class="token operator">/</span>liesauer<span class="token operator">/</span>HostFXRPatcher<span class="token operator">&lt;</span><span class="token operator">/</span>GitCDN<span class="token operator">&gt;</span> <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>GitTree<span class="token operator">&gt;</span>master<span class="token operator">&lt;</span><span class="token operator">/</span>GitTree<span class="token operator">&gt;</span> <span class="token operator">--</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>PropertyGroup<span class="token operator">&gt;</span>

  <span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;nulastudio.NetCoreBeauty&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;1.2.9.3&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span><span class="token operator">/</span>Project<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),B=o(`<p>在你使用 dotnet publish 命令或者 Visual Studio 发布时，移动工作将自动进行。 官方提供了一个测试项目，可以在这里看到源代码： https://github.com/nulastudio/NetCoreBeauty/tree/master/NetCoreBeautyNugetTest</p><h3 id="基础操作" tabindex="-1"><a class="header-anchor" href="#基础操作"><span>基础操作</span></a></h3><p>安装nuget包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;nulastudio.NetCoreBeauty&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;1.2.9.5&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在安装nuget的情况下编辑项目文件，增加如下内容</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PropertyGroup</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TargetFramework</span><span class="token punctuation">&gt;</span></span>net8.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TargetFramework</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Nullable</span><span class="token punctuation">&gt;</span></span>enable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Nullable</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImplicitUsings</span><span class="token punctuation">&gt;</span></span>enable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ImplicitUsings</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>InvariantGlobalization</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>InvariantGlobalization</span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BeautyLibsDir</span><span class="token punctuation">&gt;</span></span>libraries<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BeautyLibsDir</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DisableBeauty</span><span class="token punctuation">&gt;</span></span>False<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DisableBeauty</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NoBeautyFlag</span><span class="token punctuation">&gt;</span></span>False<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NoBeautyFlag</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ForceBeauty</span><span class="token punctuation">&gt;</span></span>False<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ForceBeauty</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DisablePatch</span><span class="token punctuation">&gt;</span></span>False<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DisablePatch</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BeautyLogLevel</span><span class="token punctuation">&gt;</span></span>Error<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BeautyLogLevel</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PropertyGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="publishfoldercleaner" tabindex="-1"><a class="header-anchor" href="#publishfoldercleaner"><span>PublishFolderCleaner</span></a></h2><p>独立发布选择非单文件发布的时候，输出文件夹上有超级多个文件，使用 PublishFolderCleaner 工具让发布文件夹只留一个 Exe 和一个 Lib 文件夹，需要安装nuget包</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ItemGroup</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PackageReference</span> <span class="token attr-name">Include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dotnetCampus.PublishFolderCleaner<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3.0.3<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ItemGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后可以使用命令行进行发布</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果打包报错了，那么就删除下之前打包好的文件，再次打包尝试</p></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>dotnet publish -r win-x64 -c release --self-contained
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,12);function N(f,_){const p=s("ExternalLinkIcon"),l=s("BeautyLibsDir"),r=s("DisableBeauty"),c=s("NoBeautyFlag"),i=s("ForceBeauty"),u=s("DisablePatch"),k=s("BeautyLogLevel");return g(),m("div",null,[b,e("p",null,[a("NetCoreBeauty 会将 .NET Core 软件的运行时组件和依赖移动到一个子目录中，让发布文件看起来更简洁漂亮。 github："),e("a",y,[a("https://github.com/nulastudio/NetCoreBeauty"),n(p)])]),h,e("blockquote",null,[n(l,null,{default:t(()=>[a("libraries")]),_:1}),a('：配置美化库的目录路径为 "libraries"。该设置指定了美化工具所需要的相关 library 文件所在的目录路径。'),n(r,null,{default:t(()=>[a("False")]),_:1}),a('：禁用美化功能。当值为 "False" 时，表示不禁用美化功能；当值为 "True" 时，表示禁用美化功能。'),n(c,null,{default:t(()=>[a("False")]),_:1}),a('：不使用美化标志。当值为 "False" 时，表示不使用美化标志；当值为 "True" 时，表示使用美化标志。'),n(i,null,{default:t(()=>[a("False")]),_:1}),a('：强制美化。当值为 "False" 时，表示不强制美化；当值为 "True" 时，表示强制美化。'),n(u,null,{default:t(()=>[a("False")]),_:1}),a('：禁用补丁功能。当值为 "False" 时，表示不禁用补丁功能；当值为 "True" 时，表示禁用补丁功能。'),n(k,null,{default:t(()=>[a("Error")]),_:1}),a('：日志级别设置为 "Error"。该设置指定了美化工具输出日志的级别，只输出错误级别及以上的日志信息。')]),B])}const x=d(v,[["render",N],["__file","optimizeFolder.html.vue"]]),T=JSON.parse('{"path":"/dotnet/buildAndRelease/release/optimizeFolder.html","title":"优化部署目录结构","lang":"zh-CN","frontmatter":{"title":"优化部署目录结构","lang":"zh-CN","date":"2023-08-17T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"youhuabushumulujiegou","slug":"dxuoqf","docsId":"72268439","description":"NetCoreBeauty NetCoreBeauty 会将 .NET Core 软件的运行时组件和依赖移动到一个子目录中，让发布文件看起来更简洁漂亮。 github：https://github.com/nulastudio/NetCoreBeauty NetCoreBeauty 只适用于独立部署发布模式的程序，不要勾选生成单个文件 为项目添加 Nu...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/buildAndRelease/release/optimizeFolder.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"优化部署目录结构"}],["meta",{"property":"og:description","content":"NetCoreBeauty NetCoreBeauty 会将 .NET Core 软件的运行时组件和依赖移动到一个子目录中，让发布文件看起来更简洁漂亮。 github：https://github.com/nulastudio/NetCoreBeauty NetCoreBeauty 只适用于独立部署发布模式的程序，不要勾选生成单个文件 为项目添加 Nu..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-10T09:56:09.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-08-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-10T09:56:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"优化部署目录结构\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-17T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-10T09:56:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"NetCoreBeauty","slug":"netcorebeauty","link":"#netcorebeauty","children":[{"level":3,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[]},{"level":3,"title":"基础操作","slug":"基础操作","link":"#基础操作","children":[]}]},{"level":2,"title":"PublishFolderCleaner","slug":"publishfoldercleaner","link":"#publishfoldercleaner","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1710064569000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":2.94,"words":882},"filePathRelative":"dotnet/buildAndRelease/release/optimizeFolder.md","localizedDate":"2023年8月17日","excerpt":"<h2>NetCoreBeauty</h2>\\n<p>NetCoreBeauty 会将 .NET Core 软件的运行时组件和依赖移动到一个子目录中，让发布文件看起来更简洁漂亮。\\ngithub：<a href=\\"https://github.com/nulastudio/NetCoreBeauty\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/nulastudio/NetCoreBeauty</a></p>\\n<blockquote>\\n<p>NetCoreBeauty 只适用于独立部署发布模式的程序，不要勾选生成单个文件</p>\\n</blockquote>","autoDesc":true}');export{x as comp,T as data};
