import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as p,c as l,b as n,e as s,f as o,d as c}from"./app-CBxp4zeL.js";const i={},r=c(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>支持进程内和进程外事件总线。</p><h2 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span>优点</span></a></h2><ul><li>模块解耦 <ul><li>模块间没有强依赖关系</li><li>可在任意位置发送事件</li></ul></li><li>支持AOP <ul><li>一种装配到事件管道以处理事件请求和响应的技术</li></ul></li><li>支持Saga <ul><li>一种业务补偿模式，将一个请求处理程序划分为不同的步骤执行</li></ul></li><li>Handler支持编排 <ul><li>事件的处理程序可以分成不同的步骤按顺序有序执行</li></ul></li><li>自动提交、错误回滚 <ul><li>结合UnitOfWork支持自动提交、错误回滚等。</li><li>操作成功后，框架自动保存</li><li>操作失败后，框架自动回滚</li></ul></li><li>提供跨进程事件总线 <ul><li>不需要我们自己对接RabbitMq、Kafka等消息队列</li></ul></li></ul><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>安装nuget包</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&lt;PackageReference Include=&quot;Masa.Contrib.Dispatcher.Events&quot; Version=&quot;0.6.0&quot; /&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="快速上手" tabindex="-1"><a class="header-anchor" href="#快速上手"><span>快速上手</span></a></h3><p>创建API项目，然后注册服务</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>builder.Services.AddEventBus();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建注册事件类</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 注册事件类</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">RegisterUserEvent</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Event</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Account <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> UserName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建处理程序</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserHanlder</span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ILogger<span class="token punctuation">&lt;</span>UserHanlder<span class="token punctuation">&gt;</span></span> _logger<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">UserHanlder</span><span class="token punctuation">(</span><span class="token class-name">ILogger<span class="token punctuation">&lt;</span>UserHanlder<span class="token punctuation">&gt;</span></span> logger <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//todo: 根据需要可在构造函数中注入其它服务 (需支持从DI获取)</span>
        _logger <span class="token operator">=</span> logger<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">EventHandler</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span> <span class="token comment">// 1为接收的顺序</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterUser</span><span class="token punctuation">(</span><span class="token class-name">RegisterUserEvent</span> @<span class="token keyword">event</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;注册用户成功，用户名为：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">@<span class="token keyword">event</span><span class="token punctuation">.</span>UserName</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">EventHandler</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SendSms</span><span class="token punctuation">(</span><span class="token class-name">RegisterUserEvent</span> @<span class="token keyword">event</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;注册用户成功，发送短信用户名为：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">@<span class="token keyword">event</span><span class="token punctuation">.</span>UserName</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>发送事件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ApiController</span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Route</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;[controller]&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HomeController</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ControllerBase</span></span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetConfig</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">FromServices</span></span><span class="token punctuation">]</span> <span class="token class-name">IEventBus</span> eventBus<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">await</span> eventBus<span class="token punctuation">.</span><span class="token function">PublishAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">RegisterUserEvent</span> <span class="token punctuation">{</span> Account <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span> UserName <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后两个处理程序就会接收到请求进行处理。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2>`,18),u={href:"https://docs.masastack.com/framework/building-blocks/dispatcher/overview",target:"_blank",rel:"noopener noreferrer"};function d(k,m){const a=t("ExternalLinkIcon");return p(),l("div",null,[r,n("p",null,[s("文档："),n("a",u,[s("https://docs.masastack.com/framework/building-blocks/dispatcher/overview"),o(a)])])])}const b=e(i,[["render",d],["__file","masaframework.html.vue"]]),h=JSON.parse('{"path":"/middleware/shijianzongxian/masaframework.html","title":"MasaFramework","lang":"zh-CN","frontmatter":{"title":"MasaFramework","lang":"zh-CN","date":"2023-03-04T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"masaframework","slug":"cytg2zs2i5tycueb","docsId":"116716629","description":"概述 支持进程内和进程外事件总线。 优点 模块解耦 模块间没有强依赖关系 可在任意位置发送事件 支持AOP 一种装配到事件管道以处理事件请求和响应的技术 支持Saga 一种业务补偿模式，将一个请求处理程序划分为不同的步骤执行 Handler支持编排 事件的处理程序可以分成不同的步骤按顺序有序执行 自动提交、错误回滚 结合UnitOfWork支持自动提交...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/shijianzongxian/masaframework.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"MasaFramework"}],["meta",{"property":"og:description","content":"概述 支持进程内和进程外事件总线。 优点 模块解耦 模块间没有强依赖关系 可在任意位置发送事件 支持AOP 一种装配到事件管道以处理事件请求和响应的技术 支持Saga 一种业务补偿模式，将一个请求处理程序划分为不同的步骤执行 Handler支持编排 事件的处理程序可以分成不同的步骤按顺序有序执行 自动提交、错误回滚 结合UnitOfWork支持自动提交..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-03-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MasaFramework\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-04T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"优点","slug":"优点","link":"#优点","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"快速上手","slug":"快速上手","link":"#快速上手","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.46,"words":439},"filePathRelative":"middleware/shijianzongxian/masaframework.md","localizedDate":"2023年3月4日","excerpt":"<h2>概述</h2>\\n<p>支持进程内和进程外事件总线。</p>\\n<h2>优点</h2>\\n<ul>\\n<li>模块解耦\\n<ul>\\n<li>模块间没有强依赖关系</li>\\n<li>可在任意位置发送事件</li>\\n</ul>\\n</li>\\n<li>支持AOP\\n<ul>\\n<li>一种装配到事件管道以处理事件请求和响应的技术</li>\\n</ul>\\n</li>\\n<li>支持Saga\\n<ul>\\n<li>一种业务补偿模式，将一个请求处理程序划分为不同的步骤执行</li>\\n</ul>\\n</li>\\n<li>Handler支持编排\\n<ul>\\n<li>事件的处理程序可以分成不同的步骤按顺序有序执行</li>\\n</ul>\\n</li>\\n<li>自动提交、错误回滚\\n<ul>\\n<li>结合UnitOfWork支持自动提交、错误回滚等。</li>\\n<li>操作成功后，框架自动保存</li>\\n<li>操作失败后，框架自动回滚</li>\\n</ul>\\n</li>\\n<li>提供跨进程事件总线\\n<ul>\\n<li>不需要我们自己对接RabbitMq、Kafka等消息队列</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{b as comp,h as data};
