import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as i,c as o,a as e,d as t,e as r,b as a}from"./app-Bw62I61B.js";const p={},c=a(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>通过命令行来运行测试任务</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>在单元测试目录下运行下面命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">## 执行所有测试任务</span>
dotnet <span class="token builtin class-name">test</span>

<span class="token comment">## 运行指定名字任务</span>
dotnet <span class="token builtin class-name">test</span> <span class="token parameter variable">--filter</span> TestMethod1
dotnet <span class="token builtin class-name">test</span> <span class="token parameter variable">--filter</span> Name~TestMethod1

<span class="token comment">## 排除某个方法</span>
dotnet <span class="token builtin class-name">test</span> <span class="token parameter variable">--filter</span> FullyQualifiedName<span class="token operator">!=</span>Walterlv.Demo.Tests.FooTest.TestMethod1

<span class="token comment">## 执行某一个类下的测试任务</span>
dotnet <span class="token builtin class-name">test</span> <span class="token parameter variable">--filter</span> <span class="token assign-left variable">ClassName</span><span class="token operator">=</span>Walterlv.Demo.Tests.FooTest

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),d={href:"https://learn.microsoft.com/zh-cn/dotnet/core/testing/selective-unit-tests?pivots=mstest",target:"_blank",rel:"noopener noreferrer"},m=a(`<h3 id="mstest" tabindex="-1"><a class="header-anchor" href="#mstest"><span>MSTest</span></a></h3><h4 id="分类与优先级" tabindex="-1"><a class="header-anchor" href="#分类与优先级"><span>分类与优先级</span></a></h4><p>查找标记了 [TestCategory(&quot;CategoryA&quot;)] 的方法并执行单元测试：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>dotnet test <span class="token operator">--</span>filter TestCategory<span class="token operator">=</span>CategoryA
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查找标记了 [Priority(2)] 的方法并执行单元测试：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>dotnet test <span class="token operator">--</span>filter Priority<span class="token operator">=</span><span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="条件与或" tabindex="-1"><a class="header-anchor" href="#条件与或"><span>条件与或</span></a></h4><p>条件或（|）：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>dotnet test <span class="token operator">--</span>filter Name<span class="token operator">~</span>TestMethod1<span class="token operator">|</span>TestCategory<span class="token operator">=</span>CategoryA
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>条件与（’&amp;’）：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>dotnet test <span class="token operator">--</span>filter Name<span class="token operator">~</span>TestMethod1<span class="token operator">&amp;</span>TestCategory<span class="token operator">=</span>CategoryA
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11);function u(v,h){const s=l("ExternalLinkIcon");return i(),o("div",null,[c,e("p",null,[t("官方文档："),e("a",d,[t("https://learn.microsoft.com/zh-cn/dotnet/core/testing/selective-unit-tests?pivots=mstest"),r(s)])]),m])}const k=n(p,[["render",u],["__file","cliTest.html.vue"]]),T=JSON.parse('{"path":"/middleware/testMange/unitTest/cliTest.html","title":"命令行","lang":"zh-CN","frontmatter":{"title":"命令行","lang":"zh-CN","date":"2023-09-02T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"minglinghang","slug":"sa38o7ntytoe6kyy","docsId":"138113714","description":"概述 通过命令行来运行测试任务 操作 在单元测试目录下运行下面命令 官方文档：https://learn.microsoft.com/zh-cn/dotnet/core/testing/selective-unit-tests?pivots=mstest MSTest 分类与优先级 查找标记了 [TestCategory(\\"CategoryA\\")] 的...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/testMange/unitTest/cliTest.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"命令行"}],["meta",{"property":"og:description","content":"概述 通过命令行来运行测试任务 操作 在单元测试目录下运行下面命令 官方文档：https://learn.microsoft.com/zh-cn/dotnet/core/testing/selective-unit-tests?pivots=mstest MSTest 分类与优先级 查找标记了 [TestCategory(\\"CategoryA\\")] 的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-19T02:43:38.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-19T02:43:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"命令行\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-19T02:43:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"MSTest","slug":"mstest","link":"#mstest","children":[{"level":4,"title":"分类与优先级","slug":"分类与优先级","link":"#分类与优先级","children":[]},{"level":4,"title":"条件与或","slug":"条件与或","link":"#条件与或","children":[]}]}]}],"git":{"createdTime":1697724028000,"updatedTime":1700361818000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.7,"words":210},"filePathRelative":"middleware/testMange/unitTest/cliTest.md","localizedDate":"2023年9月2日","excerpt":"<h2>概述</h2>\\n<p>通过命令行来运行测试任务</p>\\n<h2>操作</h2>\\n<p>在单元测试目录下运行下面命令</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\">## 执行所有测试任务</span>\\ndotnet <span class=\\"token builtin class-name\\">test</span>\\n\\n<span class=\\"token comment\\">## 运行指定名字任务</span>\\ndotnet <span class=\\"token builtin class-name\\">test</span> <span class=\\"token parameter variable\\">--filter</span> TestMethod1\\ndotnet <span class=\\"token builtin class-name\\">test</span> <span class=\\"token parameter variable\\">--filter</span> Name~TestMethod1\\n\\n<span class=\\"token comment\\">## 排除某个方法</span>\\ndotnet <span class=\\"token builtin class-name\\">test</span> <span class=\\"token parameter variable\\">--filter</span> FullyQualifiedName<span class=\\"token operator\\">!=</span>Walterlv.Demo.Tests.FooTest.TestMethod1\\n\\n<span class=\\"token comment\\">## 执行某一个类下的测试任务</span>\\ndotnet <span class=\\"token builtin class-name\\">test</span> <span class=\\"token parameter variable\\">--filter</span> <span class=\\"token assign-left variable\\">ClassName</span><span class=\\"token operator\\">=</span>Walterlv.Demo.Tests.FooTest\\n\\n</code></pre></div>","autoDesc":true}');export{k as comp,T as data};
