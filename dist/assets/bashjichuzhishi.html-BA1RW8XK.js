import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as p,c as o,a as s,b as n,d as e,e as t}from"./app-vSdX8vi3.js";const c={},r=t(`<h2 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型"><span>数据类型</span></a></h2><h3 id="变量" tabindex="-1"><a class="header-anchor" href="#变量"><span>变量</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">## 定义变量</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">&quot;张三&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token variable">$name</span>

<span class="token comment">## 接收输入</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;请输入&quot;</span>
<span class="token builtin class-name">read</span> name
<span class="token builtin class-name">echo</span> <span class="token string">&quot;您输入的值为：<span class="token variable">\${name}</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组" tabindex="-1"><a class="header-anchor" href="#数组"><span>数组</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">## 定义数组</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-a</span> <span class="token assign-left variable">list</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">## 给数组添加值</span>
list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">123</span>
list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">456</span>

<span class="token builtin class-name">echo</span> <span class="token string">&quot;输出数组长度&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">\${<span class="token operator">#</span>list<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">\${<span class="token operator">#</span>list<span class="token punctuation">[</span>*<span class="token punctuation">]</span>}</span>&quot;</span>

<span class="token builtin class-name">echo</span> <span class="token string">&quot;循环输出数组的内容&quot;</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable">\${list<span class="token punctuation">[</span>*<span class="token punctuation">]</span>}</span>
<span class="token keyword">do</span>
   <span class="token builtin class-name">echo</span> <span class="token variable">$i</span>
<span class="token keyword">done</span>

<span class="token builtin class-name">echo</span> <span class="token string">&quot;输出数组内容平铺&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">\${list<span class="token punctuation">[</span>*<span class="token punctuation">]</span>}</span>&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">\${list<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>&quot;</span>

<span class="token comment">## 判断数组长度，为0就退出</span>
<span class="token assign-left variable">len</span><span class="token operator">=</span><span class="token variable">\${<span class="token operator">#</span>list<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>
<span class="token comment">## -le：类似于&lt;=</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$len</span> <span class="token parameter variable">-le</span> <span class="token number">0</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\033">\\033</span>[31m your input is empty,and exit shell <span class="token entity" title="\\033">\\033</span>[0m&quot;</span>
    <span class="token builtin class-name">exit</span> <span class="token number">2</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),d={href:"https://blog.csdn.net/zhaoyq008/article/details/103512445/",target:"_blank",rel:"noopener noreferrer"},u=t(`<h3 id="字典-关联数组" tabindex="-1"><a class="header-anchor" href="#字典-关联数组"><span>字典(关联数组)</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">## 定义字典</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-A</span> <span class="token assign-left variable">dict</span><span class="token operator">=</span><span class="token punctuation">(</span> 
    <span class="token punctuation">[</span><span class="token string">&quot;001&quot;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;mysql&quot;</span>
    <span class="token punctuation">[</span><span class="token string">&quot;002&quot;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;rabbitmq&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">## 输出key以及对应的value</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">key</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $<span class="token punctuation">{</span><span class="token operator">!</span>dict<span class="token punctuation">[</span>*<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token variable">)</span></span>
<span class="token keyword">do</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$key</span> --&gt; <span class="token variable">\${dict<span class="token punctuation">[</span>$key<span class="token punctuation">]</span>}</span>&quot;</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="逻辑语句" tabindex="-1"><a class="header-anchor" href="#逻辑语句"><span>逻辑语句</span></a></h2><p>基本语法</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token builtin class-name">command</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
符合该条件执行的语句
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>扩展语法</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token builtin class-name">command</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
符合该条件执行的语句
<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token builtin class-name">command</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
符合该条件执行的语句
<span class="token keyword">else</span>
符合该条件执行的语句
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字符串判断 [ -z STRING ] 如果STRING的长度为零则返回为真，即空是真 [ -n STRING ] 如果STRING的长度非零则返回为真，即非空是真 [ STRING1 ]　 如果字符串不为空则返回为真,与-n类似 [ STRING1 == STRING2 ] 如果两个字符串相同则返回为真 [ STRING1 != STRING2 ] 如果字符串不相同则返回为真 [ STRING1 &lt; STRING2 ] 如果 “STRING1”字典排序在“STRING2”前面则返回为真。 [ STRING1 &gt; STRING2 ] 如果 “STRING1”字典排序在“STRING2”后面则返回为真。</p><p>数值判断 [ INT1 -eq INT2 ] INT1和INT2两数相等返回为真 ,= [ INT1 -ne INT2 ] INT1和INT2两数不等返回为真 ,&lt;&gt; [ INT1 -gt INT2 ] INT1大于INT2返回为真 ,&gt; [ INT1 -ge INT2 ] INT1大于等于INT2返回为真,&gt;= [ INT1 -lt INT2 ] INT1小于INT2返回为真 ,&lt; [ INT1 -le INT2 ] INT1小于等于INT2返回为真,&lt;=</p><p>逻辑判断 [ ! EXPR ] 逻辑非，如果 EXPR 是false则返回为真。 [ EXPR1 -a EXPR2 ] 逻辑与，如果 EXPR1 and EXPR2 全真则返回为真。 [ EXPR1 -o EXPR2 ] 逻辑或，如果 EXPR1 或者 EXPR2 为真则返回为真。 [ ] || [ ] 用OR来合并两个条件 [ ] &amp;&amp; [ ] 用AND来合并两个条件</p><h2 id="循环语句" tabindex="-1"><a class="header-anchor" href="#循环语句"><span>循环语句</span></a></h2><h3 id="for" tabindex="-1"><a class="header-anchor" href="#for"><span>for</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">## 循环</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">key</span> <span class="token keyword">in</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span>
<span class="token keyword">do</span>
   <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">\${key}</span>&quot;</span>
<span class="token keyword">done</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="while" tabindex="-1"><a class="header-anchor" href="#while"><span>while</span></a></h3><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2>`,15),k={href:"https://blog.csdn.net/hbsyaaa/article/details/106322841",target:"_blank",rel:"noopener noreferrer"};function m(v,h){const a=i("ExternalLinkIcon");return p(),o("div",null,[r,s("p",null,[n("数组内容介绍："),s("a",d,[n("https://blog.csdn.net/zhaoyq008/article/details/103512445/"),e(a)])]),u,s("p",null,[s("a",k,[n("https://blog.csdn.net/hbsyaaa/article/details/106322841"),e(a)])])])}const y=l(c,[["render",m],["__file","bashjichuzhishi.html.vue"]]),T=JSON.parse('{"path":"/otherLanguage/shell/bashjichuzhishi.html","title":"Bash基础知识","lang":"zh-CN","frontmatter":{"title":"Bash基础知识","lang":"zh-CN","date":"2023-02-27T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["otherLanguage"],"tag":["无"],"filename":"bashjichuzhishi","slug":"goqrx7fvbtfeizao","docsId":"106666714","description":"数据类型 变量 数组 数组内容介绍：https://blog.csdn.net/zhaoyq008/article/details/103512445/ 字典(关联数组) 逻辑语句 基本语法 扩展语法 字符串判断 [ -z STRING ] 如果STRING的长度为零则返回为真，即空是真 [ -n STRING ] 如果STRING的长度非零则返回为真...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/otherLanguage/shell/bashjichuzhishi.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Bash基础知识"}],["meta",{"property":"og:description","content":"数据类型 变量 数组 数组内容介绍：https://blog.csdn.net/zhaoyq008/article/details/103512445/ 字典(关联数组) 逻辑语句 基本语法 扩展语法 字符串判断 [ -z STRING ] 如果STRING的长度为零则返回为真，即空是真 [ -n STRING ] 如果STRING的长度非零则返回为真..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-17T03:16:45.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-02-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-17T03:16:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Bash基础知识\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-17T03:16:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[{"level":3,"title":"变量","slug":"变量","link":"#变量","children":[]},{"level":3,"title":"数组","slug":"数组","link":"#数组","children":[]},{"level":3,"title":"字典(关联数组)","slug":"字典-关联数组","link":"#字典-关联数组","children":[]}]},{"level":2,"title":"逻辑语句","slug":"逻辑语句","link":"#逻辑语句","children":[]},{"level":2,"title":"循环语句","slug":"循环语句","link":"#循环语句","children":[{"level":3,"title":"for","slug":"for","link":"#for","children":[]},{"level":3,"title":"while","slug":"while","link":"#while","children":[]}]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1694920605000,"updatedTime":1694920605000,"contributors":[{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":1.98,"words":593},"filePathRelative":"otherLanguage/shell/bashjichuzhishi.md","localizedDate":"2023年2月27日","excerpt":"<h2>数据类型</h2>\\n<h3>变量</h3>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\">## 定义变量</span>\\n<span class=\\"token assign-left variable\\">name</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"张三\\"</span>\\n<span class=\\"token builtin class-name\\">echo</span> <span class=\\"token variable\\">$name</span>\\n\\n<span class=\\"token comment\\">## 接收输入</span>\\n<span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"请输入\\"</span>\\n<span class=\\"token builtin class-name\\">read</span> name\\n<span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"您输入的值为：<span class=\\"token variable\\">${name}</span>\\"</span>\\n</code></pre></div>","autoDesc":true}');export{y as comp,T as data};
