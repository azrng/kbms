import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as n,b as t}from"./app-qB9_Bjjp.js";const e={},o=t(`<p>默认signalR是json传输方式，但是MessagePack是一种快速、精简的二进制序列化格式，当性能和宽带需要考虑时候，建议用这个，它会创建比json更小的信息   使用： 服务器需要安装<code>Microsoft.AspNetCore.SignalR.Protocols.MessagePack</code>js客户端需要添加包<code>@microsoft/signalr-protocol-msgpack</code> 综上一共引用的包有：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">script</span> src<span class="token operator">=</span><span class="token string">&quot;~/lib/signalr/signalr.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token class-name">script</span> src<span class="token operator">=</span><span class="token string">&quot;~/lib/msgpack5/msgpack5.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token class-name">script</span> src<span class="token operator">=</span><span class="token string">&quot;~/lib/signalr/signalr-protocol-msgpack.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>连接方式修改为：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">const</span> connection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">signalR<span class="token punctuation">.</span>HubConnectionBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">withUrl</span><span class="token punctuation">(</span><span class="token string">&quot;http://xxx/chathub&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">withHubProtocol</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">signalR<span class="token punctuation">.</span>protocols<span class="token punctuation">.</span>msgpack<span class="token punctuation">.</span>MessagePackHubProtocol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意： 1.MessagePack 协议区分大小写，传输参数时候必须和服务器大小写完全一致 2.MessagePack 默认传输时间格式是UTC，建议在发送之前将值转为UTC</p>`,5),p=[o];function c(r,l){return a(),n("div",null,p)}const g=s(e,[["render",c],["__file","messagepack.html.vue"]]),u=JSON.parse('{"path":"/dotnet/signalr/messagepack.html","title":"MessagePack","lang":"zh-CN","frontmatter":{"title":"MessagePack","lang":"zh-CN","date":"2022-02-25T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"messagepack","slug":"ll6x2f","docsId":"32030121","description":"默认signalR是json传输方式，但是MessagePack是一种快速、精简的二进制序列化格式，当性能和宽带需要考虑时候，建议用这个，它会创建比json更小的信息 使用： 服务器需要安装Microsoft.AspNetCore.SignalR.Protocols.MessagePackjs客户端需要添加包@microsoft/signalr-pro...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/signalr/messagepack.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"MessagePack"}],["meta",{"property":"og:description","content":"默认signalR是json传输方式，但是MessagePack是一种快速、精简的二进制序列化格式，当性能和宽带需要考虑时候，建议用这个，它会创建比json更小的信息 使用： 服务器需要安装Microsoft.AspNetCore.SignalR.Protocols.MessagePackjs客户端需要添加包@microsoft/signalr-pro..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T15:51:40.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-02-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T15:51:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MessagePack\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-02-25T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T15:51:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[],"git":{"createdTime":1697962303000,"updatedTime":1697989900000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":0.66,"words":198},"filePathRelative":"dotnet/signalr/messagepack.md","localizedDate":"2022年2月25日","excerpt":"<p>默认signalR是json传输方式，但是MessagePack是一种快速、精简的二进制序列化格式，当性能和宽带需要考虑时候，建议用这个，它会创建比json更小的信息\\n&nbsp;\\n使用：\\n服务器需要安装<code>Microsoft.AspNetCore.SignalR.Protocols.MessagePack</code>js客户端需要添加包<code>@microsoft/signalr-protocol-msgpack</code>\\n综上一共引用的包有：</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">script</span> src<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"~/lib/signalr/signalr.js\\"</span><span class=\\"token operator\\">&gt;</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>script<span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">script</span> src<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"~/lib/msgpack5/msgpack5.js\\"</span><span class=\\"token operator\\">&gt;</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>script<span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">script</span> src<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"~/lib/signalr/signalr-protocol-msgpack.js\\"</span><span class=\\"token operator\\">&gt;</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>script<span class=\\"token operator\\">&gt;</span>\\n</code></pre></div>","autoDesc":true}');export{g as comp,u as data};
