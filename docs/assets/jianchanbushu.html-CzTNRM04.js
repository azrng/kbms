import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as r,c as o,b as e,e as n,f as t,d as i}from"./app-CBxp4zeL.js";const d="/kbms/dotnet/image-20240421221535572.png",c="/kbms/common/1669531947826-e0a4440d-3a42-4dce-9eea-65b8fa8c8fb6.png",p="/kbms/dotnet/image-20240421223806666.png",g="/kbms/common/1669532487711-64968ba4-12f3-43de-95c6-04b9ad2d7dee.png",m="/kbms/common/1631024347306-6cb8d6a8-0f4e-4422-9fcf-cefc50c57988.png",u="/kbms/common/1669534749945-a3c326b9-0c5e-476f-a677-d3ffa2822908.png",b="/kbms/dotnet/image-20240421225548372.png",h="/kbms/assets/image-20240421224837038-tEebVkzG.png",v="/kbms/assets/image-20240421225902231-B4HdqnCO.png",k="/kbms/common/1630853106274-e18c02ab-fb18-485e-8d50-16b05cff1f51.png",f="/kbms/common/1669540222726-716ffdc2-39a2-4f37-8ef9-8a49783e553a.png",_="/kbms/common/1630853156788-69b4bfb8-dec8-436d-a9ff-78be35be0724.png",x="/kbms/common/1669540260122-0be4c35e-a786-4ad2-aa53-4592b3a8a740.png",y={},z=i('<h2 id="目的" tabindex="-1"><a class="header-anchor" href="#目的"><span>目的</span></a></h2><p>我们要实现的目的是我本地不断提交代码(CI),然后服务器不断进行部署(CD)的一个简单流程。</p><h2 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h2><p>Ubuntu服务器A：已经安装了docker，并使用docker部署了gitlab 服务器B：已经安装了docker</p><h2 id="gitlab检查" tabindex="-1"><a class="header-anchor" href="#gitlab检查"><span>Gitlab检查</span></a></h2><p>这里我们来检查一下Gitlab是否运行正常，这里我访问我服务器A地址：http://192.168.137.125:9006</p><figure><img src="'+d+'" alt="image-20240421221535572" tabindex="0" loading="lazy"><figcaption>image-20240421221535572</figcaption></figure><p>登录然后创建一个项目，用于我们测试自动部署的流程</p><h3 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目"><span>创建项目</span></a></h3>',9),C=e("br",null,null,-1),q=e("img",{src:c,alt:"image.png",loading:"lazy"},null,-1),D=e("br",null,null,-1),A=e("img",{src:p,alt:"image-20240421223806666",loading:"lazy"},null,-1),G=e("br",null,null,-1),I={href:"https://gitee.com/AZRNG/my-example/tree/9e720cad80eb1bb46816cdaa7b5f217692bfd256/",target:"_blank",rel:"noopener noreferrer"},N=e("br",null,null,-1),T=e("img",{src:g,alt:"image.png",loading:"lazy"},null,-1),j=e("h2",{id:"服务部署服务器",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#服务部署服务器"},[e("span",null,"服务部署服务器")])],-1),w=e("h3",{id:"安装gitlab-runner",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装gitlab-runner"},[e("span",null,"安装gitlab-runner")])],-1),B={href:"https://docs.gitlab.com/runner/install/linux-repository.html",target:"_blank",rel:"noopener noreferrer"},R=i(`<p>首先导入repository，这里我部署在Ubuntu，然后直接采用第一个链接即可</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 对于 Debian/Ubuntu/Mint </span>
<span class="token function">curl</span> <span class="token parameter variable">-L</span> <span class="token string">&quot;https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh&quot;</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span>

<span class="token comment"># 对于 RHEL/CentOS/Fedora</span>
<span class="token function">curl</span> <span class="token parameter variable">-L</span> <span class="token string">&quot;https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh&quot;</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+m+`" alt="image.png" loading="lazy"> 开始安装gitlab-runner</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 对于 Debian/Ubuntu/Mint</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> gitlab-runner <span class="token parameter variable">-y</span>

<span class="token comment"># 对于 RHEL/CentOS/Fedora</span>
<span class="token function">sudo</span> yum <span class="token function">install</span> gitlab-runner <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+u+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="注册到gitlab" tabindex="-1"><a class="header-anchor" href="#注册到gitlab"><span>注册到gitlab</span></a></h3><h4 id="为仓库设置单独runner" tabindex="-1"><a class="header-anchor" href="#为仓库设置单独runner"><span>为仓库设置单独Runner</span></a></h4><p>在我们要部署的仓库里面找到Runner配置信息(设置=&gt;CI/CD)</p><figure><img src="'+b+`" alt="image-20240421225548372" tabindex="0" loading="lazy"><figcaption>image-20240421225548372</figcaption></figure><p>输入命令进行注册</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> gitlab-runner register
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+h+'" alt="image-20240421224837038" tabindex="0" loading="lazy"><figcaption>image-20240421224837038</figcaption></figure><ul><li>输入Gitlab地址</li><li>输入注册token</li><li>输入说明</li><li>输入tags</li><li>输入注意事项</li><li>输入执行者，这里我使用shell</li></ul>',13),E={href:"https://docs.gitlab.com/runner/executors/index.html",target:"_blank",rel:"noopener noreferrer"},U=i('<p>然后就可以在仓库的配置下可以看到我们注册的东西</p><figure><img src="'+v+`" alt="image-20240421225902231" tabindex="0" loading="lazy"><figcaption>image-20240421225902231</figcaption></figure><h4 id="注册群组runner" tabindex="-1"><a class="header-anchor" href="#注册群组runner"><span>注册群组Runner</span></a></h4><p>首先我们要获取注册时候需要的信息，获取地址在 <code>http://IP:9006/admin/runners</code></p><p>重复上面单个仓库注册的过程就可以完成注册</p><h3 id="配置帐号-可选" tabindex="-1"><a class="header-anchor" href="#配置帐号-可选"><span>配置帐号(可选)</span></a></h3><p>添加gitlab-runner用户</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>sudo adduser gitlab-runner
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将该用户添加到docker组中</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>sudo gpasswd -a gitlab-runner docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看docker组是否已经添加用户成功</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>cat /etc/group |grep docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>验证是否可以通过gitlab-runner访问docker</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>sudo -u gitlab-runner -H docker info
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重启docker容器服务</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>sudo systemctl restart docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>给docker.sock设置权限</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>sudo chmod a+rw /var/run/docker.sock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+k+`" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h2 id="配置流水线" tabindex="-1"><a class="header-anchor" href="#配置流水线"><span>配置流水线</span></a></h2><p>在项目的根目录下创建文件名为.gitlab-ci.yml的文件，用于进行打包部署。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>## .gitlab-ci.yml

stages:
  - deploy

deploy:
  stage: deploy
  script:
    - docker -v
    - pwd
    - cd NetByDocker
    - docker build -f Dockerfile -t gitlabnetsample ../ 
    - docker rm -f gitlabnetsample &amp;&amp;  docker run --name gitlabnetsample -d -p 8060:80 gitlabnetsample ## remove old,create new 
    - docker ps -a
  tags: 
    - net
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提交推送代码，然后在gitlab的CI/CD=&gt;Pipeliners查看<br><img src="`+f+'" alt="image.png" loading="lazy"> 查看详细信息<br><img src="'+_+'" alt="image.png" loading="lazy"> 部署成功，进入该服务器查看容器信息<br><img src="'+x+'" alt="image.png" loading="lazy"> 通过外部访问服务：<code>http:/IP:8060/swagger/index.html</code> 成功显示swagger界面，部署成功。</p><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2>',24),Z={href:"https://mp.weixin.qq.com/s/h3W7ltj4xl1tzDEia_xCag",target:"_blank",rel:"noopener noreferrer"},L={href:"https://blog.csdn.net/qq_42799562/article/details/118179856",target:"_blank",rel:"noopener noreferrer"};function P(O,V){const a=l("ExternalLinkIcon");return r(),o("div",null,[z,e("p",null,[n("直接开始创建项目"),C,q,n(" 拉取项目并填充内容"),D,A,G,n(" 拷贝一个简单"),e("a",I,[n("示例项目"),t(a)]),n("提交到gitlab上"),N,T]),j,w,e("p",null,[n("在要部署服务的服务器上gitlab-runner，本次安装直接安装在服务器中，不使用docker安装gitlab-runner，避免产生Dind(docker in docker)问题。"),e("a",B,[n("官网安装资料"),t(a)])]),R,e("blockquote",null,[e("p",null,[n("执行者参考："),e("a",E,[n("https://docs.gitlab.com/runner/executors/index.html"),t(a)])])]),U,e("blockquote",null,[e("p",null,[e("a",Z,[n("https://mp.weixin.qq.com/s/h3W7ltj4xl1tzDEia_xCag"),t(a)]),e("a",L,[n("https://blog.csdn.net/qq_42799562/article/details/118179856"),t(a)])])])])}const M=s(y,[["render",P],["__file","jianchanbushu.html.vue"]]),F=JSON.parse('{"path":"/cloud/ciAndCd/gitlab/jianchanbushu.html","title":"简单部署","lang":"zh-CN","frontmatter":{"title":"简单部署","lang":"zh-CN","date":"2022-11-27T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["cloud"],"tag":["无"],"filename":"jianchanbushu","slug":"kt0nof","docsId":"52858788","description":"目的 我们要实现的目的是我本地不断提交代码(CI),然后服务器不断进行部署(CD)的一个简单流程。 环境准备 Ubuntu服务器A：已经安装了docker，并使用docker部署了gitlab 服务器B：已经安装了docker Gitlab检查 这里我们来检查一下Gitlab是否运行正常，这里我访问我服务器A地址：http://192.168.137....","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/cloud/ciAndCd/gitlab/jianchanbushu.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"简单部署"}],["meta",{"property":"og:description","content":"目的 我们要实现的目的是我本地不断提交代码(CI),然后服务器不断进行部署(CD)的一个简单流程。 环境准备 Ubuntu服务器A：已经安装了docker，并使用docker部署了gitlab 服务器B：已经安装了docker Gitlab检查 这里我们来检查一下Gitlab是否运行正常，这里我访问我服务器A地址：http://192.168.137...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/dotnet/image-20240421221535572.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-21T15:16:10.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-11-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-21T15:16:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"简单部署\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/dotnet/image-20240421221535572.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1669531947826-e0a4440d-3a42-4dce-9eea-65b8fa8c8fb6.png\\",\\"https://azrng.gitee.io/kbms/kbms/dotnet/image-20240421223806666.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1669532487711-64968ba4-12f3-43de-95c6-04b9ad2d7dee.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1631024347306-6cb8d6a8-0f4e-4422-9fcf-cefc50c57988.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1669534749945-a3c326b9-0c5e-476f-a677-d3ffa2822908.png\\",\\"https://azrng.gitee.io/kbms/kbms/dotnet/image-20240421225548372.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1630853106274-e18c02ab-fb18-485e-8d50-16b05cff1f51.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1669540222726-716ffdc2-39a2-4f37-8ef9-8a49783e553a.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1630853156788-69b4bfb8-dec8-436d-a9ff-78be35be0724.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1669540260122-0be4c35e-a786-4ad2-aa53-4592b3a8a740.png\\"],\\"datePublished\\":\\"2022-11-27T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-21T15:16:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"目的","slug":"目的","link":"#目的","children":[]},{"level":2,"title":"环境准备","slug":"环境准备","link":"#环境准备","children":[]},{"level":2,"title":"Gitlab检查","slug":"gitlab检查","link":"#gitlab检查","children":[{"level":3,"title":"创建项目","slug":"创建项目","link":"#创建项目","children":[]}]},{"level":2,"title":"服务部署服务器","slug":"服务部署服务器","link":"#服务部署服务器","children":[{"level":3,"title":"安装gitlab-runner","slug":"安装gitlab-runner","link":"#安装gitlab-runner","children":[]},{"level":3,"title":"注册到gitlab","slug":"注册到gitlab","link":"#注册到gitlab","children":[{"level":4,"title":"为仓库设置单独Runner","slug":"为仓库设置单独runner","link":"#为仓库设置单独runner","children":[]},{"level":4,"title":"注册群组Runner","slug":"注册群组runner","link":"#注册群组runner","children":[]}]},{"level":3,"title":"配置帐号(可选)","slug":"配置帐号-可选","link":"#配置帐号-可选","children":[]}]},{"level":2,"title":"配置流水线","slug":"配置流水线","link":"#配置流水线","children":[]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1695541854000,"updatedTime":1713712570000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":2.69,"words":807},"filePathRelative":"cloud/ciAndCd/gitlab/jianchanbushu.md","localizedDate":"2022年11月27日","excerpt":"<h2>目的</h2>\\n<p>我们要实现的目的是我本地不断提交代码(CI),然后服务器不断进行部署(CD)的一个简单流程。</p>\\n<h2>环境准备</h2>\\n<p>Ubuntu服务器A：已经安装了docker，并使用docker部署了gitlab\\n服务器B：已经安装了docker</p>\\n<h2>Gitlab检查</h2>\\n<p>这里我们来检查一下Gitlab是否运行正常，这里我访问我服务器A地址：http://192.168.137.125:9006</p>\\n<figure><img src=\\"/dotnet/image-20240421221535572.png\\" alt=\\"image-20240421221535572\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>image-20240421221535572</figcaption></figure>","autoDesc":true}');export{M as comp,F as data};
