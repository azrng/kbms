import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as a,b as e,e as i}from"./app-CVU83naM.js";const o="/kbms/common/1609051305019-77f9900a-b535-4618-8db5-50cb410a9a44.png",s={},r=e("p",null,[e("img",{src:o,alt:"image.png",loading:"lazy"}),i(" EXPLAIN列的解释： table：显示这一行的数据是关于哪张表的。 type：这是重要的列，显示连接使用了何种类型。从最好到最差的连接类型为const、eq_reg、ref、range、index和ALL。 possible_keys：显示可能应用在这张表中的索引。如果为空，没有可能的索引。可以为相关的域从WHERE语句中选择一个合适的语句。 key： 实际使用的索引。如果为NULL，则没有使用索引。很少的情况下，MySQL会选择优化不足的索引。这种情况下，可以在SELECT语句中使用USE INDEX（indexname）来强制使用一个索引或者用IGNORE INDEX（indexname）来强制MySQL忽略索引。 key_len：使用的索引的长度。在不损失精确性的情况下，长度越短越好。 ref：显示索引的哪一列被使用了，如果可能的话，是一个常数。 rows：MySQL认为必须检查的用来返回请求数据的行数。 Extra：关于MySQL如何解析查询的额外信息。 extra列返回的描述的意义：   Distinct: 一旦MySQL找到了与行相联合匹配的行，就不再搜索了。 Not exists: MySQL优化了LEFT JOIN，一旦它找到了匹配LEFT JOIN标准的行，就不再搜索了。 Range checked for each Record（index map:#）:没有找到理想的索引，因此对于从前面表中来的每一个行组合，MySQL检查使用哪个索引，并用它来从表中返回行。这是使用索引的最慢的连接之一。 Using filesort: 看到这个的时候，查询就需要优化了。MySQL需要进行额外的步骤来发现如何对返回的行排序。它根据连接类型以及存储排序键值和匹配条件的全部行的行指针来排序全部行。 Using index: 列数据是从仅仅使用了索引中的信息而没有读取实际的行动的表返回的，这发生在对表的全部的请求列都是同一个索引的部分的时候。 Using temporary: 看到这个的时候，查询需要优化了。这里，MySQL需要创建一个临时表来存储结果，这通常发生在对不同的列集进行ORDER BY上，而不是GROUP BY上。 Where used: 使用了WHERE从句来限制哪些行将与下一张表匹配或者是返回给用户。如果不想返回表中的全部行，并且连接类型ALL或index，这就会发生，或者是查询有问题不同连接类型的解释（按照效率高低的顺序排序）。 system: 表只有一行：system表。这是const连接类型的特殊情况。 const: 表中的一个记录的最大值能够匹配这个查询（索引可以是主键或惟一索引）。因为只有一行，这个值实际就是常数，因为MySQL先读这个值然后把它当做常数来对待。 eq_ref: 在连接中，MySQL在查询时，从前面的表中，对每一个记录的联合都从表中读取一个记录，它在查询使用了索引为主键或惟一键的全部时使用。 ref: 这个连接类型只有在查询使用了不是惟一或主键的键或者是这些类型的部分（比如，利用最左边前缀）时发生。对于之前的表的每一个行联合，全部记录都将从表中读出。这个类型严重依赖于根据索引匹配的记录多少—越少越好。 range: 这个连接类型使用索引返回一个范围中的行，比如使用>或<查找东西时发生的情况。 index: 这个连接类型对前面的表中的每一个记录联合进行完全扫描（比ALL更好，因为索引一般小于表数据）。 ALL: 这个连接类型对于前面的每一个记录联合进行完全扫描，这一般比较糟糕，应该尽量避免。")],-1),c=[r];function m(p,g){return a(),n("div",null,c)}const l=t(s,[["render",m],["__file","jiancesuoyinshifoushengxiao.html.vue"]]),L=JSON.parse('{"path":"/dataBase/mysql/zhihangjihua/jiancesuoyinshifoushengxiao.html","title":"检测索引是否生效","lang":"zh-CN","frontmatter":{"title":"检测索引是否生效","lang":"zh-CN","date":"2023-09-03T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"filename":"jiancesuoyinshifoushengxiao","slug":"aobahp","docsId":"26499985","description":"image.png EXPLAIN列的解释： table：显示这一行的数据是关于哪张表的。 type：这是重要的列，显示连接使用了何种类型。从最好到最差的连接类型为const、eq_reg、ref、range、index和ALL。 possible_keys：显示可能应用在这张表中的索引。如果为空，没有可能的索引。可以为相关的域从WHERE语句中选择一...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/mysql/zhihangjihua/jiancesuoyinshifoushengxiao.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"检测索引是否生效"}],["meta",{"property":"og:description","content":"image.png EXPLAIN列的解释： table：显示这一行的数据是关于哪张表的。 type：这是重要的列，显示连接使用了何种类型。从最好到最差的连接类型为const、eq_reg、ref、range、index和ALL。 possible_keys：显示可能应用在这张表中的索引。如果为空，没有可能的索引。可以为相关的域从WHERE语句中选择一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1609051305019-77f9900a-b535-4618-8db5-50cb410a9a44.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-23T15:53:24.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-23T15:53:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"检测索引是否生效\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1609051305019-77f9900a-b535-4618-8db5-50cb410a9a44.png\\"],\\"datePublished\\":\\"2023-09-03T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-23T15:53:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[],"git":{"createdTime":1695484404000,"updatedTime":1695484404000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":3.52,"words":1055},"filePathRelative":"dataBase/mysql/zhihangjihua/jiancesuoyinshifoushengxiao.md","localizedDate":"2023年9月3日","excerpt":"<p><img src=\\"/common/1609051305019-77f9900a-b535-4618-8db5-50cb410a9a44.png\\" alt=\\"image.png\\" loading=\\"lazy\\">\\nEXPLAIN列的解释：\\ntable：显示这一行的数据是关于哪张表的。\\ntype：这是重要的列，显示连接使用了何种类型。从最好到最差的连接类型为const、eq_reg、ref、range、index和ALL。\\npossible_keys：显示可能应用在这张表中的索引。如果为空，没有可能的索引。可以为相关的域从WHERE语句中选择一个合适的语句。\\nkey： 实际使用的索引。如果为NULL，则没有使用索引。很少的情况下，MySQL会选择优化不足的索引。这种情况下，可以在SELECT语句中使用USE INDEX（indexname）来强制使用一个索引或者用IGNORE INDEX（indexname）来强制MySQL忽略索引。\\nkey_len：使用的索引的长度。在不损失精确性的情况下，长度越短越好。\\nref：显示索引的哪一列被使用了，如果可能的话，是一个常数。\\nrows：MySQL认为必须检查的用来返回请求数据的行数。\\nExtra：关于MySQL如何解析查询的额外信息。\\nextra列返回的描述的意义：\\n&nbsp;\\nDistinct: 一旦MySQL找到了与行相联合匹配的行，就不再搜索了。\\nNot exists: MySQL优化了LEFT JOIN，一旦它找到了匹配LEFT JOIN标准的行，就不再搜索了。\\nRange checked for each Record（index map:#）:没有找到理想的索引，因此对于从前面表中来的每一个行组合，MySQL检查使用哪个索引，并用它来从表中返回行。这是使用索引的最慢的连接之一。\\nUsing filesort: 看到这个的时候，查询就需要优化了。MySQL需要进行额外的步骤来发现如何对返回的行排序。它根据连接类型以及存储排序键值和匹配条件的全部行的行指针来排序全部行。\\nUsing index: 列数据是从仅仅使用了索引中的信息而没有读取实际的行动的表返回的，这发生在对表的全部的请求列都是同一个索引的部分的时候。\\nUsing temporary: 看到这个的时候，查询需要优化了。这里，MySQL需要创建一个临时表来存储结果，这通常发生在对不同的列集进行ORDER BY上，而不是GROUP BY上。\\nWhere used: 使用了WHERE从句来限制哪些行将与下一张表匹配或者是返回给用户。如果不想返回表中的全部行，并且连接类型ALL或index，这就会发生，或者是查询有问题不同连接类型的解释（按照效率高低的顺序排序）。\\nsystem: 表只有一行：system表。这是const连接类型的特殊情况。\\nconst: 表中的一个记录的最大值能够匹配这个查询（索引可以是主键或惟一索引）。因为只有一行，这个值实际就是常数，因为MySQL先读这个值然后把它当做常数来对待。\\neq_ref: 在连接中，MySQL在查询时，从前面的表中，对每一个记录的联合都从表中读取一个记录，它在查询使用了索引为主键或惟一键的全部时使用。\\nref: 这个连接类型只有在查询使用了不是惟一或主键的键或者是这些类型的部分（比如，利用最左边前缀）时发生。对于之前的表的每一个行联合，全部记录都将从表中读出。这个类型严重依赖于根据索引匹配的记录多少—越少越好。\\nrange: 这个连接类型使用索引返回一个范围中的行，比如使用&gt;或&lt;查找东西时发生的情况。\\nindex: 这个连接类型对前面的表中的每一个记录联合进行完全扫描（比ALL更好，因为索引一般小于表数据）。\\nALL: 这个连接类型对于前面的每一个记录联合进行完全扫描，这一般比较糟糕，应该尽量避免。</p>","autoDesc":true}');export{l as comp,L as data};
