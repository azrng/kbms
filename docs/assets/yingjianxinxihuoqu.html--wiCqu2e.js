import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as e,c as p,a as n,d as o,e as c,b as l}from"./app-Bw62I61B.js";const i={},u=l(`<h2 id="获取屏幕并指定屏幕显示" tabindex="-1"><a class="header-anchor" href="#获取屏幕并指定屏幕显示"><span>获取屏幕并指定屏幕显示</span></a></h2><p>首先获取屏幕信息，然后指定在某一个屏幕上显示。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Form1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取所有屏幕信息</span>
<span class="token class-name"><span class="token keyword">var</span></span> screens <span class="token operator">=</span> Screen<span class="token punctuation">.</span>AllScreens<span class="token punctuation">;</span>
<span class="token comment">// 如果有两个屏幕，则在第二个屏幕上显示窗体</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>screens<span class="token punctuation">.</span>Length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// 获取第二个屏幕的信息</span>
    <span class="token class-name"><span class="token keyword">var</span></span> secondScreen <span class="token operator">=</span> screens<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// 设置在第二个屏幕上显示并且最大化</span>
    form<span class="token punctuation">.</span>StartPosition <span class="token operator">=</span> FormStartPosition<span class="token punctuation">.</span>Manual<span class="token punctuation">;</span>
    form<span class="token punctuation">.</span>Location <span class="token operator">=</span> secondScreen<span class="token punctuation">.</span>Bounds<span class="token punctuation">.</span>Location<span class="token punctuation">;</span>
    form<span class="token punctuation">.</span>WindowState <span class="token operator">=</span> FormWindowState<span class="token punctuation">.</span>Maximized<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

Application<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>form<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="获取本机ip" tabindex="-1"><a class="header-anchor" href="#获取本机ip"><span>获取本机IP</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> ip <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> localIPs <span class="token operator">=</span> Dns<span class="token punctuation">.</span><span class="token function">GetHostAddresses</span><span class="token punctuation">(</span>Dns<span class="token punctuation">.</span><span class="token function">GetHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> addr <span class="token keyword">in</span> localIPs<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>addr<span class="token punctuation">.</span>AddressFamily <span class="token operator">==</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets<span class="token punctuation">.</span>AddressFamily<span class="token punctuation">.</span>InterNetwork<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
         ip <span class="token operator">=</span> addr<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 处理您需要的IP地址</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="获取机器名" tabindex="-1"><a class="header-anchor" href="#获取机器名"><span>获取机器名</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 取机器名</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">GetHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Dns<span class="token punctuation">.</span><span class="token function">GetHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="获取cpu编号" tabindex="-1"><a class="header-anchor" href="#获取cpu编号"><span>获取CPU编号</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 取CPU编号</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">GetCpuID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> mc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ManagementClass</span><span class="token punctuation">(</span><span class="token string">&quot;Win32_Processor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> moc <span class="token operator">=</span> mc<span class="token punctuation">.</span><span class="token function">GetInstances</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> strCpuID <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">ManagementObject</span> mo <span class="token keyword">in</span> moc<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            strCpuID <span class="token operator">=</span> mo<span class="token punctuation">.</span>Properties<span class="token punctuation">[</span><span class="token string">&quot;ProcessorId&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者使用</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">FindComputerCPU_ID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">ManagementScope</span> ms <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ManagementScope</span><span class="token punctuation">(</span><span class="token string">&quot;root\\\\cimv2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ms<span class="token punctuation">.</span><span class="token function">Connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ManagementObjectSearcher</span> sysinfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ManagementObjectSearcher</span><span class="token punctuation">(</span>ms<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SelectQuery</span><span class="token punctuation">(</span><span class="token string">&quot;Win32_Processor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> cpuId <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">ManagementObject</span> sys <span class="token keyword">in</span> sysinfo<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            cpuId <span class="token operator">=</span> sys<span class="token punctuation">[</span><span class="token string">&quot;ProcessorId&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> cpuId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="获取第一块硬盘编号" tabindex="-1"><a class="header-anchor" href="#获取第一块硬盘编号"><span>获取第一块硬盘编号</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 取第一块硬盘编号</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token return-type class-name">String</span> <span class="token function">GetHardDiskID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> searcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ManagementObjectSearcher</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT * FROM Win32_PhysicalMedia&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> strHardDiskID <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">ManagementObject</span> mo <span class="token keyword">in</span> searcher<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            strHardDiskID <span class="token operator">=</span> mo<span class="token punctuation">[</span><span class="token string">&quot;SerialNumber&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> strHardDiskID<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="不同系统获取硬件信息" tabindex="-1"><a class="header-anchor" href="#不同系统获取硬件信息"><span>不同系统获取硬件信息</span></a></h2><h2 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h2><h3 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>windows</span></a></h3><p>windows 上我可以通过 System.Management 下 WMI Query获取信息</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name">ManagementObjectSearcher</span> searcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ManagementObjectSearcher</span><span class="token punctuation">(</span><span class="token string">&quot;select * from Win32_Processor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="linux" tabindex="-1"><a class="header-anchor" href="#linux"><span>Linux</span></a></h3><p>可以先看看如果用 bash 命令获取 Process Id, Machine id, version 等等，比如下面这些。</p><ol><li>&quot;LinuxModel&quot;: &quot;cat /sys/class/dmi/id/product_name&quot;</li><li>&quot;LinuxModelVersion&quot;: &quot;cat /sys/class/dmi/id/product_version&quot;</li><li>&quot;LinuxProcessorId&quot;: &quot;dmidecode -t processor | grep -E ID | sed &#39;s/.*: //&#39; | head -n 1&quot;</li><li>&quot;LinuxFirmwareVersion&quot;: &quot;cat /sys/class/dmi/id/bios_version&quot;,</li><li>&quot;LinuxMachineId&quot;: &quot;cat /var/lib/dbus/machine-id&quot;</li></ol><p>接下来写一个 扩展方法 来搞定。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">Bash</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name"><span class="token keyword">string</span></span> cmd<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">string</span></span> result <span class="token operator">=</span> String<span class="token punctuation">.</span>Empty<span class="token punctuation">;</span>

    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> escapedArgs <span class="token operator">=</span> cmd<span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span><span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\\\\\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">Process</span> process <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Process</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            process<span class="token punctuation">.</span>StartInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ProcessStartInfo</span>
            <span class="token punctuation">{</span>
                FileName <span class="token operator">=</span> <span class="token string">&quot;/bin/bash&quot;</span><span class="token punctuation">,</span>
                Arguments <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;-c \\&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">escapedArgs</span><span class="token punctuation">}</span></span><span class="token string">\\&quot;&quot;</span></span><span class="token punctuation">,</span>
                RedirectStandardOutput <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                UseShellExecute <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                CreateNoWindow <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>

            process<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            result <span class="token operator">=</span> process<span class="token punctuation">.</span>StandardOutput<span class="token punctuation">.</span><span class="token function">ReadToEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            process<span class="token punctuation">.</span><span class="token function">WaitForExit</span><span class="token punctuation">(</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            process<span class="token punctuation">.</span><span class="token function">Kill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//Logger.ErrorFormat(ex.Message, ex);</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后你就可以这样使用。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> output <span class="token operator">=</span> <span class="token string">&quot;ps aux&quot;</span><span class="token punctuation">.</span><span class="token function">Bash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="mac" tabindex="-1"><a class="header-anchor" href="#mac"><span>Mac</span></a></h3><p>借助 ManagementClass 类去获取，参考如下代码：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token class-name">System<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>ManagementClass</span> mc <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">(</span><span class="token type-expression class-name">System<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>ManagementClass</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token class-name">ManagementObject</span> mo <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">(</span><span class="token type-expression class-name">ManagementObject</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	mc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ManagementClass</span><span class="token punctuation">(</span><span class="token string">&quot;Win32_NetworkAdapterConfiguration&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token class-name">ManagementObjectCollection</span> moc <span class="token operator">=</span> mc<span class="token punctuation">.</span><span class="token function">GetInstances</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> mo <span class="token keyword">in</span> moc<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mo<span class="token punctuation">.</span><span class="token function">Item</span><span class="token punctuation">(</span><span class="token string">&quot;IPEnabled&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			Adapter<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;MAC &quot;</span> <span class="token operator">+</span> mo<span class="token punctuation">.</span><span class="token function">Item</span><span class="token punctuation">(</span><span class="token string">&quot;MacAddress&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h3>`,29),r={href:"https://mp.weixin.qq.com/s/N_WUX-Qayocfq0Me7xQpVA",target:"_blank",rel:"noopener noreferrer"};function k(d,m){const s=t("ExternalLinkIcon");return e(),p("div",null,[u,n("p",null,[n("a",r,[o("https://mp.weixin.qq.com/s/N_WUX-Qayocfq0Me7xQpVA"),c(s)])])])}const g=a(i,[["render",k],["__file","yingjianxinxihuoqu.html.vue"]]),h=JSON.parse('{"path":"/dotnet/jitongcaozuo/yingjianxinxihuoqu.html","title":"硬件信息获取","lang":"zh-CN","frontmatter":{"title":"硬件信息获取","lang":"zh-CN","date":"2023-10-22T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"yingjianxinxihuoqu","slug":"ds3n4obeirgzwkpu","docsId":"122182763","description":"获取屏幕并指定屏幕显示 首先获取屏幕信息，然后指定在某一个屏幕上显示。 获取本机IP 获取机器名 获取CPU编号 或者使用 获取第一块硬盘编号 不同系统获取硬件信息 windows windows 上我可以通过 System.Management 下 WMI Query获取信息 Linux 可以先看看如果用 bash 命令获取 Process Id, ...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/jitongcaozuo/yingjianxinxihuoqu.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"硬件信息获取"}],["meta",{"property":"og:description","content":"获取屏幕并指定屏幕显示 首先获取屏幕信息，然后指定在某一个屏幕上显示。 获取本机IP 获取机器名 获取CPU编号 或者使用 获取第一块硬盘编号 不同系统获取硬件信息 windows windows 上我可以通过 System.Management 下 WMI Query获取信息 Linux 可以先看看如果用 bash 命令获取 Process Id, ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"硬件信息获取\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"获取屏幕并指定屏幕显示","slug":"获取屏幕并指定屏幕显示","link":"#获取屏幕并指定屏幕显示","children":[]},{"level":2,"title":"获取本机IP","slug":"获取本机ip","link":"#获取本机ip","children":[]},{"level":2,"title":"获取机器名","slug":"获取机器名","link":"#获取机器名","children":[]},{"level":2,"title":"获取CPU编号","slug":"获取cpu编号","link":"#获取cpu编号","children":[]},{"level":2,"title":"获取第一块硬盘编号","slug":"获取第一块硬盘编号","link":"#获取第一块硬盘编号","children":[]},{"level":2,"title":"不同系统获取硬件信息","slug":"不同系统获取硬件信息","link":"#不同系统获取硬件信息","children":[]},{"level":2,"title":"","slug":"","link":"#","children":[{"level":3,"title":"windows","slug":"windows","link":"#windows","children":[]},{"level":3,"title":"Linux","slug":"linux","link":"#linux","children":[]},{"level":3,"title":"Mac","slug":"mac","link":"#mac","children":[]},{"level":3,"title":"资料","slug":"资料","link":"#资料","children":[]}]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.89,"words":568},"filePathRelative":"dotnet/jitongcaozuo/yingjianxinxihuoqu.md","localizedDate":"2023年10月22日","excerpt":"<h2>获取屏幕并指定屏幕显示</h2>\\n<p>首先获取屏幕信息，然后指定在某一个屏幕上显示。</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> form <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Form1</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 获取所有屏幕信息</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> screens <span class=\\"token operator\\">=</span> Screen<span class=\\"token punctuation\\">.</span>AllScreens<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 如果有两个屏幕，则在第二个屏幕上显示窗体</span>\\n<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>screens<span class=\\"token punctuation\\">.</span>Length <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 获取第二个屏幕的信息</span>\\n    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> secondScreen <span class=\\"token operator\\">=</span> screens<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// 设置在第二个屏幕上显示并且最大化</span>\\n    form<span class=\\"token punctuation\\">.</span>StartPosition <span class=\\"token operator\\">=</span> FormStartPosition<span class=\\"token punctuation\\">.</span>Manual<span class=\\"token punctuation\\">;</span>\\n    form<span class=\\"token punctuation\\">.</span>Location <span class=\\"token operator\\">=</span> secondScreen<span class=\\"token punctuation\\">.</span>Bounds<span class=\\"token punctuation\\">.</span>Location<span class=\\"token punctuation\\">;</span>\\n    form<span class=\\"token punctuation\\">.</span>WindowState <span class=\\"token operator\\">=</span> FormWindowState<span class=\\"token punctuation\\">.</span>Maximized<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\nApplication<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Run</span><span class=\\"token punctuation\\">(</span>form<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{g as comp,h as data};
