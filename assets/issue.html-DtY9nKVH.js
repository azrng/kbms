import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as e,b as r,o}from"./app-BIR_P--4.js";const n={};function s(d,t){return o(),i("div",null,t[0]||(t[0]=[e("h2",{id:"如何防止消息重复消费",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#如何防止消息重复消费"},[e("span",null,"如何防止消息重复消费")])],-1),e("p",null,[r("在生产方根据业务特点生成消息ID，例如：给用户添加因为下单而赠送积分的消息ID，就可以根据userid_orderid积分数量来生成唯一的消息ID。"),e("br"),r(" 通过该消息ID，消费端就可以把已经消费的消息ID存储到本地或者存储到redis中，如果消费端是多个消费者在并行进行消费，在判断重复消息的时候你会需要锁来保证同样数据的顺序化。")],-1)]))}const c=a(n,[["render",s]]),l=JSON.parse('{"path":"/middleware/messageQueue/issue.html","title":"常见问题","lang":"zh-CN","frontmatter":{"title":"常见问题","lang":"zh-CN","date":"2021-05-14T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"changjianwenti","slug":"lnx4uo","docsId":"44443756","description":"如何防止消息重复消费 在生产方根据业务特点生成消息ID，例如：给用户添加因为下单而赠送积分的消息ID，就可以根据userid_orderid积分数量来生成唯一的消息ID。 通过该消息ID，消费端就可以把已经消费的消息ID存储到本地或者存储到redis中，如果消费端是多个消费者在并行进行消费，在判断重复消息的时候你会需要锁来保证同样数据的顺序化。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常见问题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-05-14T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-23T14:28:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"],["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/messageQueue/issue.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"常见问题"}],["meta",{"property":"og:description","content":"如何防止消息重复消费 在生产方根据业务特点生成消息ID，例如：给用户添加因为下单而赠送积分的消息ID，就可以根据userid_orderid积分数量来生成唯一的消息ID。 通过该消息ID，消费端就可以把已经消费的消息ID存储到本地或者存储到redis中，如果消费端是多个消费者在并行进行消费，在判断重复消息的时候你会需要锁来保证同样数据的顺序化。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-23T14:28:50.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2021-05-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-23T14:28:50.000Z"}]]},"git":{"createdTime":1697724028000,"updatedTime":1721744930000,"contributors":[{"name":"azrng","username":"","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":0.56,"words":169},"filePathRelative":"middleware/messageQueue/issue.md","excerpt":"<h2>如何防止消息重复消费</h2>\\n<p>在生产方根据业务特点生成消息ID，例如：给用户添加因为下单而赠送积分的消息ID，就可以根据userid_orderid积分数量来生成唯一的消息ID。<br>\\n通过该消息ID，消费端就可以把已经消费的消息ID存储到本地或者存储到redis中，如果消费端是多个消费者在并行进行消费，在判断重复消息的时候你会需要锁来保证同样数据的顺序化。</p>\\n","autoDesc":true}');export{c as comp,l as data};
