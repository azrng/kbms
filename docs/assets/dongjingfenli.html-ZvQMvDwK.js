import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as e}from"./app-Bfb6-vFH.js";const t={},i=e(`<h2 id="说明" tabindex="-1"><a class="header-anchor" href="#说明"><span>说明</span></a></h2><p>动态跟静态请求分开，不能理解成只是单纯把动态页面和静态页面物理分离。严格意义上应该是动态请求跟静态请求分开，可以理解成使用nginx处理静态页面，其他服务器处理动态页面。</p><h2 id="实现方式" tabindex="-1"><a class="header-anchor" href="#实现方式"><span>实现方式</span></a></h2><p>1.纯碎把静态文件(js、css)单独成单独的域名，放在独立的服务器上，也是目前主流推崇的方案。 2.将动态跟静态文件混合在一起发布，通过nginx来分开。</p><h2 id="localhost配置" tabindex="-1"><a class="header-anchor" href="#localhost配置"><span>localhost配置</span></a></h2><h3 id="动态资源代理" tabindex="-1"><a class="header-anchor" href="#动态资源代理"><span>动态资源代理</span></a></h3><p>配置文件增加</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">localhost</span> /</span><span class="token punctuation">{</span>
		<span class="token directive"><span class="token keyword">proxy_pass</span> www.baidu.com</span><span class="token punctuation">;</span><span class="token comment">#转发地址</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="静态资源代理" tabindex="-1"><a class="header-anchor" href="#静态资源代理"><span>静态资源代理</span></a></h3><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">localhost</span> /｛
    root /root/</span><span class="token punctuation">;</span> <span class="token comment">#静态资源路径</span>
    <span class="token directive"><span class="token keyword">Index</span> a.txt</span><span class="token punctuation">;</span> <span class="token comment">#默认访问选项</span>
    <span class="token directive"><span class="token keyword">autoindex</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span> <span class="token comment">#列表当前文件夹内容</span>
｝
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="完整动静分离配置" tabindex="-1"><a class="header-anchor" href="#完整动静分离配置"><span>完整动静分离配置</span></a></h3><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code>  <span class="token directive"><span class="token keyword">upstream</span> eap_website</span> <span class="token punctuation">{</span>
      <span class="token directive"><span class="token keyword">server</span> eapwebsite</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

  <span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>
      <span class="token directive"><span class="token keyword">listen</span>      <span class="token number">80</span></span><span class="token punctuation">;</span>
      <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span>            <span class="token comment">## 静态资源</span>
            <span class="token directive"><span class="token keyword">root</span> /usr/share/nginx/html</span><span class="token punctuation">;</span>
            <span class="token directive"><span class="token keyword">index</span> index.html index.htm</span><span class="token punctuation">;</span>
            <span class="token directive"><span class="token keyword">try_files</span> <span class="token variable">$uri</span> /index.html</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token directive"><span class="token keyword">location</span> ^~ /api/</span>  <span class="token punctuation">{</span>     <span class="token comment">## 动态资源</span>
         <span class="token directive"><span class="token keyword">proxy_pass</span>         http://eap_website/api/</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token directive"><span class="token keyword">location</span> ^~ /swagger/</span>  <span class="token punctuation">{</span>    <span class="token comment">## 动态资源</span>
         <span class="token directive"><span class="token keyword">proxy_pass</span>         http://eap_website/swagger/</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><p></p>`,14),l=[i];function p(o,c){return s(),a("div",null,l)}const u=n(t,[["render",p],["__file","dongjingfenli.html.vue"]]),m=JSON.parse('{"path":"/middleware/reverseProxy/nginx/dongjingfenli.html","title":"动静分离","lang":"zh-CN","frontmatter":{"title":"动静分离","lang":"zh-CN","date":"2021-05-14T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"dongjingfenli","slug":"dlp499","docsId":"29395044","description":"说明 动态跟静态请求分开，不能理解成只是单纯把动态页面和静态页面物理分离。严格意义上应该是动态请求跟静态请求分开，可以理解成使用nginx处理静态页面，其他服务器处理动态页面。 实现方式 1.纯碎把静态文件(js、css)单独成单独的域名，放在独立的服务器上，也是目前主流推崇的方案。 2.将动态跟静态文件混合在一起发布，通过nginx来分开。 loca...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/reverseProxy/nginx/dongjingfenli.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"动静分离"}],["meta",{"property":"og:description","content":"说明 动态跟静态请求分开，不能理解成只是单纯把动态页面和静态页面物理分离。严格意义上应该是动态请求跟静态请求分开，可以理解成使用nginx处理静态页面，其他服务器处理动态页面。 实现方式 1.纯碎把静态文件(js、css)单独成单独的域名，放在独立的服务器上，也是目前主流推崇的方案。 2.将动态跟静态文件混合在一起发布，通过nginx来分开。 loca..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-07T14:59:04.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2021-05-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-07T14:59:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"动静分离\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-05-14T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-07T14:59:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"说明","slug":"说明","link":"#说明","children":[]},{"level":2,"title":"实现方式","slug":"实现方式","link":"#实现方式","children":[]},{"level":2,"title":"localhost配置","slug":"localhost配置","link":"#localhost配置","children":[{"level":3,"title":"动态资源代理","slug":"动态资源代理","link":"#动态资源代理","children":[]},{"level":3,"title":"静态资源代理","slug":"静态资源代理","link":"#静态资源代理","children":[]},{"level":3,"title":"完整动静分离配置","slug":"完整动静分离配置","link":"#完整动静分离配置","children":[]}]}],"git":{"createdTime":1697724028000,"updatedTime":1715093944000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.93,"words":278},"filePathRelative":"middleware/reverseProxy/nginx/dongjingfenli.md","localizedDate":"2021年5月14日","excerpt":"<h2>说明</h2>\\n<p>动态跟静态请求分开，不能理解成只是单纯把动态页面和静态页面物理分离。严格意义上应该是动态请求跟静态请求分开，可以理解成使用nginx处理静态页面，其他服务器处理动态页面。</p>\\n<h2>实现方式</h2>\\n<p>1.纯碎把静态文件(js、css)单独成单独的域名，放在独立的服务器上，也是目前主流推崇的方案。\\n2.将动态跟静态文件混合在一起发布，通过nginx来分开。</p>\\n<h2>localhost配置</h2>\\n<h3>动态资源代理</h3>\\n<p>配置文件增加</p>\\n<div class=\\"language-nginx\\" data-ext=\\"nginx\\" data-title=\\"nginx\\"><pre class=\\"language-nginx\\"><code><span class=\\"token directive\\"><span class=\\"token keyword\\">localhost</span> /</span><span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token directive\\"><span class=\\"token keyword\\">proxy_pass</span> www.baidu.com</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">#转发地址</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{u as comp,m as data};
