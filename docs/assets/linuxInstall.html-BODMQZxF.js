import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as d,c as u,e,w as a,a as s,d as n,b as l}from"./app-DMmdIwn0.js";const k="/kbms/common/1631381660834-2f21de05-73ed-46ab-957b-b05230265697.png",m="/kbms/common/image-20230929192518612.png",v={},b=l(`<h2 id="centos安装docker" tabindex="-1"><a class="header-anchor" href="#centos安装docker"><span>Centos安装Docker</span></a></h2><h3 id="安装条件" tabindex="-1"><a class="header-anchor" href="#安装条件"><span>安装条件</span></a></h3><p>在centos 7安装docker要求系统64位，系统内核版本3.10以上，可以使用命令查看</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">uname</span> <span class="token parameter variable">-r</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>注意</strong>：要不就是开放指定的端口，要不直接就在安装之前将服务器防火墙关闭</p></blockquote><h3 id="卸载旧版本" tabindex="-1"><a class="header-anchor" href="#卸载旧版本"><span>卸载旧版本</span></a></h3><p>老版本的docker被称为docker或者docker-engine，如果安装就需要卸载它们以及相关的依赖项： 命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum remove <span class="token function">docker</span> <span class="token punctuation">\\</span>
                  docker-client <span class="token punctuation">\\</span>
                  docker-client-latest <span class="token punctuation">\\</span>
                  docker-common <span class="token punctuation">\\</span>
                  docker-latest <span class="token punctuation">\\</span>
                  docker-latest-logrotate<span class="token punctuation">\\</span>
                  docker-logrotate <span class="token punctuation">\\</span>
                  docker-engine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>新版本的名称被称为docker-ce</p></blockquote><h3 id="安装方法" tabindex="-1"><a class="header-anchor" href="#安装方法"><span>安装方法</span></a></h3><p>安装方法有两种： 1.从docker存储库中拉取进行安装，以简化安装和升级任务。推荐。 2.下载RPM软件包并手动安装，并完全手动管理升级。 这边只描述使用存储库进行安装 安装yum-utils</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>设置存储库</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">## docker官方仓库</span>
<span class="token function">sudo</span> yum-config-manager  --add-repo https://download.docker.com/linux/centos/docker-ce.repo

<span class="token comment">## 使用阿里云docker仓库</span>
<span class="token function">sudo</span> yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装最新版本docker engine和容器</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> docker-ce docker-ce-cli containerd.io
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此命令会安装 Docker，但不会启动 Docker。它还会创建一个 docker组，但是，默认情况下它不会向该组添加任何用户。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token preprocessor property">## 启动docker</span>
sudo systemctl start docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>配合docker镜像加速器,不过貌似如何使用阿里云docker仓库好像不需要配置网速都不差。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /etc/docker
<span class="token function">sudo</span> <span class="token function">tee</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;-</span><span class="token string">&#39;EOF&#39;
{
  &quot;registry-mirrors&quot;: [&quot;加速器url&quot;]
}
EOF</span>
<span class="token function">sudo</span> systemctl daemon-reload
<span class="token function">sudo</span> systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询docker版本</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>常用命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">## 重启docker</span>
<span class="token function">sudo</span> systemctl restart  <span class="token function">docker</span> 
<span class="token comment">## 查看docker服务状态</span>
<span class="token function">sudo</span> systemctl status <span class="token function">docker</span>
<span class="token comment">## 将docker服务设置为开机启动</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>
<span class="token comment">## 查看docker版本信息</span>
<span class="token function">docker</span> <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="卸载" tabindex="-1"><a class="header-anchor" href="#卸载"><span>卸载</span></a></h3><p>卸载docker包</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum remove docker-ce docker-ce-cli containerd.io
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>主机上docker一些容器，卷或自定义配置文件不会自动删除，可以使用命令删除：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code> <span class="token function">sudo</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> /var/lib/docker
 <span class="token function">sudo</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> /var/lib/containerd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>检测docker是否可以正常运行（运行hello-word镜像，如果本机没有，系统会自动去拉取） 命令：sudo docker run hello-world 然后出来 Hello from Docker就说明成功了</p><h3 id="错误" tabindex="-1"><a class="header-anchor" href="#错误"><span>错误</span></a></h3><p>执行安装出错</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>sudo yum install <span class="token operator">-</span>y docker<span class="token operator">-</span>ce docker<span class="token operator">-</span>ce<span class="token operator">-</span>cli containerd<span class="token punctuation">.</span>io
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+k+`" alt="image.png" loading="lazy">  解决方案</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name">curl</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>packages<span class="token punctuation">.</span>microsoft<span class="token punctuation">.</span>com<span class="token operator">/</span>config<span class="token operator">/</span>rhel<span class="token operator">/</span><span class="token number">7</span><span class="token operator">/</span>prod<span class="token punctuation">.</span>repo <span class="token operator">&gt;</span> <span class="token punctuation">.</span><span class="token operator">/</span>microsoft<span class="token operator">-</span>prod<span class="token punctuation">.</span>repo
sudo cp <span class="token punctuation">.</span><span class="token operator">/</span>microsoft<span class="token operator">-</span>prod<span class="token punctuation">.</span>repo <span class="token operator">/</span>etc<span class="token operator">/</span>yum<span class="token punctuation">.</span>repos<span class="token punctuation">.</span>d<span class="token operator">/</span>
yum update <span class="token operator">-</span>y
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="centos一键安装脚本" tabindex="-1"><a class="header-anchor" href="#centos一键安装脚本"><span>Centos一键安装脚本</span></a></h2><p>新建sh后缀名文件，将下面代码复制进去，然后执行</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token preprocessor property">#***************</span>
<span class="token preprocessor property">#1. 安装Docker</span>
<span class="token preprocessor property">#设置yum源</span>
sudo yum <span class="token operator">-</span>y install yum<span class="token operator">-</span>utils
sudo yum<span class="token operator">-</span>config<span class="token operator">-</span>manager <span class="token operator">--</span><span class="token keyword">add</span><span class="token operator">-</span><span class="token class-name">repo</span> http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com<span class="token operator">/</span>docker<span class="token operator">-</span>ce<span class="token operator">/</span>linux<span class="token operator">/</span>centos<span class="token operator">/</span>docker<span class="token operator">-</span>ce<span class="token punctuation">.</span>repo
<span class="token preprocessor property">#yum包更新到最新</span>
sudo yum update <span class="token operator">-</span>y

<span class="token preprocessor property">#安装Docker最新版</span>
sudo yum install docker<span class="token operator">-</span>ce <span class="token operator">-</span>y
<span class="token preprocessor property">#设置Docker自启动</span>
sudo systemctl enable  docker
<span class="token preprocessor property">#启动Docker</span>
sudo systemctl start docker

<span class="token preprocessor property">#配置国内镜像 /etc/docker/daemon.json</span>
sudo tee <span class="token operator">/</span>etc<span class="token operator">/</span>docker<span class="token operator">/</span>daemon<span class="token punctuation">.</span>json <span class="token operator">&lt;&lt;</span><span class="token operator">-</span>&#39;EOF&#39;
<span class="token punctuation">{</span>
  <span class="token string">&quot;registry-mirrors&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;https://i9it9b0k.mirror.aliyuncs.com&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
EOF
<span class="token preprocessor property">#加载配置文件,ReStart</span>
sudo systemctl daemon<span class="token operator">-</span>reload
sudo systemctl restart docker

<span class="token preprocessor property">#安装docker-compose,最新版本需要手动查询一下</span>
sudo curl <span class="token operator">-</span><span class="token class-name">L</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token keyword">get</span><span class="token punctuation">.</span>daocloud<span class="token punctuation">.</span>io<span class="token operator">/</span>docker<span class="token operator">/</span>compose<span class="token operator">/</span>releases<span class="token operator">/</span>download<span class="token operator">/</span><span class="token number">1.25</span><span class="token number">.5</span><span class="token operator">/</span>docker<span class="token operator">-</span>compose<span class="token operator">-</span>\`uname <span class="token operator">-</span>s\`<span class="token operator">-</span>\`uname <span class="token operator">-</span>m\` <span class="token operator">-</span>o <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin<span class="token operator">/</span>docker<span class="token operator">-</span>compose
sudo chmod <span class="token operator">+</span>x <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin<span class="token operator">/</span>docker<span class="token operator">-</span>compose

<span class="token preprocessor property">#*******************************</span>
<span class="token preprocessor property">#2. 其它一些工具的安装</span>
<span class="token preprocessor property">#安装rz和sz命令</span>
sudo yum <span class="token operator">-</span>y install lrzsz

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ubuntu安装docker" tabindex="-1"><a class="header-anchor" href="#ubuntu安装docker"><span>Ubuntu安装Docker</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>下面的步骤在Ubuntu 22.04.2 LTS上测试使用的</p></div><h3 id="更新ubuntu" tabindex="-1"><a class="header-anchor" href="#更新ubuntu"><span>更新Ubuntu</span></a></h3><p>在服务器中依次运行下面的命令</p><div class="language-she line-numbers-mode" data-ext="she" data-title="she"><pre class="language-she"><code>sudo apt update
sudo apt upgrade
sudo apt full-upgrade
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加docker库" tabindex="-1"><a class="header-anchor" href="#添加docker库"><span>添加docker库</span></a></h3><p>首先，安装必要的证书并允许 apt 包管理器使用以下命令通过 HTTPS 使用存储库：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> apt-transport-https ca-certificates <span class="token function">curl</span> software-properties-common gnupg lsb-release
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后，运行下列命令添加 Docker 的官方 GPG 密钥：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg <span class="token operator">|</span> <span class="token function">sudo</span> gpg <span class="token parameter variable">--dearmor</span> <span class="token parameter variable">-o</span> /usr/share/keyrings/docker-archive-keyring.gpg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>添加 Docker 官方库：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;deb [arch=<span class="token variable"><span class="token variable">$(</span>dpkg --print-architecture<span class="token variable">)</span></span> signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu <span class="token variable"><span class="token variable">$(</span>lsb_release <span class="token parameter variable">-cs</span><span class="token variable">)</span></span> stable&quot;</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/docker.list <span class="token operator">&gt;</span> /dev/null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用命令更新 Ubuntu 源列表：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="安装-docker" tabindex="-1"><a class="header-anchor" href="#安装-docker"><span>安装 Docker</span></a></h3><p>最后，运行下列命令在 服务器中安装最新 Docker CE或者安装其他版本</p>`,54),h=s("div",{class:"language-text line-numbers-mode","data-ext":"text","data-title":"text"},[s("pre",{class:"language-text"},[s("code",null,`sudo apt install docker-ce docker-ce-cli containerd.io docker-compose-plugin
`)]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1),g=s("div",{class:"language-text line-numbers-mode","data-ext":"text","data-title":"text"},[s("pre",{class:"language-text"},[s("code",null,`# 如果要安装其他版本的，可以使用下面的方法，运行下列命令检查可以安装的 Docker 版本
apt-cache madison docker-ce

# 可以挑选上面列表中的任何版本进行安装。例如，安装 5:20.10.16~ 3-0 ~ubuntu-jammy 这个版本，运行：
sudo apt install docker-ce=5:20.10.16~3-0~ubuntu-jammy docker-ce-cli=5:20.10.16~3-0~ubuntu-jammy containerd.io
`)]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),f=l(`<p>安装完成后，运行下面命令验证docker服务是否在运行</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl status <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+m+`" alt="image-20230929192518612" tabindex="0" loading="lazy"><figcaption>image-20230929192518612</figcaption></figure><p>出现上面图片的内容就是安装成功且在运行着了。</p><h3 id="常用脚本" tabindex="-1"><a class="header-anchor" href="#常用脚本"><span>常用脚本</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 启动docker</span>
<span class="token function">sudo</span> systemctl start <span class="token function">docker</span>

<span class="token comment"># 重启docker</span>
<span class="token function">sudo</span> systemctl restart  <span class="token function">docker</span> 

<span class="token comment"># 查看docker服务状态</span>
<span class="token function">sudo</span> systemctl status <span class="token function">docker</span>

<span class="token comment"># 将docker服务设置为开机启动</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>

<span class="token comment"># 查看docker版本信息</span>
<span class="token function">docker</span> <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,7),y={href:"https://docs.docker.com/engine/install/centos/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.cnblogs.com/kingsonfu/p/11576797.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://docs.docker.com/engine/install/ubuntu/#set-up-the-repository",target:"_blank",rel:"noopener noreferrer"},D=s("p",null,"ubuntu安装教程参考地址：https://www.51cto.com/article/715086.html",-1);function w(z,q){const i=r("CodeTabs"),t=r("ExternalLinkIcon");return d(),u("div",null,[b,e(i,{id:"130",data:[{id:"最新版本"},{id:"其他版本"}],"tab-id":"shell"},{title0:a(({value:o,isActive:c})=>[n("最新版本")]),title1:a(({value:o,isActive:c})=>[n("其他版本")]),tab0:a(({value:o,isActive:c})=>[h]),tab1:a(({value:o,isActive:c})=>[g]),_:1}),f,s("p",null,[n("官方教程："),s("a",y,[n("https://docs.docker.com/engine/install/centos/"),e(t)]),n(" 离线安装模式 查看博客："),s("a",x,[n("https://www.cnblogs.com/kingsonfu/p/11576797.html"),e(t)])]),s("p",null,[n("ubuntu安装docker："),s("a",_,[n("https://docs.docker.com/engine/install/ubuntu/#set-up-the-repository"),e(t)])]),D])}const L=p(v,[["render",w],["__file","linuxInstall.html.vue"]]),E=JSON.parse('{"path":"/cloud/container/docker/install/linuxInstall.html","title":"Linux安装Docker","lang":"zh-CN","frontmatter":{"title":"Linux安装Docker","lang":"zh-CN","date":"2023-09-24T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["cloud"],"tag":["无"],"filename":"linuxanzhuangdocker","slug":"hqgpgb","docsId":"29454315","description":"Centos安装Docker 安装条件 在centos 7安装docker要求系统64位，系统内核版本3.10以上，可以使用命令查看 注意：要不就是开放指定的端口，要不直接就在安装之前将服务器防火墙关闭 卸载旧版本 老版本的docker被称为docker或者docker-engine，如果安装就需要卸载它们以及相关的依赖项： 命令： 新版本的名称被称为...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/cloud/container/docker/install/linuxInstall.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Linux安装Docker"}],["meta",{"property":"og:description","content":"Centos安装Docker 安装条件 在centos 7安装docker要求系统64位，系统内核版本3.10以上，可以使用命令查看 注意：要不就是开放指定的端口，要不直接就在安装之前将服务器防火墙关闭 卸载旧版本 老版本的docker被称为docker或者docker-engine，如果安装就需要卸载它们以及相关的依赖项： 命令： 新版本的名称被称为..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1631381660834-2f21de05-73ed-46ab-957b-b05230265697.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-29T12:28:40.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-29T12:28:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux安装Docker\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1631381660834-2f21de05-73ed-46ab-957b-b05230265697.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/image-20230929192518612.png\\"],\\"datePublished\\":\\"2023-09-24T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-29T12:28:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"Centos安装Docker","slug":"centos安装docker","link":"#centos安装docker","children":[{"level":3,"title":"安装条件","slug":"安装条件","link":"#安装条件","children":[]},{"level":3,"title":"卸载旧版本","slug":"卸载旧版本","link":"#卸载旧版本","children":[]},{"level":3,"title":"安装方法","slug":"安装方法","link":"#安装方法","children":[]},{"level":3,"title":"卸载","slug":"卸载","link":"#卸载","children":[]},{"level":3,"title":"错误","slug":"错误","link":"#错误","children":[]}]},{"level":2,"title":"Centos一键安装脚本","slug":"centos一键安装脚本","link":"#centos一键安装脚本","children":[]},{"level":2,"title":"Ubuntu安装Docker","slug":"ubuntu安装docker","link":"#ubuntu安装docker","children":[{"level":3,"title":"更新Ubuntu","slug":"更新ubuntu","link":"#更新ubuntu","children":[]},{"level":3,"title":"添加docker库","slug":"添加docker库","link":"#添加docker库","children":[]},{"level":3,"title":"安装 Docker","slug":"安装-docker","link":"#安装-docker","children":[]},{"level":3,"title":"常用脚本","slug":"常用脚本","link":"#常用脚本","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1679666088000,"updatedTime":1695990520000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":4.27,"words":1280},"filePathRelative":"cloud/container/docker/install/linuxInstall.md","localizedDate":"2023年9月24日","excerpt":"<h2>Centos安装Docker</h2>\\n<h3>安装条件</h3>\\n<p>在centos 7安装docker要求系统64位，系统内核版本3.10以上，可以使用命令查看</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">uname</span> <span class=\\"token parameter variable\\">-r</span>\\n</code></pre></div><blockquote>\\n<p><strong>注意</strong>：要不就是开放指定的端口，要不直接就在安装之前将服务器防火墙关闭</p>\\n</blockquote>","autoDesc":true}');export{L as comp,E as data};
