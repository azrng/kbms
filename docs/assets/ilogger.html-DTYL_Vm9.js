import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as c,c as i,a as n,d as s,e,b as a}from"./app-Bw62I61B.js";const l="/kbms/common/1619945473634-900e7717-5bff-4fbf-b485-1ff1102cd69a.png",u={},r=a(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>这是asp.net core中内置的一个通用日志接口组件。</p><h2 id="日志级别" tabindex="-1"><a class="header-anchor" href="#日志级别"><span>日志级别</span></a></h2><p><strong>日志级别说明</strong>：每一个日志都有指定的日志级别值，日志级别判断指示严重性或重要性。使用日志等级可以很好的过滤想要的日志，记录日志记录问题的同时，甚至为我们提供非常详细的日志信息。 <strong>LogLevel 严重性：Trace &lt; Debug &lt; Information &lt; Warning &lt; Error &lt; Critical &lt; None。</strong></p><table><thead><tr><th><strong>日志级别</strong></th><th><strong>常用场景</strong></th></tr></thead><tbody><tr><td><strong>Trace = 0</strong></td><td>记录一些对程序员调试问题有帮助的信息, 其中可能包含一些敏感信息, 所以应该避免在 生产环境中启用Trace日志，因此不应该用于生产环境。默认应禁用。</td></tr><tr><td><strong>Debug = 1</strong></td><td>记录一些在开发和调试阶段有用的短时变 量(Short-term usefulness), 所以除非为了临时排除生产环境的 故障，开发人员应该尽量避免在生产环境中启用Debug日志，默认情况下这是最详细的日志。</td></tr><tr><td><strong>Information = 2</strong></td><td>记录跟踪应用程序的一些流程, 例如，记录当前api请求的url。</td></tr><tr><td><strong>Warning = 3</strong></td><td>记录应用程序中发生出现错误或其它导致程序停止的流程异常信息。 这些信息中可能包含错误消息或者错误产生的条件, 可供后续调查，例如, 文件未找到</td></tr><tr><td><strong>Error = 4</strong></td><td>记录应用程序中某个操作产生的错误和异常信息。这些消息应该指明当前活动或操作（比如当前的 HTTP 请求），而不是应用程序范围的故障。</td></tr><tr><td><strong>Critical = 5</strong></td><td>记录一些需要立刻修复，急需被关注的问题，应当记录关键级别的日志。例如数据丢失，磁盘空间不足等。</td></tr></tbody></table><h2 id="日志配置" tabindex="-1"><a class="header-anchor" href="#日志配置"><span>日志配置</span></a></h2><blockquote><p>注意：日志配置通常取决于 appsettings {Environment}.json 文件的 Logging配置节，支持多个LogPrivider、过滤日志、定制特定种类的日志收集级别。</p></blockquote><p>配置文件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;Logging&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;Debug&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
      <span class="token string">&quot;LogLevel&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;Default&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Information&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Console&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
      <span class="token string">&quot;LogLevel&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
       <span class="token string">&quot;Microsoft.AspNetCore.Mvc.Razor.Internal&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Warning&quot;</span><span class="token punctuation">,</span>
       <span class="token string">&quot;Microsoft.AspNetCore.Mvc.Razor.Razor&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Debug&quot;</span><span class="token punctuation">,</span>
       <span class="token string">&quot;Microsoft.AspNetCore.Mvc.Razor&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Error&quot;</span><span class="token punctuation">,</span>
       <span class="token string">&quot;Default&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Information&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;LogLevel&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
      <span class="token string">&quot;Microsoft&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Warning&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;Microsoft.AspNetCore.Hosting.Diagnostics&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Information&quot;</span><span class="token punctuation">,</span>    <span class="token comment">// 提供给第三方调用API日志</span>
      <span class="token string">&quot;Microsoft.Hosting.Lifetime&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Information&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;Microsoft.EntityFrameworkCore.Database.Command&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Information&quot;</span><span class="token punctuation">,</span>  <span class="token comment">//数据库操作sql日志</span>
      <span class="token string">&quot;System.Net.Http.HttpClient&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Information&quot;</span><span class="token punctuation">,</span>    <span class="token comment">// 应用内部发起的Http请求日志</span>
      <span class="token string">&quot;Default&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Warning&quot;</span>    <span class="token comment">// 除以上日志之外，记录Warning+级别日志</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此 JSON 将创建 6 条筛选规则：Debug中1 条用于调试提供程序，Console中 4 条用于控制台提供程序，最后一条LogLevel 用于所有提供程序。 创建 ILogger 对象时，为每个提供程序选择一个规则。</p><h2 id="简单操作" tabindex="-1"><a class="header-anchor" href="#简单操作"><span>简单操作</span></a></h2><h3 id="webapi操作" tabindex="-1"><a class="header-anchor" href="#webapi操作"><span>WebAPI操作</span></a></h3><blockquote><p>在类库中使用需要先引用指定组件using Microsoft.Extensions.Logging;</p></blockquote><p>配置文件中进行配置</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;Logging&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;LogLevel&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
      <span class="token string">&quot;Default&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Debug&quot;</span><span class="token punctuation">,</span> <span class="token comment">//大于等于这个级别的才会被输出</span>
      <span class="token string">&quot;Microsoft&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Warning&quot;</span><span class="token punctuation">,</span> <span class="token comment">//类别适用于以 &quot;Microsoft&quot; 开头的所有类别</span>
      <span class="token string">&quot;Microsoft.Hosting.Lifetime&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Information&quot;</span> <span class="token comment">//类别比 &quot;Microsoft&quot; 类别更具体，因此 &quot;Microsoft.Hosting.Lifetime&quot; 类别在日志级别“Information”和更高级别记录。</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码中使用：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ILogger<span class="token punctuation">&lt;</span>HomeController<span class="token punctuation">&gt;</span></span> _logger<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token function">HomeController</span><span class="token punctuation">(</span><span class="token class-name">ILogger<span class="token punctuation">&lt;</span>HomeController<span class="token punctuation">&gt;</span></span> logger<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    _logger <span class="token operator">=</span> logger<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">/*
      日志配置通常由 appsettings {Environment}.json 文件的 Logging 部分提供
     */</span>
    _logger<span class="token punctuation">.</span><span class="token function">LogTrace</span><span class="token punctuation">(</span><span class="token string">&quot;0 Trace日志&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _logger<span class="token punctuation">.</span><span class="token function">LogDebug</span><span class="token punctuation">(</span><span class="token string">&quot;1 我是一个Debug日志&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token string">&quot;2  我是一个info日志&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _logger<span class="token punctuation">.</span><span class="token function">LogWarning</span><span class="token punctuation">(</span><span class="token string">&quot;3  我是一个警告日志&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _logger<span class="token punctuation">.</span><span class="token function">LogError</span><span class="token punctuation">(</span><span class="token string">&quot;4   我是一个错误日志&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _logger<span class="token punctuation">.</span><span class="token function">LogCritical</span><span class="token punctuation">(</span><span class="token string">&quot;5   LogCritical 立刻修复&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行查看输出效果 <img src="`+l+`" alt="image.png" loading="lazy"></p><h3 id="控制台操作" tabindex="-1"><a class="header-anchor" href="#控制台操作"><span>控制台操作</span></a></h3><p>安装组件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.Extensions.Configuration.Json&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;5.0.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.Extensions.Logging&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;5.0.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.Extensions.Logging.Console&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;5.0.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.Extensions.Logging.Debug&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;5.0.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.Extensions.Logging.TraceSource&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;5.0.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置appsettings文件</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;Logging&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;LogLevel&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//用于记录所选类别的最低级别    LogLevel是全局日志类别  还有Console类别和Debug类别</span>
      <span class="token property">&quot;Default&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Information&quot;</span><span class="token punctuation">,</span> <span class="token comment">//默认情况下级别大于等于info的才会输出</span>
      <span class="token property">&quot;Microsoft&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Warning&quot;</span><span class="token punctuation">,</span> <span class="token comment">//microsoft类别中大于等于warn级别的才会输出</span>
      <span class="token property">&quot;Microsoft.Hosting.Lifetime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Information&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;Console&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;LogLevel&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;Default&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Debug&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;alogger&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Warning&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;DefaultILoggerConsole.OrderService&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Information&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;AllowedHosts&quot;</span><span class="token operator">:</span> <span class="token string">&quot;*&quot;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置数据和容器</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//从文件中读取配置</span>
<span class="token class-name">IConfigurationBuilder</span> configBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConfigurationBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
configBuilder<span class="token punctuation">.</span><span class="token function">AddJsonFile</span><span class="token punctuation">(</span><span class="token string">&quot;appsettings.json&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> config <span class="token operator">=</span> configBuilder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//构建容器</span>
<span class="token class-name">IServiceCollection</span> serviceCollection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ServiceCollection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
serviceCollection<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IConfiguration<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>p <span class="token operator">=&gt;</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//配置日志</span>
serviceCollection<span class="token punctuation">.</span><span class="token function">AddLogging</span><span class="token punctuation">(</span>builder <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    builder<span class="token punctuation">.</span><span class="token function">AddConfiguration</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">GetSection</span><span class="token punctuation">(</span><span class="token string">&quot;Logging&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    builder<span class="token punctuation">.</span><span class="token function">AddConsole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">IServiceProvider</span> service <span class="token operator">=</span> serviceCollection<span class="token punctuation">.</span><span class="token function">BuildServiceProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>自定义创建日志对象</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name">ILoggerFactory</span> loggerFactory <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ILoggerFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> alogger <span class="token operator">=</span> loggerFactory<span class="token punctuation">.</span><span class="token function">CreateLogger</span><span class="token punctuation">(</span><span class="token string">&quot;alogger&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
alogger<span class="token punctuation">.</span><span class="token function">LogDebug</span><span class="token punctuation">(</span><span class="token number">2001</span><span class="token punctuation">,</span> <span class="token string">&quot;ceshi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
alogger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> ex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;出错了&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
alogger<span class="token punctuation">.</span><span class="token function">LogError</span><span class="token punctuation">(</span>ex<span class="token punctuation">,</span> ex<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过依赖注入方式来获取日志 创建服务</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderService</span>
<span class="token punctuation">{</span>
    <span class="token comment">//好处是不用自己定义名字，默认会将 命令空间.类名 当作日志记录器名字</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ILogger<span class="token punctuation">&lt;</span>OrderService<span class="token punctuation">&gt;</span></span> _logger<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">OrderService</span><span class="token punctuation">(</span><span class="token class-name">ILogger<span class="token punctuation">&lt;</span>OrderService<span class="token punctuation">&gt;</span></span> logger<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger <span class="token operator">=</span> logger<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ShowLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;show time </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">DateTime<span class="token punctuation">.</span>Now</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注入服务并调用</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">// 注入服务</span>
serviceCollection<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddTransient</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>OrderService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//调用</span>
<span class="token class-name"><span class="token keyword">var</span></span> order <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>OrderService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
order<span class="token punctuation">.</span><span class="token function">ShowLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>使用自己创建日志对象可以自定义日志名称，而使用依赖注入默认使用的是命名空间.类名作为日志名称，但是都可以对日志级别进行控制。</p></blockquote><h3 id="静态类中使用" tabindex="-1"><a class="header-anchor" href="#静态类中使用"><span>静态类中使用</span></a></h3><p>如果想在静态类中使用logger去输出日志可以采用下面的方法</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">HttpHelper</span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">readonly</span> <span class="token class-name">ILogger</span> _logger<span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token function">HttpHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>builder <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            builder<span class="token punctuation">.</span><span class="token function">AddConsole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">AddDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">CreateLogger</span><span class="token punctuation">(</span><span class="token string">&quot;ConfigurationManagerConfig&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> url<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token string">&quot;日志信息&quot;</span> <span class="token operator">+</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Task<span class="token punctuation">.</span><span class="token function">FromResult</span><span class="token punctuation">(</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以创建一个静态的ServiceProviderHelper(AzrngCommon包中包含)类来存储IServiceProvider，然后其他地方需要服务就通过该类进行获取，比如</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">ILogger</span> Logger <span class="token operator">=&gt;</span> ServiceProviderHelper<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRequiredService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ILoggerFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">?.</span><span class="token function">CreateLogger</span><span class="token punctuation">(</span><span class="token string">&quot;EFCoreExtensions&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="日志作用域" tabindex="-1"><a class="header-anchor" href="#日志作用域"><span>日志作用域</span></a></h2><p>目的是通过输出的作用域信息，来标识这些日志是同一次请求输出的信息</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code>var logger = service.GetService&lt;ILogger&lt;Program&gt;&gt;();
using (logger.BeginScope(<span class="token string">&quot;scoped :{scopedId}&quot;</span><span class="token punctuation">,</span> Guid.NewGuid().ToString()))
<span class="token punctuation">{</span>
    logger.LogInformation(<span class="token string">&quot;info&quot;</span>);
    logger.LogError(<span class="token string">&quot;error&quot;</span>);
    logger.LogWarning(<span class="token string">&quot;warn&quot;</span>);
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>appsettings的Logging、Console增加&quot;IncludeScopes&quot;: true,//日志作用域</p><h2 id="loggermessage" tabindex="-1"><a class="header-anchor" href="#loggermessage"><span>LoggerMessage</span></a></h2><p>与ILogger记录器扩展方法（例如LogInformation和LogDebug）相比，LoggerMessage具有以下性能优势：</p><ul><li>记录器扩展方法需要将值类型（例如 int）“装箱”（转换）到 object中。LoggerMessage模式使用带强类型参数的静态Action字段和扩展方法来避免装箱。</li><li>记录器扩展方法每次写入日志消息时必须分析消息模板（命名的格式字符串）。如果已定义消息，那么LoggerMessage只需分析一次模板即可。</li></ul>`,44),d={href:"https://docs.microsoft.com/zh-cn/dotnet/core/extensions/high-performance-logging",target:"_blank",rel:"noopener noreferrer"},k=a(`<div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">readonly</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>ILogger<span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">,</span> Exception<span class="token punctuation">?</span><span class="token punctuation">&gt;</span></span> _logWeatherForecast <span class="token operator">=</span>
    LoggerMessage<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Define</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>
        <span class="token named-parameter punctuation">logLevel</span><span class="token punctuation">:</span> LogLevel<span class="token punctuation">.</span>Information<span class="token punctuation">,</span>
        <span class="token named-parameter punctuation">eventId</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token named-parameter punctuation">formatString</span><span class="token punctuation">:</span> <span class="token string">&quot;LoggerMessage: {aa}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ILogger<span class="token punctuation">&lt;</span>WeatherForecastController<span class="token punctuation">&gt;</span></span> _logger<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token function">WeatherForecastController</span><span class="token punctuation">(</span><span class="token class-name">ILogger<span class="token punctuation">&lt;</span>WeatherForecastController<span class="token punctuation">&gt;</span></span> logger<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    _logger <span class="token operator">=</span> logger<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name">ActionResult<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetInfo</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> id<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">_logWeatherForecast</span><span class="token punctuation">(</span>_logger<span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">$&quot;GetInfo请求:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">id</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">Ok</span><span class="token punctuation">(</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出信息</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> LoggerMessage<span class="token punctuation">:</span> GetInfo请求<span class="token punctuation">:</span><span class="token number">123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="扩展" tabindex="-1"><a class="header-anchor" href="#扩展"><span>扩展</span></a></h2><h3 id="保存日志到文件" tabindex="-1"><a class="header-anchor" href="#保存日志到文件"><span>保存日志到文件</span></a></h3>`,5),g={href:"https://mp.weixin.qq.com/s/gC8nf66A1rfmrV2n4eUEhQ",target:"_blank",rel:"noopener noreferrer"},v=a(`<h2 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h2><ul><li>日志记录优化</li></ul><blockquote><p>该东西存在疑问，因为目前没有测试出来这个效果，只是见教程是这么写的</p></blockquote><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//按照位置的方式来注入的  不满足日志条件时候不执行操作</span>
_logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token string">&quot;show time {time}&quot;</span><span class="token punctuation">,</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//这种不论日志级别是否满足都会执行</span>
_logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;show time </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">DateTime<span class="token punctuation">.</span>Now</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>日志记录注意事项 <ul><li>避免记录敏感信息，比如密码、密钥</li><li>要记录关键的日志信息，不需要对任意数据都进行记录</li></ul></li></ul><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><p>极客时间教程</p>`,7);function m(b,q){const t=p("ExternalLinkIcon");return c(),i("div",null,[r,n("blockquote",null,[n("p",null,[s("参考资料："),n("a",d,[s("https://docs.microsoft.com/zh-cn/dotnet/core/extensions/high-performance-logging"),e(t)])])]),k,n("p",null,[n("a",g,[s("https://mp.weixin.qq.com/s/gC8nf66A1rfmrV2n4eUEhQ"),e(t)]),s(" | .NET 扩展官方 Logger 实现将日志保存到本地文件")]),v])}const L=o(u,[["render",m],["__file","ilogger.html.vue"]]),y=JSON.parse('{"path":"/dotnet/base/logOperator/ilogger.html","title":"ILogger","lang":"zh-CN","frontmatter":{"title":"ILogger","lang":"zh-CN","date":"2023-09-02T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"ilogger","slug":"qnrinf","docsId":"29412699","description":"介绍 这是asp.net core中内置的一个通用日志接口组件。 日志级别 日志级别说明：每一个日志都有指定的日志级别值，日志级别判断指示严重性或重要性。使用日志等级可以很好的过滤想要的日志，记录日志记录问题的同时，甚至为我们提供非常详细的日志信息。 LogLevel 严重性：Trace < Debug < Information < Warning ...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/base/logOperator/ilogger.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"ILogger"}],["meta",{"property":"og:description","content":"介绍 这是asp.net core中内置的一个通用日志接口组件。 日志级别 日志级别说明：每一个日志都有指定的日志级别值，日志级别判断指示严重性或重要性。使用日志等级可以很好的过滤想要的日志，记录日志记录问题的同时，甚至为我们提供非常详细的日志信息。 LogLevel 严重性：Trace < Debug < Information < Warning ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1619945473634-900e7717-5bff-4fbf-b485-1ff1102cd69a.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-22T13:47:53.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-22T13:47:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ILogger\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1619945473634-900e7717-5bff-4fbf-b485-1ff1102cd69a.png\\"],\\"datePublished\\":\\"2023-09-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-22T13:47:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"日志级别","slug":"日志级别","link":"#日志级别","children":[]},{"level":2,"title":"日志配置","slug":"日志配置","link":"#日志配置","children":[]},{"level":2,"title":"简单操作","slug":"简单操作","link":"#简单操作","children":[{"level":3,"title":"WebAPI操作","slug":"webapi操作","link":"#webapi操作","children":[]},{"level":3,"title":"控制台操作","slug":"控制台操作","link":"#控制台操作","children":[]},{"level":3,"title":"静态类中使用","slug":"静态类中使用","link":"#静态类中使用","children":[]}]},{"level":2,"title":"日志作用域","slug":"日志作用域","link":"#日志作用域","children":[]},{"level":2,"title":"LoggerMessage","slug":"loggermessage","link":"#loggermessage","children":[]},{"level":2,"title":"扩展","slug":"扩展","link":"#扩展","children":[{"level":3,"title":"保存日志到文件","slug":"保存日志到文件","link":"#保存日志到文件","children":[]}]},{"level":2,"title":"注意","slug":"注意","link":"#注意","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1703252873000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":6.07,"words":1822},"filePathRelative":"dotnet/base/logOperator/ilogger.md","localizedDate":"2023年9月2日","excerpt":"<h2>介绍</h2>\\n<p>这是asp.net core中内置的一个通用日志接口组件。</p>\\n<h2>日志级别</h2>\\n<p><strong>日志级别说明</strong>：每一个日志都有指定的日志级别值，日志级别判断指示严重性或重要性。使用日志等级可以很好的过滤想要的日志，记录日志记录问题的同时，甚至为我们提供非常详细的日志信息。\\n<strong>LogLevel 严重性：Trace &lt; Debug &lt; Information &lt; Warning &lt; Error &lt; Critical &lt; None。</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th><strong>日志级别</strong></th>\\n<th><strong>常用场景</strong></th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><strong>Trace = 0</strong></td>\\n<td>记录一些对程序员调试问题有帮助的信息,   其中可能包含一些敏感信息, 所以应该避免在 生产环境中启用Trace日志，因此不应该用于生产环境。默认应禁用。</td>\\n</tr>\\n<tr>\\n<td><strong>Debug = 1</strong></td>\\n<td>记录一些在开发和调试阶段有用的短时变   量(Short-term usefulness), 所以除非为了临时排除生产环境的   故障，开发人员应该尽量避免在生产环境中启用Debug日志，默认情况下这是最详细的日志。</td>\\n</tr>\\n<tr>\\n<td><strong>Information = 2</strong></td>\\n<td>记录跟踪应用程序的一些流程,   例如，记录当前api请求的url。</td>\\n</tr>\\n<tr>\\n<td><strong>Warning = 3</strong></td>\\n<td>记录应用程序中发生出现错误或其它导致程序停止的流程异常信息。   这些信息中可能包含错误消息或者错误产生的条件, 可供后续调查，例如, 文件未找到</td>\\n</tr>\\n<tr>\\n<td><strong>Error = 4</strong></td>\\n<td>记录应用程序中某个操作产生的错误和异常信息。这些消息应该指明当前活动或操作（比如当前的   HTTP 请求），而不是应用程序范围的故障。</td>\\n</tr>\\n<tr>\\n<td><strong>Critical = 5</strong></td>\\n<td>记录一些需要立刻修复，急需被关注的问题，应当记录关键级别的日志。例如数据丢失，磁盘空间不足等。</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{L as comp,y as data};
