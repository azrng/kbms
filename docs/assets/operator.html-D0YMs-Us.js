import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as p,c as o,a as n,d as s,e as c,b as l}from"./app-DMmdIwn0.js";const i={},r=l(`<h2 id="准备" tabindex="-1"><a class="header-anchor" href="#准备"><span>准备</span></a></h2><p>需要提前安装好es环境</p><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件"><span>组件</span></a></h2><p>创建项目安装nuget包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;NEST&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;7.16.0&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="初体验" tabindex="-1"><a class="header-anchor" href="#初体验"><span>初体验</span></a></h2><p>注入服务</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddScoped</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IElasticClient<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>sp <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> url <span class="token operator">=</span> <span class="token string">&quot;http://用户名:密码@localhost:9200/&quot;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> settings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConnectionSettings</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ElasticClient</span><span class="token punctuation">(</span>settings<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就可以在注入服务IElasticClient进行操作，举例我们有一个订单的，然后我们即将搜索该信息，所以我们会将其存储es中，所以创建该类，并且通过特性的方式指定其属性对应es的类型</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderInfo</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Keyword</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;Id&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Date</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;CreateTime&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> CreateTime <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Keyword</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Text</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> GoodsName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Status <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就可以通过调用IElasticClient的方法来插入数据</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OrderInfo</span>
<span class="token punctuation">{</span>
    Id <span class="token operator">=</span> Guid<span class="token punctuation">.</span><span class="token function">NewGuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    CreateTime <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">,</span>
    Name <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span>
    GoodsName <span class="token operator">=</span> <span class="token string">&quot;手机P50&quot;</span><span class="token punctuation">,</span>
    Status <span class="token operator">=</span> <span class="token string">&quot;购物车&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> indexResponse <span class="token operator">=</span> _client<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span>order<span class="token punctuation">,</span> i <span class="token operator">=&gt;</span> i<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span><span class="token string">&quot;order&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>indexResponse<span class="token punctuation">.</span>IsValid<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//插入失败处理</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SystemException</span><span class="token punctuation">(</span><span class="token string">&quot;插入失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>简单的查询如下</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//查询name=张三</span>
<span class="token class-name"><span class="token keyword">var</span></span> searchResponse <span class="token operator">=</span> _client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Search</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>OrderInfo<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>s <span class="token operator">=&gt;</span> s
    <span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span><span class="token string">&quot;order&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span>q <span class="token operator">=&gt;</span> q<span class="token punctuation">.</span><span class="token function">Term</span><span class="token punctuation">(</span>o <span class="token operator">=&gt;</span> o<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//获取查询数据</span>
<span class="token class-name"><span class="token keyword">var</span></span> datas <span class="token operator">=</span> searchResponse<span class="token punctuation">.</span>Documents<span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询方式" tabindex="-1"><a class="header-anchor" href="#查询方式"><span>查询方式</span></a></h2><h3 id="match查询" tabindex="-1"><a class="header-anchor" href="#match查询"><span>Match查询</span></a></h3><p>执行全文搜索</p><h3 id="term查询" tabindex="-1"><a class="header-anchor" href="#term查询"><span>Term查询</span></a></h3><p>精确匹配字段中的值</p><h3 id="terms查询" tabindex="-1"><a class="header-anchor" href="#terms查询"><span>Terms查询</span></a></h3><p>匹配字段中包含指定多个值的文档</p><h3 id="range查询" tabindex="-1"><a class="header-anchor" href="#range查询"><span>Range查询</span></a></h3><p>检索字段值在指定范围内的文档</p><h3 id="bool查询" tabindex="-1"><a class="header-anchor" href="#bool查询"><span>Bool查询</span></a></h3><p>组合多个查询条件，支持逻辑操作符</p><h3 id="prefix查询" tabindex="-1"><a class="header-anchor" href="#prefix查询"><span>Prefix查询</span></a></h3><p>匹配以指定前缀开头的字段值</p><h3 id="wildcard查询" tabindex="-1"><a class="header-anchor" href="#wildcard查询"><span>Wildcard查询</span></a></h3><p>支持通配符搜索</p><h3 id="exists查询" tabindex="-1"><a class="header-anchor" href="#exists查询"><span>Exists查询</span></a></h3><p>检查文档中是否存在某个字段</p><h3 id="fuzzy查询" tabindex="-1"><a class="header-anchor" href="#fuzzy查询"><span>Fuzzy查询</span></a></h3><p>执行模糊匹配</p><h3 id="nested查询" tabindex="-1"><a class="header-anchor" href="#nested查询"><span>Nested查询</span></a></h3><p>在嵌套对象中进行查询</p><h3 id="querystring查询" tabindex="-1"><a class="header-anchor" href="#querystring查询"><span>QueryString查询</span></a></h3><p>使用类似Lucene的查询语法进行搜索</p><h3 id="regexp查询" tabindex="-1"><a class="header-anchor" href="#regexp查询"><span>Regexp查询</span></a></h3><p>使用正则表达式进行搜索</p><h3 id="functionscore查询" tabindex="-1"><a class="header-anchor" href="#functionscore查询"><span>FunctionScore查询</span></a></h3><p>根据自定义评分函数对匹配度进行调整</p><h2 id="http操作" tabindex="-1"><a class="header-anchor" href="#http操作"><span>Http操作</span></a></h2><table><thead><tr><th>请求方式</th><th>url地址</th><th>描述</th></tr></thead><tbody><tr><td>PUT</td><td>http://localhost:9200/索引名称</td><td>创建索引</td></tr><tr><td>POST</td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table>`,43),u={href:"https://www.cnblogs.com/wei325/p/15828705.html",target:"_blank",rel:"noopener noreferrer"};function d(k,h){const a=t("ExternalLinkIcon");return p(),o("div",null,[r,n("p",null,[s("资料："),n("a",u,[s("https://www.cnblogs.com/wei325/p/15828705.html"),c(a)])])])}const g=e(i,[["render",d],["__file","operator.html.vue"]]),b=JSON.parse('{"path":"/middleware/fullTextSearch/elasticsearch/operator.html","title":"操作","lang":"zh-CN","frontmatter":{"title":"操作","lang":"zh-CN","date":"2023-10-04T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["es","operator"],"description":"准备 需要提前安装好es环境 组件 创建项目安装nuget包 初体验 注入服务 然后就可以在注入服务IElasticClient进行操作，举例我们有一个订单的，然后我们即将搜索该信息，所以我们会将其存储es中，所以创建该类，并且通过特性的方式指定其属性对应es的类型 然后就可以通过调用IElasticClient的方法来插入数据 简单的查询如下 查询方...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/fullTextSearch/elasticsearch/operator.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"操作"}],["meta",{"property":"og:description","content":"准备 需要提前安装好es环境 组件 创建项目安装nuget包 初体验 注入服务 然后就可以在注入服务IElasticClient进行操作，举例我们有一个订单的，然后我们即将搜索该信息，所以我们会将其存储es中，所以创建该类，并且通过特性的方式指定其属性对应es的类型 然后就可以通过调用IElasticClient的方法来插入数据 简单的查询如下 查询方..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-13T14:11:27.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"es"}],["meta",{"property":"article:tag","content":"operator"}],["meta",{"property":"article:published_time","content":"2023-10-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-13T14:11:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"操作\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-04T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-13T14:11:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"准备","slug":"准备","link":"#准备","children":[]},{"level":2,"title":"组件","slug":"组件","link":"#组件","children":[]},{"level":2,"title":"初体验","slug":"初体验","link":"#初体验","children":[]},{"level":2,"title":"查询方式","slug":"查询方式","link":"#查询方式","children":[{"level":3,"title":"Match查询","slug":"match查询","link":"#match查询","children":[]},{"level":3,"title":"Term查询","slug":"term查询","link":"#term查询","children":[]},{"level":3,"title":"Terms查询","slug":"terms查询","link":"#terms查询","children":[]},{"level":3,"title":"Range查询","slug":"range查询","link":"#range查询","children":[]},{"level":3,"title":"Bool查询","slug":"bool查询","link":"#bool查询","children":[]},{"level":3,"title":"Prefix查询","slug":"prefix查询","link":"#prefix查询","children":[]},{"level":3,"title":"Wildcard查询","slug":"wildcard查询","link":"#wildcard查询","children":[]},{"level":3,"title":"Exists查询","slug":"exists查询","link":"#exists查询","children":[]},{"level":3,"title":"Fuzzy查询","slug":"fuzzy查询","link":"#fuzzy查询","children":[]},{"level":3,"title":"Nested查询","slug":"nested查询","link":"#nested查询","children":[]},{"level":3,"title":"QueryString查询","slug":"querystring查询","link":"#querystring查询","children":[]},{"level":3,"title":"Regexp查询","slug":"regexp查询","link":"#regexp查询","children":[]},{"level":3,"title":"FunctionScore查询","slug":"functionscore查询","link":"#functionscore查询","children":[]}]},{"level":2,"title":"Http操作","slug":"http操作","link":"#http操作","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1710339087000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.72,"words":516},"filePathRelative":"middleware/fullTextSearch/elasticsearch/operator.md","localizedDate":"2023年10月4日","excerpt":"<h2>准备</h2>\\n<p>需要提前安装好es环境</p>\\n<h2>组件</h2>\\n<p>创建项目安装nuget包</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">PackageReference</span> Include<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"NEST\\"</span> Version<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"7.16.0\\"</span><span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n</code></pre></div>","autoDesc":true}');export{g as comp,b as data};
