import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-Bw62I61B.js";const p={},o=t(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>借助跨平台库ImageSharp来实现生成验证码。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">SixLabors<span class="token punctuation">.</span>Fonts</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">SixLabors<span class="token punctuation">.</span>ImageSharp</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">SixLabors<span class="token punctuation">.</span>ImageSharp<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Processing</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">SixLabors<span class="token punctuation">.</span>ImageSharp<span class="token punctuation">.</span>PixelFormats</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">SixLabors<span class="token punctuation">.</span>ImageSharp<span class="token punctuation">.</span>Processing</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IO</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Linq</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">CommonCollect</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CaptchaHelper</span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> _letters <span class="token operator">=</span> <span class="token string">&quot;1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,J,K,L,M,N,P,Q,R,S,T,U,V,W,X,Y,Z&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 生成验证码随机值</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>codeLength<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">GenerateRandomCaptchaAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> codeLength <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> array <span class="token operator">=</span> _letters<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token char">&#39;,&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> temp <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> captcheCode <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> codeLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
                random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Random</span><span class="token punctuation">(</span>i <span class="token operator">*</span> temp <span class="token operator">*</span> <span class="token keyword">unchecked</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span>Ticks<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name"><span class="token keyword">var</span></span> index <span class="token operator">=</span> random<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> temp <span class="token operator">==</span> index<span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token function">GenerateRandomCaptchaAsync</span><span class="token punctuation">(</span>codeLength<span class="token punctuation">)</span><span class="token punctuation">;</span>

            temp <span class="token operator">=</span> index<span class="token punctuation">;</span>
            captcheCode <span class="token operator">+=</span> array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> Task<span class="token punctuation">.</span><span class="token function">FromResult</span><span class="token punctuation">(</span>captcheCode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 生成验证码及图片</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>captchaCode<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>height<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token punctuation">(</span><span class="token keyword">string</span> code<span class="token punctuation">,</span> MemoryStream ms<span class="token punctuation">)</span><span class="token punctuation">&gt;</span></span> <span class="token function">GenerateCaptchaImageAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> captchaCode<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> width <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> height <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//验证码颜色集合</span>
        <span class="token class-name">Color<span class="token punctuation">[</span><span class="token punctuation">]</span></span> colors <span class="token operator">=</span> <span class="token punctuation">{</span> Color<span class="token punctuation">.</span>Black<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Red<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>DarkBlue<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Green<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Orange<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Brown<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>DarkCyan<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>Purple <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token comment">//验证码字体集合</span>
        <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> fonts <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;Verdana&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Microsoft Sans Serif&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Comic Sans MS&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Arial&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>width <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> width <span class="token operator">=</span> captchaCode<span class="token punctuation">.</span>Length <span class="token operator">*</span> <span class="token number">25</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token comment">//定义图像的大小，生成图像的实例</span>
        <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Image<span class="token punctuation">&lt;</span>Rgba32<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 字体</span>
        <span class="token class-name"><span class="token keyword">var</span></span> font <span class="token operator">=</span> SystemFonts<span class="token punctuation">.</span><span class="token function">CreateFont</span><span class="token punctuation">(</span>SystemFonts<span class="token punctuation">.</span>Families<span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> FontStyle<span class="token punctuation">.</span>Bold<span class="token punctuation">)</span><span class="token punctuation">;</span>

        image<span class="token punctuation">.</span><span class="token function">Mutate</span><span class="token punctuation">(</span>ctx <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// 白底背景</span>
            ctx<span class="token punctuation">.</span><span class="token function">Fill</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>White<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 画验证码</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> captchaCode<span class="token punctuation">.</span>Length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                ctx<span class="token punctuation">.</span><span class="token function">DrawText</span><span class="token punctuation">(</span>captchaCode<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">,</span> font
                    <span class="token punctuation">,</span> colors<span class="token punctuation">[</span>r<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span>colors<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">]</span>
                    <span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PointF</span><span class="token punctuation">(</span><span class="token number">20</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// 画干扰线</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">var</span></span> pen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Pen</span><span class="token punctuation">(</span>colors<span class="token punctuation">[</span>r<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span>colors<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PointF</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PointF</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                ctx<span class="token punctuation">.</span><span class="token function">DrawLines</span><span class="token punctuation">(</span>pen<span class="token punctuation">,</span> p1<span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// 画噪点</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">80</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">var</span></span> pen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Pen</span><span class="token punctuation">(</span>colors<span class="token punctuation">[</span>r<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span>colors<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PointF</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PointF</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>X <span class="token operator">+</span> <span class="token number">1f</span><span class="token punctuation">,</span> p1<span class="token punctuation">.</span>Y <span class="token operator">+</span> <span class="token number">1f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                ctx<span class="token punctuation">.</span><span class="token function">DrawLines</span><span class="token punctuation">(</span>pen<span class="token punctuation">,</span> p1<span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> ms <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MemoryStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// gif 格式</span>
        image<span class="token punctuation">.</span><span class="token function">SaveAsGif</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Task<span class="token punctuation">.</span><span class="token function">FromResult</span><span class="token punctuation">(</span><span class="token punctuation">(</span>captchaCode<span class="token punctuation">,</span> ms<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用方法</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 测试验证码</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">[</span><span class="token function">HttpGet</span><span class="token punctuation">(</span><span class="token string">&quot;captcha&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>IActionResult<span class="token punctuation">&gt;</span></span> <span class="token function">GetCaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> captchaHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CaptchaHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> captcha <span class="token operator">=</span> <span class="token keyword">await</span> captchaHelper<span class="token punctuation">.</span><span class="token function">GenerateCaptchaImageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Session<span class="token punctuation">.</span><span class="token function">SetString</span><span class="token punctuation">(</span><span class="token string">&quot;captcha&quot;</span><span class="token punctuation">,</span> captcha<span class="token punctuation">.</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">File</span><span class="token punctuation">(</span>captcha<span class="token punctuation">.</span>ms<span class="token punctuation">.</span><span class="token function">ToArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;image/gif&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),c=[o];function e(l,u){return s(),a("div",null,c)}const r=n(p,[["render",e],["__file","tuxingyanzhengmaimagesharp.html.vue"]]),m=JSON.parse(`{"path":"/middleware/tuxiangchuli/yanzhengma/tuxingyanzhengmaimagesharp.html","title":"图形验证码ImageSharp","lang":"zh-CN","frontmatter":{"title":"图形验证码ImageSharp","lang":"zh-CN","date":"2022-10-06T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"tuxingyanzhengmaimagesharp","slug":"ziyr8w","docsId":"95889878","description":"概述 借助跨平台库ImageSharp来实现生成验证码。 操作 使用方法","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/tuxiangchuli/yanzhengma/tuxingyanzhengmaimagesharp.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"图形验证码ImageSharp"}],["meta",{"property":"og:description","content":"概述 借助跨平台库ImageSharp来实现生成验证码。 操作 使用方法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-10-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"图形验证码ImageSharp\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-06T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.62,"words":486},"filePathRelative":"middleware/tuxiangchuli/yanzhengma/tuxingyanzhengmaimagesharp.md","localizedDate":"2022年10月6日","excerpt":"<h2>概述</h2>\\n<p>借助跨平台库ImageSharp来实现生成验证码。</p>\\n<h2>操作</h2>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token keyword\\">using</span> <span class=\\"token namespace\\">SixLabors<span class=\\"token punctuation\\">.</span>Fonts</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">using</span> <span class=\\"token namespace\\">SixLabors<span class=\\"token punctuation\\">.</span>ImageSharp</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">using</span> <span class=\\"token namespace\\">SixLabors<span class=\\"token punctuation\\">.</span>ImageSharp<span class=\\"token punctuation\\">.</span>Drawing<span class=\\"token punctuation\\">.</span>Processing</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">using</span> <span class=\\"token namespace\\">SixLabors<span class=\\"token punctuation\\">.</span>ImageSharp<span class=\\"token punctuation\\">.</span>PixelFormats</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">using</span> <span class=\\"token namespace\\">SixLabors<span class=\\"token punctuation\\">.</span>ImageSharp<span class=\\"token punctuation\\">.</span>Processing</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">using</span> <span class=\\"token namespace\\">System</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">using</span> <span class=\\"token namespace\\">System<span class=\\"token punctuation\\">.</span>IO</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">using</span> <span class=\\"token namespace\\">System<span class=\\"token punctuation\\">.</span>Linq</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">using</span> <span class=\\"token namespace\\">System<span class=\\"token punctuation\\">.</span>Threading<span class=\\"token punctuation\\">.</span>Tasks</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">namespace</span> <span class=\\"token namespace\\">CommonCollect</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">CaptchaHelper</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">const</span> <span class=\\"token class-name\\"><span class=\\"token keyword\\">string</span></span> _letters <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,J,K,L,M,N,P,Q,R,S,T,U,V,W,X,Y,Z\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>summary</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n    <span class=\\"token doc-comment comment\\">/// 生成验证码随机值</span>\\n    <span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>summary</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n    <span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>param</span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>codeLength<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>param</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n    <span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>returns</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>returns</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token return-type class-name\\">Task<span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">GenerateRandomCaptchaAsync</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">int</span></span> codeLength <span class=\\"token operator\\">=</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> array <span class=\\"token operator\\">=</span> _letters<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Split</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token char\\">','</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> random <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Random</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> temp <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> captcheCode <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">.</span>Empty<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">int</span></span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> codeLength<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>temp <span class=\\"token operator\\">!=</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n                random <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Random</span><span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">*</span> temp <span class=\\"token operator\\">*</span> <span class=\\"token keyword\\">unchecked</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">)</span>DateTime<span class=\\"token punctuation\\">.</span>Now<span class=\\"token punctuation\\">.</span>Ticks<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n            <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> index <span class=\\"token operator\\">=</span> random<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Next</span><span class=\\"token punctuation\\">(</span>array<span class=\\"token punctuation\\">.</span>Length<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>temp <span class=\\"token operator\\">!=</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span> <span class=\\"token operator\\">&amp;&amp;</span> temp <span class=\\"token operator\\">==</span> index<span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">GenerateRandomCaptchaAsync</span><span class=\\"token punctuation\\">(</span>codeLength<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n            temp <span class=\\"token operator\\">=</span> index<span class=\\"token punctuation\\">;</span>\\n            captcheCode <span class=\\"token operator\\">+=</span> array<span class=\\"token punctuation\\">[</span>index<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">return</span> Task<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">FromResult</span><span class=\\"token punctuation\\">(</span>captcheCode<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>summary</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n    <span class=\\"token doc-comment comment\\">/// 生成验证码及图片</span>\\n    <span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>summary</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n    <span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>param</span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>captchaCode<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>param</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n    <span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>param</span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>width<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>param</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n    <span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>param</span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>height<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>param</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n    <span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>returns</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>returns</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token return-type class-name\\">Task<span class=\\"token punctuation\\">&lt;</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">string</span> code<span class=\\"token punctuation\\">,</span> MemoryStream ms<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">GenerateCaptchaImageAsync</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">string</span></span> captchaCode<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\"><span class=\\"token keyword\\">int</span></span> width <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\"><span class=\\"token keyword\\">int</span></span> height <span class=\\"token operator\\">=</span> <span class=\\"token number\\">30</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">//验证码颜色集合</span>\\n        <span class=\\"token class-name\\">Color<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span></span> colors <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span> Color<span class=\\"token punctuation\\">.</span>Black<span class=\\"token punctuation\\">,</span> Color<span class=\\"token punctuation\\">.</span>Red<span class=\\"token punctuation\\">,</span> Color<span class=\\"token punctuation\\">.</span>DarkBlue<span class=\\"token punctuation\\">,</span> Color<span class=\\"token punctuation\\">.</span>Green<span class=\\"token punctuation\\">,</span> Color<span class=\\"token punctuation\\">.</span>Orange<span class=\\"token punctuation\\">,</span> Color<span class=\\"token punctuation\\">.</span>Brown<span class=\\"token punctuation\\">,</span> Color<span class=\\"token punctuation\\">.</span>DarkCyan<span class=\\"token punctuation\\">,</span> Color<span class=\\"token punctuation\\">.</span>Purple <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">//验证码字体集合</span>\\n        <span class=\\"token class-name\\"><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span></span> fonts <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token string\\">\\"Verdana\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Microsoft Sans Serif\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Comic Sans MS\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Arial\\"</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> r <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Random</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>width <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> width <span class=\\"token operator\\">=</span> captchaCode<span class=\\"token punctuation\\">.</span>Length <span class=\\"token operator\\">*</span> <span class=\\"token number\\">25</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token comment\\">//定义图像的大小，生成图像的实例</span>\\n        <span class=\\"token keyword\\">using</span> <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> image <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Image<span class=\\"token punctuation\\">&lt;</span>Rgba32<span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span>width<span class=\\"token punctuation\\">,</span> height<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token comment\\">// 字体</span>\\n        <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> font <span class=\\"token operator\\">=</span> SystemFonts<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">CreateFont</span><span class=\\"token punctuation\\">(</span>SystemFonts<span class=\\"token punctuation\\">.</span>Families<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">First</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>Name<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">25</span><span class=\\"token punctuation\\">,</span> FontStyle<span class=\\"token punctuation\\">.</span>Bold<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        image<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Mutate</span><span class=\\"token punctuation\\">(</span>ctx <span class=\\"token operator\\">=&gt;</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token comment\\">// 白底背景</span>\\n            ctx<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Fill</span><span class=\\"token punctuation\\">(</span>Color<span class=\\"token punctuation\\">.</span>White<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n            <span class=\\"token comment\\">// 画验证码</span>\\n            <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">int</span></span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> captchaCode<span class=\\"token punctuation\\">.</span>Length<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">{</span>\\n                ctx<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">DrawText</span><span class=\\"token punctuation\\">(</span>captchaCode<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ToString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token punctuation\\">,</span> font\\n                    <span class=\\"token punctuation\\">,</span> colors<span class=\\"token punctuation\\">[</span>r<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Next</span><span class=\\"token punctuation\\">(</span>colors<span class=\\"token punctuation\\">.</span>Length<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span>\\n                    <span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">PointF</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">20</span> <span class=\\"token operator\\">*</span> i <span class=\\"token operator\\">+</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">,</span> r<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Next</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">12</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n\\n            <span class=\\"token comment\\">// 画干扰线</span>\\n            <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">int</span></span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> pen <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Pen</span><span class=\\"token punctuation\\">(</span>colors<span class=\\"token punctuation\\">[</span>r<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Next</span><span class=\\"token punctuation\\">(</span>colors<span class=\\"token punctuation\\">.</span>Length<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> p1 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">PointF</span><span class=\\"token punctuation\\">(</span>r<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Next</span><span class=\\"token punctuation\\">(</span>width<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> r<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Next</span><span class=\\"token punctuation\\">(</span>height<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> p2 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">PointF</span><span class=\\"token punctuation\\">(</span>r<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Next</span><span class=\\"token punctuation\\">(</span>width<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> r<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Next</span><span class=\\"token punctuation\\">(</span>height<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n                ctx<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">DrawLines</span><span class=\\"token punctuation\\">(</span>pen<span class=\\"token punctuation\\">,</span> p1<span class=\\"token punctuation\\">,</span> p2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n\\n            <span class=\\"token comment\\">// 画噪点</span>\\n            <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">int</span></span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">80</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> pen <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Pen</span><span class=\\"token punctuation\\">(</span>colors<span class=\\"token punctuation\\">[</span>r<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Next</span><span class=\\"token punctuation\\">(</span>colors<span class=\\"token punctuation\\">.</span>Length<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> p1 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">PointF</span><span class=\\"token punctuation\\">(</span>r<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Next</span><span class=\\"token punctuation\\">(</span>width<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> r<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Next</span><span class=\\"token punctuation\\">(</span>height<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> p2 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">PointF</span><span class=\\"token punctuation\\">(</span>p1<span class=\\"token punctuation\\">.</span>X <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1f</span><span class=\\"token punctuation\\">,</span> p1<span class=\\"token punctuation\\">.</span>Y <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1f</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n                ctx<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">DrawLines</span><span class=\\"token punctuation\\">(</span>pen<span class=\\"token punctuation\\">,</span> p1<span class=\\"token punctuation\\">,</span> p2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">using</span> <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> ms <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">MemoryStream</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token comment\\">// gif 格式</span>\\n        image<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">SaveAsGif</span><span class=\\"token punctuation\\">(</span>ms<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> Task<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">FromResult</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>captchaCode<span class=\\"token punctuation\\">,</span> ms<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}`);export{r as comp,m as data};
