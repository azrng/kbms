import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,a as n,d as s,e as t,b as e}from"./app-qB9_Bjjp.js";const i={},u=n("blockquote",null,[n("p",null,"理解：将一些服务注册到consul里面，然后后期想使用，需要根据指定的接口去获取服务地址和端口（多个负载的情况下会返回一个），然后再去调用我们想调用的服务")],-1),r=n("h2",{id:"描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#描述"},[n("span",null,"描述")])],-1),k=n("p",null,"一个服务管理(服务注册与发现)软件。支持多数据中心下，分布式高可用的服务发现和配置共享。支持健康检查允许存储键值对。",-1),d=n("p",null,"在consul方案汇总中，每个提供服务的节点都要部署和运行consul的client agent，所有运行consul agent节点的集合构成consul cluster。Consul agent有两种运行方式：server和client。这里的server和client只是consul集群层面的区分，与搭建在cluster的应用服务无关。以server模式运行的consul agent节点用于维护consul集群的状态，官方建议每个consl cluster至少有3个或者以上的运行在server mode的agent，client节点不限。",-1),v={href:"https://www.consul.io/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.cnblogs.com/edisonchou/p/9124985.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.cnblogs.com/wyt007/p/9150116.html",target:"_blank",rel:"noopener noreferrer"},g=e('<h2 id="功能" tabindex="-1"><a class="header-anchor" href="#功能"><span>功能</span></a></h2><h3 id="服务注册" tabindex="-1"><a class="header-anchor" href="#服务注册"><span>服务注册</span></a></h3><p>一个服务将其位置信息在“中心注册节点”注册的过程。该服务一般会将它的主机IP地址以及端口号进行注册，有时也会有服务访问的认证信息，使用协议，版本号，以及关于环境的一些细节信息。</p><h3 id="服务发现" tabindex="-1"><a class="header-anchor" href="#服务发现"><span>服务发现</span></a></h3><p>服务发现可以让一个应用或者组件发现其运行环境以及其它应用或组件的信息。用户配置一个服务发现工具就可以将实际容器跟运行配置分离开。常见配置信息包括：ip、端口号、名称等</p><p>consul客户端将自己本身通过ip和port注册到consul里面，当其他客户端需要使用对应的服务时候，consul可以通过<strong>DNS或HTTP</strong>的形式将服务返回给所需要的客户端，并且可以设置服务启动后多久开始注册、设置健康检查的时间间隔。</p>',6),b={href:"http://192.168.80.100:8500/v1/catalog/service/",target:"_blank",rel:"noopener noreferrer"},w={href:"http://192.168.6.29:8500/v1/status/leader",target:"_blank",rel:"noopener noreferrer"},y={href:"https://www.consul.io/api-docs",target:"_blank",rel:"noopener noreferrer"},_=n("h3",{id:"健康检查",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#健康检查"},[n("span",null,"健康检查")])],-1),f=n("p",null,[s("consul提供对各服务的检查功能，如果一个API站点挂掉，调用方再次从consul获取服务信息时候就会返回健康的服务信息，从而保证调用API正常。"),n("strong",null,"Grpc、TCP、Http"),s("方式都可以")],-1),C=n("h3",{id:"键值对存储",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#键值对存储"},[n("span",null,"键值对存储")])],-1),x={href:"http://192.168.130.148/v1/kv/?recurse",target:"_blank",rel:"noopener noreferrer"},S={href:"http://192.168.130.148:8500/v1/kv/web/vhallaccount",target:"_blank",rel:"noopener noreferrer"},T={href:"http://192.168.80.100:8500/v1/kv/web/vhallaccount",target:"_blank",rel:"noopener noreferrer"},E={href:"http://192.168.80.100:8500/v1/kv/web/vhallaccount",target:"_blank",rel:"noopener noreferrer"},N={href:"http://192.168.80.100:8500/v1/kv/web/vhallaccount",target:"_blank",rel:"noopener noreferrer"},A=n("h3",{id:"多数据中心",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#多数据中心"},[n("span",null,"多数据中心")])],-1),I=n("p",null,"consul支持多个开箱即用的数据中心，每个数据中心独立运行。",-1),q=n("h3",{id:"告警值watch机制",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#告警值watch机制"},[n("span",null,"告警值watch机制")])],-1),P={href:"https://www.cnblogs.com/edisonchou/p/9148034.html",target:"_blank",rel:"noopener noreferrer"},z=e(`<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token comment">## docker部署consul集群</span>

<span class="token comment">#启动第1个Server节点，集群要求要有3个Server，将容器8500端口映射到主机8900端口，同时开启管理界面</span>
docker run <span class="token punctuation">-</span>d <span class="token punctuation">-</span><span class="token punctuation">-</span>name=consul1 <span class="token punctuation">-</span>p 8900<span class="token punctuation">:</span>8500 <span class="token punctuation">-</span>e CONSUL_BIND_INTERFACE=eth0 consul agent <span class="token punctuation">-</span><span class="token punctuation">-</span>server=true <span class="token punctuation">-</span><span class="token punctuation">-</span>bootstrap<span class="token punctuation">-</span>expect=3 <span class="token punctuation">-</span><span class="token punctuation">-</span>client=0.0.0.0 <span class="token punctuation">-</span>ui
<span class="token comment">#启动第2个Server节点，并加入集群</span>
docker run <span class="token punctuation">-</span>d <span class="token punctuation">-</span><span class="token punctuation">-</span>name=consul2 <span class="token punctuation">-</span>e CONSUL_BIND_INTERFACE=eth0 consul agent <span class="token punctuation">-</span><span class="token punctuation">-</span>server=true <span class="token punctuation">-</span><span class="token punctuation">-</span>client=0.0.0.0 <span class="token punctuation">-</span><span class="token punctuation">-</span>join 172.17.0.1
<span class="token comment">#启动第3个Server节点，并加入集群</span>
docker run <span class="token punctuation">-</span>d <span class="token punctuation">-</span><span class="token punctuation">-</span>name=consul3 <span class="token punctuation">-</span>e CONSUL_BIND_INTERFACE=eth0 consul agent <span class="token punctuation">-</span><span class="token punctuation">-</span>server=true <span class="token punctuation">-</span><span class="token punctuation">-</span>client=0.0.0.0 <span class="token punctuation">-</span><span class="token punctuation">-</span>join 172.17.0.2
<span class="token comment">#启动第4个Client节点，并加入集群</span>
docker run <span class="token punctuation">-</span>d <span class="token punctuation">-</span><span class="token punctuation">-</span>name=consul4 <span class="token punctuation">-</span>e CONSUL_BIND_INTERFACE=eth0 consul agent <span class="token punctuation">-</span><span class="token punctuation">-</span>server=false <span class="token punctuation">-</span><span class="token punctuation">-</span>client=0.0.0.0 <span class="token punctuation">-</span><span class="token punctuation">-</span>join 172.17.0.2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),D={href:"https://www.cnblogs.com/edisonchou/p/consul_cluster_based_on_docker_introduction.html",target:"_blank",rel:"noopener noreferrer"},B=e(`<h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="基本配置" tabindex="-1"><a class="header-anchor" href="#基本配置"><span>基本配置</span></a></h3><p>配置项</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>  <span class="token key atrule">&quot;Consul&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
    <span class="token key atrule">&quot;IP&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;192.168.130.148&quot;</span><span class="token punctuation">,</span>
    <span class="token key atrule">&quot;Port&quot;</span><span class="token punctuation">:</span> <span class="token number">8500</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>引用组件</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>&lt;PackageReference Include=&quot;Consul&quot; Version=&quot;0.7.2.6&quot; /<span class="token punctuation">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>增加服务信息配置类</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServiceEntity</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> IP <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Port <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ServiceName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ConsulIP <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> ConsulPort <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注册服务</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">AppBuilderExtensions</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IApplicationBuilder</span> <span class="token function">RegisterConsul</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IApplicationBuilder</span> app<span class="token punctuation">,</span> <span class="token class-name">IHostApplicationLifetime</span> lifetime<span class="token punctuation">,</span> <span class="token class-name">ServiceEntity</span> serviceEntity<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//请求注册的consul地址</span>
        <span class="token class-name"><span class="token keyword">var</span></span> consulClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConsulClient</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>Address <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Uri</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;http://</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">serviceEntity<span class="token punctuation">.</span>ConsulIP</span><span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">serviceEntity<span class="token punctuation">.</span>ConsulPort</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> httpcheck <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AgentServiceCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            DeregisterCriticalServiceAfter <span class="token operator">=</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//服务启动多久后注册</span>
            Interval <span class="token operator">=</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//健康检查时间间隔，或者成为心跳间隔</span>
            HTTP <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;http://</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">serviceEntity<span class="token punctuation">.</span>IP</span><span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">serviceEntity<span class="token punctuation">.</span>Port</span><span class="token punctuation">}</span></span><span class="token string">/api/Health&quot;</span></span><span class="token punctuation">,</span><span class="token comment">//健康检查访问的地址</span>
            Timeout <span class="token operator">=</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token comment">//注册服务到consul</span>
        <span class="token class-name"><span class="token keyword">var</span></span> registration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AgentServiceRegistration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Checks <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> httpcheck <span class="token punctuation">}</span><span class="token punctuation">,</span>
            ID <span class="token operator">=</span> Guid<span class="token punctuation">.</span><span class="token function">NewGuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            Name <span class="token operator">=</span> serviceEntity<span class="token punctuation">.</span>ServiceName<span class="token punctuation">,</span>
            Address <span class="token operator">=</span> serviceEntity<span class="token punctuation">.</span>IP<span class="token punctuation">,</span>
            Port <span class="token operator">=</span> serviceEntity<span class="token punctuation">.</span>Port<span class="token punctuation">,</span>
            Tags <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token interpolation-string"><span class="token string">$&quot;urlprefix-/</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">serviceEntity<span class="token punctuation">.</span>ServiceName</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span> <span class="token punctuation">}</span><span class="token comment">//添加 urlprefix-/servicename 格式的 tag 标签，以便 Fabio 识别</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        consulClient<span class="token punctuation">.</span>Agent<span class="token punctuation">.</span><span class="token function">ServiceRegister</span><span class="token punctuation">(</span>registration<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//服务启动时注册，内部实现其实就是consul API进行注册</span>
        lifetime<span class="token punctuation">.</span>ApplicationStopping<span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            consulClient<span class="token punctuation">.</span>Agent<span class="token punctuation">.</span><span class="token function">ServiceDeregister</span><span class="token punctuation">(</span>registration<span class="token punctuation">.</span>ID<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//服务停止时取消注册</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> app<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取服务地址" tabindex="-1"><a class="header-anchor" href="#获取服务地址"><span>获取服务地址</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">LookupServiceAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> serviceName<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> consulClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConsulClient</span><span class="token punctuation">(</span>c <span class="token operator">=&gt;</span> c<span class="token punctuation">.</span>Address <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Uri</span><span class="token punctuation">(</span><span class="token string">&quot;consul url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> services <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> consulClient<span class="token punctuation">.</span>Catalog<span class="token punctuation">.</span><span class="token function">Service</span><span class="token punctuation">(</span>serviceName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Response<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>services <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> services<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//注入负载均衡策略 根据当前的tickcount对服务器个数取模，“随机”取一个机器出来，避免“轮询”的负载均衡策略需要计数加锁问题</span>
            <span class="token class-name"><span class="token keyword">var</span></span> service <span class="token operator">=</span> services<span class="token punctuation">.</span><span class="token function">ElementAt</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span>TickCount <span class="token operator">%</span> services<span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> service<span class="token punctuation">.</span>Address <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> service<span class="token punctuation">.</span>ServicePort<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><p>Asp .Net Core 系列： 集成 Consul 实现 服务注册与健康检查https://www.cnblogs.com/vic-tory/p/17961740</p><p>https://mp.weixin.qq.com/s/6xGBpFxDs2EDTn7xT-8YuA | .NET服务发现(Microsoft.Extensions.ServiceDiscovery)集成Consul</p>`,15);function R(F,L){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,r,k,d,n("p",null,[s("官网："),n("a",v,[s("https://www.consul.io/"),t(a)]),s(" .NET Core微服务之基于Consul实现服务治理："),n("a",m,[s("https://www.cnblogs.com/edisonchou/p/9124985.html"),t(a)]),s(" demo："),n("a",h,[s("https://www.cnblogs.com/wyt007/p/9150116.html"),t(a)])]),g,n("p",null,[s("可以通过调用consul提供的API来发现服务的ip和port 浏览器输入"),n("a",b,[s("http://192.168.80.100:8500/v1/catalog/service/"),t(a)]),s("Aservice 通过其返回的结果，我们可以查看到该服务(AService)的ip和port，然后进行调用接口 如果是在集群的环境下，可能一个服务部署对应多个示例，以组成集群来实现负载均衡，那么这个时候服务发现会随机选择其中一个进行返回。 查询领导者："),n("a",w,[s("http://192.168.6.29:8500/v1/status/leader"),t(a)]),s(" 常用接口说明地址："),n("a",y,[s("https://www.consul.io/api-docs"),t(a)])]),_,f,C,n("p",null,[s("可以存储键值对信息充当配置中心。比如说：动态配置，特征标记，协调，leader等。kv存储的api是基于http的。 查看所有的kv 命令：curl -v "),n("a",x,[s("http://192.168.130.148/v1/kv/?recurse"),t(a)]),s(" 浏览器输入提示404那么就说明现在没有一个key/value存储项。 新增kv 命令：curl -X PUT -d 'edisonchou' "),n("a",S,[s("http://192.168.130.148:8500/v1/kv/web/vhallaccount"),t(a)]),s(" key:vhallaccount, value:edisonchou 添加后可以通过下面的命令调用接口查看这个key对应的value 命令：curl "),n("a",T,[s("http://192.168.80.100:8500/v1/kv/web/vhallaccount"),t(a)]),s(" 编辑kv 命令：curl -X PUT -d 'andyai' "),n("a",E,[s("http://192.168.80.100:8500/v1/kv/web/vhallaccount"),t(a)]),s(" 删除kv 命令：curl -X DELETE "),n("a",N,[s("http://192.168.80.100:8500/v1/kv/web/vhallaccount"),t(a)])]),A,I,q,n("p",null,[s("详情看："),n("a",P,[s("https://www.cnblogs.com/edisonchou/p/9148034.html"),t(a)])]),z,n("blockquote",null,[n("p",null,[s("docker搭建consul ："),n("a",D,[s("https://www.cnblogs.com/edisonchou/p/consul_cluster_based_on_docker_introduction.html"),t(a)])])]),B])}const Z=p(i,[["render",R],["__file","consul.html.vue"]]),H=JSON.parse('{"path":"/middleware/smallService/fuwuzhuceyufaxian/consul.html","title":"Consul","lang":"zh-CN","frontmatter":{"title":"Consul","lang":"zh-CN","date":"2022-10-21T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"consul","slug":"duatug","docsId":"31211413","description":"理解：将一些服务注册到consul里面，然后后期想使用，需要根据指定的接口去获取服务地址和端口（多个负载的情况下会返回一个），然后再去调用我们想调用的服务 描述 一个服务管理(服务注册与发现)软件。支持多数据中心下，分布式高可用的服务发现和配置共享。支持健康检查允许存储键值对。 在consul方案汇总中，每个提供服务的节点都要部署和运行consul的c...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/smallService/fuwuzhuceyufaxian/consul.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Consul"}],["meta",{"property":"og:description","content":"理解：将一些服务注册到consul里面，然后后期想使用，需要根据指定的接口去获取服务地址和端口（多个负载的情况下会返回一个），然后再去调用我们想调用的服务 描述 一个服务管理(服务注册与发现)软件。支持多数据中心下，分布式高可用的服务发现和配置共享。支持健康检查允许存储键值对。 在consul方案汇总中，每个提供服务的节点都要部署和运行consul的c..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-28T09:39:41.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-10-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-28T09:39:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Consul\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-21T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-28T09:39:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"描述","slug":"描述","link":"#描述","children":[]},{"level":2,"title":"功能","slug":"功能","link":"#功能","children":[{"level":3,"title":"服务注册","slug":"服务注册","link":"#服务注册","children":[]},{"level":3,"title":"服务发现","slug":"服务发现","link":"#服务发现","children":[]},{"level":3,"title":"健康检查","slug":"健康检查","link":"#健康检查","children":[]},{"level":3,"title":"键值对存储","slug":"键值对存储","link":"#键值对存储","children":[]},{"level":3,"title":"多数据中心","slug":"多数据中心","link":"#多数据中心","children":[]},{"level":3,"title":"告警值watch机制","slug":"告警值watch机制","link":"#告警值watch机制","children":[]}]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"基本配置","slug":"基本配置","link":"#基本配置","children":[]},{"level":3,"title":"获取服务地址","slug":"获取服务地址","link":"#获取服务地址","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1714297181000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2},{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":5.1,"words":1530},"filePathRelative":"middleware/smallService/fuwuzhuceyufaxian/consul.md","localizedDate":"2022年10月21日","excerpt":"<blockquote>\\n<p>理解：将一些服务注册到consul里面，然后后期想使用，需要根据指定的接口去获取服务地址和端口（多个负载的情况下会返回一个），然后再去调用我们想调用的服务</p>\\n</blockquote>\\n<h2>描述</h2>\\n<p>一个服务管理(服务注册与发现)软件。支持多数据中心下，分布式高可用的服务发现和配置共享。支持健康检查允许存储键值对。</p>\\n<p>在consul方案汇总中，每个提供服务的节点都要部署和运行consul的client agent，所有运行consul agent节点的集合构成consul cluster。Consul agent有两种运行方式：server和client。这里的server和client只是consul集群层面的区分，与搭建在cluster的应用服务无关。以server模式运行的consul agent节点用于维护consul集群的状态，官方建议每个consl cluster至少有3个或者以上的运行在server mode的agent，client节点不限。</p>","autoDesc":true}');export{Z as comp,H as data};
