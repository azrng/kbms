import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as t,o as e}from"./app-DhDWGI3C.js";const n={};function h(l,i){return e(),a("div",null,i[0]||(i[0]=[t(`<h2 id="时间" tabindex="-1"><a class="header-anchor" href="#时间"><span>时间</span></a></h2><p>pg数据库有两个时间类型<code>timestamp</code>和<code>timestamptz</code>，其中<code>timestamp</code>是<code>timestamp without time zone</code>的别名，<code>timestamptz</code>是<code>timestamp with time zone</code>的别名。</p><ul><li>timestamp应存储所在时区的本地时间</li><li>timestamptz 应存储utc时间</li></ul><h2 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串"><span>字符串</span></a></h2><p>varchar：存储固定长度的文本数据<br> text：存储大量文本数据</p><h2 id="范围类型" tabindex="-1"><a class="header-anchor" href="#范围类型"><span>范围类型</span></a></h2><p>PostgreSQL中的范围类型表示其底层类型的值范围。Postgres提供了几个内置的范围类型:<code>int4range</code>和<code>int8range</code>表示int和bigint类型的范围，<code>numrange </code>-数字范围，<code>tstzrange</code>, <code>daterange</code>和<code>tsrange</code>表示时间戳，日期和时间类型的范围。</p><p>示例</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> IF</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> NOT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> EXISTS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> public.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Meetings&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;Id&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> integer</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> NOT NULL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> GENERATED</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> BY</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> DEFAULT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> AS</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> IDENTITY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ( INCREMENT </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> START</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> MINVALUE </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> MAXVALUE </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2147483647</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> CACHE </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ),</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;RoomName&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> character varying</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;Title&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> character varying</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;Time&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tstzrange </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    CONSTRAINT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;PK_Meetings&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> PRIMARY KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> public.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Meetings&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;RoomName&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Title&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Time&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Winterfell&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;PostgreSQL Demo&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;[2023-12-23 11:30, 2023-12-23 12:30)&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> public.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Meetings&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;RoomName&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Title&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Time&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Jobria&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Npgsql Demo&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;[2023-12-23 13:00, 2023-12-23 13:30]&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> public.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Meetings&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;RoomName&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Title&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Time&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Casterly Rock&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Upgrade PostgreSQL&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;[2023-12-23 14:00, 2023-12-23 15:30]&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>PostgreSQL 范围类型和 Entity Framework Core：<a href="https://www.giorgi.dev/database/postgresql-range-types-entity-framework/" target="_blank" rel="noopener noreferrer">https://www.giorgi.dev/database/postgresql-range-types-entity-framework/</a></p><h2 id="转移字符" tabindex="-1"><a class="header-anchor" href="#转移字符"><span>转移字符</span></a></h2><p>对单引号的两种转义方式，在SQL标准中字符串是用单引号括起来的，而在PostgreSQL中遵守了该标准，双引号则是用来表示变量的，如果在字符串中需要使用到单引号，就需要对其进行转义。</p><h3 id="方式一-使用e和反斜杠进行转义" tabindex="-1"><a class="header-anchor" href="#方式一-使用e和反斜杠进行转义"><span>方式一：使用E和反斜杠进行转义</span></a></h3><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">select</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> E</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">233&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="方式二-直接用一个单引号来转义单引号" tabindex="-1"><a class="header-anchor" href="#方式二-直接用一个单引号来转义单引号"><span>方式二：直接用一个单引号来转义单引号</span></a></h3><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">select</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;&#39;233&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这两种方式都能得到&#39;233的结果而不会报错，第二种方式比较简单，也可以通过修改standard_conforming_strings参数的值来让反斜杠从普通字符变回转义字符：<br> 查询并修改该参数的值：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">show</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> standard_conforming_strings</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">SET</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> standard_conforming_strings</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">SET</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> standard_conforming_strings</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> off</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当该参数的值为off时就可以直接使用反斜杠作为转义字符里，如下：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">select</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">233&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将会得到&#39;233的结果而不会报错。</p>`,21)]))}const r=s(n,[["render",h]]),d=JSON.parse('{"path":"/dataBase/postgresql/columnType.html","title":"表字段类型","lang":"zh-CN","frontmatter":{"title":"表字段类型","lang":"zh-CN","date":"2023-03-23T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"filename":"biaoziduanleixing","slug":"dkp7cg","docsId":"69739396","description":"时间 pg数据库有两个时间类型timestamp和timestamptz，其中timestamp是timestamp without time zone的别名，timestamptz是timestamp with time zone的别名。 timestamp应存储所在时区的本地时间 timestamptz 应存储utc时间 字符串 varchar：存...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"表字段类型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-23T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-26T14:54:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"],["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/postgresql/columnType.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"表字段类型"}],["meta",{"property":"og:description","content":"时间 pg数据库有两个时间类型timestamp和timestamptz，其中timestamp是timestamp without time zone的别名，timestamptz是timestamp with time zone的别名。 timestamp应存储所在时区的本地时间 timestamptz 应存储utc时间 字符串 varchar：存..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-26T14:54:00.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-03-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-26T14:54:00.000Z"}]]},"git":{"createdTime":1695484404000,"updatedTime":1724684040000,"contributors":[{"name":"azrng","username":"","email":"itzhangyunpeng@163.com","commits":4},{"name":"zhangyunpeng","username":"","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":1.81,"words":544},"filePathRelative":"dataBase/postgresql/columnType.md","excerpt":"<h2>时间</h2>\\n<p>pg数据库有两个时间类型<code>timestamp</code>和<code>timestamptz</code>，其中<code>timestamp</code>是<code>timestamp without time zone</code>的别名，<code>timestamptz</code>是<code>timestamp with time zone</code>的别名。</p>\\n<ul>\\n<li>timestamp应存储所在时区的本地时间</li>\\n<li>timestamptz 应存储utc时间</li>\\n</ul>\\n<h2>字符串</h2>\\n","autoDesc":true}');export{r as comp,d as data};
