import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as e,o as a}from"./app-DhDWGI3C.js";const l={};function p(t,s){return a(),i("div",null,s[0]||(s[0]=[e(`<h2 id="图形说明" tabindex="-1"><a class="header-anchor" href="#图形说明"><span>图形说明</span></a></h2><ul><li><p>矩形框：代表一个类，分三层：第一层类名；第二层类的特性，字段和属性；第三层为类的方法和行为</p><p>‘+’ 表示 public，‘-’ 表示 private，‘#’ 表示 proteced</p></li><li><p>空心三角形 + 实线：表示继承关系，如 鸟 -▷ 动物 表示 “鸟” 继承自 “动物”。</p></li><li><p>空心三角形 + 虚线：表示接口实现，如 鸟 —▷ 飞翔，则是表示 “鸟” 实现了 “飞行” 这个接口。</p></li><li><p>实现：表示关联，比如 “大雁南飞” 是因为要过冬，有 “气候” 这么一个类，大雁需要知道 “气候” 的具体变化才会 “南飞”，所以可以用关联关系表示 “一个类知道另一个”；大雁 ——&gt; 气候。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>public class Goose</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    private Climate climate;	//这就是关联关系，Goose 类引用 Climate 类</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>空心菱形 + 实线箭头：表示聚合关系，比如大雁是群居动物，一个大雁属于一个雁群，一个雁群有个大雁。它们满足聚合关系，这种聚合关系是表示一种“弱拥有”，即 A 对象包含 B 对象，但 B 对象不是 A 对象的一部分。</p><p>雁群 ◇—— 大雁。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>public class GooseAggregate</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    private Goose[] gooses;	// 在 GooseAggregate 类中，有大雁数组对象 gooses</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>实心菱形 + 实线箭头：表示组合（composition）关系，是一种 “强拥有” 的关系，体现了严格的部分与整体的关系，部分与整体的生命周期一样。比如，鸟和翅膀就是组合关系；鸟 ◆——&gt; 翅膀；</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>public class Bird</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    private Wing wing;</span></span>
<span class="line"><span>    public Bird()</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>        wing = new Wing();	// 生命周期与 Bird 一样，初始化时同时生成</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>虚线箭头：表示依赖关系，如动物依赖空气呼吸存活，依赖水源存活等。这属于依赖关系；氧气 &lt;—— 动物；水源&lt;—— 动物；</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>abstract class Bird</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    public Metabolism (Oxygen oxygen, Water water)</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>        //...</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,2)]))}const c=n(l,[["render",p]]),o=JSON.parse('{"path":"/softwareDesign/umlClass.html","title":"UML类图","lang":"zh-CN","frontmatter":{"title":"UML类图","lang":"zh-CN","date":"2024-08-22T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["软件设计"],"tag":["UML"],"description":"图形说明 矩形框：代表一个类，分三层：第一层类名；第二层类的特性，字段和属性；第三层为类的方法和行为 ‘+’ 表示 public，‘-’ 表示 private，‘#’ 表示 proteced 空心三角形 + 实线：表示继承关系，如 鸟 -▷ 动物 表示 “鸟” 继承自 “动物”。 空心三角形 + 虚线：表示接口实现，如 鸟 —▷ 飞翔，则是表示 “鸟”...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"UML类图\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-22T03:11:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"],["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/softwareDesign/umlClass.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"UML类图"}],["meta",{"property":"og:description","content":"图形说明 矩形框：代表一个类，分三层：第一层类名；第二层类的特性，字段和属性；第三层为类的方法和行为 ‘+’ 表示 public，‘-’ 表示 private，‘#’ 表示 proteced 空心三角形 + 实线：表示继承关系，如 鸟 -▷ 动物 表示 “鸟” 继承自 “动物”。 空心三角形 + 虚线：表示接口实现，如 鸟 —▷ 飞翔，则是表示 “鸟”..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-22T03:11:08.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"UML"}],["meta",{"property":"article:published_time","content":"2024-08-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-22T03:11:08.000Z"}]]},"git":{"createdTime":1724296268000,"updatedTime":1724296268000,"contributors":[{"name":"zhangyunpeng","username":"","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":1.57,"words":472},"filePathRelative":"softwareDesign/umlClass.md","excerpt":"<h2>图形说明</h2>\\n<ul>\\n<li>\\n<p>矩形框：代表一个类，分三层：第一层类名；第二层类的特性，字段和属性；第三层为类的方法和行为</p>\\n<p>‘+’ 表示 public，‘-’ 表示 private，‘#’ 表示 proteced</p>\\n</li>\\n<li>\\n<p>空心三角形 + 实线：表示继承关系，如 鸟 -▷ 动物 表示 “鸟” 继承自 “动物”。</p>\\n</li>\\n<li>\\n<p>空心三角形 + 虚线：表示接口实现，如 鸟 —▷ 飞翔，则是表示 “鸟” 实现了 “飞行” 这个接口。</p>\\n</li>\\n<li>\\n<p>实现：表示关联，比如 “大雁南飞” 是因为要过冬，有 “气候” 这么一个类，大雁需要知道 “气候” 的具体变化才会 “南飞”，所以可以用关联关系表示 “一个类知道另一个”；大雁 ——&gt; 气候。</p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>public class Goose</span></span>\\n<span class=\\"line\\"><span>{</span></span>\\n<span class=\\"line\\"><span>    private Climate climate;\\t//这就是关联关系，Goose 类引用 Climate 类</span></span>\\n<span class=\\"line\\"><span>}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>空心菱形 + 实线箭头：表示聚合关系，比如大雁是群居动物，一个大雁属于一个雁群，一个雁群有个大雁。它们满足聚合关系，这种聚合关系是表示一种“弱拥有”，即 A 对象包含 B 对象，但 B 对象不是 A 对象的一部分。</p>\\n<p>雁群 ◇—— 大雁。</p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>public class GooseAggregate</span></span>\\n<span class=\\"line\\"><span>{</span></span>\\n<span class=\\"line\\"><span>    private Goose[] gooses;\\t// 在 GooseAggregate 类中，有大雁数组对象 gooses</span></span>\\n<span class=\\"line\\"><span>}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>实心菱形 + 实线箭头：表示组合（composition）关系，是一种 “强拥有” 的关系，体现了严格的部分与整体的关系，部分与整体的生命周期一样。比如，鸟和翅膀就是组合关系；鸟 ◆——&gt; 翅膀；</p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>public class Bird</span></span>\\n<span class=\\"line\\"><span>{</span></span>\\n<span class=\\"line\\"><span>    private Wing wing;</span></span>\\n<span class=\\"line\\"><span>    public Bird()</span></span>\\n<span class=\\"line\\"><span>    {</span></span>\\n<span class=\\"line\\"><span>        wing = new Wing();\\t// 生命周期与 Bird 一样，初始化时同时生成</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>虚线箭头：表示依赖关系，如动物依赖空气呼吸存活，依赖水源存活等。这属于依赖关系；氧气 &lt;—— 动物；水源&lt;—— 动物；</p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>abstract class Bird</span></span>\\n<span class=\\"line\\"><span>{</span></span>\\n<span class=\\"line\\"><span>    public Metabolism (Oxygen oxygen, Water water)</span></span>\\n<span class=\\"line\\"><span>    {</span></span>\\n<span class=\\"line\\"><span>        //...</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>","autoDesc":true}');export{c as comp,o as data};
