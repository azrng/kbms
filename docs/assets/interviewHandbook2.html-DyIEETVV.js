import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as p,d as a}from"./app-CHE8a282.js";const e={},i=a(`<p>70、触发器的作用？</p><p>触发器是一中特殊的存储过程，主要是通过事件来触发而被执行的。它可以强化约束，来维护数据的完整性和一致性，可以跟踪数据库内的操作从而不允许未经许可的更新和变化。可以联级运算。如，某表上的触发器上包含对另一个表的数据操作，而该操作又会导致该表触发器被触发。</p><p>71、索引的作用？和它的优点缺点是什么？</p><p>索引就一种特殊的查询表，数据库的搜索引擎可以利用它加速对数据的检索。它很类似与现实生活中书的目录，不需要查询整本书内容就可以找到想要的数据。索引可以是唯一的，创建索引允许指定单个列或者是多个列。缺点是它减慢了数据录入的速度，同时也增加了数据库的尺寸大小。</p><p>72、说一下SQLServer中索引的两种类型？</p><p>聚簇(或者叫做聚集，cluster)索引和非聚簇索引。</p><p>字典的拼音目录就是聚簇(cluster)索引，笔画目录就是非聚簇索引。这样查询“G到M的汉字”就非常快，而查询“6划到8划的字”则慢。</p><p>聚簇索引是一种特殊索引，它使数据按照索引的排序顺序存放表中。聚簇索引类似于字典，即所有词条在字典中都以字母顺序排列。聚簇索引实际上重组了表中的数据，所以你只能在表中建立一个聚簇索引。</p><p>当数据按值的范围查询时，聚簇索引就显得特别有用。因为所有SQLServer都必需先找到所查询范围的第一行，然后依次下去，直到该范围的最后一个值找到为止，并且保证了所有其他值也落在这个范围内。举一个例子，一个应用程序要查找首字母位于G和P之间的姓名列表，SQLServer首先找到以字母G开头的名字，取出所有记录，直到找到以字母P开头的名字为止，这种方法使得查询过程非常高效。</p><p>进行大量数据改动的表不适宜用聚簇索引，因为SQLServer将不得不在表中维护行的次序。如果要索引的值极少，例如一个列包含的全都是1和0，创建聚簇索引就不是个好主意。如果表经常由一个指定的列来排序，该列将是簇索引的最佳候选列。这是因为表中的数据已经为你排好序了。如果访问一个表并使用BETWEEN、&lt;、&gt;、&gt;=或&lt;=操作符来返回一个范围的值时，应该考虑使用聚簇索引。</p><p>73、什么是事务？什么是锁？</p><p>事务就是被绑定在一起作为一个逻辑工作单元的SQL语句分组，如果任何一个语句操作失败那么整个操作就被失败，以后操作就会回滚到操作前状态，或者是上有个节点。为了确保要么执行，要么不执行，就可以使用事务。要将有组语句作为事务考虑，就需要通过ACID测试，即原子性，一致性，隔离性和持久性。</p><p>锁：在所以的DBMS中，锁是实现事务的关键，锁可以保证事务的完整性和并发性。与现实生活中锁一样，它可以使某些数据的拥有者，在某段时间内不能使用某些数据或数据结构。当然锁还分级别的。</p><p>74、什么叫视图？游标是什么？</p><p>视图是一种虚拟的表，具有和物理表相同的功能。可以对视图进行增，改，查，操作，试图通常是有一个表或者多个表的行或列的子集。对视图的修改不影响基本表。它使得我们获取数据更容易，相比多表查询。</p><p>游标：是对查询出来的结果集作为一个单元来有效的处理。游标可以定在该单元中的特定行，从结果集的当前行检索一行或多行。可以对结果集当前行做修改。一般不使用游标，但是需要逐条处理数据的时候，游标显得十分重要。</p><p>75、什么是SQL注入式攻击？</p><p>所谓SQL注入式攻击，就是攻击者把SQL命令插入到Web表单的输入域或页面请求的查询字符串，欺骗服务器执行恶意的SQL命令。在某些表单中，用户输入的内容直接用来构造（或者影响）动态SQL命令，或作为存储过程的输入参数，这类表单特别容易受到SQL注入式攻击。常见的SQL注入式攻击过程类如：</p><p>⑴ 某个ASP.NET Web应用有一个登录页面，这个登录页面控制着用户是否有权访问应用，它要求用户输入一个名称和密码。</p><p>⑵ 登录页面中输入的内容将直接用来构造动态的SQL命令，或者直接用作存储过程的参数。下面是ASP.NET应用构造查询的一个例子：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>System.Text.StringBuilder query = new System.Text.StringBuilder(</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&quot;SELECT * from Users WHERE login = &#39;&quot;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>.Append(txtLogin.Text).Append(&quot;&#39; AND password=&#39;&quot;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>.Append(txtPassword.Text).Append(&quot;&#39;&quot;);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>⑶ 攻击者在用户名字和密码输入框中输入&quot;&#39;或&#39;1&#39;=&#39;1&quot;之类的内容。</p><p>⑷ 用户输入的内容提交给服务器之后，服务器运行上面的ASP.NET代码构造出查询用户的SQL命令，但由于攻击者输入的内容非常特殊，所以最后得到的SQL命令变成：SELECT * from Users WHERE login = &#39;&#39; or &#39;1&#39;=&#39;1&#39; AND password = &#39;&#39; or &#39;1&#39;=&#39;1&#39;。</p><p>⑸ 服务器执行查询或存储过程，将用户输入的身份信息和服务器中保存的身份信息进行对比。</p><p>⑹ 由于SQL命令实际上已被注入式攻击修改，已经不能真正验证用户身份，所以系统会错误地授权给攻击者。 如果攻击者知道应用会将表单中输入的内容直接用于验证身份的查询，他就会尝试输入某些特殊的SQL字符串篡改查询改变其原来的功能，欺骗系统授予访问权限。</p><p>系统环境不同，攻击者可能造成的损害也不同，这主要由应用访问数据库的安全权限决定。如果用户的帐户具有管理员或其他比较高级的权限，攻击者就可能对数据库的表执行各种他想要做的操作，包括添加、删除或更新数据，甚至可能直接删除表。</p><p>78、Session,ViewState,Application,cookie的区别？</p><p>Session:用于保持状态的基于 Web 服务器的方法。Session 允许通过将对象存储在Web 服务器的内存中在整个用户会话过程中保持任何对象。主要用于保持代码隐藏类中对象的状态。为每个用户创建的,用于存储单个用户,因为他是相对每个用户的.所以可能来取得在线人数等。</p><p>ViewState:主要用于保持 Web 页上控件的状态。当 Web 页上的控件被绑定到代码隐藏类中的对象。</p><p>Application 用于存储所有用户都可视的信息.所以它存储的是要让所有用户共享的一些信息.如总访问数等Cache，页面缓存。</p><p>Cookie:通常我们都把它放在客户端,也可以存储在服务器端。主要用它存储用户的个性设制,和登录信息。</p><p>79、Ajax原理？</p><p>简述： Ajax的原理就是:通过javascript的方式，将前台数据通过xmlhttp对象传递到后台，后台在接收到请求后，将需要的结果，再传回到前台，这样就可以实现不需要页面的回发，页是数据实现来回传递，从页实现无刷新。</p><p>Ajax的原理简单来说，实际上就是通过XmlHttpRequest对象来向服务器发异步请求，从服务器获得数据，然后用javascript来操作DOM而更新页面。</p><p>这其中最关键的一步就是从服务器获得请求数据。要清楚这个过程和原理，我们必须对 XMLHttpRequest有所了解。</p><p>总结：我们可以看出，XMLHttpRequest对象完全用来向服务器发出一个请求的，它的作用也局限于此，但它的作用是整个ajax实现的关键，我们可以把服务器端看成一个数据接口，它返回的是一个纯文本流，当然，这个文本流可以是XML格式，可以是Html，可以是Javascript代码，也可以只是一个字符串。这时候，XMLHttpRequest向服务器端请求这个页面，服务器端将文本的结果写入页面，这和普通的web开发流程是一样的，不同的是，客户端在异步获取这个结果后，不是直接显示在页面，而是先由javascript来处理，然后再显示在页面。</p><p>80、对web标准以及w3c的理解和认识？</p><p>标签闭合，标签小写，不乱嵌套，提高搜索机器人搜索几率。使用外链css和js脚本，结构行为表现分离，内容能被更多广泛的设备所访问,更少的代码和组件，容易维护，改版方便，不需要变动页面内容。</p><p>81、Html和xhtml有什么区别？</p><p>html是一种基本的web网页设计语言，xhtml是一个基于XML的置标语言。</p><p>最主要的不同:</p><p>XHTML元素必须正确的被嵌套，元素必须关闭，标签必须小写，必须有根元素。</p><p>82、严格模式和混杂模式的区分，以及如何触发这2种模式？</p><p>严格模式就是浏览器根据web标准去解析页面，是一种要求严格的DTD，不允许使用任何表现层的语法。</p><p>混杂模式是一种向后兼容的解析方法。</p><p>触发标准模式或者说严格模式很简单，就是Html前申明正确的DTD，出发混杂模式可以在html文档开始不声明DTD，或者在DOCTYPE前加入XML声明。</p><p>83、行内元素有哪些?块级元素有哪些？CSS盒模型？</p><p>行内元素: br span input a</p><p>块级元素DIV P H1 H2 FORM ul</p><p>CSS盒模型内容:padding border margin</p><p>84、css引入的方式有哪些?link和@import的区别？</p><p>引入方式3种：行内添加定义style属性值，页面头部内内嵌调用和外链调用，</p><p>区别：</p><p>1.link是xhtml标签，除了加载css外，还可以定义RSS等其他事务，@import只能加载CSS</p><p>2.link引用CSS时候，页面载入的时候同时加载，@import需要页面网页完全载入后加载</p><p>3.link是XHTML标签，没有兼容问题，@import是在CSS2.1提出的，低版本的浏览器不支持。</p><p>4.link支持使用javascript控制DOM去改变样式，但是@import不支持。</p><p>85、CSS选择符有哪些?优先级算法如何计算?内联和Important哪个优先级高？</p><p>CSS选择符有类选择符，属性选择符，ID选择符，优先级算法是基于特殊性值进行计算的。分别如下：ID属性 0.1.0.0</p><p>类属性选择器，属性选择器，伪类 0.0.1.0 元素选择符，伪元素选择符 0.0.0.1</p><p>通配选择器对特殊性没有任何贡献值。</p><p>important优先级高</p><p>86、前端页面有哪三层构成，分别是什么，作用是什么？</p><p>结构层：html 表示层:css 行为层：js</p><p>87、页面的哪些浏览器你测试过，分别内核是什么？</p><p>IE: trident内核</p><p>Firefox：gecko内核</p><p>Safari:webkit内核</p><p>Opera:以前是presto内核，Opera现已改用Google Chrome的Blink内核</p><p>Chrome:Blink(基于webkit，Google与Opera Software共同开发)</p><p>88、img标签上的title和alt属性区别是什么？</p><p>alt是当图片不能正常显示的时候，用文字代替</p><p>title该属性提供信息</p><p>89、你如何对网站的文件和资源进行优化？</p><p>文件合并</p><p>文件最小化/文件压缩</p><p>使用CDN托管</p><p>缓存的使用</p><p>90、什么是语义化的HTML？</p><p>直观的认识标签</p><p>对于搜索引擎的抓取有好处</p><p>91、清除浮动的几种方式，各自的优缺点？</p><p>使用空标签清除浮动 clear:both（理论上能清楚任何标签，增加无意义的标签）</p><p>使用overflow:auto（空标签元素清除浮动而不得不增加无意代码的弊端，使用zoom:1用于兼容IE）</p><p>使用afert伪元素清除浮动(用于非IE浏览器)</p><p>92、javascript的typeof返回哪些数据类型？</p><p>Object number function boolean underfind</p><p>93、例举3种强制类型转换和2种隐式类型转换？</p><p>强制（parseInt,parseFloat,number）</p><p>隐式（== – ===）</p><p>94、split() join() 的区别？</p><p>前者是切割成数组的形式，后者是将数组转换成字符串</p><p>95、数组方法pop() push() unshift() shift()</p><p>Push()尾部添加 pop()尾部删除</p><p>Unshift()头部添加 shift()头部删除</p><p>96、闭包是什么，有什么特性，对页面有什么影响？</p><p>闭包就是能够读取其他函数内部变量的函数。</p><p>详情查看这篇博文：http://blog.csdn.net/gaoshanwudi/article/details/7355794</p><p>97、解释jsonp的原理，以及为什么不是真正的ajax？</p><p>动态创建script标签，回调函数</p><p>Ajax是页面无刷新请求数据操作</p><p>98、.javascript的本地对象，内置对象和宿主对象？</p><p>本地对象为array obj regexp等可以new实例化</p><p>内置对象为gload Math 等不可以实例化的</p><p>宿主为浏览器自带的document,window 等</p><p>99、document load 和document ready的区别？</p><p>Document.onload 是在结构和样式加载完才执行js</p><p>Document.ready原生种没有这个方法，jquery中有 $().ready(function)</p><p>100、javascript的同源策略？</p><p>一段脚本只能读取来自于同一来源的窗口和文档的属性，这里的同一来源指的是主机名、协议和端口号的组合</p><p>101、编写一个数组去重的方法</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>function oSort(arr)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>{</span></span>
<span class="line"><span></span></span>
<span class="line"><span>var result ={};</span></span>
<span class="line"><span></span></span>
<span class="line"><span>var newArr=[];</span></span>
<span class="line"><span></span></span>
<span class="line"><span>for(var i=0;i&lt;arr.length;i++)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>{</span></span>
<span class="line"><span></span></span>
<span class="line"><span>if(!result[arr])</span></span>
<span class="line"><span></span></span>
<span class="line"><span>{</span></span>
<span class="line"><span></span></span>
<span class="line"><span>newArr.push(arr)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>result[arr]=1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>return newArr</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   另一种简单写法</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Function oSort(arr)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>{</span></span>
<span class="line"><span></span></span>
<span class="line"><span> //定义一个新的数组</span></span>
<span class="line"><span></span></span>
<span class="line"><span> Var s=[];</span></span>
<span class="line"><span></span></span>
<span class="line"><span> //遍历数组</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  For(var i=0;i&lt;arr.length;i++)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>{//indexOf() 方法可返回某个指定的字符串值在字符串中首次出现的位置。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  If(s.indexOf(arr[i]) ==-1) //如果没有找到匹配的字符串则返回 -1。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   s.push(arr[i]);//push() 方法可向数组的末尾添加一个或多个元素，并返回新的长度。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}  </span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>102、jQuery中有哪几种类型的选择器？</p><p>从我自己的角度来讲，可以有3种类型的选择器，如下：</p><p>基本选择器：直接根据id、css类名、元素名返回匹配的dom元素。</p><p>层次选择器：也叫做路径选择器，可以根据路径层次来选择相应的DOM元素。</p><p>过滤选择器：在前面的基础上过滤相关条件，得到匹配的dom元素。</p><p>103、请使用jQuery将页面上的所有元素边框设置为2px宽的虚线？</p><p>这正是jQuery选择器上场的时候了，代码如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot;&gt;</span></span>
<span class="line"><span>    $(&quot;*&quot;).css(&quot;border&quot;, &quot;2px dotted red&quot;); </span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>104、当CDN上的jQuery文件不可用时，该怎么办？</p><p>为了节省带宽和脚本引用的稳定性，我们会使用CDN上的jQuery文件，例如google的jquery cdn服务。但是如果这些CDN上的jQuery服务不可用，我们还可以通过以下代码来切换到本地服务器的jQuery版本：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;script type=&quot;text/javascript&quot; language=&quot;Javascript&quot; src=&quot;http://ajax.aspnetcdn.com/ajax/jquery/jquery-1.4.1.min.js &quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;script type=&#39;text/javascript&#39;&gt;//&lt;![CDATA[</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>if (typeof jQuery == &#39;undefined&#39;) {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>document.write(unescape(&quot;%3Cscript src=&#39;/Script/jquery-1.4.1.min.js&#39; type=&#39;text/javascript&#39; %3E%3C/script%3E&quot;));</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}//]]&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>105、怎样用jQuery编码和解码URL？</p><p>在jQuery中，我们可以使用以下方法实现URL的编码和解码。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>encodeURIComponent(url) and decodeURIComponent(url)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>106、如何用jQuery禁用浏览器的前进后退按钮？</p><p>实现代码如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>&lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot;&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>$(document).ready(function() {</span></span>
<span class="line"><span>   window.history.forward(1);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   //OR</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   window.history.forward(-1);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>});</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>107、你为什么要使用jquery？</p><p>因为jQuery是轻量级的框架，大小不到30kb,它有强大的选择器，出色的DOM操作的封装，有可靠的事件处理机制(jQuery在处理事件绑定的时候相当的可靠)，完善的ajax(它的ajax封装的非常的好，不需要考虑复杂浏览器的兼容性和XMLHttpRequest对象的创建和使用的问题。) 出色的浏览器的兼容性。 而且支持链式操作，隐式迭代。行为层和结构层的分离，还支持丰富的插件，jquery的文档也非常的丰富。</p><p>108、jquery对象和dom对象是怎样转换的？</p><p>jquery转DOM对象:jQuery 对象是一个数组对象，可以通过[index]的丰富得到相应的DOM对象还可以通过get[index]去得到相应的DOM对象。DOM对象转jQuery对象:$(DOM对象)</p><p>109、你是如何使用jquery中的ajax的？</p><p>如果是一些常规的ajax程序的话，使用load(),$.get(),$.post(),就可以搞定了，一般我会使用的是$.post() 方法。如果需要设定beforeSend(提交前回调函数),error(失败后处理),success(成功后处理)及complete(请求完成后处理)回调函数等，这个时候我会使用$.ajax()</p><p>110、你觉得jquery中的ajax好用吗，为什么？</p><p>好用的。 因为jQuery提供了一些日常开发中的快捷操作，例 load，ajax，get，post等等，所以使用jQuery开发ajax将变得极其简单，我们就可以集中精力在业务和用户的体验上，不需要去理会那些繁琐的XMLHttpRequest对象了。</p><p>111、jquery中$.get()提交和$.post()提交有区别吗？</p><p>$.get() 方法使用GET方法来进行异步请求的。$.post() 方法使用POST方法来进行异步请求的。</p><p>get请求会将参数跟在URL后进行传递，而POST请求则是作为HTTP消息的实体内容发送给Web服务器的，这种传递是对用户不可见的。</p><p>get方式传输的数据大小不能超过2KB 而POST要大的多</p><p>GET 方式请求的数据会被浏览器缓存起来，因此有安全问题。</p><p>112、在jquery中你是如何去操作样式的？</p><p>addClass() 来追加样式 ，removeClass() 来删除样式，toggle() 来切换样式</p><p>113、你使用过jquery中的动画吗，是怎样用的？</p><p>使用过。</p><p>hide() 和 show() 同时修改多个样式属性。像高度，宽度，不透明度。 fadeIn() 和fadeOut() fadeTo() 只改变不透明度</p><p>slideUp() 和 slideDown() slideToggle() 只改变高度</p><p>animate() 属于自定义动画的方法</p><p>114、jQuery是如何处理缓存的？</p><p>要处理缓存就是禁用缓存。</p><p>通过$.post() 方法来获取数据，那么默认就是禁用缓存的。</p><p>通过$.get()方法 来获取数据，可以通过设置时间戳来避免缓存。可以在URL后面加上+(+new Date)例 $.get(&#39;ajax.xml?&#39;+(+new Date),function () { //内容 }); 3 通过$.ajax 方法来获取数据，只要设置cache:false即可。</p><p>115、$.getScript()方法 和 $.getJson() 方法有什么区别？</p><p>$.getScript() 方法可以直接加载.js文件，并且不需要对javascript文件进行处理，javascript文件会自动执行。</p><p>$.getJson() 是用于加载JSON 文件的 ，用法和$.getScript()</p><p>116、你使用过哪些数据格式，它们各有什么特点？</p><p>HTML格式 ,，JSON格式，javascript格式，XML格式</p><p>HTML片段提供外部数据一般来说是最简单的。</p><p>如果数据需要重用，而且其他应用程序也可能一次受到影响，那么在性能和文件大小方面具有优势的JSON通常是不错的选择。</p><p>而当远程应用程序未知时，XML则能够为良好的互操作性提供最可靠的保证。</p><p>117、jQuery 能做什么？</p><p>获取页面的元素</p><p>修改页面的外观</p><p>改变页面大的内容</p><p>响应用户的页面操作</p><p>为页面添加动态效果</p><p>无需刷新页面，即可以从服务器获取信息</p><p>简化常见的javascript任务</p><p>118、在ajax中data主要有几种方式？</p><p>三种，html拼接的，json数组，form表单经serialize()序列化的。</p><p>119、你知道jQuery中的事件冒泡吗，它是怎么执行的，如何来停止冒泡事件？</p><p>知道，事件冒泡是从里面的往外面开始触发。在jQuery中提供了stopPropagation()方法可以停止冒泡。</p><p>127、MVC（模型、视图、控制器）架构的控制流程</p><p>所有的终端用户请求被发送到控制器。</p><p>控制器依赖请求去选择加载哪个模型，并把模型附加到对应的视图。</p><p>附加了模型数据的最终视图做为响应发送给终端用户。</p><p>128、MVC同时适用于Windows应用和Web应用吗?</p><p>相比Windows应用，MVC架构更适用于Web应用。对于Windows应用，MVP(Model View Presenter)架构更好一点 。如果你使用WPF和Silverlight，MVVM更适合。</p><p>129、使用MVC有哪些好处?</p><p>MVC有两个大的好处：</p><p>​ 离了关注点。后台代码被移到单独的类文件，我们可以最大限度的重复利用代码。</p><p>​ 自动化UI测试成为可能，因为后台代码移到了.NET类。这让我们更容易做单元测试和自动化测试</p><p>130、“HTML.TextBox” 和 “HTML.TextBoxFor”有什么不同?</p><p>它们两个输出相同的HTML， “HTML.TextBoxFor”是强类型的，但“HTML.TextBox”不是。</p><p>131、MVC的路由选择是什么?</p><p>路由选择功能帮你定义一个URL规则，映射URL到控制器。</p><p>132、在哪里写路由映射表？</p><p>在 “global.asax” 文件。</p><p>133、我们可以映射多个URL到同一个动作吗？</p><p>是的，可以。只需要添加多条不同Key名字的记录，并且指定同样的控制器和动作。</p><p>134、使用hyperlink生成链接，如何从一个视图链接到另一个视图?</p><p>使用ActionLink方法，如下图所示。下面的代码生成一个简单的URL，链接到&quot;Home&quot;控制器的GotoHome动作。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>&lt;%= Html.ActionLink(&quot;Home&quot;,&quot;Gotohome&quot;) %&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>135、如何限制一个动作的类型为GET或POST?</p><p>我们可以给MVC的动作一个HttpGet或HttpPost属性去限制HTTP的类型。</p><p>136、在MVC中如何保持Sessions?</p><p>可以通过三种方式保持： tempdata, viewdata, 和viewbag。</p><p>137、tempdata, viewdata, 和 viewbag之间有什么不同?</p><p>Tempdata -在不同的控制器或动作间转换时保持数据。另外，进行页面转向时，tempdata可以保持数据。它 是一个内部的Session变量。</p><p>Viewdata - 可以在控制器和视图间保持数据。</p><p>ViewBag - 它是视图数据的动态包装。使用Viewbag不需要类型转换。它使用的是内部动态关健词。</p><p>138、MVC是的局部视图是什么?</p><p>局部视图是一个可重复调用的视图（和用户控件一样），它可以嵌入到视图里面。</p><p>139、ASP.NET MVC是如何运行的？</p><p>当一个用户请求提交上来后，ASP.NET MVC会针对当前请求实施路由解析，解析的目标就是找到用户需要的 Controller并激活它，执行对应的Action方法，最终返回用户需要的东西。</p><p>也就是说，当ASP.NET MVC接收到抵达的请求后，首要任务就是通过该请求解析得到对应的Controller和 Action名称，那么它是如何解析的呢？这就要了解一下Asp.Net MVC的路由系统了。</p><p>140、什么是ASP.NET MVC？</p><p>一句话概括：ASP.NET MVC就是建立在ASP.NET平台上，基于MVC模式的，Web应用框架。</p><p>详细点说：ASP.NET平台采用管道式设计，具有良好的扩展性。整个ASP.NET MVC框架就是通过自定义 ASP.NET的HttpModule和HttpHandler这两个核心组件而建立的。 注：MVC中的Model主要体现为维持应用状态并提供业务功能，但ASP.NET MVC中的Model与之是不同的，后者 仅仅是绑定到View上的数据而已，两者并不是一回事，在学习理解过程中要格外注意，不要混淆。</p>`,210),l=[i];function t(r,d){return p(),n("div",null,l)}const u=s(e,[["render",t],["__file","interviewHandbook2.html.vue"]]),v=JSON.parse('{"path":"/interview/interviewHandbook2.html","title":"面试宝典2","lang":"zh-CN","frontmatter":{"title":"面试宝典2","lang":"zh-CN","date":"2023-07-23T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":false,"order":199,"category":["面试"],"tag":["经验"],"filename":"interviewHandbook","level":0,"docsId":"8f88973d-b1ad-4dba-9b16-d48478485017","article":false,"description":"70、触发器的作用？ 触发器是一中特殊的存储过程，主要是通过事件来触发而被执行的。它可以强化约束，来维护数据的完整性和一致性，可以跟踪数据库内的操作从而不允许未经许可的更新和变化。可以联级运算。如，某表上的触发器上包含对另一个表的数据操作，而该操作又会导致该表触发器被触发。 71、索引的作用？和它的优点缺点是什么？ 索引就一种特殊的查询表，数据库的搜索...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/interview/interviewHandbook2.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"面试宝典2"}],["meta",{"property":"og:description","content":"70、触发器的作用？ 触发器是一中特殊的存储过程，主要是通过事件来触发而被执行的。它可以强化约束，来维护数据的完整性和一致性，可以跟踪数据库内的操作从而不允许未经许可的更新和变化。可以联级运算。如，某表上的触发器上包含对另一个表的数据操作，而该操作又会导致该表触发器被触发。 71、索引的作用？和它的优点缺点是什么？ 索引就一种特殊的查询表，数据库的搜索..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-09T15:10:09.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"经验"}],["meta",{"property":"article:published_time","content":"2023-07-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-09T15:10:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"面试宝典2\\",\\"description\\":\\"70、触发器的作用？ 触发器是一中特殊的存储过程，主要是通过事件来触发而被执行的。它可以强化约束，来维护数据的完整性和一致性，可以跟踪数据库内的操作从而不允许未经许可的更新和变化。可以联级运算。如，某表上的触发器上包含对另一个表的数据操作，而该操作又会导致该表触发器被触发。 71、索引的作用？和它的优点缺点是什么？ 索引就一种特殊的查询表，数据库的搜索...\\"}"]]},"headers":[],"git":{"createdTime":1691942301000,"updatedTime":1694272209000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":20.67,"words":6202},"filePathRelative":"interview/interviewHandbook2.md","localizedDate":"2023年7月23日","excerpt":"<p>70、触发器的作用？</p>\\n<p>触发器是一中特殊的存储过程，主要是通过事件来触发而被执行的。它可以强化约束，来维护数据的完整性和一致性，可以跟踪数据库内的操作从而不允许未经许可的更新和变化。可以联级运算。如，某表上的触发器上包含对另一个表的数据操作，而该操作又会导致该表触发器被触发。</p>\\n<p>71、索引的作用？和它的优点缺点是什么？</p>\\n<p>索引就一种特殊的查询表，数据库的搜索引擎可以利用它加速对数据的检索。它很类似与现实生活中书的目录，不需要查询整本书内容就可以找到想要的数据。索引可以是唯一的，创建索引允许指定单个列或者是多个列。缺点是它减慢了数据录入的速度，同时也增加了数据库的尺寸大小。</p>","autoDesc":true}');export{u as comp,v as data};
