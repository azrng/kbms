import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as p,c as o,b as n,e as s,f as c,d as i}from"./app-D8HBJYTp.js";const l="/kbms/common/1651493417656-6035a112-e28b-4145-92a3-d0093917480f.png",u={},r=i(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>前面的篇章介绍中，一些基础配置如API资源、客户端资源等数据以及使用过程中发放的令牌等操作数据，我们都是通过将操作数据和配置数据存储在内存中进行实现的，而在实际开发生产中，我们需要考虑如何处理数据持久化呢？ 这时「IdentityServer4」具有良好的扩展性，其中一个可扩展点是用于「IdentityServer」所需数据的存储机制，进行持久化操作。 下面将如何配置「IdentityServer」以使用「EntityFramework」（EF）作为此数据的存储机制把这些数据存储到「MySql」数据库， 这样更符合我们实际生产环境的需求。</p><h2 id="_8-数据持久化" tabindex="-1"><a class="header-anchor" href="#_8-数据持久化"><span>8. 数据持久化</span></a></h2><p>在我们的 「IdentityServer4」中官方定义的两个上下文，是有两种类型的数据需要持久化到数据库中</p><blockquote><p>1、「配置数据」（资源、客户端、身份）；//这里是对应配置上下文 「ConfigurationDbContext」 2、「IdentityServer」在使用时产生的 「操作数据」（令牌，代码和用户的授权信息consents）；//这里是对应操作上下文 「PersistedGrantDbContext」</p></blockquote><p>「这两个上下文以及对应的数据模型，已经被 IdentityServer4 官方给封装好了」， 我们不需要做额外的操作，直接进行迁移即可使用。</p><h3 id="_8-1-configurationdb" tabindex="-1"><a class="header-anchor" href="#_8-1-configurationdb"><span>8.1 ConfigurationDb</span></a></h3><p>ConfigurationDbContext (IdentityServer configuration data) —— 负责数据库中对客户端、资源和 CORS 设置的配置存储； 如果需要从 EF 支持的数据库加载客户端、标识资源、API 资源或 CORS 数据 (而不是使用内存中配置)， 则可以使用配置存储。此支持提供 IClientStore、IResura Store 和 ICorsPolicyService 扩展性点的实现。这些实现使用名为 ConfigurationDbContext 的 「dbcontext」 派生类对数据库中的表进行建模。</p><h3 id="_8-2-persistedgrantdb" tabindex="-1"><a class="header-anchor" href="#_8-2-persistedgrantdb"><span>8.2 PersistedGrantDb</span></a></h3><p>PersistedGrantDbContext (IdentityServer operational data.) -—— 负责存储同意、授权代码、刷新令牌和引用令牌； 如果需要从 EF 支持的数据库 (而不是默认的内存数据库) 加载授权授予、同意和令牌 (刷新和引用)， 则可以使用操作存储。此支持提供了 IPersistedGrantStore 扩展点的实现。实现使用名为 PersistedGrantDbContext 的 「dbcontext」 派生类对数据库中的表进行建模。</p><h3 id="_8-3-实践" tabindex="-1"><a class="header-anchor" href="#_8-3-实践"><span>8.3 实践</span></a></h3><h4 id="_8-3-1-新建站点" tabindex="-1"><a class="header-anchor" href="#_8-3-1-新建站点"><span>8.3.1 新建站点</span></a></h4><p>建立一个MVC的Asp.Net Core项目 ，使用MVC模板</p><h4 id="_8-3-2-nuget包" tabindex="-1"><a class="header-anchor" href="#_8-3-2-nuget包"><span>8.3.2 Nuget包</span></a></h4><p>IdentityServer4.EntityFramework以及EF相关包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;IdentityServer4&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;4.1.2&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;IdentityServer4.AspNetIdentity&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;4.1.2&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;IdentityServer4.EntityFramework&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;4.1.2&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为本文中使用的是MySql数据库，所以需要安装对应的EF程序包对数据库的支持。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Pomelo.EntityFrameworkCore.MySql&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;6.0.1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_8-3-3-数据库上下文" tabindex="-1"><a class="header-anchor" href="#_8-3-3-数据库上下文"><span>8.3.3 数据库上下文</span></a></h4><p>appsettings.json</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token string">&quot;ConnectionStrings&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;ConfigurationConnection&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;server=localhost;userid=root;pwd=123456;port=5433;database=sso_config;sslmode=none;&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;PersistedGrantConnection&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;server=localhost;userid=root;pwd=123456;port=5433;database=sso_persisted;sslmode=none;&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置连接数据库</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> configurationConnectionString <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">GetConnectionString</span><span class="token punctuation">(</span><span class="token string">&quot;ConfigurationConnection&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> persistedGrantConnectionString <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">GetConnectionString</span><span class="token punctuation">(</span><span class="token string">&quot;PersistedGrantConnection&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>配置数据库服务</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConfigureServices</span><span class="token punctuation">(</span><span class="token class-name">IServiceCollection</span> services<span class="token punctuation">,</span> <span class="token class-name">IConfiguration</span> configuration<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    services<span class="token punctuation">.</span><span class="token function">AddControllersWithViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">var</span></span> configurationConnectionString <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">GetConnectionString</span><span class="token punctuation">(</span><span class="token string">&quot;ConfigurationConnection&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> persistedGrantConnectionString <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">GetConnectionString</span><span class="token punctuation">(</span><span class="token string">&quot;PersistedGrantConnection&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> services<span class="token punctuation">.</span><span class="token function">AddIdentityServer</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        options<span class="token punctuation">.</span>Events<span class="token punctuation">.</span>RaiseErrorEvents <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        options<span class="token punctuation">.</span>Events<span class="token punctuation">.</span>RaiseInformationEvents <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        options<span class="token punctuation">.</span>Events<span class="token punctuation">.</span>RaiseFailureEvents <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        options<span class="token punctuation">.</span>Events<span class="token punctuation">.</span>RaiseSuccessEvents <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

        <span class="token comment">//配置认证地址，本地就这么写，生产环境需要改为外网地址或者域名</span>
        <span class="token comment">//options.IssuerUri = &quot;http://localhost:5014&quot;;</span>

        <span class="token comment">// see https://identityserver4.readthedocs.io/en/latest/topics/resources.html</span>
        options<span class="token punctuation">.</span>EmitStaticAudienceClaim <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddConfigurationStore</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// 配置文件（客户端和资源）负责数据库中对客户端、资源和 CORS 设置的配置存储</span>
            options<span class="token punctuation">.</span>ConfigureDbContext <span class="token operator">=</span> builder <span class="token operator">=&gt;</span> builder<span class="token punctuation">.</span><span class="token function">UseMySql</span><span class="token punctuation">(</span>configurationConnectionString<span class="token punctuation">,</span> ServerVersion<span class="token punctuation">.</span><span class="token function">AutoDetect</span><span class="token punctuation">(</span>configurationConnectionString<span class="token punctuation">)</span><span class="token punctuation">,</span>
                sql <span class="token operator">=&gt;</span> sql<span class="token punctuation">.</span><span class="token function">MigrationsAssembly</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">SeedData</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Assembly<span class="token punctuation">.</span>FullName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">// 操作记录到数据库 负责存储同意、授权代码、刷新令牌和引用令牌</span>
        <span class="token punctuation">.</span><span class="token function">AddOperationalStore</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            options<span class="token punctuation">.</span>ConfigureDbContext <span class="token operator">=</span> builder <span class="token operator">=&gt;</span> builder<span class="token punctuation">.</span><span class="token function">UseMySql</span><span class="token punctuation">(</span>persistedGrantConnectionString<span class="token punctuation">,</span> ServerVersion<span class="token punctuation">.</span><span class="token function">AutoDetect</span><span class="token punctuation">(</span>persistedGrantConnectionString<span class="token punctuation">)</span><span class="token punctuation">,</span>
                                    sql <span class="token operator">=&gt;</span> sql<span class="token punctuation">.</span><span class="token function">MigrationsAssembly</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">SeedData</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Assembly<span class="token punctuation">.</span>FullName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 自动清理token</span>
            options<span class="token punctuation">.</span>EnableTokenCleanup <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token comment">//自动清理token间隔</span>
            options<span class="token punctuation">.</span>TokenCleanupInterval <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddTestUsers</span><span class="token punctuation">(</span>TestUsers<span class="token punctuation">.</span><span class="token function">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// not recommended for production - you need to store your key material somewhere secure</span>
    builder<span class="token punctuation">.</span><span class="token function">AddDeveloperSigningCredential</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 配置cookie策略  必须添加</span>
    services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Configure</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>CookiePolicyOptions<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span> options<span class="token punctuation">.</span>MinimumSameSitePolicy <span class="token operator">=</span> SameSiteMode<span class="token punctuation">.</span>Lax<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_8-3-4-迁移数据" tabindex="-1"><a class="header-anchor" href="#_8-3-4-迁移数据"><span>8.3.4 迁移数据</span></a></h4><p>关于如何生成迁移文件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">add</span><span class="token operator">-</span>migration InitialIdentityServerConfigurationDbMigration <span class="token operator">-</span>c ConfigurationDbContext <span class="token operator">-</span>o Data<span class="token operator">/</span>Migrations<span class="token operator">/</span>IdentityServer<span class="token operator">/</span>ConfigurationDb

<span class="token keyword">add</span><span class="token operator">-</span>migration InitialIdentityServerPersistedGrantDbMigration <span class="token operator">-</span>c PersistedGrantDbContext <span class="token operator">-</span>o Data<span class="token operator">/</span>Migrations<span class="token operator">/</span>IdentityServer<span class="token operator">/</span>PersistedGrantDb

<span class="token operator">--</span> 如果要立即生成数据库
update<span class="token operator">-</span>database <span class="token operator">-</span>c PersistedGrantDbContext
update<span class="token operator">-</span>database <span class="token operator">-</span>c ConfigurationDbContext
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置项目启动的时候初始化数据</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 初始化数据</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">SeedData</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 确定初始化数据</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>serviceProvider<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">EnsureSeedData</span><span class="token punctuation">(</span><span class="token class-name">IServiceProvider</span> serviceProvider<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Seeding database...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> scope <span class="token operator">=</span> serviceProvider<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRequiredService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IServiceScopeFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">CreateScope</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        scope<span class="token punctuation">.</span>ServiceProvider<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>PersistedGrantDbContext<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">?.</span>Database<span class="token punctuation">.</span><span class="token function">Migrate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> context <span class="token operator">=</span> scope<span class="token punctuation">.</span>ServiceProvider<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRequiredService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ConfigurationDbContext<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        context<span class="token punctuation">.</span>Database<span class="token punctuation">.</span><span class="token function">Migrate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">EnsureSeedData</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>

        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Done seeding database.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">EnsureSeedData</span><span class="token punctuation">(</span><span class="token class-name">ConfigurationDbContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>context<span class="token punctuation">.</span>Clients<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Log<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token string">&quot;Clients being populated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> client <span class="token keyword">in</span> IdentityConfig<span class="token punctuation">.</span><span class="token function">GetClients</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                context<span class="token punctuation">.</span>Clients<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">ToEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            context<span class="token punctuation">.</span><span class="token function">SaveChanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            Log<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token string">&quot;Clients already populated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>context<span class="token punctuation">.</span>IdentityResources<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Log<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token string">&quot;IdentityResources being populated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> resource <span class="token keyword">in</span> IdentityConfig<span class="token punctuation">.</span>IdentityResources<span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                context<span class="token punctuation">.</span>IdentityResources<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">ToEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            context<span class="token punctuation">.</span><span class="token function">SaveChanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            Log<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token string">&quot;IdentityResources already populated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>context<span class="token punctuation">.</span>ApiScopes<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Log<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token string">&quot;ApiScopes being populated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> resource <span class="token keyword">in</span> IdentityConfig<span class="token punctuation">.</span><span class="token function">GetApiScopes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                context<span class="token punctuation">.</span>ApiScopes<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">ToEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            context<span class="token punctuation">.</span><span class="token function">SaveChanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            Log<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token string">&quot;ApiScopes already populated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>context<span class="token punctuation">.</span>ApiResources<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Log<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token string">&quot;ApiResources being populated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> resource <span class="token keyword">in</span> IdentityConfig<span class="token punctuation">.</span>ApiResources<span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                context<span class="token punctuation">.</span>ApiResources<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">ToEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            context<span class="token punctuation">.</span><span class="token function">SaveChanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            Log<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token string">&quot;ApiResources already populated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行时机</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> app <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
SeedData<span class="token punctuation">.</span><span class="token function">EnsureSeedData</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>Services<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_8-3-5-显示数据库" tabindex="-1"><a class="header-anchor" href="#_8-3-5-显示数据库"><span>8.3.5 显示数据库</span></a></h4><p>项目启动会自动生成数据库并将之前内存配置的东西初始化到数据库中。 <img src="`+l+'" alt="image.png" loading="lazy"> 使用之前的客户端程序调用项目正常。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><ol><li>简单介绍了「IdentityServer4」持久化存储机制相关配置和操作数据，实现了数据迁移,及应用程序的实践。</li><li>本篇未对用户进行持久化操作存储说明，因为「IdentityServer4」本就支持了接入其他认证方式，所以自己根据需要进行合理「扩展」的，比如我们可以使用 「Asp.Net Core 自带的 Identity」 身份认证机制来「实现扩展」</li></ol><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>',37),k={href:"https://mp.weixin.qq.com/s/eyzYr11wHwLdmz0xt8lY2Q",target:"_blank",rel:"noopener noreferrer"};function d(v,m){const a=e("ExternalLinkIcon");return p(),o("div",null,[r,n("p",null,[n("a",k,[s("https://mp.weixin.qq.com/s/eyzYr11wHwLdmz0xt8lY2Q"),c(a)]),s(" | IdentityServer4系列 | 支持数据持久化")])])}const h=t(u,[["render",d],["__file","shujuchijiuhua.html.vue"]]),y=JSON.parse('{"path":"/middleware/authorize/identityserver4/shujuchijiuhua.html","title":"数据持久化","lang":"zh-CN","frontmatter":{"title":"数据持久化","lang":"zh-CN","date":"2023-10-19T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"shujuchijiuhua","slug":"tr3g75","docsId":"75757987","description":"前言 前面的篇章介绍中，一些基础配置如API资源、客户端资源等数据以及使用过程中发放的令牌等操作数据，我们都是通过将操作数据和配置数据存储在内存中进行实现的，而在实际开发生产中，我们需要考虑如何处理数据持久化呢？ 这时「IdentityServer4」具有良好的扩展性，其中一个可扩展点是用于「IdentityServer」所需数据的存储机制，进行持久化...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/authorize/identityserver4/shujuchijiuhua.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"数据持久化"}],["meta",{"property":"og:description","content":"前言 前面的篇章介绍中，一些基础配置如API资源、客户端资源等数据以及使用过程中发放的令牌等操作数据，我们都是通过将操作数据和配置数据存储在内存中进行实现的，而在实际开发生产中，我们需要考虑如何处理数据持久化呢？ 这时「IdentityServer4」具有良好的扩展性，其中一个可扩展点是用于「IdentityServer」所需数据的存储机制，进行持久化..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1651493417656-6035a112-e28b-4145-92a3-d0093917480f.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-16T05:03:06.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-16T05:03:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据持久化\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1651493417656-6035a112-e28b-4145-92a3-d0093917480f.png\\"],\\"datePublished\\":\\"2023-10-19T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-16T05:03:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"8. 数据持久化","slug":"_8-数据持久化","link":"#_8-数据持久化","children":[{"level":3,"title":"8.1 ConfigurationDb","slug":"_8-1-configurationdb","link":"#_8-1-configurationdb","children":[]},{"level":3,"title":"8.2 PersistedGrantDb","slug":"_8-2-persistedgrantdb","link":"#_8-2-persistedgrantdb","children":[]},{"level":3,"title":"8.3 实践","slug":"_8-3-实践","link":"#_8-3-实践","children":[{"level":4,"title":"8.3.1 新建站点","slug":"_8-3-1-新建站点","link":"#_8-3-1-新建站点","children":[]},{"level":4,"title":"8.3.2 Nuget包","slug":"_8-3-2-nuget包","link":"#_8-3-2-nuget包","children":[]},{"level":4,"title":"8.3.3 数据库上下文","slug":"_8-3-3-数据库上下文","link":"#_8-3-3-数据库上下文","children":[]},{"level":4,"title":"8.3.4 迁移数据","slug":"_8-3-4-迁移数据","link":"#_8-3-4-迁移数据","children":[]},{"level":4,"title":"8.3.5 显示数据库","slug":"_8-3-5-显示数据库","link":"#_8-3-5-显示数据库","children":[]}]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1708059786000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":4.51,"words":1352},"filePathRelative":"middleware/authorize/identityserver4/shujuchijiuhua.md","localizedDate":"2023年10月19日","excerpt":"<h2>前言</h2>\\n<p>前面的篇章介绍中，一些基础配置如API资源、客户端资源等数据以及使用过程中发放的令牌等操作数据，我们都是通过将操作数据和配置数据存储在内存中进行实现的，而在实际开发生产中，我们需要考虑如何处理数据持久化呢？\\n这时「IdentityServer4」具有良好的扩展性，其中一个可扩展点是用于「IdentityServer」所需数据的存储机制，进行持久化操作。\\n下面将如何配置「IdentityServer」以使用「EntityFramework」（EF）作为此数据的存储机制把这些数据存储到「MySql」数据库， 这样更符合我们实际生产环境的需求。</p>\\n<h2>8. 数据持久化</h2>","autoDesc":true}');export{h as comp,y as data};
