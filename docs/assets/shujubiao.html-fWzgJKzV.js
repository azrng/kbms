import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as e}from"./app-DMmdIwn0.js";const t={},p=e(`<h3 id="创建数据表" tabindex="-1"><a class="header-anchor" href="#创建数据表"><span>创建数据表</span></a></h3><p>通用语法： CREATE TABLE table_name (column_name column_type); 以下例子中我们将在runoob数据库中创建数据表runoob_tbl：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>chat.receptionist_buystatus<span class="token punctuation">\`</span></span>
<span class="token punctuation">(</span>
  <span class="token identifier"><span class="token punctuation">\`</span>buystatusId<span class="token punctuation">\`</span></span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;置忙状态ID&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;置忙名称&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>create_time<span class="token punctuation">\`</span></span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;添加时间&#39;</span><span class="token punctuation">,</span>
   <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>BuyStatusId<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token keyword">using</span> <span class="token keyword">BTREE</span>
<span class="token punctuation">)</span><span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token operator">=</span> utf8 <span class="token keyword">COLLATE</span> <span class="token operator">=</span> utf8_general_ci <span class="token keyword">COMMENT</span> <span class="token operator">=</span> <span class="token string">&#39;置忙状态表&#39;</span> ROW_FORMAT <span class="token operator">=</span> Dynamic<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实例解析： • 如果你不想字段为 NULL 可以设置字段的属性为 NOT NULL， 在操作数据库时如果输入该字段的数据为NULL ，就会报错。 • AUTO_INCREMENT定义列为自增的属性，一般用于主键，数值会自动加1。 • PRIMARY KEY关键字用于定义列为主键。 您可以使用多列来定义主键，列间以逗号分隔。 • ENGINE 设置存储引擎，CHARSET 设置编码。 插入数据 INSERT INTO table_name ( field1, field2,...fieldN )                       VALUES                       ( value1, value2,...valueN ); insert插入多条数据 INSERT INTO table_name  (field1, field2,...fieldN)  VALUES  (valueA1,valueA2,...valueAN),(valueB1,valueB2,...valueBN),(valueC1,valueC2,...valueCN)......; 更新数据 UPDATE table_name SET field1=new-value1, field2=new-value2 [WHERE Clause] 查询数据 SELECT column_name,column_name FROM table_name [WHERE Clause] [LIMIT N][ OFFSET M] 删除数据表 DROP TABLE table_name ;  删除表内全部数据和表结构，立刻释放资源，不管是 Innodb 和 MyISAM; Truncatr table  student;        删除表内全部数据，保留表结构，立刻释放磁盘空间，不管是 Innodb 和 MyISAM; delete from table_nam； 删除表全部数据，表结构不变，对于 MyISAM 会立刻释放磁盘空间，InnoDB 不会释放磁盘空间; 1、当你不再需要该表时， 用 drop; 2、当你仍要保留该表，但要删除所有记录时， 用 truncate; 3、当你要删除部分记录时， 用 delete。 显示指定数据库中的所有表 SHOW TABLES 显示数据表的属性，属性类型，主键信息 ，是否为 NULL，默认值等其他信息</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>SHOW COLUMNS FROM 数据表
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示数据表的详细索引信息，包括PRIMARY KEY（主键） SHOW INDEX FROM 数据表 输出Mysql数据库管理系统的性能及统计信息。 SHOW TABLE STATUS LIKE [FROM db_name] [LIKE &#39;pattern&#39;] \\G:   删除表内数据用 delete。格式为： delete from 表名 where 删除条件; 实例：删除学生表内姓名为张三的记录。 delete from  student where  T_name = &quot;张三&quot;;</p><p>查询数据中的表</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>show tables from 数据库名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>获取指定数据库下所有的表以及备注</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name">SELECT</span>
    TABLE_NAME<span class="token punctuation">,</span>
    TABLE_COMMENT
FROM
    information_schema<span class="token punctuation">.</span>\`TABLES\`
<span class="token class-name">WHERE</span>
    TABLE_SCHEMA <span class="token operator">=</span> &#39;db_name&#39;<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取指定数据库下指定表的详细信息</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>SELECT
    TABLE_SCHEMA AS &#39;库名&#39;<span class="token punctuation">,</span>
    TABLE_NAME AS &#39;表名&#39;<span class="token punctuation">,</span>
    COLUMN_NAME AS &#39;列名&#39;<span class="token punctuation">,</span>
    ORDINAL_POSITION AS &#39;列的排列顺序&#39;<span class="token punctuation">,</span>
    COLUMN_DEFAULT AS &#39;默认值&#39;<span class="token punctuation">,</span>
    IS_NULLABLE AS &#39;是否为空&#39;<span class="token punctuation">,</span>
    DATA_TYPE AS &#39;数据类型&#39;<span class="token punctuation">,</span>
    CHARACTER_MAXIMUM_LENGTH AS &#39;字符最大长度&#39;<span class="token punctuation">,</span>
    NUMERIC_PRECISION AS &#39;数值精度<span class="token punctuation">(</span>最大位数<span class="token punctuation">)</span>&#39;<span class="token punctuation">,</span>
    NUMERIC_SCALE AS &#39;小数精度&#39;<span class="token punctuation">,</span>
    COLUMN_TYPE AS &#39;列类型&#39;<span class="token punctuation">,</span>
    COLUMN_KEY &#39;KEY&#39;<span class="token punctuation">,</span>
    EXTRA AS &#39;额外说明&#39;<span class="token punctuation">,</span>
    COLUMN_COMMENT AS &#39;注释&#39;
FROM
    information_schema<span class="token punctuation">.</span>\`COLUMNS\`
<span class="token class-name">WHERE</span>
    TABLE_SCHEMA <span class="token operator">=</span> &#39;test&#39; <span class="token keyword">and</span> TABLE_NAME<span class="token operator">=</span>&#39;user&#39; 
ORDER <span class="token class-name">BY</span>
    ORDINAL_POSITION<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),o=[p];function l(c,i){return s(),a("div",null,o)}const d=n(t,[["render",l],["__file","shujubiao.html.vue"]]),k=JSON.parse('{"path":"/dataBase/mysql/jichuzhishi/shujubiao.html","title":"数据表","lang":"zh-CN","frontmatter":{"title":"数据表","lang":"zh-CN","date":"2022-09-30T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"filename":"shujubiao","slug":"wqzuii","docsId":"60505017","description":"创建数据表 通用语法： CREATE TABLE table_name (column_name column_type); 以下例子中我们将在runoob数据库中创建数据表runoob_tbl： 实例解析： • 如果你不想字段为 NULL 可以设置字段的属性为 NOT NULL， 在操作数据库时如果输入该字段的数据为NULL ，就会报错。 • AUT...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/mysql/jichuzhishi/shujubiao.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"数据表"}],["meta",{"property":"og:description","content":"创建数据表 通用语法： CREATE TABLE table_name (column_name column_type); 以下例子中我们将在runoob数据库中创建数据表runoob_tbl： 实例解析： • 如果你不想字段为 NULL 可以设置字段的属性为 NOT NULL， 在操作数据库时如果输入该字段的数据为NULL ，就会报错。 • AUT..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-23T15:53:24.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-09-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-23T15:53:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据表\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-23T15:53:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":3,"title":"创建数据表","slug":"创建数据表","link":"#创建数据表","children":[]}],"git":{"createdTime":1695484404000,"updatedTime":1695484404000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":2.46,"words":737},"filePathRelative":"dataBase/mysql/jichuzhishi/shujubiao.md","localizedDate":"2022年9月30日","excerpt":"<h3>创建数据表</h3>\\n<p>通用语法：\\nCREATE TABLE table_name (column_name column_type);\\n以下例子中我们将在runoob数据库中创建数据表runoob_tbl：</p>\\n<div class=\\"language-sql\\" data-ext=\\"sql\\" data-title=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">CREATE</span> <span class=\\"token keyword\\">TABLE</span> <span class=\\"token keyword\\">IF</span> <span class=\\"token operator\\">NOT</span> <span class=\\"token keyword\\">EXISTS</span> <span class=\\"token identifier\\"><span class=\\"token punctuation\\">`</span>chat.receptionist_buystatus<span class=\\"token punctuation\\">`</span></span>\\n<span class=\\"token punctuation\\">(</span>\\n  <span class=\\"token identifier\\"><span class=\\"token punctuation\\">`</span>buystatusId<span class=\\"token punctuation\\">`</span></span> <span class=\\"token keyword\\">bigint</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">20</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">not</span> <span class=\\"token boolean\\">null</span> <span class=\\"token keyword\\">COMMENT</span> <span class=\\"token string\\">\'置忙状态ID\'</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token identifier\\"><span class=\\"token punctuation\\">`</span>name<span class=\\"token punctuation\\">`</span></span> <span class=\\"token keyword\\">VARCHAR</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">20</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">not</span> <span class=\\"token boolean\\">null</span> <span class=\\"token keyword\\">COMMENT</span> <span class=\\"token string\\">\'置忙名称\'</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token identifier\\"><span class=\\"token punctuation\\">`</span>create_time<span class=\\"token punctuation\\">`</span></span> <span class=\\"token keyword\\">bigint</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">20</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">not</span> <span class=\\"token boolean\\">null</span> <span class=\\"token keyword\\">COMMENT</span> <span class=\\"token string\\">\'添加时间\'</span><span class=\\"token punctuation\\">,</span>\\n   <span class=\\"token keyword\\">PRIMARY</span> <span class=\\"token keyword\\">KEY</span><span class=\\"token punctuation\\">(</span><span class=\\"token identifier\\"><span class=\\"token punctuation\\">`</span>BuyStatusId<span class=\\"token punctuation\\">`</span></span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">using</span> <span class=\\"token keyword\\">BTREE</span>\\n<span class=\\"token punctuation\\">)</span><span class=\\"token keyword\\">ENGINE</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">InnoDB</span> <span class=\\"token keyword\\">CHARACTER</span> <span class=\\"token keyword\\">SET</span> <span class=\\"token operator\\">=</span> utf8 <span class=\\"token keyword\\">COLLATE</span> <span class=\\"token operator\\">=</span> utf8_general_ci <span class=\\"token keyword\\">COMMENT</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\'置忙状态表\'</span> ROW_FORMAT <span class=\\"token operator\\">=</span> Dynamic<span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,k as data};
