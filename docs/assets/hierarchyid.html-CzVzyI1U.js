import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as e,c as o,b as s,e as n,f as c,d as i}from"./app-Bfb6-vFH.js";const l={},u=i(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>HierarchyId是一种长度可变的Sql Server数据类型，它能存储带有层次结构的数据。 HierarchyId数据类型的值可以直接表示树层次结构中的位置，例如：</p><table><thead><tr><th>Id</th><th>Name</th></tr></thead><tbody><tr><td>/</td><td>总公司</td></tr><tr><td>/1/</td><td>分公司1</td></tr><tr><td>/2/</td><td>分公司2</td></tr><tr><td>/1/1/</td><td>部门A</td></tr><tr><td>/1/1/1/</td><td>小组X</td></tr><tr><td>/1/1/2/</td><td>小组Y</td></tr></tbody></table><p>HierarchyId可以使用下列函数:</p><ul><li>**GetAncestor **：取得第n个祖先</li><li><strong>GetDescendant</strong> ：取得第n个子节点</li><li>**GetLevel **：取得级别</li><li><strong>GetRoot</strong> ：取得根</li><li><strong>Parse</strong> ：将字符串转换为HierarchyId</li><li><strong>ToString</strong> ：将HierarchyId转换为字符串，与parse正好相反</li></ul><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>执行下列Sql，在数据库中建表：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>create <span class="token return-type class-name">table</span> <span class="token function">Organizations</span><span class="token punctuation">(</span>
 Id hierarchyid <span class="token class-name">primary</span> key<span class="token punctuation">,</span>
 <span class="token return-type class-name">Name</span> <span class="token function">nvarchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建控制台应用程序，然后引用nuget包EntityFrameworkCore.SqlServer.HierarchyId。</p><p>新建Organization.cs，代码如下：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Organization</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">HierarchyId</span> Id  <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建DemoContext.cs，代码如下：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoContext</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">DbContext</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DbSet<span class="token punctuation">&lt;</span>Organization<span class="token punctuation">&gt;</span></span> Organizations <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnConfiguring</span><span class="token punctuation">(</span><span class="token class-name">DbContextOptionsBuilder</span> optionsBuilder<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">string</span></span> connectionString <span class="token operator">=</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">;</span>
        optionsBuilder<span class="token punctuation">.</span><span class="token function">UseSqlServer</span><span class="token punctuation">(</span>connectionString<span class="token punctuation">,</span> config <span class="token operator">=&gt;</span> config<span class="token punctuation">.</span><span class="token function">UseHierarchyId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用config.UseHierarchyId()开启HierarchyId映射。现在，我们可以对HierarchyId数据类型进行操作了。 代码如下：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//增</span>
<span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DemoContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    db<span class="token punctuation">.</span>Organizations<span class="token punctuation">.</span><span class="token function">AddRange</span><span class="token punctuation">(</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Organization</span> <span class="token punctuation">{</span> Id<span class="token operator">=</span> HierarchyId<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Name<span class="token operator">=</span> <span class="token string">&quot;总公司&quot;</span> <span class="token punctuation">}</span>
            <span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Organization</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> HierarchyId<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;/1/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;分公司1&quot;</span> <span class="token punctuation">}</span>
            <span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Organization</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> HierarchyId<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;/2/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;分公司2&quot;</span> <span class="token punctuation">}</span>
            <span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Organization</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> HierarchyId<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;/1/1/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;部门A&quot;</span> <span class="token punctuation">}</span>
            <span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Organization</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> HierarchyId<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;/1/1/1/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;小组X&quot;</span> <span class="token punctuation">}</span>
            <span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Organization</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> HierarchyId<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;/1/1/2/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;小组Y&quot;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

    db<span class="token punctuation">.</span><span class="token function">SaveChanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//删除分公司2</span>
<span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DemoContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    db<span class="token punctuation">.</span>Organizations<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>Organizations<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>p <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span>Id <span class="token operator">==</span> HierarchyId<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;/2/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    db<span class="token punctuation">.</span><span class="token function">SaveChanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//修改小组名称</span>
<span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DemoContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> team <span class="token operator">=</span> db<span class="token punctuation">.</span>Organizations<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>p <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span>Id <span class="token operator">==</span> HierarchyId<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;/1/1/1/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    team<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Team1&quot;</span><span class="token punctuation">;</span>

    team <span class="token operator">=</span> db<span class="token punctuation">.</span>Organizations<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>p <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span>Id <span class="token operator">==</span> HierarchyId<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;/1/1/2/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    team<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Team2&quot;</span><span class="token punctuation">;</span>

    db<span class="token punctuation">.</span><span class="token function">SaveChanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//查询分公司1下的所有小组</span>
<span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DemoContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> organizations<span class="token operator">=</span>  db<span class="token punctuation">.</span>Organizations<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>p <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span>Id<span class="token punctuation">.</span><span class="token function">GetLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">3</span> 
        <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span>Id<span class="token punctuation">.</span><span class="token function">GetAncestor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">==</span> HierarchyId<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;/1/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span>p<span class="token operator">=&gt;</span>p<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> organization <span class="token keyword">in</span> organizations<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">@$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">organization<span class="token punctuation">.</span>Id</span><span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">organization<span class="token punctuation">.</span>Name</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,16),r={href:"https://mp.weixin.qq.com/s/72Vmgr95s4olzgRpVxw-KA",target:"_blank",rel:"noopener noreferrer"};function k(d,m){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,s("p",null,[n("HierarchyId数据类型详情请参看官方文档：https://docs.microsoft.com/zh-cn/sql/relational-databases/hierarchical-data-sql-server?view=sql-server-ver15 "),s("a",r,[n("https://mp.weixin.qq.com/s/72Vmgr95s4olzgRpVxw-KA"),c(a)]),n(" | 使用EF Core操作层次结构数据")])])}const h=t(l,[["render",k],["__file","hierarchyid.html.vue"]]),b=JSON.parse('{"path":"/dataBase/sqlserver/base/hierarchyid.html","title":"HierarchyId","lang":"zh-CN","frontmatter":{"title":"HierarchyId","lang":"zh-CN","date":"2023-09-23T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"filename":"hierarchyid","slug":"xl3p5a","docsId":"66865487","description":"概述 HierarchyId是一种长度可变的Sql Server数据类型，它能存储带有层次结构的数据。 HierarchyId数据类型的值可以直接表示树层次结构中的位置，例如： HierarchyId可以使用下列函数: **GetAncestor **：取得第n个祖先 GetDescendant ：取得第n个子节点 **GetLevel **：取得级别...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/sqlserver/base/hierarchyid.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"HierarchyId"}],["meta",{"property":"og:description","content":"概述 HierarchyId是一种长度可变的Sql Server数据类型，它能存储带有层次结构的数据。 HierarchyId数据类型的值可以直接表示树层次结构中的位置，例如： HierarchyId可以使用下列函数: **GetAncestor **：取得第n个祖先 GetDescendant ：取得第n个子节点 **GetLevel **：取得级别..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-14T10:39:38.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-14T10:39:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HierarchyId\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-14T10:39:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1695484404000,"updatedTime":1702550378000,"contributors":[{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":1.64,"words":492},"filePathRelative":"dataBase/sqlserver/base/hierarchyid.md","localizedDate":"2023年9月23日","excerpt":"<h2>概述</h2>\\n<p>HierarchyId是一种长度可变的Sql Server数据类型，它能存储带有层次结构的数据。\\nHierarchyId数据类型的值可以直接表示树层次结构中的位置，例如：</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Id</th>\\n<th>Name</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>/</td>\\n<td>总公司</td>\\n</tr>\\n<tr>\\n<td>/1/</td>\\n<td>分公司1</td>\\n</tr>\\n<tr>\\n<td>/2/</td>\\n<td>分公司2</td>\\n</tr>\\n<tr>\\n<td>/1/1/</td>\\n<td>部门A</td>\\n</tr>\\n<tr>\\n<td>/1/1/1/</td>\\n<td>小组X</td>\\n</tr>\\n<tr>\\n<td>/1/1/2/</td>\\n<td>小组Y</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{h as comp,b as data};
