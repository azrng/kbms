import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-DMmdIwn0.js";const p={},o=t(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>GUI.CS是一个非常棒的控制台UI工具包。它提供了一个功能完善的工具箱，开发人员可以使用它构建早期控制台常见的一种用户界面。</p><h2 id="空间" tabindex="-1"><a class="header-anchor" href="#空间"><span>空间</span></a></h2><p>提供了以下控件</p><ul><li>Buttons</li><li>Labels</li><li>Text Entry</li><li>Text View</li><li>User Inputs</li><li>Windows</li><li>Menus</li><li>ScrollBars</li></ul><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Terminal<span class="token punctuation">.</span>Gui</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> Main <span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Application<span class="token punctuation">.</span>Init <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> top <span class="token operator">=</span> Application<span class="token punctuation">.</span>Top<span class="token punctuation">;</span>

    <span class="token comment">// 创建顶级窗体</span>
        <span class="token class-name"><span class="token keyword">var</span></span> win <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Window</span> <span class="token punctuation">(</span><span class="token string">&quot;MyApp&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        X <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
        Y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 预留菜单行</span>

        <span class="token comment">// 使用Dim.Fill(), 它可以自动调整窗体大小，实现自适应，而无需手动敢于</span>
        Width <span class="token operator">=</span> Dim<span class="token punctuation">.</span>Fill <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        Height <span class="token operator">=</span> Dim<span class="token punctuation">.</span>Fill <span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
        top<span class="token punctuation">.</span>Add <span class="token punctuation">(</span>win<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 创建一个菜单</span>
        <span class="token class-name"><span class="token keyword">var</span></span> menu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MenuBar</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">MenuBarItem <span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MenuBarItem</span> <span class="token punctuation">(</span><span class="token string">&quot;_File&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MenuItem <span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MenuItem</span> <span class="token punctuation">(</span><span class="token string">&quot;_New&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Creates new file&quot;</span><span class="token punctuation">,</span> NewFile<span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MenuItem</span> <span class="token punctuation">(</span><span class="token string">&quot;_Close&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Close <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MenuItem</span> <span class="token punctuation">(</span><span class="token string">&quot;_Quit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Quit <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> top<span class="token punctuation">.</span>Running <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MenuBarItem</span> <span class="token punctuation">(</span><span class="token string">&quot;_Edit&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MenuItem <span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MenuItem</span> <span class="token punctuation">(</span><span class="token string">&quot;_Copy&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MenuItem</span> <span class="token punctuation">(</span><span class="token string">&quot;C_ut&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MenuItem</span> <span class="token punctuation">(</span><span class="token string">&quot;_Paste&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        top<span class="token punctuation">.</span>Add <span class="token punctuation">(</span>menu<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">var</span></span> login <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Label</span> <span class="token punctuation">(</span><span class="token string">&quot;Login: &quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> X <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> Y <span class="token operator">=</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> password <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Label</span> <span class="token punctuation">(</span><span class="token string">&quot;Password: &quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            X <span class="token operator">=</span> Pos<span class="token punctuation">.</span>Left <span class="token punctuation">(</span>login<span class="token punctuation">)</span><span class="token punctuation">,</span>
        Y <span class="token operator">=</span> Pos<span class="token punctuation">.</span>Top <span class="token punctuation">(</span>login<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> loginText <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TextField</span> <span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                X <span class="token operator">=</span> Pos<span class="token punctuation">.</span>Right <span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">,</span>
                Y <span class="token operator">=</span> Pos<span class="token punctuation">.</span>Top <span class="token punctuation">(</span>login<span class="token punctuation">)</span><span class="token punctuation">,</span>
                Width <span class="token operator">=</span> <span class="token number">40</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> passText <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TextField</span> <span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Secret <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                X <span class="token operator">=</span> Pos<span class="token punctuation">.</span>Left <span class="token punctuation">(</span>loginText<span class="token punctuation">)</span><span class="token punctuation">,</span>
                Y <span class="token operator">=</span> Pos<span class="token punctuation">.</span>Top <span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">,</span>
                Width <span class="token operator">=</span> Dim<span class="token punctuation">.</span>Width <span class="token punctuation">(</span>loginText<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    
    <span class="token comment">// 添加一些其他控件</span>
    win<span class="token punctuation">.</span>Add <span class="token punctuation">(</span>
        <span class="token comment">// 这是我最喜欢的布局</span>
          login<span class="token punctuation">,</span> password<span class="token punctuation">,</span> loginText<span class="token punctuation">,</span> passText<span class="token punctuation">,</span>

        <span class="token comment">// 这里使用了绝对定位</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CheckBox</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">&quot;Remember me&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RadioGroup</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;_Personal&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;_Company&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Button</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token string">&quot;Ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Button</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token string">&quot;Cancel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Label</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&quot;Press F9 or ESC plus 9 to activate the menubar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        Application<span class="token punctuation">.</span>Run <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><p>转自：古道轻风 链接：cnblogs.com/88223100/p/upgraded-dotnet-console-experience.html</p>`,9),e=[o];function c(l,u){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","jiemiangui_cs.html.vue"]]),d=JSON.parse('{"path":"/dotnet/console/jiemian/jiemiangui_cs.html","title":"界面GUI.CS","lang":"zh-CN","frontmatter":{"title":"界面GUI.CS","lang":"zh-CN","date":"2023-08-07T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"jiemiangui_cs","slug":"uxr35c","docsId":"71201707","description":"概述 GUI.CS是一个非常棒的控制台UI工具包。它提供了一个功能完善的工具箱，开发人员可以使用它构建早期控制台常见的一种用户界面。 空间 提供了以下控件 Buttons Labels Text Entry Text View User Inputs Windows Menus ScrollBars 操作 资料 转自：古道轻风 链接：cnblogs.c...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/console/jiemian/jiemiangui_cs.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"界面GUI.CS"}],["meta",{"property":"og:description","content":"概述 GUI.CS是一个非常棒的控制台UI工具包。它提供了一个功能完善的工具箱，开发人员可以使用它构建早期控制台常见的一种用户界面。 空间 提供了以下控件 Buttons Labels Text Entry Text View User Inputs Windows Menus ScrollBars 操作 资料 转自：古道轻风 链接：cnblogs.c..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-08-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"界面GUI.CS\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-07T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"空间","slug":"空间","link":"#空间","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.2,"words":361},"filePathRelative":"dotnet/console/jiemian/jiemiangui_cs.md","localizedDate":"2023年8月7日","excerpt":"<h2>概述</h2>\\n<p>GUI.CS是一个非常棒的控制台UI工具包。它提供了一个功能完善的工具箱，开发人员可以使用它构建早期控制台常见的一种用户界面。</p>\\n<h2>空间</h2>\\n<p>提供了以下控件</p>\\n<ul>\\n<li>Buttons</li>\\n<li>Labels</li>\\n<li>Text Entry</li>\\n<li>Text View</li>\\n<li>User Inputs</li>\\n<li>Windows</li>\\n<li>Menus</li>\\n<li>ScrollBars</li>\\n</ul>\\n<h2>操作</h2>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token keyword\\">using</span> <span class=\\"token namespace\\">Terminal<span class=\\"token punctuation\\">.</span>Gui</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Demo</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">static</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">void</span></span> Main <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        Application<span class=\\"token punctuation\\">.</span>Init <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> top <span class=\\"token operator\\">=</span> Application<span class=\\"token punctuation\\">.</span>Top<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// 创建顶级窗体</span>\\n        <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> win <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Window</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"MyApp\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        X <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span>\\n        Y <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 预留菜单行</span>\\n\\n        <span class=\\"token comment\\">// 使用Dim.Fill(), 它可以自动调整窗体大小，实现自适应，而无需手动敢于</span>\\n        Width <span class=\\"token operator\\">=</span> Dim<span class=\\"token punctuation\\">.</span>Fill <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n        Height <span class=\\"token operator\\">=</span> Dim<span class=\\"token punctuation\\">.</span>Fill <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n        top<span class=\\"token punctuation\\">.</span>Add <span class=\\"token punctuation\\">(</span>win<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// 创建一个菜单</span>\\n        <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> menu <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">MenuBar</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">MenuBarItem <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span></span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">MenuBarItem</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"_File\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">MenuItem <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span></span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">MenuItem</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"_New\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Creates new file\\"</span><span class=\\"token punctuation\\">,</span> NewFile<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n                <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">MenuItem</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"_Close\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> Close <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n                <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">MenuItem</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"_Quit\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>Quit <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> top<span class=\\"token punctuation\\">.</span>Running <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">MenuBarItem</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"_Edit\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">MenuItem <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span></span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">MenuItem</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"_Copy\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n                <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">MenuItem</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"C_ut\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n                <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">MenuItem</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"_Paste\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        top<span class=\\"token punctuation\\">.</span>Add <span class=\\"token punctuation\\">(</span>menu<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> login <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Label</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Login: \\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> X <span class=\\"token operator\\">=</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> Y <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> password <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Label</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Password: \\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            X <span class=\\"token operator\\">=</span> Pos<span class=\\"token punctuation\\">.</span>Left <span class=\\"token punctuation\\">(</span>login<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n        Y <span class=\\"token operator\\">=</span> Pos<span class=\\"token punctuation\\">.</span>Top <span class=\\"token punctuation\\">(</span>login<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> loginText <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">TextField</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                X <span class=\\"token operator\\">=</span> Pos<span class=\\"token punctuation\\">.</span>Right <span class=\\"token punctuation\\">(</span>password<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n                Y <span class=\\"token operator\\">=</span> Pos<span class=\\"token punctuation\\">.</span>Top <span class=\\"token punctuation\\">(</span>login<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n                Width <span class=\\"token operator\\">=</span> <span class=\\"token number\\">40</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> passText <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">TextField</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                Secret <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span>\\n                X <span class=\\"token operator\\">=</span> Pos<span class=\\"token punctuation\\">.</span>Left <span class=\\"token punctuation\\">(</span>loginText<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n                Y <span class=\\"token operator\\">=</span> Pos<span class=\\"token punctuation\\">.</span>Top <span class=\\"token punctuation\\">(</span>password<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n                Width <span class=\\"token operator\\">=</span> Dim<span class=\\"token punctuation\\">.</span>Width <span class=\\"token punctuation\\">(</span>loginText<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    \\n    <span class=\\"token comment\\">// 添加一些其他控件</span>\\n    win<span class=\\"token punctuation\\">.</span>Add <span class=\\"token punctuation\\">(</span>\\n        <span class=\\"token comment\\">// 这是我最喜欢的布局</span>\\n          login<span class=\\"token punctuation\\">,</span> password<span class=\\"token punctuation\\">,</span> loginText<span class=\\"token punctuation\\">,</span> passText<span class=\\"token punctuation\\">,</span>\\n\\n        <span class=\\"token comment\\">// 这里使用了绝对定位</span>\\n            <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">CheckBox</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">6</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Remember me\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">RadioGroup</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">8</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token string\\">\\"_Personal\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"_Company\\"</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Button</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">14</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Ok\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Button</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">14</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Cancel\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Label</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">18</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Press F9 or ESC plus 9 to activate the menubar\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        Application<span class=\\"token punctuation\\">.</span>Run <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{r as comp,d as data};
