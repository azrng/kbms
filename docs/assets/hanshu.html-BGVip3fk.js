import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as p,c as o,a as n,d as s,e as l,b as c}from"./app-Bw62I61B.js";const r={},i=c(`<h2 id="查询" tabindex="-1"><a class="header-anchor" href="#查询"><span>查询</span></a></h2><h3 id="rownum" tabindex="-1"><a class="header-anchor" href="#rownum"><span>ROWNUM</span></a></h3><p>查询前多少条</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t <span class="token keyword">where</span> rownum<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span>

<span class="token comment">-- 查询前十条的语句：</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> table_name <span class="token keyword">where</span> rownum<span class="token operator">&lt;</span>X  

<span class="token comment">-- 分页</span>
<span class="token keyword">sql</span>语句进行分页
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> c<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span>rownum r <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token string">&quot; + strSql + &quot;</span><span class="token punctuation">)</span> c <span class="token keyword">where</span> rownum<span class="token operator">&lt;=</span><span class="token string">&quot; + (pageSize * pageIndex) + &quot;</span><span class="token punctuation">)</span> t <span class="token keyword">where</span> r<span class="token operator">&gt;</span>&quot; <span class="token operator">+</span> <span class="token punctuation">(</span>pageIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> pageSize<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nvl" tabindex="-1"><a class="header-anchor" href="#nvl"><span>NVL</span></a></h3><p>NVL(Expr1,Expr2)如果Expr1为NULL，返回Expr2的值，否则返回Expr1的值</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> NVL<span class="token punctuation">(</span>t<span class="token punctuation">.</span>money<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>  <span class="token keyword">from</span> Money t
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="筛选" tabindex="-1"><a class="header-anchor" href="#筛选"><span>筛选</span></a></h2><h2 id="转换" tabindex="-1"><a class="header-anchor" href="#转换"><span>转换</span></a></h2><h3 id="to-date" tabindex="-1"><a class="header-anchor" href="#to-date"><span>to_date</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>buytime<span class="token operator">&lt;</span>to_date<span class="token punctuation">(</span><span class="token string">&#39;2018-01-01 00:00:00&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;yyyy-MM-dd hh24:mi:ss&#39;</span><span class="token punctuation">)</span> 

to_date<span class="token punctuation">(</span><span class="token string">&#39;2019/5/20 0:00:00&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;yyyy/mm/dd hh24:mi:ss&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h2><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>
● CONCAT<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> 字符串的拼接
<span class="token keyword">select</span> <span class="token string">&quot;CONCAT&quot;</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span> <span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span> a <span class="token keyword">from</span> dual
● INITCAP<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> 字符串大小写的转换
<span class="token keyword">select</span> <span class="token string">&quot;INITCAP&quot;</span><span class="token punctuation">(</span><span class="token string">&#39;hello.world&#39;</span><span class="token punctuation">)</span> b <span class="token keyword">from</span> dual<span class="token punctuation">;</span>
● <span class="token keyword">REPLACE</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> 字符串的替换
<span class="token keyword">select</span> <span class="token string">&quot;REPLACE&quot;</span><span class="token punctuation">(</span><span class="token string">&#39;helloworld&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;lo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ol&#39;</span><span class="token punctuation">)</span> d <span class="token keyword">from</span> dual<span class="token punctuation">;</span>
● TRIM<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> 字符串消除空格
<span class="token keyword">select</span> <span class="token string">&quot;TRIM&quot;</span><span class="token punctuation">(</span><span class="token string">&#39;hello  world&#39;</span><span class="token punctuation">)</span> e <span class="token keyword">from</span> dual<span class="token punctuation">;</span>
● UPPER<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> 字符串转化为大写
<span class="token keyword">select</span> <span class="token string">&quot;UPPER&quot;</span><span class="token punctuation">(</span><span class="token string">&#39;helloworld&#39;</span><span class="token punctuation">)</span> ffromdual<span class="token punctuation">;</span>
● CEIL<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> 字符串向上取整
<span class="token keyword">select</span> <span class="token string">&quot;CEIL&quot;</span><span class="token punctuation">(</span><span class="token number">3.4</span><span class="token punctuation">)</span> g <span class="token keyword">from</span> dual<span class="token punctuation">;</span>
● FLOOR<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> 字符串向下取整
<span class="token keyword">select</span> <span class="token string">&quot;FLOOR&quot;</span><span class="token punctuation">(</span><span class="token number">3.7</span><span class="token punctuation">)</span> h <span class="token keyword">from</span> dual<span class="token punctuation">;</span>
● <span class="token function">MOD</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> 数字取余数
<span class="token keyword">select</span> <span class="token string">&quot;MOD&quot;</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> i <span class="token keyword">from</span> dual<span class="token punctuation">;</span>
● <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span>      数值的四舍五入<span class="token punctuation">(</span><span class="token number">2</span>代表保留两位小数<span class="token punctuation">)</span>
<span class="token keyword">select</span> <span class="token string">&quot;ROUND&quot;</span><span class="token punctuation">(</span><span class="token number">3.1415</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> j <span class="token keyword">from</span> dual<span class="token punctuation">;</span>
● TRUNC<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> 数值的截取
<span class="token keyword">select</span> <span class="token string">&quot;TRUNC&quot;</span><span class="token punctuation">(</span><span class="token number">3.1415</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> k <span class="token keyword">from</span> dual<span class="token punctuation">;</span>
● SYSDATE <span class="token operator">&gt;&gt;</span> 返回当前系统日期时间
<span class="token keyword">select</span> SYSDATE l <span class="token keyword">from</span> dual<span class="token punctuation">;</span>
● <span class="token keyword">USER</span> <span class="token operator">&gt;&gt;</span> 返回当前用户
<span class="token keyword">select</span> <span class="token keyword">USER</span> m <span class="token keyword">from</span> dual
● LOWER<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> 字符串转换为小写
<span class="token keyword">select</span> <span class="token string">&quot;LOWER&quot;</span><span class="token punctuation">(</span><span class="token string">&#39;HELLworLD&#39;</span><span class="token punctuation">)</span> n <span class="token keyword">from</span> dual
● 字符串首字母小写其余大写（demo）
<span class="token keyword">select</span> <span class="token string">&quot;LOWER&quot;</span><span class="token punctuation">(</span><span class="token string">&#39;h&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&quot;UPPER&quot;</span><span class="token punctuation">(</span><span class="token string">&#39;elloworld&#39;</span><span class="token punctuation">)</span> o <span class="token keyword">from</span> dual<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p>`,14),u={href:"https://blog.csdn.net/qq_42129399/article/details/88925215",target:"_blank",rel:"noopener noreferrer"};function k(d,m){const a=e("ExternalLinkIcon");return p(),o("div",null,[i,n("blockquote",null,[n("p",null,[s("持续更新地址："),n("a",u,[s("https://blog.csdn.net/qq_42129399/article/details/88925215"),l(a)])])])])}const h=t(r,[["render",k],["__file","hanshu.html.vue"]]),y=JSON.parse('{"path":"/dataBase/oracle/hanshu.html","title":"函数","lang":"zh-CN","frontmatter":{"title":"函数","lang":"zh-CN","date":"2023-09-23T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"filename":"hanshu","slug":"ll4k58","docsId":"31816827","description":"查询 ROWNUM 查询前多少条 NVL NVL(Expr1,Expr2)如果Expr1为NULL，返回Expr2的值，否则返回Expr1的值 筛选 转换 to_date 其他 持续更新地址：https://blog.csdn.net/qq_42129399/article/details/88925215","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/oracle/hanshu.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"函数"}],["meta",{"property":"og:description","content":"查询 ROWNUM 查询前多少条 NVL NVL(Expr1,Expr2)如果Expr1为NULL，返回Expr2的值，否则返回Expr1的值 筛选 转换 to_date 其他 持续更新地址：https://blog.csdn.net/qq_42129399/article/details/88925215"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-10T11:58:16.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-10T11:58:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"函数\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-10T11:58:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"查询","slug":"查询","link":"#查询","children":[{"level":3,"title":"ROWNUM","slug":"rownum","link":"#rownum","children":[]},{"level":3,"title":"NVL","slug":"nvl","link":"#nvl","children":[]}]},{"level":2,"title":"筛选","slug":"筛选","link":"#筛选","children":[]},{"level":2,"title":"转换","slug":"转换","link":"#转换","children":[{"level":3,"title":"to_date","slug":"to-date","link":"#to-date","children":[]}]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[]}],"git":{"createdTime":1695484404000,"updatedTime":1699617496000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1},{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":1.23,"words":370},"filePathRelative":"dataBase/oracle/hanshu.md","localizedDate":"2023年9月23日","excerpt":"<h2>查询</h2>\\n<h3>ROWNUM</h3>\\n<p>查询前多少条</p>\\n<div class=\\"language-sql\\" data-ext=\\"sql\\" data-title=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">select</span> <span class=\\"token operator\\">*</span> <span class=\\"token keyword\\">from</span> t <span class=\\"token keyword\\">where</span> rownum<span class=\\"token operator\\">&lt;=</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">-- 查询前十条的语句：</span>\\n<span class=\\"token keyword\\">select</span> <span class=\\"token operator\\">*</span> <span class=\\"token keyword\\">from</span> table_name <span class=\\"token keyword\\">where</span> rownum<span class=\\"token operator\\">&lt;</span>X  \\n\\n<span class=\\"token comment\\">-- 分页</span>\\n<span class=\\"token keyword\\">sql</span>语句进行分页\\n<span class=\\"token keyword\\">select</span> <span class=\\"token operator\\">*</span> <span class=\\"token keyword\\">from</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">select</span> c<span class=\\"token punctuation\\">.</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">,</span>rownum r <span class=\\"token keyword\\">from</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\" + strSql + \\"</span><span class=\\"token punctuation\\">)</span> c <span class=\\"token keyword\\">where</span> rownum<span class=\\"token operator\\">&lt;=</span><span class=\\"token string\\">\\" + (pageSize * pageIndex) + \\"</span><span class=\\"token punctuation\\">)</span> t <span class=\\"token keyword\\">where</span> r<span class=\\"token operator\\">&gt;</span>\\" <span class=\\"token operator\\">+</span> <span class=\\"token punctuation\\">(</span>pageIndex <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> pageSize<span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{h as comp,y as data};
