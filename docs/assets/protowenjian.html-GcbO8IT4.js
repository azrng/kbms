import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as a,d as t}from"./app-S-drW72G.js";const n="/kbms/common/1638090959218-2d44b271-6613-4966-94d1-8bd885cde46b.png",l="/kbms/common/1638283199067-bbf06dc3-693d-4dd9-903f-da994e2fa696.png",e="/kbms/common/1610000299410-b8c82980-19a8-4f2c-9784-f87f34630c32.png",h="/kbms/common/1610000299413-4109ccb6-8c02-496c-a0e2-ebeb50460dc1.png",p="/kbms/common/1610000299480-216e4387-9f4b-4487-b5a7-6a1397b44201.png",k={},r=t('<h2 id="介绍文件" tabindex="-1"><a class="header-anchor" href="#介绍文件"><span>介绍文件</span></a></h2><ul><li>定义包、库名字</li><li>定义服务“Service”</li><li>定义输入输出模型“Message”</li></ul><p>选中项目右键新建协议缓冲区文件，后缀名是.proto。 <img src="'+n+`" alt="image.png" loading="lazy"> 简单示例</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">syntax</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;proto3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//标识使用proto3协议</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">option</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> csharp_namespace</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;RPC.Protos.Two&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 命名空间</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> RPC</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">Protos</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">Two</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 命名空间</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">service</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Customer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{ </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 定义服务Customer</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    //登录 </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">	rpc</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Login</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(LoginVm) returns(LoginResult); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//定义请求和响应</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//登录请求类</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> LoginVm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  // 定义每个字段的顺序，这也就是我们序列化的顺序，是通过数据类型和顺序来识别指定的值  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> account</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//帐号</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> password</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//密码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//登录返回类</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> LoginResult</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//用户名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>syntax=&quot;proto3&quot;;</strong></li></ul><blockquote><p>文件的第一行指定了你使用的是proto3的语法：如果你不指定，protocol buffer 编译器就会认为你使用的是proto2的语法。这个语句必须出现在.proto文件的非空非注释的第一行。</p></blockquote><ul><li><strong>package user;</strong></li></ul><blockquote><p>编译完成之后，包名为user</p></blockquote><ul><li><strong>service 定义服务</strong></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>service UserService {</span></span>
<span class="line"><span>  rpc Login(LoginRequest) returns (LoginResponse);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>message 定义结构体</strong></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>message LoginRequest {</span></span>
<span class="line"><span>	string username=1;</span></span>
<span class="line"><span>	string password=2;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Protobuf 样式指南建议使用 underscore_separated_names 作为字段名称。 为 .NET 应用创建的新 Protobuf 消息应遵循 Protobuf 样式准则。 .NET 工具会自动生成使用 .NET 命名标准的 .NET 类型。 例如，first_name Protobuf 字段生成 FirstName .NET 属性</p></blockquote><p>然后通过Grpc.Tools生成服务端代码和客户端代码</p><h2 id="请求类分离" tabindex="-1"><a class="header-anchor" href="#请求类分离"><span>请求类分离</span></a></h2><p>可以在一个proto里面引入多个proto文件，场景比如说用户或者订单的grpc接口比较多，那么请求类和返回类混合到一块比较乱，这个时候可以考虑将一个proto文件拆分成三个proto文件，分别存储用户服务接口、用户服务请求类、用户服务返回类，然后通过import将需要的请求类进行导入。</p><div class="language-protobuf line-numbers-mode" data-highlighter="shiki" data-ext="protobuf" data-title="protobuf" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>syntax = &quot;proto3&quot;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import &quot;UserVm.proto&quot;;</span></span>
<span class="line"><span>import &quot;UserResult.proto&quot;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>option csharp_namespace = &quot;RPC.Protos.One&quot;;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常用类型" tabindex="-1"><a class="header-anchor" href="#常用类型"><span>常用类型</span></a></h2><p>gRPC中定义的枚举第一个值必须为1。</p><h3 id="标量值类型" tabindex="-1"><a class="header-anchor" href="#标量值类型"><span>标量值类型</span></a></h3><table><thead><tr><th><strong>.proto类型</strong></th><th><strong>C#类型</strong></th><th>注释</th></tr></thead><tbody><tr><td>double</td><td>double</td><td>数值默认为0</td></tr><tr><td>float</td><td>float</td><td>数值默认为0</td></tr><tr><td>int32</td><td>int</td><td>数值默认为0</td></tr><tr><td>使用可变长编码方式。编码负数时不够高效；如果你的字段可能含有负数，那么请使用sint32。</td><td></td><td></td></tr><tr><td>int64</td><td>long</td><td>数值默认为0</td></tr><tr><td>使用可变长编码方式。编码负数时不够高效；如果你的字段可能含有负数，那么请使用sint64。</td><td></td><td></td></tr><tr><td>uint32</td><td>uint</td><td>数值默认为0</td></tr><tr><td>uint64</td><td>ulong</td><td>数值默认为0</td></tr><tr><td>sint32</td><td>int</td><td>数值默认为0</td></tr><tr><td>使用可变长编码方式。有符号的整型值。编码时比通常的int32高效。</td><td></td><td></td></tr><tr><td>sint64</td><td>long</td><td>数值默认为0</td></tr><tr><td>使用可变长编码方式。有符号的整型值。编码时比通常的int64高效。</td><td></td><td></td></tr><tr><td>fixed32</td><td>uint</td><td>数值默认为0</td></tr><tr><td>总是4个字节。如果数值总是比2^28大的话，这个类型会比uint32高效。</td><td></td><td></td></tr><tr><td>fixed64</td><td>ulong</td><td>数值默认为0</td></tr><tr><td>总是8个字节。如果数值总是比2^56大的话，这个类型会比uint64高效。</td><td></td><td></td></tr><tr><td>sfixed32</td><td>int</td><td>数值默认为0</td></tr><tr><td>总是4个字节。</td><td></td><td></td></tr><tr><td>sfixed64</td><td>long</td><td>数值默认为0</td></tr><tr><td>总是8个字节。</td><td></td><td></td></tr><tr><td>bool</td><td>bool</td><td>bool默认为false；</td></tr><tr><td>string</td><td>string</td><td>string默认为空字符串；</td></tr><tr><td>一个字符串必须是UTF-8编码或者7-bit ASCII编码的文本。</td><td></td><td></td></tr><tr><td>bytes</td><td>Google.Protobuf.ByteString</td><td></td></tr><tr><td>map</td><td>Google.Protobuf.Collections.MapField</td><td>例如：map&lt;string,string&gt; resultMap = 1;</td></tr><tr><td>google.protobuf.Timestamp</td><td>google.protobuf.Timestamp</td><td>需要引用一下：import public &quot;google/protobuf/timestamp.proto&quot;;</td></tr><tr><td>C## 赋值方式： Time= Google.Protobuf.WellKnownTypes.Timestamp.FromDateTime(DateTime.Now)</td><td></td><td></td></tr></tbody></table><p>标量值使用具有默认值，并且该默认值不能设置为null</p><h3 id="日期和时间" tabindex="-1"><a class="header-anchor" href="#日期和时间"><span>日期和时间</span></a></h3><p>默认不提供和.Net的DateTimeOffset、DateTime、TimeSpan等效的日期和时间值，可以使用Protobug的一些“已知类型”扩展来指定这些类型。</p><table><thead><tr><th><strong>.proto类型</strong></th><th><strong>C#类型</strong></th><th></th></tr></thead><tbody><tr><td>google.protobuf.Timestamp</td><td>DateTimeOffset</td><td>需要引用一下：import public &quot;google/protobuf/timestamp.proto&quot;;</td></tr><tr><td>google.protobuf.Timestamp</td><td>DateTime</td><td>需要引用一下：import public &quot;google/protobuf/timestamp.proto&quot;;</td></tr><tr><td>google.protobuf.Duration</td><td>TimeSpan</td><td>需要引用一下：import public &quot;google/protobuf/duration.proto&quot;;</td></tr></tbody></table><div class="language-protobuf line-numbers-mode" data-highlighter="shiki" data-ext="protobuf" data-title="protobuf" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>syntax = &quot;proto3&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import &quot;google/protobuf/duration.proto&quot;;  </span></span>
<span class="line"><span>import &quot;google/protobuf/timestamp.proto&quot;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>message Meeting {</span></span>
<span class="line"><span>    string subject = 1;</span></span>
<span class="line"><span>    google.protobuf.Timestamp start = 2;</span></span>
<span class="line"><span>    google.protobuf.Duration duration = 3;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="可为null的类型" tabindex="-1"><a class="header-anchor" href="#可为null的类型"><span>可为null的类型</span></a></h3><p>通过导入wrappers.proto文件可以设置为null的值</p><div class="language-protobuf line-numbers-mode" data-highlighter="shiki" data-ext="protobuf" data-title="protobuf" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>syntax = &quot;proto3&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import &quot;google/protobuf/wrappers.proto&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>message Person {</span></span>
<span class="line"><span>    // ...</span></span>
<span class="line"><span>    google.protobuf.Int32Value age = 5;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th><strong>.proto类型</strong></th><th><strong>C#类型</strong></th></tr></thead><tbody><tr><td>google.protobuf.BoolValue</td><td>bool?</td></tr><tr><td>google.protobuf.DoubleValue</td><td>double?</td></tr><tr><td>google.protobuf.FloatValue</td><td>float?</td></tr><tr><td></td><td></td></tr><tr><td>google.protobuf.Int32Value</td><td>int?</td></tr><tr><td></td><td></td></tr><tr><td>google.protobuf.Int64Value</td><td>long?</td></tr><tr><td></td><td></td></tr><tr><td>google.protobuf.UInt32Value</td><td>uint?</td></tr><tr><td></td><td></td></tr><tr><td>google.protobuf.UInt64Value</td><td>ulong?</td></tr><tr><td>google.protobuf.StringValue</td><td>string</td></tr><tr><td>google.protobuf.BytesValue</td><td>ByteString</td></tr></tbody></table><h3 id="集合类型" tabindex="-1"><a class="header-anchor" href="#集合类型"><span>集合类型</span></a></h3><p>比如我们要返回一个list对象，可以这样子写</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> StudentResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">    int32</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> age</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> city</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> StudentResponseList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    repeated</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> StudentResponse</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> studentResponse</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用proto文件" tabindex="-1"><a class="header-anchor" href="#使用proto文件"><span>使用proto文件</span></a></h2><h3 id="直接使用proto文件" tabindex="-1"><a class="header-anchor" href="#直接使用proto文件"><span>直接使用proto文件</span></a></h3><p>将proto文件放到项目目录下一个地方，然后通过相对路径直接引入使用，例如</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">  &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Protobuf</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> Include</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;..</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\P</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">rotos</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\U</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">serInfoService.proto&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Link</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Protos</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\U</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">serInfoService.proto&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> GrpcServices</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Server&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个时候想使用该proto文件，服务端需要安装nuget包如下</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">  &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">PackageReference</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> Include</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Grpc.AspNetCore&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Version</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;2.40.0&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>客户端需要安装nuget如下</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">  &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">PackageReference</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> Include</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Google.Protobuf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Version</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;3.19.1&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">  &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">PackageReference</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Include</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Grpc.Net.ClientFactory&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Version</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;2.40.0&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">  &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">PackageReference</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Include</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Grpc.Tools&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Version</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;2.42.0&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">    &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">PrivateAssets</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">all</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">PrivateAssets</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">    &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">IncludeAssets</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">runtime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">native</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">contentfiles</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">analyzers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">buildtransitive</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">IncludeAssets</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">  &lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">PackageReference</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">  &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">PackageReference</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> Include</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Grpc.Net.Client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Version</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;2.40.0&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用proto文件生成类" tabindex="-1"><a class="header-anchor" href="#使用proto文件生成类"><span>使用proto文件生成类</span></a></h3><p>通过命令将proto文件进行提前编译，然后服务端和客户端直接引用该文件进行操作 新建一个类库shareProto，该类库里面protobuf文件夹下包含一个Customer.proto文件</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">syntax</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;proto3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//标识使用proto3协议</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> GrpcCompileProto</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 命名空间</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">service</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Customer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{ </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 定义服务</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    //登录 一元调用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">	rpc</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Login</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(LoginVm) returns(LoginResult);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//登录请求类</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> LoginVm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> account</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//帐号</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> password</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//密码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//登录返回类</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> LoginResult</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//用户名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在该protobuf层级下运行命令(需要准备grpc_csharp_plugin.exe和protoc.exe)，或者直接新建下面bat文件</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">@echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> off</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> grpc</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> csharp</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> generate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> starting</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> generate</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> grpc</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> entities</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> csharp</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">......</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">tools</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">\\</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">protoc</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">exe</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">I</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> . </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">csharp_out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> . </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">protobuf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">\\</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">proto</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">grpc_out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> . </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">plugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">protoc</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">gen</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">grpc</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">tools</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">\\</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">grpc_csharp_plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">exe</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> generate</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> finished</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">!!!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">pause</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行成功后会生成文件，例如 <img src="`+l+`" alt="image.png" loading="lazy"> 服务端项目引用该类库后再引用nuget包</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">  &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">PackageReference</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> Include</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Grpc.AspNetCore&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Version</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;2.40.0&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>客户端引用nuget包</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">  &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">PackageReference</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> Include</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Grpc.Net.Client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Version</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;2.40.0&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>好处是这种方式只用编译一次，后续直接就可以用，以免有时候配置问题导致proto文件生成一直报错</p></blockquote><h2 id="使用技巧" tabindex="-1"><a class="header-anchor" href="#使用技巧"><span>使用技巧</span></a></h2><p>下面内容摘抄自其他文章，时代久远了</p><h3 id="技巧一" tabindex="-1"><a class="header-anchor" href="#技巧一"><span>技巧一</span></a></h3><p>上面章节的操作步骤中，我们需要在服务和客户端之间复制proto，这是一个可以省略掉的步骤。 1.复制 Protos 文件夹到解决方案根目录（sln文件所在目录），放在一个公共的地方 <img src="`+e+`" alt="image.png" loading="lazy"> 2.删除客户端和服务项目中的 Protos 文件夹 3.在客户端项目文件csproj中添加关于proto文件的描述</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">    &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Protobuf</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> Include</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;..</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\P</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">rotos</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\g</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">reet.proto&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> GrpcServices</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Link</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Protos</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\g</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">reet.proto&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">  &lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4.在服务项目文件csproj中添加关于proto文件的描述</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">    &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Protobuf</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> Include</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;..</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\P</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">rotos</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\g</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">reet.proto&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> GrpcServices</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Server&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Link</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Protos</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\g</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">reet.proto&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">  &lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在实际项目中，请自己计算相对路径 5.这样两个项目都是使用的一个proto文件，只用维护这一个文件即可 <img src="`+h+`" alt="image.png" loading="lazy"></p><h3 id="技巧二" tabindex="-1"><a class="header-anchor" href="#技巧二"><span>技巧二</span></a></h3><p>我们在实际项目中使用，肯定有多个 proto 文件，难道我们每添加一个 proto 文件都要去更新 csproj文件？ 我们可以使用MSBuild变量来帮我们完成，我们将 csproj 项目文件中引入proto文件信息进行修改。 服务端：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">    &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Protobuf</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> Include</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;..</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\P</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">rotos</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.proto&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> GrpcServices</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Server&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Link</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Protos</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\%</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">(RecursiveDir)%(Filename)%(Extension)&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>客户端：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">    &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Protobuf</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> Include</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;..</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\P</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">rotos</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.proto&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> GrpcServices</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Link</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Protos</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\%</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">(RecursiveDir)%(Filename)%(Extension)&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">  &lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例： <img src="`+p+'" alt="image.png" loading="lazy"></p>',65),d=[r];function g(o,c){return a(),i("div",null,d)}const C=s(k,[["render",g],["__file","protowenjian.html.vue"]]),b=JSON.parse('{"path":"/middleware/grpc/protowenjian.html","title":"proto文件","lang":"zh-CN","frontmatter":{"title":"proto文件","lang":"zh-CN","date":"2023-09-29T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"protowenjian","slug":"msebsn","docsId":"48013096","description":"介绍文件 定义包、库名字 定义服务“Service” 定义输入输出模型“Message” 选中项目右键新建协议缓冲区文件，后缀名是.proto。 image.png 简单示例 syntax=\\"proto3\\"; 文件的第一行指定了你使用的是proto3的语法：如果你不指定，protocol buffer 编译器就会认为你使用的是proto2的语法。这个语...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/grpc/protowenjian.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"proto文件"}],["meta",{"property":"og:description","content":"介绍文件 定义包、库名字 定义服务“Service” 定义输入输出模型“Message” 选中项目右键新建协议缓冲区文件，后缀名是.proto。 image.png 简单示例 syntax=\\"proto3\\"; 文件的第一行指定了你使用的是proto3的语法：如果你不指定，protocol buffer 编译器就会认为你使用的是proto2的语法。这个语..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1638090959218-2d44b271-6613-4966-94d1-8bd885cde46b.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"proto文件\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1638090959218-2d44b271-6613-4966-94d1-8bd885cde46b.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1638283199067-bbf06dc3-693d-4dd9-903f-da994e2fa696.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1610000299410-b8c82980-19a8-4f2c-9784-f87f34630c32.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1610000299413-4109ccb6-8c02-496c-a0e2-ebeb50460dc1.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1610000299480-216e4387-9f4b-4487-b5a7-6a1397b44201.png\\"],\\"datePublished\\":\\"2023-09-29T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"介绍文件","slug":"介绍文件","link":"#介绍文件","children":[]},{"level":2,"title":"请求类分离","slug":"请求类分离","link":"#请求类分离","children":[]},{"level":2,"title":"常用类型","slug":"常用类型","link":"#常用类型","children":[{"level":3,"title":"标量值类型","slug":"标量值类型","link":"#标量值类型","children":[]},{"level":3,"title":"日期和时间","slug":"日期和时间","link":"#日期和时间","children":[]},{"level":3,"title":"可为null的类型","slug":"可为null的类型","link":"#可为null的类型","children":[]},{"level":3,"title":"集合类型","slug":"集合类型","link":"#集合类型","children":[]}]},{"level":2,"title":"使用proto文件","slug":"使用proto文件","link":"#使用proto文件","children":[{"level":3,"title":"直接使用proto文件","slug":"直接使用proto文件","link":"#直接使用proto文件","children":[]},{"level":3,"title":"使用proto文件生成类","slug":"使用proto文件生成类","link":"#使用proto文件生成类","children":[]}]},{"level":2,"title":"使用技巧","slug":"使用技巧","link":"#使用技巧","children":[{"level":3,"title":"技巧一","slug":"技巧一","link":"#技巧一","children":[]},{"level":3,"title":"技巧二","slug":"技巧二","link":"#技巧二","children":[]}]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":6.44,"words":1932},"filePathRelative":"middleware/grpc/protowenjian.md","localizedDate":"2023年9月29日","excerpt":"<h2>介绍文件</h2>\\n<ul>\\n<li>定义包、库名字</li>\\n<li>定义服务“Service”</li>\\n<li>定义输入输出模型“Message”</li>\\n</ul>\\n<p>选中项目右键新建协议缓冲区文件，后缀名是.proto。\\n<img src=\\"/common/1638090959218-2d44b271-6613-4966-94d1-8bd885cde46b.png\\" alt=\\"image.png\\" loading=\\"lazy\\">\\n简单示例</p>\\n<div class=\\"language-csharp line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"csharp\\" data-title=\\"csharp\\" style=\\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#E06C75\\">syntax</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> \\"proto3\\"</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">; </span><span style=\\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">//标识使用proto3协议</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#E5C07B\\">option</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#E06C75\\"> csharp_namespace</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> \\"RPC.Protos.Two\\"</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">; </span><span style=\\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">// 命名空间</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#E06C75\\">package</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E5C07B\\"> RPC</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E5C07B\\">Protos</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E5C07B\\">Two</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">;</span><span style=\\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">// 命名空间</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#E06C75\\">service</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E06C75\\"> Customer</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">{ </span><span style=\\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">// 定义服务Customer</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">    //登录 </span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#E5C07B\\">\\trpc</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\\"> Login</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">(LoginVm) returns(LoginResult); </span><span style=\\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">//定义请求和响应</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">//登录请求类</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#E06C75\\">message</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E06C75\\"> LoginVm</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">  // 定义每个字段的顺序，这也就是我们序列化的顺序，是通过数据类型和顺序来识别指定的值  </span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">  string</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#E06C75\\"> account</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\">=</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\">1</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">;</span><span style=\\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">//帐号</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">  string</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#E06C75\\"> password</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\">=</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\">2</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">;</span><span style=\\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">//密码</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">//登录返回类</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#E06C75\\">message</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E06C75\\"> LoginResult</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">  string</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#E06C75\\"> name</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\">=</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\">1</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">;</span><span style=\\"--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">//用户名</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{C as comp,b as data};
