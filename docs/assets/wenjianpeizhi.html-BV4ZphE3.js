import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as t}from"./app-D8HBJYTp.js";const e={},p=t(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>通过文件(json、xml、ini)作为配置提供程序 特性：</p><ul><li>指定文件是否可选、必选</li><li>指定是否监视文件变更</li></ul><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>可能需要安装包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>Microsoft<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>Configuration
Microsoft<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>Configuration<span class="token punctuation">.</span>Json
Microsoft<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>Configuration<span class="token punctuation">.</span>Ini
Microsoft<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>Configuration<span class="token punctuation">.</span>Xml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="简单读取" tabindex="-1"><a class="header-anchor" href="#简单读取"><span>简单读取</span></a></h3><p>添加appsettings的json文件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;Setting&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;SerivceName&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;ceshi&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Version&quot;</span><span class="token punctuation">:</span> <span class="token number">5</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;zhangsan&quot;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：可能需要设置始终复制</p></blockquote><p>添加appsettings的ini文件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>name<span class="token operator">=</span><span class="token string">&quot;lisi&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConfigurationBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//添加ini配置文件 (文件名称，文件是否可选，默认false，文件变更读取新文件)</span>
builder<span class="token punctuation">.</span><span class="token function">AddIniFile</span><span class="token punctuation">(</span><span class="token string">&quot;appsettings.ini&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//添加json配置文件 (文件名称，文件是否可选，默认false，文件变更读取新文件)</span>
builder<span class="token punctuation">.</span><span class="token function">AddJsonFile</span><span class="token punctuation">(</span><span class="token string">&quot;appsettings.json&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token class-name"><span class="token keyword">var</span></span> configurationRoot <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;SerivceName:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">configurationRoot<span class="token punctuation">[</span><span class="token string">&quot;Setting:SerivceName&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Version:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">configurationRoot<span class="token punctuation">[</span><span class="token string">&quot;Setting:Version&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;name:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">configurationRoot<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后添加的配置会替换之前的配置。如果配置了监视文件的变更，那么配置修改后再次读取会读取到新的配置。</p><h3 id="文件变化事件" tabindex="-1"><a class="header-anchor" href="#文件变化事件"><span>文件变化事件</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConfigurationBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//添加json配置文件 (文件名称，文件是否可选，默认false，文件变更读取新文件)</span>
builder<span class="token punctuation">.</span><span class="token function">AddJsonFile</span><span class="token punctuation">(</span><span class="token string">&quot;appsettings.json&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> configurationRoot <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;文件变化前&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;SerivceName:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">configurationRoot<span class="token punctuation">[</span><span class="token string">&quot;Setting:SerivceName&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Version:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">configurationRoot<span class="token punctuation">[</span><span class="token string">&quot;Setting:Version&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;name:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">configurationRoot<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> changToken <span class="token operator">=</span> configurationRoot<span class="token punctuation">.</span><span class="token function">GetReloadToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
changToken<span class="token punctuation">.</span><span class="token function">RegisterChangeCallback</span><span class="token punctuation">(</span>state <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;文件变化后&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;SerivceName:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">configurationRoot<span class="token punctuation">[</span><span class="token string">&quot;Setting:SerivceName&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Version:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">configurationRoot<span class="token punctuation">[</span><span class="token string">&quot;Setting:Version&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;name:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">configurationRoot<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> configurationRoot<span class="token punctuation">)</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们启动程序然后去修改bin目录下的文件内容，发现输出结果如下</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>文件变化前
SerivceName<span class="token punctuation">:</span><span class="token class-name">ceshi</span>
Version<span class="token punctuation">:</span><span class="token number">5</span>
name<span class="token punctuation">:</span>zhangsan
文件变化后
SerivceName<span class="token punctuation">:</span><span class="token class-name">ceshi</span>
Version<span class="token punctuation">:</span><span class="token number">7</span>
name<span class="token punctuation">:</span>zhangsan
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：GetReloadToken只生效一次，如果想要一直监听变更,则需要下面的代码</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>ChangeToken<span class="token punctuation">.</span><span class="token function">OnChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> configurationRoot<span class="token punctuation">.</span><span class="token function">GetReloadToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;文件变化后&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;SerivceName:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">configurationRoot<span class="token punctuation">[</span><span class="token string">&quot;Setting:SerivceName&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Version:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">configurationRoot<span class="token punctuation">[</span><span class="token string">&quot;Setting:Version&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;name:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">configurationRoot<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span> </span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iniparser" tabindex="-1"><a class="header-anchor" href="#iniparser"><span>INIParser</span></a></h2><p>.NET 6+ INI 解析器，比同类库快 4-10 倍，还支持异步文件加载。</p><div class="language-c# line-numbers-mode" data-ext="c#" data-title="c#"><pre class="language-c#"><code>using IniParser;
using IniParser.Model;

// 读取INI文件
public string ReadIniValue(string section, string key, string filePath)
{
    var parser = new FileIniDataParser();
    IniData data = parser.ReadFile(filePath);
    return data[section][key];
}

// 写入INI文件
public void WriteIniValue(string section, string key, string value, string filePath)
{
    var parser = new FileIniDataParser();
    IniData data = parser.ReadFile(filePath);
    data[section][key] = value;
    parser.WriteFile(filePath, data);
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><p>极客时间教程</p>`,25),o=[p];function i(c,l){return s(),a("div",null,o)}const k=n(e,[["render",i],["__file","wenjianpeizhi.html.vue"]]),d=JSON.parse('{"path":"/dotnet/base/peizhikuangjia/wenjianpeizhi.html","title":"文件配置","lang":"zh-CN","frontmatter":{"title":"文件配置","lang":"zh-CN","date":"2022-05-21T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"wenjianpeizhi","slug":"fcgxml","docsId":"51623873","description":"概述 通过文件(json、xml、ini)作为配置提供程序 特性： 指定文件是否可选、必选 指定是否监视文件变更 操作 可能需要安装包 简单读取 添加appsettings的json文件 注意：可能需要设置始终复制 添加appsettings的ini文件 后添加的配置会替换之前的配置。如果配置了监视文件的变更，那么配置修改后再次读取会读取到新的配置。 ...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/base/peizhikuangjia/wenjianpeizhi.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"文件配置"}],["meta",{"property":"og:description","content":"概述 通过文件(json、xml、ini)作为配置提供程序 特性： 指定文件是否可选、必选 指定是否监视文件变更 操作 可能需要安装包 简单读取 添加appsettings的json文件 注意：可能需要设置始终复制 添加appsettings的ini文件 后添加的配置会替换之前的配置。如果配置了监视文件的变更，那么配置修改后再次读取会读取到新的配置。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-25T09:10:20.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-05-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-25T09:10:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文件配置\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-21T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-25T09:10:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"简单读取","slug":"简单读取","link":"#简单读取","children":[]},{"level":3,"title":"文件变化事件","slug":"文件变化事件","link":"#文件变化事件","children":[]}]},{"level":2,"title":"INIParser","slug":"iniparser","link":"#iniparser","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1714036220000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1},{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":1.83,"words":549},"filePathRelative":"dotnet/base/peizhikuangjia/wenjianpeizhi.md","localizedDate":"2022年5月21日","excerpt":"<h2>概述</h2>\\n<p>通过文件(json、xml、ini)作为配置提供程序\\n特性：</p>\\n<ul>\\n<li>指定文件是否可选、必选</li>\\n<li>指定是否监视文件变更</li>\\n</ul>\\n<h2>操作</h2>\\n<p>可能需要安装包</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code>Microsoft<span class=\\"token punctuation\\">.</span>Extensions<span class=\\"token punctuation\\">.</span>Configuration\\nMicrosoft<span class=\\"token punctuation\\">.</span>Extensions<span class=\\"token punctuation\\">.</span>Configuration<span class=\\"token punctuation\\">.</span>Json\\nMicrosoft<span class=\\"token punctuation\\">.</span>Extensions<span class=\\"token punctuation\\">.</span>Configuration<span class=\\"token punctuation\\">.</span>Ini\\nMicrosoft<span class=\\"token punctuation\\">.</span>Extensions<span class=\\"token punctuation\\">.</span>Configuration<span class=\\"token punctuation\\">.</span>Xml\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
