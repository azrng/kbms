import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as t}from"./app-D8HBJYTp.js";const p={},e=t(`<p>通过反射添加的时候提示Parameter count mismatch错误，需要将传入的T限制约束为class,new()</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token keyword">protected</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token generic-method"><span class="token function">HandleAdd</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TIn<span class="token punctuation">,</span> TOut<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> List<span class="token punctuation">&lt;</span>TOut<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> func<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> IsGuobaOne <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token class-name">TIn</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IdentityEntityBase</span></span>
            <span class="token keyword">where</span> <span class="token class-name">TOut</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token generic-method"><span class="token function">GetPageNumber</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TIn<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>IsGuobaOne<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> page<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">var</span></span> data <span class="token operator">=</span> <span class="token punctuation">(</span>List<span class="token operator">&lt;</span>TOut<span class="token operator">&gt;</span><span class="token punctuation">)</span>func<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> youluDb<span class="token punctuation">.</span><span class="token function">Insertable</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecuteCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;导入</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp"><span class="token keyword">nameof</span><span class="token punctuation">(</span>TOut<span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">  </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">result <span class="token operator">&gt;</span> <span class="token number">0</span></span><span class="token punctuation">}</span></span><span class="token string">成功:失败&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),o=[e];function c(l,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","parametercountmismatch.html.vue"]]),m=JSON.parse('{"path":"/orm/sqlsugar/wentihuizong/parametercountmismatch.html","title":"Parameter count mismatch","lang":"zh-CN","frontmatter":{"title":"Parameter count mismatch","lang":"zh-CN","date":"2021-05-17T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["orm"],"tag":["无"],"filename":"parametercountmismatch","slug":"mggguh","docsId":"32068348","description":"通过反射添加的时候提示Parameter count mismatch错误，需要将传入的T限制约束为class,new()","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/orm/sqlsugar/wentihuizong/parametercountmismatch.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Parameter count mismatch"}],["meta",{"property":"og:description","content":"通过反射添加的时候提示Parameter count mismatch错误，需要将传入的T限制约束为class,new()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-22T16:22:17.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2021-05-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-22T16:22:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Parameter count mismatch\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-05-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-22T16:22:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[],"git":{"createdTime":1690042937000,"updatedTime":1690042937000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.37,"words":112},"filePathRelative":"orm/sqlsugar/wentihuizong/parametercountmismatch.md","localizedDate":"2021年5月17日","excerpt":"<p>通过反射添加的时候提示Parameter count mismatch错误，需要将传入的T限制约束为class,new()</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code> <span class=\\"token keyword\\">protected</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">void</span></span> <span class=\\"token generic-method\\"><span class=\\"token function\\">HandleAdd</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span>TIn<span class=\\"token punctuation\\">,</span> TOut<span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Func<span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">,</span> List<span class=\\"token punctuation\\">&lt;</span>TOut<span class=\\"token punctuation\\">&gt;</span><span class=\\"token punctuation\\">&gt;</span></span> func<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\"><span class=\\"token keyword\\">bool</span></span> IsGuobaOne <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">where</span> <span class=\\"token class-name\\">TIn</span> <span class=\\"token punctuation\\">:</span> <span class=\\"token type-list\\"><span class=\\"token class-name\\">IdentityEntityBase</span></span>\\n            <span class=\\"token keyword\\">where</span> <span class=\\"token class-name\\">TOut</span> <span class=\\"token punctuation\\">:</span> <span class=\\"token type-list\\"><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span></span>\\n        <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> page <span class=\\"token operator\\">=</span> <span class=\\"token generic-method\\"><span class=\\"token function\\">GetPageNumber</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span>TIn<span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span>IsGuobaOne<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">int</span></span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;=</span> page<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> data <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>List<span class=\\"token operator\\">&lt;</span>TOut<span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">)</span>func<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Invoke</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> result <span class=\\"token operator\\">=</span> youluDb<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Insertable</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ExecuteCommand</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                Console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span><span class=\\"token interpolation-string\\"><span class=\\"token string\\">$\\"导入</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span><span class=\\"token expression language-csharp\\"><span class=\\"token keyword\\">nameof</span><span class=\\"token punctuation\\">(</span>TOut<span class=\\"token punctuation\\">)</span></span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">  </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span><span class=\\"token expression language-csharp\\">result <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span></span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">成功:失败\\"</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,m as data};
