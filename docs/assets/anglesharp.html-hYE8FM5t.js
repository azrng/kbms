import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,a as n,d as s,e as t,b as e}from"./app-DMmdIwn0.js";const i={},u=n("h2",{id:"介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#介绍"},[n("span",null,"介绍")])],-1),r={href:"https://anglesharp.github.io/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/AngleSharp/AngleSharp",target:"_blank",rel:"noopener noreferrer"},d=e(`<h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>安装组件包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;AngleSharp&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;0.16.1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置地区</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> config <span class="token operator">=</span> Configuration<span class="token punctuation">.</span>Default<span class="token punctuation">.</span><span class="token function">WithCulture</span><span class="token punctuation">(</span><span class="token string">&quot;zh-cn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="读取文档" tabindex="-1"><a class="header-anchor" href="#读取文档"><span>读取文档</span></a></h3><h4 id="简单文档操作" tabindex="-1"><a class="header-anchor" href="#简单文档操作"><span>简单文档操作</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> str <span class="token operator">=</span> File<span class="token punctuation">.</span><span class="token function">ReadAllText</span><span class="token punctuation">(</span><span class="token string">@&quot;E:\\Test\\ConsoleApp3\\ConsoleApp3\\aa.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//配置地区</span>
<span class="token class-name"><span class="token keyword">var</span></span> config <span class="token operator">=</span> Configuration<span class="token punctuation">.</span>Default<span class="token punctuation">;</span>
<span class="token comment">//用指定配置创建一个上下文</span>
<span class="token class-name"><span class="token keyword">var</span></span> context<span class="token operator">=</span>BrowsingContext<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//从请求解析内容</span>
<span class="token class-name"><span class="token keyword">var</span></span> document <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">OpenAsync</span><span class="token punctuation">(</span>req <span class="token operator">=&gt;</span> req<span class="token punctuation">.</span><span class="token function">Content</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//输出html</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>DocumentElement<span class="token punctuation">.</span>OuterHtml<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//创建元素并赋值</span>
<span class="token class-name"><span class="token keyword">var</span></span> p <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">CreateElement</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span>TextContent <span class="token operator">=</span> <span class="token string">&quot;新创建的元素&quot;</span><span class="token punctuation">;</span>

<span class="token comment">//添加新标签</span>
document<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">AppendChild</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>DocumentElement<span class="token punctuation">.</span>OuterHtml<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="字符串转文档" tabindex="-1"><a class="header-anchor" href="#字符串转文档"><span>字符串转文档</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HtmlParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">IHtmlDocument</span> document <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">ParseDocument</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span><span class="token function">ToHtml</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="读取元素" tabindex="-1"><a class="header-anchor" href="#读取元素"><span>读取元素</span></a></h3><h4 id="获取某一些元素" tabindex="-1"><a class="header-anchor" href="#获取某一些元素"><span>获取某一些元素</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">UsingLinq</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//Create a new context for evaluating webpages with the default config</span>
    <span class="token class-name"><span class="token keyword">var</span></span> context <span class="token operator">=</span> BrowsingContext<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>Configuration<span class="token punctuation">.</span>Default<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//Create a document from a virtual request / response pattern</span>
    <span class="token class-name"><span class="token keyword">var</span></span> document <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">OpenAsync</span><span class="token punctuation">(</span>req <span class="token operator">=&gt;</span> req<span class="token punctuation">.</span><span class="token function">Content</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;ul&gt;&lt;li&gt;First item&lt;li&gt;Second item&lt;li class=&#39;blue&#39;&gt;Third item!&lt;li class=&#39;blue red&#39;&gt;Last item!&lt;/ul&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//Do something with LINQ</span>
    <span class="token class-name"><span class="token keyword">var</span></span> blueListItemsLinq <span class="token operator">=</span> document<span class="token punctuation">.</span>All<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>m <span class="token operator">=&gt;</span> m<span class="token punctuation">.</span>LocalName <span class="token operator">==</span> <span class="token string">&quot;li&quot;</span> <span class="token operator">&amp;&amp;</span> m<span class="token punctuation">.</span>ClassList<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//Or directly with CSS selectors</span>
    <span class="token class-name"><span class="token keyword">var</span></span> blueListItemsCssSelector <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">QuerySelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;li.blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Comparing both ways ...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;LINQ:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> item <span class="token keyword">in</span> blueListItemsLinq<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>TextContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;CSS:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> item <span class="token keyword">in</span> blueListItemsCssSelector<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>TextContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者使用</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//Same as document.All</span>
<span class="token class-name"><span class="token keyword">var</span></span> blueListItemsLinq <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">QuerySelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>m <span class="token operator">=&gt;</span> m<span class="token punctuation">.</span>LocalName <span class="token operator">==</span> <span class="token string">&quot;li&quot;</span> <span class="token operator">&amp;&amp;</span> m<span class="token punctuation">.</span>ClassList<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="获取单个元素" tabindex="-1"><a class="header-anchor" href="#获取单个元素"><span>获取单个元素</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">SingleElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//Create a new context for evaluating webpages with the default config</span>
    <span class="token class-name"><span class="token keyword">var</span></span> context <span class="token operator">=</span> BrowsingContext<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>Configuration<span class="token punctuation">.</span>Default<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//Create a new document</span>
    <span class="token class-name"><span class="token keyword">var</span></span> document <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">OpenAsync</span><span class="token punctuation">(</span>req <span class="token operator">=&gt;</span> req<span class="token punctuation">.</span><span class="token function">Content</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;b&gt;&lt;i&gt;This is some &lt;em&gt; bold &lt;u&gt;and&lt;/u&gt; italic &lt;/em&gt; text!&lt;/i&gt;&lt;/b&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">var</span></span> emphasize <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">QuerySelector</span><span class="token punctuation">(</span><span class="token string">&quot;em&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Difference between several ways of getting text:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Only from C## / AngleSharp:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>emphasize<span class="token punctuation">.</span><span class="token function">ToHtml</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//&lt;em&gt; bold &lt;u&gt;and&lt;/u&gt; italic &lt;/em&gt;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>emphasize<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// bold and italic</span>

    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;From the DOM:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>emphasize<span class="token punctuation">.</span>InnerHtml<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// bold &lt;u&gt;and&lt;/u&gt; italic</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>emphasize<span class="token punctuation">.</span>OuterHtml<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//&lt;em&gt; bold &lt;u&gt;and&lt;/u&gt; italic &lt;/em&gt;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>emphasize<span class="token punctuation">.</span>TextContent<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// bold and italic</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),m={href:"https://anglesharp.github.io/docs/core/03-Examples",target:"_blank",rel:"noopener noreferrer"},v=e(`<h3 id="修改元素" tabindex="-1"><a class="header-anchor" href="#修改元素"><span>修改元素</span></a></h3><p>读取到某一个元素修改并返回最后的结果</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> str <span class="token operator">=</span> File<span class="token punctuation">.</span><span class="token function">ReadAllText</span><span class="token punctuation">(</span><span class="token string">@&quot;E:\\Test\\ConsoleApp3\\ConsoleApp3\\aa.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//配置地区</span>
<span class="token class-name"><span class="token keyword">var</span></span> config <span class="token operator">=</span> Configuration<span class="token punctuation">.</span>Default<span class="token punctuation">;</span>
<span class="token comment">//用指定配置创建一个上下文</span>
<span class="token class-name"><span class="token keyword">var</span></span> context <span class="token operator">=</span> BrowsingContext<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//从请求解析内容</span>
<span class="token class-name"><span class="token keyword">var</span></span> document <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">OpenAsync</span><span class="token punctuation">(</span>req <span class="token operator">=&gt;</span> req<span class="token punctuation">.</span><span class="token function">Content</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//输出html</span>
<span class="token class-name"><span class="token keyword">var</span></span> mobile <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">QuerySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.top2 a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mobile<span class="token punctuation">.</span>TextContent <span class="token operator">=</span> <span class="token string">&quot;没有手机&quot;</span><span class="token punctuation">;</span>


<span class="token class-name"><span class="token keyword">var</span></span> text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span><span class="token function">ToHtml</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,4),h={href:"https://anglesharp.github.io/",target:"_blank",rel:"noopener noreferrer"};function g(b,f){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[s("官网："),n("a",r,[s("https://anglesharp.github.io/"),t(a)]),s(" GitHub仓库地址："),n("a",k,[s("https://github.com/AngleSharp/AngleSharp"),t(a)])]),d,n("p",null,[s("说明："),n("a",m,[s("https://anglesharp.github.io/docs/core/03-Examples"),t(a)])]),v,n("p",null,[s("官网地址："),n("a",h,[s("https://anglesharp.github.io/"),t(a)])])])}const C=p(i,[["render",g],["__file","anglesharp.html.vue"]]),q=JSON.parse('{"path":"/middleware/office/anglesharp.html","title":"AngleSharp","lang":"zh-CN","frontmatter":{"title":"AngleSharp","lang":"zh-CN","date":"2022-10-26T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"anglesharp","slug":"egrpyb","docsId":"32029985","description":"介绍 官网：https://anglesharp.github.io/ GitHub仓库地址：https://github.com/AngleSharp/AngleSharp 操作 安装组件包 配置地区 读取文档 简单文档操作 字符串转文档 读取元素 获取某一些元素 或者使用 获取单个元素 说明：https://anglesharp.github.io...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/office/anglesharp.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"AngleSharp"}],["meta",{"property":"og:description","content":"介绍 官网：https://anglesharp.github.io/ GitHub仓库地址：https://github.com/AngleSharp/AngleSharp 操作 安装组件包 配置地区 读取文档 简单文档操作 字符串转文档 读取元素 获取某一些元素 或者使用 获取单个元素 说明：https://anglesharp.github.io..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-10-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AngleSharp\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-26T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"读取文档","slug":"读取文档","link":"#读取文档","children":[{"level":4,"title":"简单文档操作","slug":"简单文档操作","link":"#简单文档操作","children":[]},{"level":4,"title":"字符串转文档","slug":"字符串转文档","link":"#字符串转文档","children":[]}]},{"level":3,"title":"读取元素","slug":"读取元素","link":"#读取元素","children":[{"level":4,"title":"获取某一些元素","slug":"获取某一些元素","link":"#获取某一些元素","children":[]},{"level":4,"title":"获取单个元素","slug":"获取单个元素","link":"#获取单个元素","children":[]}]},{"level":3,"title":"修改元素","slug":"修改元素","link":"#修改元素","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.81,"words":542},"filePathRelative":"middleware/office/anglesharp.md","localizedDate":"2022年10月26日","excerpt":"<h2>介绍</h2>\\n<p>官网：<a href=\\"https://anglesharp.github.io/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://anglesharp.github.io/</a>\\nGitHub仓库地址：<a href=\\"https://github.com/AngleSharp/AngleSharp\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/AngleSharp/AngleSharp</a></p>\\n<h2>操作</h2>\\n<p>安装组件包</p>","autoDesc":true}');export{C as comp,q as data};
