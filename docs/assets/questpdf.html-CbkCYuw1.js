import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as e,c,b as n,e as s,f as t,d as u}from"./app-CBxp4zeL.js";const i={},l=u(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>QuestPDF 是一个现代化的开源 .NET 库，用于生成PDF文档。它提供了一套强大的 API，使开发人员能够使用 C#语言来创建、编辑和处理 PDF 文件。QuestPDF 提供了丰富的功能，包括布局引擎、多平台支持、高级语言支持、文本样式控制、图像插入、表格和列表、链接和书签、字体和颜色管理、PDF 文件合并和拆分等。 最近更新：2023.05.03 下载量：1.71M(2023年6月24日)</p><h2 id="为什么使用" tabindex="-1"><a class="header-anchor" href="#为什么使用"><span>为什么使用</span></a></h2><ul><li>强有力的布局引擎：Quest PDF 提供了专为文档生成设计的布局引擎，提供完整的分页支持，内容的高度控制。</li><li>支持多个平台：Quest PDF 支持多个平台，包括 Windows、Linux、macOS，以及通过 WebAssembly 运行。</li><li>Fluent API：Quest采用了 FluentAPI 代码风格，使代码更简洁易懂。</li><li>代码复用：在布局过程中可以实现代码复用。</li><li>维护便利性：使用纯C#代码来实现，而不依赖于二进制格式或复杂 HTML。</li><li>热加载：无需重新编译代码即可实时预览。</li><li>高性能：Quest PDF 具有高性能和使用资源比较低特性，每核每分钟生成高达1000个 PDF 文件，整个处理过程是线程安全。</li></ul><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>引用组件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>QuestPDF
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="简单例子" tabindex="-1"><a class="header-anchor" href="#简单例子"><span>简单例子</span></a></h3><p>生成PDF文档一共分为三个部分，页眉（页），内容（内容），页脚（页脚）</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>Document<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>container <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    container<span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span>page <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        page<span class="token punctuation">.</span><span class="token function">Size</span><span class="token punctuation">(</span>PageSizes<span class="token punctuation">.</span>A4<span class="token punctuation">)</span><span class="token punctuation">;</span>
        page<span class="token punctuation">.</span><span class="token function">Margin</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> Unit<span class="token punctuation">.</span>Centimetre<span class="token punctuation">)</span><span class="token punctuation">;</span>
        page<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>White<span class="token punctuation">)</span><span class="token punctuation">;</span>
        page<span class="token punctuation">.</span><span class="token function">DefaultTextStyle</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">FontSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        page<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&quot;Hello PDF!&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">SemiBold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontSize</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontColor</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>Blue<span class="token punctuation">.</span>Medium<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        page<span class="token punctuation">.</span><span class="token function">Content</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">PaddingVertical</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> Unit<span class="token punctuation">.</span>Centimetre<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">Column</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span>
            <span class="token punctuation">{</span>
                x<span class="token punctuation">.</span><span class="token function">Spacing</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                
                x<span class="token punctuation">.</span><span class="token function">Item</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span>Placeholders<span class="token punctuation">.</span><span class="token function">LoremIpsum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                x<span class="token punctuation">.</span><span class="token function">Item</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Image</span><span class="token punctuation">(</span>Placeholders<span class="token punctuation">.</span><span class="token function">Image</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        page<span class="token punctuation">.</span><span class="token function">Footer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">AlignCenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span>
            <span class="token punctuation">{</span>
                x<span class="token punctuation">.</span><span class="token function">Span</span><span class="token punctuation">(</span><span class="token string">&quot;Page &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                x<span class="token punctuation">.</span><span class="token function">CurrentPageNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">GeneratePdf</span><span class="token punctuation">(</span><span class="token string">&quot;hello.pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="模板生成" tabindex="-1"><a class="header-anchor" href="#模板生成"><span>模板生成</span></a></h3><p>使用模板生成一共设计三个应用层的工作：</p><ul><li>文档模型(一组描述PDF内容的类)</li><li>数据文档源（将域映射到模型的层）</li><li>模板（描述如何可视化信息）并将其转换为 PDF 文件的表示层</li></ul><p>例如要设计一个基本的发票信息，设计一个购物清单，一个卖家我们的地址，以及发票编号等等我们设计这样的3个模型类</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InvoiceModel</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> InvoiceNumber <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> IssueDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> DueDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name">Address</span> SellerAddress <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token return-type class-name">Address</span> CustomerAddress <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>OrderItem<span class="token punctuation">&gt;</span></span> Items <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Comments <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderItem</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">decimal</span></span> Price <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Quantity <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Address</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> CompanyName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Street <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> City <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> State <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">object</span></span> Email <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Phone <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>模型定义之后我们就定义一些假数据来填充pdf</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">InvoiceDocumentDataSource</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Random</span> Random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">InvoiceModel</span> <span class="token function">GetInvoiceDetails</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> items <span class="token operator">=</span> Enumerable
                <span class="token punctuation">.</span><span class="token function">Range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>i <span class="token operator">=&gt;</span> <span class="token function">GenerateRandomOrderItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">InvoiceModel</span>
            <span class="token punctuation">{</span>
                InvoiceNumber <span class="token operator">=</span> Random<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token number">1_000</span><span class="token punctuation">,</span> <span class="token number">10_000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                IssueDate <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">,</span>
                DueDate <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now <span class="token operator">+</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromDays</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

                SellerAddress <span class="token operator">=</span> <span class="token function">GenerateRandomAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                CustomerAddress <span class="token operator">=</span> <span class="token function">GenerateRandomAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

                Items <span class="token operator">=</span> items<span class="token punctuation">,</span>
                Comments <span class="token operator">=</span><span class="token string">&quot;测试备注&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name">OrderItem</span> <span class="token function">GenerateRandomOrderItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OrderItem</span>
            <span class="token punctuation">{</span>
                Name <span class="token operator">=</span> <span class="token string">&quot;商品&quot;</span><span class="token punctuation">,</span>
                Price <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">decimal</span><span class="token punctuation">)</span>Math<span class="token punctuation">.</span><span class="token function">Round</span><span class="token punctuation">(</span>Random<span class="token punctuation">.</span><span class="token function">NextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                Quantity <span class="token operator">=</span> Random<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name">Address</span> <span class="token function">GenerateRandomAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Address</span>
            <span class="token punctuation">{</span>
                CompanyName <span class="token operator">=</span> <span class="token string">&quot;测试商店&quot;</span><span class="token punctuation">,</span>
                Street <span class="token operator">=</span> <span class="token string">&quot;测试街道&quot;</span><span class="token punctuation">,</span>
                City <span class="token operator">=</span> <span class="token string">&quot;测试城市&quot;</span><span class="token punctuation">,</span>
                State <span class="token operator">=</span> <span class="token string">&quot;测试状态&quot;</span><span class="token punctuation">,</span>
                Email <span class="token operator">=</span> <span class="token string">&quot;测试邮件&quot;</span><span class="token punctuation">,</span>
                Phone <span class="token operator">=</span> <span class="token string">&quot;测试电话&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>文档元数据 GetMetadata();</strong></li><li><strong>无效撰写（IDocumentContainer 容器）</strong></li></ul><p>第一个是文档的一些信息第二个是模板的包含基于这些基础模板原则我们设计一个模板层类</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InvoiceDocument</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IDocument</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token return-type class-name">InvoiceModel</span> Model <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token function">InvoiceDocument</span><span class="token punctuation">(</span><span class="token class-name">InvoiceModel</span> model<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Model <span class="token operator">=</span> model<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name">DocumentMetadata</span> <span class="token function">GetMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> DocumentMetadata<span class="token punctuation">.</span>Default<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Compose</span><span class="token punctuation">(</span><span class="token class-name">IDocumentContainer</span> container<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            container
                <span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span>page <span class="token operator">=&gt;</span>
                <span class="token punctuation">{</span>
                    page<span class="token punctuation">.</span><span class="token function">PageColor</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>Red<span class="token punctuation">.</span>Lighten1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    page<span class="token punctuation">.</span><span class="token function">Size</span><span class="token punctuation">(</span>PageSizes<span class="token punctuation">.</span>A4<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    page<span class="token punctuation">.</span><span class="token function">Margin</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//外边距</span>

      
                    page<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Height</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>LightBlue<span class="token punctuation">.</span>Lighten1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    page<span class="token punctuation">.</span><span class="token function">Content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>Grey<span class="token punctuation">.</span>Lighten3<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    page<span class="token punctuation">.</span><span class="token function">Footer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Height</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>Grey<span class="token punctuation">.</span>Lighten1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>pdf的页面页面总是有三个元素：页眉，页脚，内容。查看我们生成的文档,过去，我们已经有不同的颜色了，其中每个人都有简单或大小</p><p>我们来填充他的页眉，我们把数据源整理好之后，就可以调用元素方法填充</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Compose</span><span class="token punctuation">(</span><span class="token class-name">IDocumentContainer</span> container<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            container
                <span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span>page <span class="token operator">=&gt;</span>
                <span class="token punctuation">{</span>
                    page<span class="token punctuation">.</span><span class="token function">PageColor</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>Red<span class="token punctuation">.</span>Lighten1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    page<span class="token punctuation">.</span><span class="token function">Size</span><span class="token punctuation">(</span>PageSizes<span class="token punctuation">.</span>A4<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    page<span class="token punctuation">.</span><span class="token function">Margin</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//外边距</span>

      
                    page<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Height</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>LightBlue<span class="token punctuation">.</span>Lighten1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Element</span><span class="token punctuation">(</span>ComposeHeader<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    page<span class="token punctuation">.</span><span class="token function">Content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>Grey<span class="token punctuation">.</span>Lighten3<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    page<span class="token punctuation">.</span><span class="token function">Footer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Height</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>Grey<span class="token punctuation">.</span>Lighten1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ComposeHeader</span><span class="token punctuation">(</span><span class="token class-name">IContainer</span> container<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> titleStyle <span class="token operator">=</span> TextStyle<span class="token punctuation">.</span>Default<span class="token punctuation">.</span><span class="token function">FontSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SemiBold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontColor</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>Blue<span class="token punctuation">.</span>Medium<span class="token punctuation">)</span><span class="token punctuation">;</span>

            container<span class="token punctuation">.</span><span class="token function">Row</span><span class="token punctuation">(</span>row <span class="token operator">=&gt;</span>
            <span class="token punctuation">{</span>
                row<span class="token punctuation">.</span><span class="token function">RelativeItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Column</span><span class="token punctuation">(</span>column <span class="token operator">=&gt;</span>
                <span class="token punctuation">{</span>
                    column<span class="token punctuation">.</span><span class="token function">Item</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;发票 #</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Model<span class="token punctuation">.</span>InvoiceNumber</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Style</span><span class="token punctuation">(</span>titleStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    column<span class="token punctuation">.</span><span class="token function">Item</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=&gt;</span>
                    <span class="token punctuation">{</span>
                        text<span class="token punctuation">.</span><span class="token function">Span</span><span class="token punctuation">(</span><span class="token string">&quot;发行日期: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SemiBold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        text<span class="token punctuation">.</span><span class="token function">Span</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Model<span class="token punctuation">.</span>IssueDate</span><span class="token format-string"><span class="token punctuation">:</span>d</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    column<span class="token punctuation">.</span><span class="token function">Item</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=&gt;</span>
                    <span class="token punctuation">{</span>
                        text<span class="token punctuation">.</span><span class="token function">Span</span><span class="token punctuation">(</span><span class="token string">&quot;支付日期: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SemiBold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        text<span class="token punctuation">.</span><span class="token function">Span</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Model<span class="token punctuation">.</span>DueDate</span><span class="token format-string"><span class="token punctuation">:</span>d</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">;</span>

            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后我们来实现内容，</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Compose</span><span class="token punctuation">(</span><span class="token class-name">IDocumentContainer</span> container<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            container
                <span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span>page <span class="token operator">=&gt;</span>
                <span class="token punctuation">{</span>
                    page<span class="token punctuation">.</span><span class="token function">PageColor</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>Red<span class="token punctuation">.</span>Lighten1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    page<span class="token punctuation">.</span><span class="token function">Size</span><span class="token punctuation">(</span>PageSizes<span class="token punctuation">.</span>A4<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    page<span class="token punctuation">.</span><span class="token function">Margin</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//外边距</span>

      
                    page<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Height</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>LightBlue<span class="token punctuation">.</span>Lighten1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Element</span><span class="token punctuation">(</span>ComposeHeader<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    page<span class="token punctuation">.</span><span class="token function">Content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>Grey<span class="token punctuation">.</span>Lighten3<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Element</span><span class="token punctuation">(</span>ComposeContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    page<span class="token punctuation">.</span><span class="token function">Footer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Height</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>Grey<span class="token punctuation">.</span>Lighten1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ComposeHeader</span><span class="token punctuation">(</span><span class="token class-name">IContainer</span> container<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> titleStyle <span class="token operator">=</span> TextStyle<span class="token punctuation">.</span>Default<span class="token punctuation">.</span><span class="token function">FontSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SemiBold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontColor</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>Blue<span class="token punctuation">.</span>Medium<span class="token punctuation">)</span><span class="token punctuation">;</span>

            container<span class="token punctuation">.</span><span class="token function">Row</span><span class="token punctuation">(</span>row <span class="token operator">=&gt;</span>
            <span class="token punctuation">{</span>
                row<span class="token punctuation">.</span><span class="token function">RelativeItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Column</span><span class="token punctuation">(</span>column <span class="token operator">=&gt;</span>
                <span class="token punctuation">{</span>
                    column<span class="token punctuation">.</span><span class="token function">Item</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;发票 #</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Model<span class="token punctuation">.</span>InvoiceNumber</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Style</span><span class="token punctuation">(</span>titleStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    column<span class="token punctuation">.</span><span class="token function">Item</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=&gt;</span>
                    <span class="token punctuation">{</span>
                        text<span class="token punctuation">.</span><span class="token function">Span</span><span class="token punctuation">(</span><span class="token string">&quot;发行日期: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SemiBold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        text<span class="token punctuation">.</span><span class="token function">Span</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Model<span class="token punctuation">.</span>IssueDate</span><span class="token format-string"><span class="token punctuation">:</span>d</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    column<span class="token punctuation">.</span><span class="token function">Item</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=&gt;</span>
                    <span class="token punctuation">{</span>
                        text<span class="token punctuation">.</span><span class="token function">Span</span><span class="token punctuation">(</span><span class="token string">&quot;支付日期: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SemiBold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        text<span class="token punctuation">.</span><span class="token function">Span</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Model<span class="token punctuation">.</span>DueDate</span><span class="token format-string"><span class="token punctuation">:</span>d</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">;</span>

            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ComposeContent</span><span class="token punctuation">(</span><span class="token class-name">IContainer</span> container<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            container<span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span>table <span class="token operator">=&gt;</span>
            <span class="token punctuation">{</span>
                <span class="token comment">// step 1</span>
                table<span class="token punctuation">.</span><span class="token function">ColumnsDefinition</span><span class="token punctuation">(</span>columns <span class="token operator">=&gt;</span>
                <span class="token punctuation">{</span>
                    columns<span class="token punctuation">.</span><span class="token function">ConstantColumn</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    columns<span class="token punctuation">.</span><span class="token function">RelativeColumn</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    columns<span class="token punctuation">.</span><span class="token function">RelativeColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    columns<span class="token punctuation">.</span><span class="token function">RelativeColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    columns<span class="token punctuation">.</span><span class="token function">RelativeColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">// step 2</span>
                table<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span>header <span class="token operator">=&gt;</span>
                <span class="token punctuation">{</span>
                    header<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    header<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&quot;商品&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    header<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AlignRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&quot;价格&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    header<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AlignRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&quot;数量&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    header<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AlignRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&quot;总价&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    header<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ColumnSpan</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">PaddingVertical</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">BorderBottom</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">BorderColor</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>Black<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">// step 3</span>
                <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> item <span class="token keyword">in</span> Model<span class="token punctuation">.</span>Items<span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    table<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Element</span><span class="token punctuation">(</span>CellStyle<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span>Model<span class="token punctuation">.</span>Items<span class="token punctuation">.</span><span class="token function">IndexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    table<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Element</span><span class="token punctuation">(</span>CellStyle<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    table<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Element</span><span class="token punctuation">(</span>CellStyle<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AlignRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">item<span class="token punctuation">.</span>Price</span><span class="token punctuation">}</span></span><span class="token string">$&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    table<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Element</span><span class="token punctuation">(</span>CellStyle<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AlignRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>Quantity<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    table<span class="token punctuation">.</span><span class="token function">Cell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Element</span><span class="token punctuation">(</span>CellStyle<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AlignRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">item<span class="token punctuation">.</span>Price <span class="token operator">*</span> item<span class="token punctuation">.</span>Quantity</span><span class="token punctuation">}</span></span><span class="token string">$&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;simhei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token keyword">static</span> <span class="token return-type class-name">IContainer</span> <span class="token function">CellStyle</span><span class="token punctuation">(</span><span class="token class-name">IContainer</span> container<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> container<span class="token punctuation">.</span><span class="token function">BorderBottom</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">BorderColor</span><span class="token punctuation">(</span>Colors<span class="token punctuation">.</span>Grey<span class="token punctuation">.</span>Lighten2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">PaddingVertical</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span>
       
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在准备这些工作做完之后我们就可以生成Pdf文档了</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> filePath <span class="token operator">=</span> <span class="token string">&quot;invoice.pdf&quot;</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> model <span class="token operator">=</span> InvoiceDocumentDataSource<span class="token punctuation">.</span><span class="token function">GetInvoiceDetails</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> document <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">InvoiceDocument</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span><span class="token function">GeneratePdf</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="视频教程" tabindex="-1"><a class="header-anchor" href="#视频教程"><span>视频教程</span></a></h2>`,28),k={href:"https://www.bilibili.com/video/BV1Qc411d7gN?spm_id_from=333.1245.0.0",target:"_blank",rel:"noopener noreferrer"},r=n("h2",{id:"资料",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#资料"},[n("span",null,"资料")])],-1),d={href:"https://mp.weixin.qq.com/s/TZp2PwHd9VRZk6_sdW4cQw",target:"_blank",rel:"noopener noreferrer"},m={href:"https://mp.weixin.qq.com/s/1ApjlbVqJpJSW_fRO5VWfA",target:"_blank",rel:"noopener noreferrer"};function v(b,g){const a=o("ExternalLinkIcon");return e(),c("div",null,[l,n("p",null,[n("a",k,[s("在 .NET 中创建 PDF 的最简单方法"),t(a)])]),r,n("p",null,[n("a",d,[s("https://mp.weixin.qq.com/s/TZp2PwHd9VRZk6_sdW4cQw"),t(a)]),s(" | C#/.Net 不要再使用Aspose和iTextSharp啦！QuestPDF操作生成PDF更快更高效！ "),n("a",m,[s("https://mp.weixin.qq.com/s/1ApjlbVqJpJSW_fRO5VWfA"),t(a)]),s(" | 用 QuestPDF操作生成PDF更快更高效！")])])}const h=p(i,[["render",v],["__file","questpdf.html.vue"]]),w=JSON.parse('{"path":"/middleware/office/pdf/questpdf.html","title":"QuestPDF","lang":"zh-CN","frontmatter":{"title":"QuestPDF","lang":"zh-CN","date":"2023-06-24T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"questpdf","slug":"tukgfx","docsId":"74879308","description":"概述 QuestPDF 是一个现代化的开源 .NET 库，用于生成PDF文档。它提供了一套强大的 API，使开发人员能够使用 C#语言来创建、编辑和处理 PDF 文件。QuestPDF 提供了丰富的功能，包括布局引擎、多平台支持、高级语言支持、文本样式控制、图像插入、表格和列表、链接和书签、字体和颜色管理、PDF 文件合并和拆分等。 最近更新：2023...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/office/pdf/questpdf.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"QuestPDF"}],["meta",{"property":"og:description","content":"概述 QuestPDF 是一个现代化的开源 .NET 库，用于生成PDF文档。它提供了一套强大的 API，使开发人员能够使用 C#语言来创建、编辑和处理 PDF 文件。QuestPDF 提供了丰富的功能，包括布局引擎、多平台支持、高级语言支持、文本样式控制、图像插入、表格和列表、链接和书签、字体和颜色管理、PDF 文件合并和拆分等。 最近更新：2023..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-31T02:36:37.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-06-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-31T02:36:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"QuestPDF\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-24T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-31T02:36:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"为什么使用","slug":"为什么使用","link":"#为什么使用","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"简单例子","slug":"简单例子","link":"#简单例子","children":[]},{"level":3,"title":"模板生成","slug":"模板生成","link":"#模板生成","children":[]}]},{"level":2,"title":"视频教程","slug":"视频教程","link":"#视频教程","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1711852597000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":3}]},"readingTime":{"minutes":4.62,"words":1387},"filePathRelative":"middleware/office/pdf/questpdf.md","localizedDate":"2023年6月24日","excerpt":"<h2>概述</h2>\\n<p>QuestPDF 是一个现代化的开源 .NET 库，用于生成PDF文档。它提供了一套强大的 API，使开发人员能够使用 C#语言来创建、编辑和处理 PDF 文件。QuestPDF 提供了丰富的功能，包括布局引擎、多平台支持、高级语言支持、文本样式控制、图像插入、表格和列表、链接和书签、字体和颜色管理、PDF 文件合并和拆分等。\\n最近更新：2023.05.03\\n下载量：1.71M(2023年6月24日)</p>\\n<h2>为什么使用</h2>\\n<ul>\\n<li>强有力的布局引擎：Quest PDF 提供了专为文档生成设计的布局引擎，提供完整的分页支持，内容的高度控制。</li>\\n<li>支持多个平台：Quest PDF 支持多个平台，包括 Windows、Linux、macOS，以及通过 WebAssembly 运行。</li>\\n<li>Fluent API：Quest采用了 FluentAPI 代码风格，使代码更简洁易懂。</li>\\n<li>代码复用：在布局过程中可以实现代码复用。</li>\\n<li>维护便利性：使用纯C#代码来实现，而不依赖于二进制格式或复杂 HTML。</li>\\n<li>热加载：无需重新编译代码即可实时预览。</li>\\n<li>高性能：Quest PDF 具有高性能和使用资源比较低特性，每核每分钟生成高达1000个 PDF 文件，整个处理过程是线程安全。</li>\\n</ul>","autoDesc":true}');export{h as comp,w as data};
