import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as i,b as e,e as n,f as t,d as r}from"./app-Bfb6-vFH.js";const p={},l=r(`<h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="配置动态schema" tabindex="-1"><a class="header-anchor" href="#配置动态schema"><span>配置动态Schema</span></a></h3><p>首先在EfCore在指定表名的时候，是可以顺带指定schema的，例如</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span><span class="token function">ToTable</span><span class="token punctuation">(</span>genericType<span class="token punctuation">.</span>Name<span class="token punctuation">.</span><span class="token function">ToLower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;sample&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),h={href:"https://www.shuzhiduo.com/A/pRdBaDa25n/",target:"_blank",rel:"noopener noreferrer"},m=e("h2",{id:"shardingcore",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#shardingcore"},[e("span",null,"ShardingCore")])],-1),d=e("p",null,"https://mp.weixin.qq.com/s/TDW2sZHPKYRDPWlsBA-aQg | ShardingCore 如何呈现“完美”分表 https://mp.weixin.qq.com/s/Eaer-QjHz-uIkR4p5WAeXw | “ShardingCore”是如何针对分表下的分页进行优化的 https://mp.weixin.qq.com/s/wyt0uUk37D3sY6RopdZBFQ | 支持c#的分表分库组件-Ctrip DAL https://mp.weixin.qq.com/s/7wg583hqVyQNDTo3QzZ2dw | 分库分表下极致的优化 https://mp.weixin.qq.com/s/UBu03KLC3H5_clJ1sirEwA | MariaDB Spider 数据库分库分表实践 分库分表 https://mp.weixin.qq.com/s/QfidtLyBB0EeDKi-57D1fw | 分库分表之历史表如何选择最佳分片路由规则 efcore 分表 https://www.cnblogs.com/xuejiaming/p/15173965.html#!comments",-1),u=e("p",null,"mysql分库分表 看看这个库是否满足你的需求，https://github.com/Coldairarrow/EFCore.Sharding https://www.cnblogs.com/xuejiaming/p/15728340.html https://mp.weixin.qq.com/s/ZwhLCzVs1foBvzBdeHCwGQ | .NET 分库分表高性能：瀑布流分页",-1),g=e("h2",{id:"参考文档",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考文档"},[e("span",null,"参考文档")])],-1),f={href:"https://learn.microsoft.com/zh-cn/ef/core/modeling/dynamic-model",target:"_blank",rel:"noopener noreferrer"},k={href:"https://mp.weixin.qq.com/s/S1P_gDHjDPh-Cn-8dw5jHg",target:"_blank",rel:"noopener noreferrer"};function _(w,y){const a=o("ExternalLinkIcon");return c(),i("div",null,[l,e("p",null,[n("但是你修改了不起作用，是因为 EF 生成模型并仅运行一次 OnModelCreating，出于性能考虑，缓存了结果。 但是，可以挂接到模型缓存机制，使 EF 知道生成不同模型的属性。 所以就需要重写IModelCacheKeyFactory，并且要将服务替换为正确的实现； 参考资料："),e("a",h,[n("https://www.shuzhiduo.com/A/pRdBaDa25n/"),t(a)])]),m,d,u,g,e("p",null,[n("具有相同DbContext的交替模型："),e("a",f,[n("https://learn.microsoft.com/zh-cn/ef/core/modeling/dynamic-model"),t(a)]),n(" 分库分表查询优化："),e("a",k,[n("https://mp.weixin.qq.com/s/S1P_gDHjDPh-Cn-8dw5jHg"),t(a)])])])}const x=s(p,[["render",_],["__file","fenkufenbiao.html.vue"]]),q=JSON.parse('{"path":"/orm/efcore/jinjie/fenkufenbiao.html","title":"分库分表","lang":"zh-CN","frontmatter":{"title":"分库分表","lang":"zh-CN","date":"2023-04-02T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["orm"],"tag":["无"],"filename":"fenkufenbiao","slug":"nghqe3wpg0c3lhbk","docsId":"116787577","description":"操作 配置动态Schema 首先在EfCore在指定表名的时候，是可以顺带指定schema的，例如 但是你修改了不起作用，是因为 EF 生成模型并仅运行一次 OnModelCreating，出于性能考虑，缓存了结果。 但是，可以挂接到模型缓存机制，使 EF 知道生成不同模型的属性。 所以就需要重写IModelCacheKeyFactory，并且要将服务...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/orm/efcore/jinjie/fenkufenbiao.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"分库分表"}],["meta",{"property":"og:description","content":"操作 配置动态Schema 首先在EfCore在指定表名的时候，是可以顺带指定schema的，例如 但是你修改了不起作用，是因为 EF 生成模型并仅运行一次 OnModelCreating，出于性能考虑，缓存了结果。 但是，可以挂接到模型缓存机制，使 EF 知道生成不同模型的属性。 所以就需要重写IModelCacheKeyFactory，并且要将服务..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-13T10:02:52.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-04-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-13T10:02:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分库分表\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-13T10:02:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"配置动态Schema","slug":"配置动态schema","link":"#配置动态schema","children":[]}]},{"level":2,"title":"ShardingCore","slug":"shardingcore","link":"#shardingcore","children":[]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1690042937000,"updatedTime":1694599372000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1},{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":1.12,"words":335},"filePathRelative":"orm/efcore/jinjie/fenkufenbiao.md","localizedDate":"2023年4月2日","excerpt":"<h2>操作</h2>\\n<h3>配置动态Schema</h3>\\n<p>首先在EfCore在指定表名的时候，是可以顺带指定schema的，例如</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code>builder<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ToTable</span><span class=\\"token punctuation\\">(</span>genericType<span class=\\"token punctuation\\">.</span>Name<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ToLower</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"sample\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{x as comp,q as data};
