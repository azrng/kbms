import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as e,c as o,b as n,e as s,f as c,d as l}from"./app-CBxp4zeL.js";const u={},i=l(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>EPPlus是一个使用Open Office XML(xlsx)文件格式，能读写Excel 2007/2010 文件的开源组件，在导出Excel的时候不需要电脑上安装office，它的一个缺点就是不支持导出2003版的Excel(xls)。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>安装nuget包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;EPPlus&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;5.8.3&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="导出excel" tabindex="-1"><a class="header-anchor" href="#导出excel"><span>导出excel</span></a></h3><p>获取数据并调用ExcelHelper公共类的方法执行导出xlsx文件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>ActionResult<span class="token punctuation">&gt;</span></span> <span class="token function">ExeclExportAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> list <span class="token operator">=</span> <span class="token keyword">await</span> _context<span class="token punctuation">.</span>Users<span class="token punctuation">.</span><span class="token function">ToListAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ConfigureAwait</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//改成你自己的获取数据方法</span>
    <span class="token class-name"><span class="token keyword">var</span></span> columns <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token punctuation">{</span><span class="token string">&quot;Id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ID&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token string">&quot;Account&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;帐号&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token string">&quot;PassWord&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;密码&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token string">&quot;CreateTime&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;创建时间&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token string">&quot;IsValid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;是否有效&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> bytes <span class="token operator">=</span> ExcelHelper<span class="token punctuation">.</span><span class="token function">GetByteToExportExcel</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> columns<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">File</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span> <span class="token string">&quot;application/ms-excel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ceshi&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;.xlsx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//此处ceshi为文件的名字，看情况自定义</span>
<span class="token punctuation">}</span>


<span class="token comment">//返回base64码示例</span>
<span class="token class-name"><span class="token keyword">var</span></span> columns <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">{</span><span class="token string">&quot;UserId&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;用户Id&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string">&quot;Avatar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;微信头像&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string">&quot;NickName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;微信昵称&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string">&quot;CreateTime&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;热议时间&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> bytes <span class="token operator">=</span> ExcelHelper<span class="token punctuation">.</span><span class="token function">GetByteToExportExcel</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>Data<span class="token punctuation">,</span> columns<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> time <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">ToTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> fileName <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">time</span><span class="token punctuation">}</span></span><span class="token string">.xlsx&quot;</span></span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> fileResult <span class="token operator">=</span> <span class="token keyword">new</span>
<span class="token punctuation">{</span>
    FileName <span class="token operator">=</span> fileName<span class="token punctuation">,</span>
    Base64Str <span class="token operator">=</span> Convert<span class="token punctuation">.</span><span class="token function">ToBase64String</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token function">Success</span><span class="token punctuation">(</span>fileResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加以下公共类到项目中</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// excel导出扩展</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ExcelHelper</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 获取Excel文件流</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>datas<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columnNames<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>列名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sheetName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>工作表名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isProtected<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>是否加密<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeparam</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>T<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeparam</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token generic-method"><span class="token function">GetByteToExportExcel</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name">IEnumerable<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> datas<span class="token punctuation">,</span> <span class="token class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> columnNames<span class="token punctuation">,</span>
        <span class="token class-name"><span class="token keyword">string</span></span> sheetName <span class="token operator">=</span> <span class="token string">&quot;Sheet1&quot;</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> title <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> isProtected <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> fs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MemoryStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> package <span class="token operator">=</span> <span class="token function">CreateExcelPackage</span><span class="token punctuation">(</span>datas<span class="token punctuation">,</span> columnNames<span class="token punctuation">,</span> sheetName<span class="token punctuation">,</span> title<span class="token punctuation">,</span> isProtected<span class="token punctuation">)</span><span class="token punctuation">;</span>
        package<span class="token punctuation">.</span><span class="token function">SaveAs</span><span class="token punctuation">(</span>fs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> fs<span class="token punctuation">.</span><span class="token function">ToArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 创建ExcelPackage</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeparam</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>T<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeparam</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>datas<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>数据实体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columnNames<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>列名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sheetName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>sheet名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isProtected<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>是否加密<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name">ExcelPackage</span> <span class="token generic-method"><span class="token function">CreateExcelPackage</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name">IEnumerable<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> datas<span class="token punctuation">,</span> <span class="token class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> columnNames<span class="token punctuation">,</span>
        <span class="token class-name"><span class="token keyword">string</span></span> sheetName <span class="token operator">=</span> <span class="token string">&quot;Sheet1&quot;</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> title <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> isProtected <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        ExcelPackage<span class="token punctuation">.</span>LicenseContext <span class="token operator">=</span> LicenseContext<span class="token punctuation">.</span>NonCommercial<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> package <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ExcelPackage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> worksheet <span class="token operator">=</span> package<span class="token punctuation">.</span>Workbook<span class="token punctuation">.</span>Worksheets<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>sheetName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isProtected <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            worksheet<span class="token punctuation">.</span>Protection<span class="token punctuation">.</span>IsProtected <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">//设置是否进行锁定</span>
            worksheet<span class="token punctuation">.</span>Protection<span class="token punctuation">.</span><span class="token function">SetPassword</span><span class="token punctuation">(</span><span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置密码</span>
            worksheet<span class="token punctuation">.</span>Protection<span class="token punctuation">.</span>AllowAutoFilter <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">//下面是一些锁定时权限的设置</span>
            worksheet<span class="token punctuation">.</span>Protection<span class="token punctuation">.</span>AllowDeleteColumns <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            worksheet<span class="token punctuation">.</span>Protection<span class="token punctuation">.</span>AllowDeleteRows <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            worksheet<span class="token punctuation">.</span>Protection<span class="token punctuation">.</span>AllowEditScenarios <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            worksheet<span class="token punctuation">.</span>Protection<span class="token punctuation">.</span>AllowEditObject <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            worksheet<span class="token punctuation">.</span>Protection<span class="token punctuation">.</span>AllowFormatCells <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            worksheet<span class="token punctuation">.</span>Protection<span class="token punctuation">.</span>AllowFormatColumns <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            worksheet<span class="token punctuation">.</span>Protection<span class="token punctuation">.</span>AllowFormatRows <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            worksheet<span class="token punctuation">.</span>Protection<span class="token punctuation">.</span>AllowInsertColumns <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            worksheet<span class="token punctuation">.</span>Protection<span class="token punctuation">.</span>AllowInsertHyperlinks <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            worksheet<span class="token punctuation">.</span>Protection<span class="token punctuation">.</span>AllowInsertRows <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            worksheet<span class="token punctuation">.</span>Protection<span class="token punctuation">.</span>AllowPivotTables <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            worksheet<span class="token punctuation">.</span>Protection<span class="token punctuation">.</span>AllowSelectLockedCells <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            worksheet<span class="token punctuation">.</span>Protection<span class="token punctuation">.</span>AllowSelectUnlockedCells <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            worksheet<span class="token punctuation">.</span>Protection<span class="token punctuation">.</span>AllowSort <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name"><span class="token keyword">var</span></span> titleRow <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrWhiteSpace</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            titleRow <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            worksheet<span class="token punctuation">.</span>Cells<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> columnNames<span class="token punctuation">.</span>Count<span class="token punctuation">]</span><span class="token punctuation">.</span>Merge <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//合并单元格</span>
            worksheet<span class="token punctuation">.</span>Cells<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value <span class="token operator">=</span> title<span class="token punctuation">;</span>
            worksheet<span class="token punctuation">.</span>Cells<span class="token punctuation">.</span>Style<span class="token punctuation">.</span>WrapText <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            worksheet<span class="token punctuation">.</span>Cells<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Style<span class="token punctuation">.</span>HorizontalAlignment <span class="token operator">=</span> ExcelHorizontalAlignment<span class="token punctuation">.</span>Center<span class="token punctuation">;</span> <span class="token comment">//水平居中</span>
            worksheet<span class="token punctuation">.</span>Cells<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Style<span class="token punctuation">.</span>VerticalAlignment <span class="token operator">=</span> ExcelVerticalAlignment<span class="token punctuation">.</span>Center<span class="token punctuation">;</span> <span class="token comment">//垂直居中</span>
            worksheet<span class="token punctuation">.</span><span class="token function">Row</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Height <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span> <span class="token comment">//设置行高</span>
            worksheet<span class="token punctuation">.</span>Cells<span class="token punctuation">.</span>Style<span class="token punctuation">.</span>ShrinkToFit <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//单元格自动适应大小</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//获取要反射的属性,加载首行</span>
        <span class="token class-name">Type</span> myType <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">T</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> myPro <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>PropertyInfo<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> key <span class="token keyword">in</span> columnNames<span class="token punctuation">.</span>Keys<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">PropertyInfo</span> p <span class="token operator">=</span> myType<span class="token punctuation">.</span><span class="token function">GetProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            myPro<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
            worksheet<span class="token punctuation">.</span>Cells<span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">+</span> titleRow<span class="token punctuation">,</span> i<span class="token punctuation">]</span><span class="token punctuation">.</span>Value <span class="token operator">=</span> columnNames<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name"><span class="token keyword">int</span></span> row <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">+</span> titleRow<span class="token punctuation">;</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">T</span> data <span class="token keyword">in</span> datas<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">int</span></span> column <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">PropertyInfo</span> p <span class="token keyword">in</span> myPro<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                worksheet<span class="token punctuation">.</span>Cells<span class="token punctuation">[</span>row<span class="token punctuation">,</span> column<span class="token punctuation">]</span><span class="token punctuation">.</span>Value <span class="token operator">=</span> Convert<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">GetValue</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                column<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            row<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> package<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="导入excel" tabindex="-1"><a class="header-anchor" href="#导入excel"><span>导入excel</span></a></h3><p>示例</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">ExcelPackage</span> package <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ExcelPackage</span><span class="token punctuation">(</span>existingFile<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">ExcelWorksheet</span> worksheet <span class="token operator">=</span> package<span class="token punctuation">.</span>Workbook<span class="token punctuation">.</span>Worksheets<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    
    <span class="token comment">//获取表格的列数和行数</span>
    <span class="token class-name"><span class="token keyword">int</span></span> rowCount <span class="token operator">=</span> worksheet<span class="token punctuation">.</span>Dimension<span class="token punctuation">.</span>Rows<span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">int</span></span> colCount <span class="token operator">=</span> worksheet<span class="token punctuation">.</span>Dimension<span class="token punctuation">.</span>Columns<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> row <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> row <span class="token operator">&lt;=</span> rowCount<span class="token punctuation">;</span> row<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 具体的获取数据</span>
        <span class="token comment">// worksheet.Cells[row, 1].Value.ToString();</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="导出pdf" tabindex="-1"><a class="header-anchor" href="#导出pdf"><span>导出pdf</span></a></h3><p>逻辑：先将excel导入然后解析生成html，再通过IronPdf组件将html转pdf导出</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 将excel导出为pdf</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">[</span><span class="token function">HttpPost</span><span class="token punctuation">(</span><span class="token string">&quot;exportpdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">ExportPdf</span><span class="token punctuation">(</span><span class="token class-name">IFormFile</span> file<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// 读取Excel文件</span>
    <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> package <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ExcelPackage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">OpenReadStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ExcelPackage<span class="token punctuation">.</span>LicenseContext <span class="token operator">=</span> LicenseContext<span class="token punctuation">.</span>NonCommercial<span class="token punctuation">;</span>
    <span class="token class-name">ExcelWorksheet</span> worksheet <span class="token operator">=</span> package<span class="token punctuation">.</span>Workbook<span class="token punctuation">.</span>Worksheets<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 假设要转换的工作表是第一个工作表</span>

    <span class="token comment">// 创建一个HTML字符串，将Excel内容转换为HTML</span>
    <span class="token class-name"><span class="token keyword">string</span></span> htmlContent <span class="token operator">=</span> <span class="token function">ExcelToHtml</span><span class="token punctuation">(</span>worksheet<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 使用IronPDF将HTML字符串转换为PDF</span>
    <span class="token class-name"><span class="token keyword">var</span></span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HtmlToPdf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    renderer<span class="token punctuation">.</span>PrintOptions<span class="token punctuation">.</span>MarginTop <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    renderer<span class="token punctuation">.</span>PrintOptions<span class="token punctuation">.</span>MarginBottom <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    renderer<span class="token punctuation">.</span>PrintOptions<span class="token punctuation">.</span>MarginLeft <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    renderer<span class="token punctuation">.</span>PrintOptions<span class="token punctuation">.</span>MarginRight <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> pdf <span class="token operator">=</span> renderer<span class="token punctuation">.</span><span class="token function">RenderHtmlAsPdf</span><span class="token punctuation">(</span>htmlContent<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 保存PDF文件</span>
    pdf<span class="token punctuation">.</span><span class="token function">SaveAs</span><span class="token punctuation">(</span><span class="token string">&quot;d://temp//11.pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 将excel转html</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>worksheet<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">ExcelToHtml</span><span class="token punctuation">(</span><span class="token class-name">ExcelWorksheet</span> worksheet<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sb<span class="token punctuation">.</span><span class="token function">AppendLine</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;table&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> startRow <span class="token operator">=</span> worksheet<span class="token punctuation">.</span>Dimension<span class="token punctuation">.</span>Start<span class="token punctuation">.</span>Row<span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> endRow <span class="token operator">=</span> worksheet<span class="token punctuation">.</span>Dimension<span class="token punctuation">.</span>End<span class="token punctuation">.</span>Row<span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> startColumn <span class="token operator">=</span> worksheet<span class="token punctuation">.</span>Dimension<span class="token punctuation">.</span>Start<span class="token punctuation">.</span>Column<span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> endColumn <span class="token operator">=</span> worksheet<span class="token punctuation">.</span>Dimension<span class="token punctuation">.</span>End<span class="token punctuation">.</span>Column<span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> row <span class="token operator">=</span> startRow<span class="token punctuation">;</span> row <span class="token operator">&lt;=</span> endRow<span class="token punctuation">;</span> row<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        sb<span class="token punctuation">.</span><span class="token function">AppendLine</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;tr&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> col <span class="token operator">=</span> startColumn<span class="token punctuation">;</span> col <span class="token operator">&lt;=</span> endColumn<span class="token punctuation">;</span> col<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> cellValue <span class="token operator">=</span> worksheet<span class="token punctuation">.</span>Cells<span class="token punctuation">[</span>row<span class="token punctuation">,</span> col<span class="token punctuation">]</span><span class="token punctuation">.</span>Value<span class="token punctuation">;</span>
            sb<span class="token punctuation">.</span><span class="token function">AppendLine</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;td&gt;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>cellValue <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token punctuation">?</span> cellValue<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&lt;/td&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        sb<span class="token punctuation">.</span><span class="token function">AppendLine</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/tr&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    sb<span class="token punctuation">.</span><span class="token function">AppendLine</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/table&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,17),k={href:"https://mp.weixin.qq.com/s/tRVzBBv6Q6jdhcap6Jmq_g",target:"_blank",rel:"noopener noreferrer"};function r(d,m){const a=p("ExternalLinkIcon");return e(),o("div",null,[i,n("p",null,[n("a",k,[s("https://mp.weixin.qq.com/s/tRVzBBv6Q6jdhcap6Jmq_g"),c(a)]),s(" | EPPlus导出Excel感觉很不错~~~")])])}const b=t(u,[["render",r],["__file","epplus.html.vue"]]),w=JSON.parse('{"path":"/middleware/office/epplus.html","title":"EPPlus","lang":"zh-CN","frontmatter":{"title":"EPPlus","lang":"zh-CN","date":"2023-06-24T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"epplus","slug":"gt5eax","docsId":"47029870","description":"介绍 EPPlus是一个使用Open Office XML(xlsx)文件格式，能读写Excel 2007/2010 文件的开源组件，在导出Excel的时候不需要电脑上安装office，它的一个缺点就是不支持导出2003版的Excel(xls)。 操作 安装nuget包 导出excel 获取数据并调用ExcelHelper公共类的方法执行导出xlsx文...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/office/epplus.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"EPPlus"}],["meta",{"property":"og:description","content":"介绍 EPPlus是一个使用Open Office XML(xlsx)文件格式，能读写Excel 2007/2010 文件的开源组件，在导出Excel的时候不需要电脑上安装office，它的一个缺点就是不支持导出2003版的Excel(xls)。 操作 安装nuget包 导出excel 获取数据并调用ExcelHelper公共类的方法执行导出xlsx文..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-06-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"EPPlus\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-24T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"导出excel","slug":"导出excel","link":"#导出excel","children":[]},{"level":3,"title":"导入excel","slug":"导入excel","link":"#导入excel","children":[]},{"level":3,"title":"导出pdf","slug":"导出pdf","link":"#导出pdf","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":3.23,"words":969},"filePathRelative":"middleware/office/epplus.md","localizedDate":"2023年6月24日","excerpt":"<h2>介绍</h2>\\n<p>EPPlus是一个使用Open Office XML(xlsx)文件格式，能读写Excel 2007/2010 文件的开源组件，在导出Excel的时候不需要电脑上安装office，它的一个缺点就是不支持导出2003版的Excel(xls)。</p>\\n<h2>操作</h2>\\n<p>安装nuget包</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">PackageReference</span> Include<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"EPPlus\\"</span> Version<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"5.8.3\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n</code></pre></div>","autoDesc":true}');export{b as comp,w as data};
