import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as s,c as l,a as t,d as e,e as o,b as h}from"./app-qB9_Bjjp.js";const i="/kbms/common/1642519842434-6a3c7771-9f17-4abc-9242-828cd2a2385b.png",c="/kbms/common/1642519842318-61f9a571-d9e2-4680-b75f-c78b37957fac.png",p="/kbms/common/1642519842465-6b402cda-bef4-4830-ab75-648a13212cc6.png",_="/kbms/common/1642519842516-0bd5b960-036d-4ff8-8250-795ee6257a7c.png",d={},g=t("div",{class:"hint-container tip"},[t("p",{class:"hint-container-title"},"提示"),t("p",null,"来自网络，内容是否过时自行判断")],-1),b=t("h2",{id:"深入-net",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#深入-net"},[t("span",null,"深入.NET")])],-1),m={href:"http://www.cnblogs.com/artech/p/how-to-cross-platform-01.html",target:"_blank",rel:"noopener noreferrer"},f={href:"http://www.cnblogs.com/artech/p/how-to-cross-platform-02.html",target:"_blank",rel:"noopener noreferrer"},w={href:"http://www.cnblogs.com/artech/p/how-to-cross-platform-03.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://zhuanlan.zhihu.com/p/24267356",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/dotnet/standard/blob/master/docs/versions.md",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/dotnet/standard",target:"_blank",rel:"noopener noreferrer"},T={href:"https://www.oschina.net/news/118690/the-future-of-net-standard?from=20200920",target:"_blank",rel:"noopener noreferrer"},E=t("li",null,"用于在.NET Framework 和所有其他平台之间共享代码，使用netstandard2.0",-1),N=t("li",null,"用于在Mono，Xamarin 和.NET Core 3.x 之间共享代码，使用netstandard2.1",-1),A={href:"https://docs.microsoft.com/en-us/dotnet/api/?view=netstandard-2.0",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.cnblogs.com/willick/p/15117222.html",target:"_blank",rel:"noopener noreferrer"},y={href:"https://www.cnblogs.com/artech/p/inside-asp-net-core-framework.html",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.cnblogs.com/FlyLolo/p/ASPNETCore2_5.html",target:"_blank",rel:"noopener noreferrer"},S={href:"https://www.cnblogs.com/lwqlun/p/9704702.html",target:"_blank",rel:"noopener noreferrer"},z={href:"https://docs.microsoft.com/zh-cn/dotnet/core/run-time-config/",target:"_blank",rel:"noopener noreferrer"},P={href:"https://cloud.tencent.com/developer/article/1342410?from=14588",target:"_blank",rel:"noopener noreferrer"},D={href:"https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/servers/?view=aspnetcore-5.0&tabs=windows",target:"_blank",rel:"noopener noreferrer"},q={href:"https://mp.weixin.qq.com/s/2MV6-Q5XDkntonjevOtZrg",target:"_blank",rel:"noopener noreferrer"},I={href:"https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/servers/kestrel?view=aspnetcore-2.2",target:"_blank",rel:"noopener noreferrer"},j={href:"https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/servers/httpsys?view=aspnetcore-2.2",target:"_blank",rel:"noopener noreferrer"},O={href:"https://mp.weixin.qq.com/s/7M18VhTz5y0W620sCEvXYQ",target:"_blank",rel:"noopener noreferrer"},M={href:"https://www.cnblogs.com/h82258652/p/8748345.html",target:"_blank",rel:"noopener noreferrer"},B={href:"https://www.cnblogs.com/zhenglisai/p/14751677.html",target:"_blank",rel:"noopener noreferrer"},R={href:"https://mp.weixin.qq.com/s/-H1PMAQuEy0FGQ1QMwgK-g",target:"_blank",rel:"noopener noreferrer"},H={href:"https://www.cnblogs.com/tianqing/p/11307049.html",target:"_blank",rel:"noopener noreferrer"},K={href:"https://www.cnblogs.com/huangxincheng/category/1967355.html",target:"_blank",rel:"noopener noreferrer"},L={href:"https://www.cnblogs.com/myshowtime/p/15587070.html",target:"_blank",rel:"noopener noreferrer"},G=t("h3",{id:"架构相关理论",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#架构相关理论"},[t("span",null,"架构相关理论")])],-1),W={href:"http://c.biancheng.net/view/8508.html",target:"_blank",rel:"noopener noreferrer"},V={href:"http://c.biancheng.net/view/8462.html",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://www.cnblogs.com/printN/p/6822333.html",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://docs.microsoft.com/zh-cn/dotnet/architecture/modern-web-apps-azure/common-web-application-architectures#clean-architecture",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://mp.weixin.qq.com/s/ta57G3kLbxpNZ1tZK7XS-w",target:"_blank",rel:"noopener noreferrer"},U={href:"https://segmentfault.com/a/1190000018626163",target:"_blank",rel:"noopener noreferrer"},F={href:"https://www.cnblogs.com/jurendage/p/12653865.html",target:"_blank",rel:"noopener noreferrer"},X={href:"https://blog.csdn.net/justyman/article/details/103221939",target:"_blank",rel:"noopener noreferrer"},J={href:"https://www.cnblogs.com/wzh2010/p/13874211.html",target:"_blank",rel:"noopener noreferrer"},$={href:"https://www.cnblogs.com/wzh2010/p/13874206.html",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://www.cnblogs.com/rjzheng/p/9041659.html",target:"_blank",rel:"noopener noreferrer"},te={href:"https://www.cnblogs.com/littlecharacter/p/9084291.html",target:"_blank",rel:"noopener noreferrer"},re={href:"https://blog.51cto.com/lizhenliang/2400452",target:"_blank",rel:"noopener noreferrer"},oe={href:"https://mp.weixin.qq.com/s/aWGEOID5vEUoOy4tnLft8w",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://mp.weixin.qq.com/s/NPyMO8ydGR7Eyrx7GK06sA",target:"_blank",rel:"noopener noreferrer"},ae={href:"https://www.jianshu.com/p/6e2917551e63",target:"_blank",rel:"noopener noreferrer"},se={href:"https://mp.weixin.qq.com/s/S72vrneBBcRQUyge3UNolg",target:"_blank",rel:"noopener noreferrer"},le={href:"https://www.cnblogs.com/dlhjw/p/15211689.html",target:"_blank",rel:"noopener noreferrer"},he=t("li",null,"领域：一个领域本质上可以理解为就是一个问题域，只要是同一个领域，那问题域就相同。所以，只要我们确定了系统所属的领域，那这个系统的核心业务，即要解决的关键问题、问题的范围边界就基本确定了。",-1),ie=t("li",null,"领域模型：就是将业务中涉及到的概念以面向对象的思想进行抽象，抽象出实体对象，确定实体所对应的方法和属性，以及实体之间的关系。然后将这些实体和实体之间的关系以某种形式（比如UML、图形、代码、文字描述等）展现出来。",-1),ce={href:"https://img2020.cnblogs.com/blog/106337/202111/106337-20211109153417874-113303678.jpg",target:"_blank",rel:"noopener noreferrer"},pe=t("img",{src:i,alt:"image.png",loading:"lazy"},null,-1),_e=t("li",null,"领域事件= 事件发布+ 事件存储+ 事件分发+ 事件处理",-1),de=t("li",null,"领域服务 l 领域服务是无状态的，它存在的意义就是协调多个领域对象完成某个操作，所有的状态还是都保存在相应的领域对象中。 l 领域服务还有一个很重要的功能就是可以避免领域逻辑泄露到应用层。因为如果没有领域服务，那么应用层会直接调用领域对象完成本该是属于领域服务该做的操作，这样一来，领域层可能会把一部分领域知识泄露到应用层。因为应用层需要了解每个领域对象的业务功能，具有哪些信息，以及它可能会与哪些其他领域对象交互，怎么交互等一系列领域知识。因此，引入领域服务可以有效的防治领域层的逻辑泄露到应用层。",-1),ge=t("li",null,"聚合和聚合根 l 聚合的一些特点：",-1),be=h('<ol><li>每个聚合有一个根和一个边界，边界定义了一个聚合内部有哪些实体或值对象，根是聚合内的某个实体；</li><li>聚合内实现事务一致性，聚合外实现最终一致性（使用领域事件进行事务拆分，实现最终一致性）。在一个事务中，只能创建或更新一个聚合。</li><li>聚合内部的对象之间可以相互引用，但是聚合外部如果要访问聚合内部的对象时，必须通过聚合根开始导航，绝对不能绕过聚合根直接访问聚合内的对象，也就是说聚合根是外部访问聚合的网关；</li><li>聚合内除根以外的其他实体的唯一标识都是本地标识，也就是只要在聚合内部保持唯一即可，因为它们总是从属于这个聚合的；</li><li>基于聚合的以上概念，我们可以推论出从数据库查询时的单元也是以聚合为一个单元，也就是说我们不能直接查询聚合内部的某个非根的对象；</li><li>使用小聚合（大聚合会影响性能；大聚合容易导致并发冲突；大聚合扩展性差）</li><li>聚合内部的对象可以保持对其他聚合根的引用；</li><li>删除一个聚合根时必须同时删除该聚合内的所有相关对象，因为他们都同属于一个聚合，是一个完整的概念；</li><li>停下来重构模型。寻找模型中觉得有些疑问或者是蹩脚的地方，比如思考一些对象应该通过关联导航获得到还是应该从仓储获取？聚合设计的是否正确？考虑模型的性能怎样，等等； l 如何识别聚合： 先从业务的角度深入思考，然后慢慢分析出有哪些对象是：</li><li>有独立存在的意义，即它是不依赖于其他对象的存在它才有意义的；</li><li>可以被独立访问的，还是必须通过某个其他对象导航得到的； 有分析报告显示，通常在大部分领域模型中，有70%的聚合通常只有一个实体，即聚合根，该实体内部没有包含其他实体，只包含一些值对象；另外30%的聚合中，基本上也只包含两到三个实体。 l 如何识别聚合根： 如果一个聚合只有一个实体，那么这个实体就是聚合根；如果有多个实体，那么我们可以思考聚合内哪个对象有独立存在的意义并且可以和外部直接进行交互。</li></ol><ol start="7"><li>仓储 l 仓储里面存放的对象一定是聚合，原因是领域模型中是以聚合的概念去划分边界的；聚合是我们更新对象的一个边界，事实上我们把整个聚合看成是一个整体概念，要么一起被取出来，要么一起被删除。我们永远不会单独对某个聚合内的子对象进行单独查询或做更新操作。因此，我们只对聚合设计仓储 l 仓储还有一个重要的特征就是分为仓储定义部分和仓储实现部分，在领域模型中我们定义仓储的接口，而在基础设施层实现具体的仓储。这样做的原因是：由于仓储背后的实现都是在和数据库打交道，但是我们又不希望客户（如应用层）把重点放在如何从数据库获取数据的问题上，因为这样做会导致客户（应用层）代码很混乱，很可能会因此而忽略了领域模型的存在。 l 仓储定义的接口要有具体领域意义，不能是一个模糊的通用的接口。通用接口会导致取数据逻辑泄露到应用层或领域层。</li></ol>',2),me={href:"http://www.360doc.com/content/18/0408/13/40043863_743769502.shtml",target:"_blank",rel:"noopener noreferrer"},fe={href:"https://www.cnblogs.com/wzh2010/p/14940280.html",target:"_blank",rel:"noopener noreferrer"},we={href:"https://www.cnblogs.com/jackyfei/p/10856427.html",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://www.jianshu.com/p/18284ef827a4?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation",target:"_blank",rel:"noopener noreferrer"},ke={href:"https://blog.csdn.net/weixin_33705053/article/details/86720945",target:"_blank",rel:"noopener noreferrer"},Ce={href:"https://docs.microsoft.com/zh-cn/dotnet/architecture/microservices/",target:"_blank",rel:"noopener noreferrer"},Te={href:"https://blog.csdn.net/weixin_42674359/article/details/85099971",target:"_blank",rel:"noopener noreferrer"},Ee={href:"https://www.cnblogs.com/edisonchou/p/an_introduction_to_middle_end.html",target:"_blank",rel:"noopener noreferrer"},Ne={href:"https://mp.weixin.qq.com/s/qup2r_jly4lrxVgxW5SsCQ",target:"_blank",rel:"noopener noreferrer"},Ae=t("h3",{id:"net-微服务架构",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#net-微服务架构"},[t("span",null,".NET 微服务架构")])],-1),ve={href:"https://cn.abp.io/",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://github.com/abpframework/abp",target:"_blank",rel:"noopener noreferrer"},xe={href:"https://docs.abp.io/zh-Hans/abp/latest",target:"_blank",rel:"noopener noreferrer"},Se={href:"https://commercial.abp.io/demo",target:"_blank",rel:"noopener noreferrer"},ze={href:"https://www.abp.io/get-started",target:"_blank",rel:"noopener noreferrer"},Pe={href:"https://mp.weixin.qq.com/s/bjLISCULMCOV7rKiGhSJXw",target:"_blank",rel:"noopener noreferrer"},De={href:"https://github.com/EasyAbp/AbpHelper.CLI",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://github.com/EasyAbp/AbpHelper.CLI/blob/develop/docs/images/crud.gif",target:"_blank",rel:"noopener noreferrer"},Ie={href:"https://docs.abp.io/zh-Hans/abp/latest/Samples/Index",target:"_blank",rel:"noopener noreferrer"},je={href:"https://docs.abp.io/zh-Hans/abp/latest/Samples/Microservice-Demo",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://blog.csdn.net/kaixincheng2009/article/details/104981315",target:"_blank",rel:"noopener noreferrer"},Me={href:"https://docs.abp.io/zh-Hans/abp/latest/Best-Practices/Index",target:"_blank",rel:"noopener noreferrer"},Be={href:"https://www.cnblogs.com/YGYH/p/14922609.html",target:"_blank",rel:"noopener noreferrer"},Re={href:"https://www.cnblogs.com/YGYH/p/14927599.html",target:"_blank",rel:"noopener noreferrer"},He={href:"https://www.cnblogs.com/YGYH/p/14931390.html",target:"_blank",rel:"noopener noreferrer"},Ke={href:"https://www.cnblogs.com/YGYH/p/14934791.html",target:"_blank",rel:"noopener noreferrer"},Le={href:"https://www.cnblogs.com/YGYH/p/14934804.html",target:"_blank",rel:"noopener noreferrer"},Ge={href:"https://www.cnblogs.com/YGYH/p/14934819.html",target:"_blank",rel:"noopener noreferrer"},We={href:"https://www.abp.io/get-started",target:"_blank",rel:"noopener noreferrer"},Ve={href:"https://github.com/colinin/abp-vue-admin-element-typescript",target:"_blank",rel:"noopener noreferrer"},Ye={href:"https://github.com/colinin/vue-vben-admin-abp-vnext",target:"_blank",rel:"noopener noreferrer"},Ze={href:"https://github.com/WangJunZzz/abp-vnext-pro",target:"_blank",rel:"noopener noreferrer"},Qe={href:"https://img2020.cnblogs.com/blog/106337/202111/106337-20211109153418895-1141899126.png",target:"_blank",rel:"noopener noreferrer"},Ue=t("img",{src:c,alt:"image.png",loading:"lazy"},null,-1),Fe={href:"https://img2020.cnblogs.com/blog/106337/202111/106337-20211109153419779-1572559697.png",target:"_blank",rel:"noopener noreferrer"},Xe=t("img",{src:p,alt:"image.png",loading:"lazy"},null,-1),Je={href:"https://github.com/dotnetcore/WTM",target:"_blank",rel:"noopener noreferrer"},$e={href:"https://github.com/dotnetcore/OSharp",target:"_blank",rel:"noopener noreferrer"},et={href:"https://github.com/anjoy8/Blog.Core",target:"_blank",rel:"noopener noreferrer"},tt={href:"https://github.com/monksoul/Furion",target:"_blank",rel:"noopener noreferrer"},rt={href:"https://github.com/liuhll/silky",target:"_blank",rel:"noopener noreferrer"},ot=t("p",null,"#、.NET 微服务相关的技术 API网关：Kong、Ocelot、Nginx 服务注册与发现：Consul（Consul Tamplate+nginx）、etcd、ZooKeeper 身份认证中心：IdentityServer4 服务调用：WebAPI、gRPC 消息事件总线：本地消息总线（进程内存缓存）、分布式消息总线（RabbitMQ、Kafka） 瞬态故障处理：Polly 分布式追踪：SkyWalking、Cat、Zipkin、Elastc.APM 分布式系统监控：Prometheus、（App.Metrics+InfluxDB+Grafana） 分布式事务：CAP、MassTransit 分布式日志：ExceptionLess、ELK 分布式缓存：StackExchange.Redis 分布式锁：RedLock.NET 消息队列：RabbitMQ、Kafka 配置中心：Apollo DevOps：Jenkins、Docker、K8S、GitLab-ci、Azure Pipelines",-1),nt={href:"https://www.cnblogs.com/viter/p/11142940.html",target:"_blank",rel:"noopener noreferrer"},at={href:"https://www.cnblogs.com/cxt618/p/14682628.html",target:"_blank",rel:"noopener noreferrer"},st={href:"https://www.cnblogs.com/haolb123/p/15152124.html",target:"_blank",rel:"noopener noreferrer"},lt={href:"http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html",target:"_blank",rel:"noopener noreferrer"},ht={href:"https://www.cnblogs.com/wwcom123/p/11600463.html",target:"_blank",rel:"noopener noreferrer"},it={href:"https://www.jianshu.com/p/78d2bb18439c",target:"_blank",rel:"noopener noreferrer"},ct={href:"https://www.cnblogs.com/stulzq/p/8119928.html",target:"_blank",rel:"noopener noreferrer"},pt={href:"https://www.cnblogs.com/jlion/p/12501195.html",target:"_blank",rel:"noopener noreferrer"},_t={href:"https://www.bilibili.com/video/av42364337",target:"_blank",rel:"noopener noreferrer"},dt={href:"https://www.cnblogs.com/savorboard/p/distributed-system-transaction-consistency.html",target:"_blank",rel:"noopener noreferrer"},gt={href:"https://www.cnblogs.com/CKExp/p/14710976.html",target:"_blank",rel:"noopener noreferrer"},bt={href:"https://github.com/ctripcorp/apollo",target:"_blank",rel:"noopener noreferrer"},mt={href:"http://106.54.227.205/",target:"_blank",rel:"noopener noreferrer"},ft={href:"https://github.com/dotnetcore/AgileConfig",target:"_blank",rel:"noopener noreferrer"},wt={href:"http://agileconfig_server.xbaby.xyz/ui",target:"_blank",rel:"noopener noreferrer"},ut={href:"https://www.cnblogs.com/xiaoxiaotank/p/14982602.html",target:"_blank",rel:"noopener noreferrer"},kt={href:"https://www.cnblogs.com/xiandnc/p/11480624.html",target:"_blank",rel:"noopener noreferrer"},Ct={href:"http://www.cnblogs.com/GuZhenYin/p/7170010.html",target:"_blank",rel:"noopener noreferrer"},Tt={href:"https://blog.csdn.net/qq_32828253/article/details/110450249",target:"_blank",rel:"noopener noreferrer"},Et={href:"https://github.com/dotnet-architecture/eShopOnContainers",target:"_blank",rel:"noopener noreferrer"},Nt={href:"https://www.cnblogs.com/sheng-jie/p/9789180.html",target:"_blank",rel:"noopener noreferrer"},At={href:"https://github.com/abpframework/abp-samples/tree/master/MicroserviceDemo",target:"_blank",rel:"noopener noreferrer"},vt=t("h3",{id:"云原生",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#云原生"},[t("span",null,"云原生")])],-1),yt={href:"https://mp.weixin.qq.com/s/2qExl8hr5PN_C--jI6hxow",target:"_blank",rel:"noopener noreferrer"},xt={href:"https://landscape.cncf.io/?selected=iguazio",target:"_blank",rel:"noopener noreferrer"},St={href:"https://mp.weixin.qq.com/s/cgkkflioTiepIUyEwVbxkg",target:"_blank",rel:"noopener noreferrer"},zt={href:"https://www.cnblogs.com/shanyou/p/11566850.html",target:"_blank",rel:"noopener noreferrer"},Pt={href:"https://blog.csdn.net/wufaliang003/article/details/79533345",target:"_blank",rel:"noopener noreferrer"},Dt={href:"https://kb.cnblogs.com/page/651941/",target:"_blank",rel:"noopener noreferrer"},qt={href:"https://img2020.cnblogs.com/blog/106337/202111/106337-20211109153420865-1229092781.png",target:"_blank",rel:"noopener noreferrer"},It=t("img",{src:_,alt:"image.png",loading:"lazy"},null,-1),jt={href:"https://www.cnblogs.com/chenqionghe/p/11454248.html",target:"_blank",rel:"noopener noreferrer"},Ot={href:"https://www.cnblogs.com/powertoolsteam/p/14980851.html",target:"_blank",rel:"noopener noreferrer"},Mt={href:"https://mp.weixin.qq.com/s/tCABfqicCYQXVSa5hVMXvA",target:"_blank",rel:"noopener noreferrer"},Bt={href:"https://www.cnblogs.com/heyuquan/p/docker-cmd-and-dotnetcore.html",target:"_blank",rel:"noopener noreferrer"},Rt={href:"https://www.kubernetes.org.cn/k8s",target:"_blank",rel:"noopener noreferrer"},Ht={href:"https://www.cnblogs.com/alisystemsoftware/p/11526534.html",target:"_blank",rel:"noopener noreferrer"},Kt={href:"https://www.cnblogs.com/edisonchou/p/aspnet_core_on_k8s_foundation_artcles_index.html",target:"_blank",rel:"noopener noreferrer"},Lt={href:"https://mp.weixin.qq.com/s/14DLVLzIt7lCoURuXZrpRQ",target:"_blank",rel:"noopener noreferrer"},Gt={href:"https://www.cnblogs.com/fanshaoO/p/10571503.html",target:"_blank",rel:"noopener noreferrer"},Wt={href:"https://mp.weixin.qq.com/s/ZBFdIO5scyFRA45yVUcEDA",target:"_blank",rel:"noopener noreferrer"},Vt={href:"https://mp.weixin.qq.com/s/kzxKoRawrxY95t-DMQwyhg",target:"_blank",rel:"noopener noreferrer"},Yt={href:"https://www.cnblogs.com/heyuquan/p/jenkins-use-guide.html",target:"_blank",rel:"noopener noreferrer"},Zt={href:"https://docs.github.com/cn/actions/quickstart",target:"_blank",rel:"noopener noreferrer"},Qt={href:"https://www.cnblogs.com/pual13/p/15224138.html",target:"_blank",rel:"noopener noreferrer"},Ut={href:"https://www.cnblogs.com/kklldog/p/azure-devops-pipeline.html",target:"_blank",rel:"noopener noreferrer"},Ft={href:"https://github.com/dotnetcore/WTM/tree/develop/.azure/pipelines",target:"_blank",rel:"noopener noreferrer"},Xt=t("h3",{id:"资料",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#资料"},[t("span",null,"资料")])],-1),Jt={href:"https://www.cnblogs.com/heyuquan/p/dotnet-architecture-learning-resource.html",target:"_blank",rel:"noopener noreferrer"};function $t(er,tr){const r=a("ExternalLinkIcon");return s(),l("div",null,[g,b,t("p",null,[e("#、.NET Core跨平台解读 "),t("a",m,[e(".NET Core跨平台的奥秘[上篇]：历史的枷锁"),o(r)]),t("a",f,[e(".NET Core跨平台的奥秘[中篇]：复用之殇"),o(r)]),t("a",w,[e(".NET Core跨平台的奥秘[下篇]：全新的布局（.NET Standard）"),o(r)])]),t("p",null,[e("#、.NET Standard 与 .NET 5+ "),t("a",u,[e("【译】介绍 .NET Standard"),o(r)]),t("a",k,[e(".NET Standard Versions（版本对应图）"),o(r)]),t("a",C,[e("[github]dotnet/standard"),o(r)]),t("a",T,[e("微软停止更新.NET Standard，.NET 5 取而代之"),o(r)]),e(" 选择建议：")]),t("ol",null,[E,N,t("li",null,[e("向后共享代码，使用net5.0 "),t("a",A,[e(".NET API 一览表"),o(r)])])]),t("p",null,[e("#、运行机制 "),t("a",v,[e(".NET 的执行模型（CoreCLR 执行模型和Native AOT执行模型）"),o(r)]),t("a",y,[e("200行代码，7个对象——让你了解ASP.NET Core框架的本质（带源码）"),o(r)]),e(" (HttpContext，RequestDelegate，Middleware，ApplicationBuilder，Server，HttpListenerServer，WebHost) "),t("a",x,[e("ASP.NET Core 服务是如何启动、配置并运行的"),o(r)]),e("（IWebHost、Create­DefaultBuilder） "),t("a",S,[e("深入理解.NET Core的基元: deps.json, runtimeconfig.json, dll文件"),o(r)]),e(" 补充：在vs中编译core项目时，在bin下面会生成deps.json记录nuget包依赖关系，并不会把依赖的nuget包拷贝到bin文件夹下。但执行dotnet publish命令发布core项目时，会将依赖的nuget包拷贝到发布目录 "),t("a",z,[e(".NET Core 运行时配置设置"),o(r)]),e("（小节包含几篇文章，配置：依赖的包，加载路径，网络设置、线程设置等） "),t("a",P,[e("使用Directory.Build.props 文件管理多个csproj项目的配置"),o(r)])]),t("p",null,[e("#、.NET Web 服务器 "),t("a",D,[e("ASP.NET Core web服务器实现( kestrel&HTTP.sys )"),o(r)]),t("a",q,[e("为什么Linux 上的Asp.NET 5 需要 Kestrel ?"),o(r)]),t("a",I,[e("ASP.NET Core 的Kestrel Web 服务器"),o(r)]),t("a",j,[e("ASP.NET Core 的HTTP.sys Web 服务器"),o(r)])]),t("p",null,[e("#、性能分析方案 性能分析 "),t("a",O,[e("使用MiniProfiler 分析ASP.NET Core 、EF Core 性能"),o(r)]),t("a",M,[e("使用 BenchmarkDotnet 测试代码性能"),o(r)]),e(" 分析快照堆栈、线程信息、异常信息、内存信息、GC信息等 "),t("a",B,[e("分析.net core在linux下内存占用过高问题"),o(r)]),e("（dotnet-counters，dotnet-dump） "),t("a",R,[e("如何排查.NET 内存泄漏"),o(r)]),e("（dotnet-counters，dotnet-dump） "),t("a",H,[e("Windbg程序调试系列（内存泄露、线程阻塞、高CPU等）"),o(r)]),t("a",K,[e("【一线码农】Windbg分析案例"),o(r)]),t("a",L,[e(".NET GC 实时监控 dotnet-gcmon"),o(r)])]),G,t("p",null,[e("#、设计理论 "),t("a",W,[e("一句话总结软件设计七大原则"),o(r)]),t("a",V,[e("一句话归纳23种设计模式"),o(r)]),t("a",Y,[e("网站系统架构层次"),o(r)]),t("a",Z,[e("The Clean Architecture（干净体系架构）"),o(r)]),t("a",Q,[e("技术架构的战略和战术原则"),o(r)]),t("a",U,[e("服务端高并发分布式架构15次演进之路"),o(r)]),e(" API设计 "),t("a",F,[e("四连问：API 接口应该如何设计？如何保证安全？如何签名？如何防重？"),o(r)]),t("a",X,[e("API接口设计最佳实践"),o(r)]),e(" 缓存 "),t("a",J,[e("一次缓存雪崩的灾难复盘（并讲解：缓存雪崩、缓存穿透、缓存击穿）"),o(r)]),t("a",$,[e("系统架构设计：进程缓存和缓存服务，如何抉择？"),o(r)]),t("a",ee,[e("分布式之数据库和缓存双写一致性方案解析"),o(r)]),t("a",te,[e("MySQL数据库之互联网常用架构方案"),o(r)]),t("a",re,[e("一文搞懂蓝绿发布、灰度发布和滚动发布"),o(r)]),t("a",oe,[e("秒杀系统怎么设计？"),o(r)])]),t("p",null,[e("#、领域驱动设计（DDD） 领域驱动涉及的主要概念：领域、界限上下文、领域模型、统一建模语言（UML）、模块、实体、值对象、应用服务&领域服务、领域事件、聚合、聚合根、仓储、工作单元（Uow）等等 "),t("a",ne,[e("一文理解DDD 领域驱动设计！"),o(r)]),t("a",ae,[e("[圣杰]DDD理论学习系列——案例及目录"),o(r)]),t("a",se,[e("DDD 领域驱动设计：贫血模型、充血模型的深入解读"),o(r)]),t("a",le,[e("《微服务架构设计模式》读书笔记：微服务架构中的业务逻辑设计"),o(r)]),e(" DDD中重要且难理解部分的摘抄：")]),t("ol",null,[he,ie,t("li",null,[e("模块： l 模块通过分解领域模型为不同的模块，以降低领域模型的复杂性，提高领域模型的可读性。 l 模块的设计要符合高内聚低耦合的设计思想。 "),t("a",ce,[pe,o(r)])]),_e,de,ge]),be,t("p",null,[e("#、微服务 "),t("a",me,[e("微服务介绍"),o(r)]),t("a",fe,[e("微服务及其演进史"),o(r)]),t("a",we,[e("微服务划分的姿势"),o(r)]),t("a",ue,[e("分布式系统架构的冰与火"),o(r)]),t("a",ke,[e("从亚马逊的实践，谈分布式系统的难点"),o(r)]),t("a",Ce,[e(".NET 微服务：适用于容器化.NET 应用程序的体系结构- 电子书"),o(r)])]),t("p",null,[e("#、中台 "),t("a",Te,[e("阿里大中台小前台解读"),o(r)]),t("a",Ee,[e("企业级中台建设"),o(r)]),t("a",Ne,[e("头部电商的中台实践血泪总结"),o(r)])]),Ae,t("p",null,[e("#、ABP基础开发框架 官网："),t("a",ve,[e("https://cn.abp.io/"),o(r)]),e(" github："),t("a",ye,[e("https://github.com/abpframework/abp"),o(r)]),e(" 官方教程："),t("a",xe,[e("https://docs.abp.io/zh-Hans/abp/latest"),o(r)]),e(" 商业版demo："),t("a",Se,[e("https://commercial.abp.io/demo"),o(r)]),e(" 使用 get-started："),t("a",ze,[e("https://www.abp.io/get-started"),o(r)]),e(" (使用Volo.Abp.Cli下载项目有时会失败，可以在get-started网站上直接创建项目模板) "),t("a",Pe,[e("基于abp vnext制作项目脚手架"),o(r)]),e(" AbpHelper.CLI "),t("a",De,[e("使用ABPHelper自动生成代码 （CRUD演示）"),o(r)]),t("a",qe,[e("CRUD演示"),o(r)]),e(" 示例 "),t("a",Ie,[e("Abp官方所有示例"),o(r)]),t("a",je,[e("Abp官方微服务解决方案示例"),o(r)]),e(" 最佳实践 "),t("a",Oe,[e("跟着“土牛”学架构知识"),o(r)]),t("a",Me,[e("[Abp官方]模块开发最佳实践& 约定"),o(r)]),t("a",Be,[e("基于ABP落地领域驱动设计-01.全景图"),o(r)]),t("a",Re,[e("基于ABP落地领域驱动设计-02.聚合和聚合根的最佳实践和原则"),o(r)]),t("a",He,[e("基于ABP落地领域驱动设计-03.仓储和规约最佳实践和原则"),o(r)]),t("a",Ke,[e("基于ABP落地领域驱动设计-04.领域服务和应用服务的最佳实践和原则"),o(r)]),t("a",Le,[e("基于ABP落地领域驱动设计-05.实体创建和更新最佳实践"),o(r)]),t("a",Ge,[e("基于ABP落地领域驱动设计-06.正确区分领域逻辑和应用逻辑"),o(r)]),e(" 其他： Abp官方("),t("a",We,[e("https://www.abp.io/get-started"),o(r)]),e(")有提供社区版前端客户端：Razor Pages、Blazor、Angular、ReactNative。暂时没有提供Vue前端客户端。这边给出几个vue-admin的社区资源： "),t("a",Ve,[e("abp+vue-element-admin"),o(r)]),t("a",Ye,[e("abp+vue-vben-admin(vue3+typescript+ant design)"),o(r)]),t("a",Ze,[e("abp-vnext-pro + vben"),o(r)])]),t("p",null,[e("模板项目图： "),t("a",Qe,[Ue,o(r)]),e(" 项目依赖图： "),t("a",Fe,[Xe,o(r)]),e(" 因本人使用过ABP，所以文中以ABP基础开发框架为例 在DotNet Core中还有很多其他的优秀基础开发框架，如： "),t("a",Je,[e("WTM"),o(r)]),e("、"),t("a",$e,[e("Osharp"),o(r)]),e("、"),t("a",et,[e("Blog.Core"),o(r)]),e("、"),t("a",tt,[e("Furioin"),o(r)]),e("、"),t("a",rt,[e("Silky"),o(r)]),e(" 等等")]),ot,t("p",null,[e("相关资料推荐 API网关 "),t("a",nt,[e("高性能微服务网关.NETCore客户端Kong.Net开源发布"),o(r)]),t("a",at,[e("Ocelot简易教程（简介、配置、负载、认证、限流、聚合等）"),o(r)]),e(" 认证授权 "),t("a",st,[e("RBAC权限系统分析、设计与实现"),o(r)]),t("a",lt,[e("[阮一峰]理解OAuth 2.0"),o(r)]),t("a",ht,[e("OAuth2.0授权登录四种模式时序图"),o(r)]),t("a",it,[e("IdentityServer4实现了OAuth和OpenId Connect"),o(r)]),e(" OAuth只负责Authorization（授权）. 那么谁来负责Authentication（认证）呢?那就是OpenId Connect, OpenId Connect是对OAuth的一种补充, 因为它能进行Authentication. OAuth通常有以下几种endpoint：authorize，token，revocation等 OpenId Connect 通常有以下几种endpoints：userinfo，checksession，endsession，.well-known/openid-configuration，.well-known/jwks等 "),t("a",ct,[e("[晓晨Master]IdentityServer4 中文文档与实战"),o(r)]),t("a",pt,[e("Asp.Net Core 中IdentityServer4 授权原理及刷新Token的应用"),o(r)]),t("a",_t,[e("[免费视频]IdentityServer4 教程视频"),o(r)]),e(" 分布式事务 "),t("a",dt,[e("聊聊分布式事务"),o(r)]),e("（ACID、CAP、BASE、2PC、TCC、本地消息表（异步确保）、MQ 事务消息） "),t("a",gt,[e("Asp.Net Core&CAP实现分布式事务"),o(r)]),e(" 配置中心 Apollo Apollo github："),t("a",bt,[e("https://github.com/ctripcorp/apollo"),o(r)]),e(" Apollo官方Demo："),t("a",mt,[e("http://106.54.227.205/"),o(r)]),e("（账户密码：apollo admin） AgileConfig AgileConfig github："),t("a",ft,[e("https://github.com/dotnetcore/AgileConfig"),o(r)]),e(" AgileConfig 官方Demo："),t("a",wt,[e("http://agileconfig_server.xbaby.xyz/ui"),o(r)]),e(" （账户密码：admin 123456） Redis Redis，全称是Remote Dictionary Service,翻译过来就是，远程字典服务。 Redis属于nosql非关系型数据库。Nosql常见的数据关系，基本上是以key-value键值对形式存在的。 "),t("a",ut,[e("基于Redis的分布式锁设计（RedLock.net）"),o(r)]),e(" 监控 "),t("a",kt,[e("使用Elastic APM监控你的.NET Core应用"),o(r)]),t("a",Ct,[e("ASP.NET Core之跨平台的实时性能监控（App.Metrics+InfluxDB+Grafana）"),o(r)]),e(" 其他 "),t("a",Tt,[e("RabbitMQ 七种队列模式应用场景案例分析（通俗易懂）"),o(r)])]),t("p",null,[e("应用示例： eShopOnContainers项目 "),t("a",Et,[e("[github]eShopOnContainers"),o(r)]),t("a",Nt,[e("[圣杰]eShopOnContainers 分析文章系列"),o(r)]),t("a",At,[e("[github]abp-samples/MicroserviceDemo项目"),o(r)])]),vt,t("p",null,[e("TVP腾讯云最具价值专家张善友，他给到的解释是——“云原生的本质是一系列最佳实践的结合；云原生是云这种环境下的一种开发的理念、一种模式，无服务器、微服务、容器、DevOps都是云原生理念里面的子集。 "),t("a",yt,[e("什么是云原生"),o(r)]),e(" 云是和本地相对的，传统的应用必须跑在本地服务器上，现在流行的应用都跑在云端，云包含了IaaS,、PaaS和SaaS。 原生就是土生土长的意思，我们在开始设计应用的时候就考虑到应用将来是运行云环境里面的，要充分利用云资源的优点，比如️云服务的弹性和分布式优势。 可以简单地把云原生理解为：云原生= 微服务+ DevOps + 容器化+ 持续交付 "),t("a",xt,[e("云原生全景图谱"),o(r)]),t("a",St,[e("云原生全景图详解"),o(r)]),t("a",zt,[e("进击的.NET 在云原生时代的蜕变"),o(r)]),t("a",Pt,[e("云原生应用的12要素"),o(r)]),e(" 给各种云服务一个灵活度排序：IaaS（各种云主机）> CaaS（Docker 等容器服务）> PaaS（BAE、SAE、GAE 等APP Engine）> FaaS > BaaS > SaaS（各种Web APP，如Google Doc）。（"),t("a",Dt,[e("查看更多=>"),o(r)]),e("） "),t("a",qt,[It,o(r)])]),t("p",null,[e("#、Docker 与Kubernetes（K8S） "),t("a",jt,[e("极简Docker和Kubernetes发展史"),o(r)]),t("a",Ot,[e("Docker与k8s的恩怨情仇"),o(r)]),t("a",Mt,[e("Docker员工自述：我们为什么“输”给了Kubernetes？"),o(r)])]),t("p",null,[e("Docker "),t("a",Bt,[e("一文掌握 Docker 常用命令"),o(r)])]),t("p",null,[e("K8S "),t("a",Rt,[e("kubernetes中文社区、中文文档"),o(r)]),t("a",Ht,[e("8 分钟了解 Kubernetes"),o(r)]),t("a",Kt,[e("[Edison Zhou]ASP.NET Core on K8s 入门学习系列文章目录"),o(r)]),t("a",Lt,[e("Kubernetes + .NET Core 的落地实践（案例：本来生活网）"),o(r)])]),t("p",null,[e("实例 "),t("a",Gt,[e("如何使用vs将asp.net core项目添加容器支持并发布docker镜像到私有dockerhub和添加k8s/helm管理"),o(r)]),t("a",Wt,[e("从零开始在Windows 上部署.NET Core 到 Kubernetes"),o(r)])]),t("p",null,[e("#、自动化集成与部署 流程：编码-> 构建-> 集成-> 测试-> 交付-> 部署 "),t("a",Vt,[e("一文看懂持续部署按需发布！DevOps部署和发布方法大全"),o(r)]),t("a",Yt,[e("[CI&CD]jenkins自动化工具使用教程"),o(r)]),e(" 持续集成（Continuous Integration）简称CI 持续交付（Continuous Delivery）简称CD GitHub Actions "),t("a",Zt,[e("GitHub Actions 快速入门"),o(r)]),t("a",Qt,[e("两种github action 打包.Net Core 项目docker镜像推送到阿里云镜像仓库"),o(r)]),e(" Azure Pipeline "),t("a",Ut,[e("使用Azure DevOps Pipeline实现.Net Core程序的CI"),o(r)]),e(" 示例："),t("a",Ft,[e("WTM-pipelines"),o(r)])]),Xt,t("p",null,[t("a",Jt,[e("https://www.cnblogs.com/heyuquan/p/dotnet-architecture-learning-resource.html"),o(r)])])])}const nr=n(d,[["render",$t],["__file","ziliaojingshuajiagoupian.html.vue"]]),ar=JSON.parse('{"path":"/dotnet/jiaocheng/ziliaojingshuajiagoupian.html","title":"资料精选架构篇","lang":"zh-CN","frontmatter":{"title":"资料精选架构篇","lang":"zh-CN","date":"2022-01-27T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"ziliaojingshuajiagoupian","slug":"mvbfy3","docsId":"65198453","description":"提示 来自网络，内容是否过时自行判断 深入.NET #、.NET Core跨平台解读 .NET Core跨平台的奥秘[上篇]：历史的枷锁 .NET Core跨平台的奥秘[中篇]：复用之殇 .NET Core跨平台的奥秘[下篇]：全新的布局（.NET Standard） #、.NET Standard 与 .NET 5+ 【译】介绍 .NET Stand...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/jiaocheng/ziliaojingshuajiagoupian.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"资料精选架构篇"}],["meta",{"property":"og:description","content":"提示 来自网络，内容是否过时自行判断 深入.NET #、.NET Core跨平台解读 .NET Core跨平台的奥秘[上篇]：历史的枷锁 .NET Core跨平台的奥秘[中篇]：复用之殇 .NET Core跨平台的奥秘[下篇]：全新的布局（.NET Standard） #、.NET Standard 与 .NET 5+ 【译】介绍 .NET Stand..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1642519842434-6a3c7771-9f17-4abc-9242-828cd2a2385b.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-13T15:17:37.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-01-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-13T15:17:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"资料精选架构篇\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1642519842434-6a3c7771-9f17-4abc-9242-828cd2a2385b.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1642519842318-61f9a571-d9e2-4680-b75f-c78b37957fac.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1642519842465-6b402cda-bef4-4830-ab75-648a13212cc6.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1642519842516-0bd5b960-036d-4ff8-8250-795ee6257a7c.png\\"],\\"datePublished\\":\\"2022-01-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-13T15:17:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"深入.NET","slug":"深入-net","link":"#深入-net","children":[{"level":3,"title":"架构相关理论","slug":"架构相关理论","link":"#架构相关理论","children":[]},{"level":3,"title":".NET 微服务架构","slug":"net-微服务架构","link":"#net-微服务架构","children":[]},{"level":3,"title":"云原生","slug":"云原生","link":"#云原生","children":[]},{"level":3,"title":"资料","slug":"资料","link":"#资料","children":[]}]}],"git":{"createdTime":1697962303000,"updatedTime":1699888657000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":15.08,"words":4525},"filePathRelative":"dotnet/jiaocheng/ziliaojingshuajiagoupian.md","localizedDate":"2022年1月27日","excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>来自网络，内容是否过时自行判断</p>\\n</div>\\n<h2>深入.NET</h2>\\n<p>#、.NET Core跨平台解读\\n<a href=\\"http://www.cnblogs.com/artech/p/how-to-cross-platform-01.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">.NET Core跨平台的奥秘[上篇]：历史的枷锁</a>\\n<a href=\\"http://www.cnblogs.com/artech/p/how-to-cross-platform-02.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">.NET Core跨平台的奥秘[中篇]：复用之殇</a>\\n<a href=\\"http://www.cnblogs.com/artech/p/how-to-cross-platform-03.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">.NET Core跨平台的奥秘[下篇]：全新的布局（.NET Standard）</a></p>","autoDesc":true}');export{nr as comp,ar as data};
