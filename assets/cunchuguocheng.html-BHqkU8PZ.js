import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,d as a,o as i}from"./app-B3EhLA94.js";const p={};function l(r,n){return i(),e("div",null,n[0]||(n[0]=[a(`<h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义"><span>定义</span></a></h2><p>把复杂的操作，封装一个过程。类似于函数。</p><h3 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span>优点</span></a></h3><p>1、复杂操作，调用简单。<br> 2、速度快。</p><h3 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点"><span>缺点：</span></a></h3><p>1、封装复杂。<br> 2、没有灵活性。</p><h3 id="查看所有存储过程命令" tabindex="-1"><a class="header-anchor" href="#查看所有存储过程命令"><span>查看所有存储过程命令</span></a></h3><p>1 show procedure status;<br> 查看存储过程或函数的创建代码：<br> 1 show create procedure proc_name;<br> 2 show create function func_name;<br> 调用存储命令：<br> 1 call 名称;<br> 删除存储过程命令：<br> 1 DROP {PROCEDURE | FUNCTION} [IF EXISTS] 名称；<br> 创建存储过程：<br> 1 create procedure 名称(参数,.....)<br> 2             begin<br> 3                 过程体;<br> 4                 过程体;<br> 5             end//<br> 参数：<br> 1 in|out|inout 参数名称 类型(长度)<br> 在sql语句中给变量赋值：<br> 1 into<br> 在过程体外声明变量：<br> 1 @变量名<br> 重新制定sql语句的结束符：<br> 1 delimiter //<br> 例子：获取5条文章记录<br> 1 create procedure getNews()<br> 2     begin<br> 3         select * from news limit 5;<br> 4     end//<br> 例子：获取n条文章记录<br> 1 create procedure getNewsN(in n int(5))<br> 2     begin<br> 3         select * from news limit n;<br> 4     end//<br> 例子：获取某栏目下文章的条数。<br> 1 create procedure getNewsByType(in fid int,out num int)<br> 2     begin<br> 3         select count(*) into num from news where fcid=fid;<br> 4     end//<br> 声明变量：<br> 1 declare 变量名 类型(长度) default 默认值;<br> 给变量赋值：<br> 1 set 变量名=值;<br> 说明：<br> 强类型。<br> 例子：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>1 create procedure test()</span></span>
<span class="line"><span>2     begin</span></span>
<span class="line"><span>3         declare a int default 5;</span></span>
<span class="line"><span>4         declare b int default 6;</span></span>
<span class="line"><span>5         declare c int default 0;</span></span>
<span class="line"><span>6         set c=a+b;</span></span>
<span class="line"><span>7         select c as num;</span></span>
<span class="line"><span>8     end//</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1.3 条件语句</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span> 1 if 条件 then</span></span>
<span class="line"><span> 2   语句;</span></span>
<span class="line"><span> 3 else</span></span>
<span class="line"><span> 4   语句;</span></span>
<span class="line"><span> 5 end if;</span></span>
<span class="line"><span> 6 </span></span>
<span class="line"><span> 7 if 条件then</span></span>
<span class="line"><span> 8   语句;</span></span>
<span class="line"><span> 9 elseif 条件then</span></span>
<span class="line"><span>10    语句;</span></span>
<span class="line"><span>11 .....</span></span>
<span class="line"><span>12 else</span></span>
<span class="line"><span>13 </span></span>
<span class="line"><span>14 end if;</span></span>
<span class="line"><span>15 </span></span>
<span class="line"><span>16 循环语句17 while 循环条件 do</span></span>
<span class="line"><span>18    循环体;</span></span>
<span class="line"><span>19    变换步长;</span></span>
<span class="line"><span>20 end while;</span></span>
<span class="line"><span>例子：输出1到10之间偶数</span></span>
<span class="line"><span> 1 create procedure oshu()</span></span>
<span class="line"><span> 2    begin</span></span>
<span class="line"><span> 3        declare i int default 1;</span></span>
<span class="line"><span> 4        while i&lt;11 do</span></span>
<span class="line"><span> 5             if i%2 = 0  then</span></span>
<span class="line"><span> 6                 select i;</span></span>
<span class="line"><span> 7             end if;</span></span>
<span class="line"><span> 8             set i=i+1;</span></span>
<span class="line"><span> 9        end while;</span></span>
<span class="line"><span>10     end//</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例子：使用存储过程实现 购物</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span> 1 create procedure buy1(in pidn int,in uidn int,in numn int)</span></span>
<span class="line"><span> 2 begin</span></span>
<span class="line"><span> 3   declare jiage float(7,2) default 0.00;</span></span>
<span class="line"><span> 4   declare zongjia float(9,2) default 0.00;</span></span>
<span class="line"><span> 5   declare e tinyint(1) default 0;</span></span>
<span class="line"><span> 6   declare continue handler for SQLEXCEPTION set e=1;</span></span>
<span class="line"><span> 7   -- 获取价格 8   select price into jiage from productn where pid=pidn;</span></span>
<span class="line"><span> 9   -- 算出总价10    set zongjia=jiage*numn;</span></span>
<span class="line"><span>11    -- 开启事务12    start transaction;</span></span>
<span class="line"><span>13    -- 扣款14    update usern set money=money-zongjia where uid=uidn;</span></span>
<span class="line"><span>15    -- 出库16    update productn set num=num-numn where pid=pidn;</span></span>
<span class="line"><span>17    -- 判断是否有异常18    if e=1 then</span></span>
<span class="line"><span>19       rollback;</span></span>
<span class="line"><span>20       select 0 as re;</span></span>
<span class="line"><span>21    else</span></span>
<span class="line"><span>22       commit;</span></span>
<span class="line"><span>23       select 1 as re;</span></span>
<span class="line"><span>24    end if;</span></span>
<span class="line"><span>25 end//</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取异常：<br> 1 declare continue handler for SQLEXCEPTION set e=1;<br>  <br>  <br> 参考资料：<a href="https://www.cnblogs.com/yuanwanli/p/9022617.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/yuanwanli/p/9022617.html</a></p>`,14)]))}const b=s(p,[["render",l],["__file","cunchuguocheng.html.vue"]]),d=JSON.parse('{"path":"/dataBase/mysql/jichuzhishi/cunchuguocheng.html","title":"存储过程","lang":"zh-CN","frontmatter":{"title":"存储过程","lang":"zh-CN","date":"2023-08-02T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"filename":"cunchuguocheng","slug":"gmwn3w","docsId":"26499294","description":"定义 把复杂的操作，封装一个过程。类似于函数。 优点 1、复杂操作，调用简单。 2、速度快。 缺点： 1、封装复杂。 2、没有灵活性。 查看所有存储过程命令 1 show procedure status; 查看存储过程或函数的创建代码： 1 show create procedure proc_name; 2 show create function...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/mysql/jichuzhishi/cunchuguocheng.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"存储过程"}],["meta",{"property":"og:description","content":"定义 把复杂的操作，封装一个过程。类似于函数。 优点 1、复杂操作，调用简单。 2、速度快。 缺点： 1、封装复杂。 2、没有灵活性。 查看所有存储过程命令 1 show procedure status; 查看存储过程或函数的创建代码： 1 show create procedure proc_name; 2 show create function..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-23T16:00:19.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-08-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-23T16:00:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"存储过程\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-23T16:00:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[{"level":3,"title":"优点","slug":"优点","link":"#优点","children":[]},{"level":3,"title":"缺点：","slug":"缺点","link":"#缺点","children":[]},{"level":3,"title":"查看所有存储过程命令","slug":"查看所有存储过程命令","link":"#查看所有存储过程命令","children":[]}]}],"git":{"createdTime":1695484404000,"updatedTime":1695484819000,"contributors":[{"name":"azrng","username":"azrng","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":2.24,"words":673},"filePathRelative":"dataBase/mysql/jichuzhishi/cunchuguocheng.md","localizedDate":"2023年8月2日","excerpt":"<h2>定义</h2>\\n<p>把复杂的操作，封装一个过程。类似于函数。</p>\\n<h3>优点</h3>\\n<p>1、复杂操作，调用简单。<br>\\n2、速度快。</p>\\n<h3>缺点：</h3>\\n<p>1、封装复杂。<br>\\n2、没有灵活性。</p>\\n<h3>查看所有存储过程命令</h3>\\n<p>1 show procedure status;<br>\\n查看存储过程或函数的创建代码：<br>\\n1 show create procedure proc_name;<br>\\n2 show create function func_name;<br>\\n调用存储命令：<br>\\n1 call 名称;<br>\\n删除存储过程命令：<br>\\n1 DROP {PROCEDURE | FUNCTION} [IF EXISTS] 名称；<br>\\n创建存储过程：<br>\\n1 create procedure 名称(参数,.....)<br>\\n2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; begin<br>\\n3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 过程体;<br>\\n4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 过程体;<br>\\n5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end//<br>\\n参数：<br>\\n1 in|out|inout 参数名称 类型(长度)<br>\\n在sql语句中给变量赋值：<br>\\n1 into<br>\\n在过程体外声明变量：<br>\\n1 @变量名<br>\\n重新制定sql语句的结束符：<br>\\n1 delimiter //<br>\\n例子：获取5条文章记录<br>\\n1 create procedure getNews()<br>\\n2&nbsp;&nbsp;&nbsp;&nbsp; begin<br>\\n3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; select * from news limit 5;<br>\\n4&nbsp;&nbsp;&nbsp;&nbsp; end//<br>\\n例子：获取n条文章记录<br>\\n1 create procedure getNewsN(in n int(5))<br>\\n2&nbsp;&nbsp;&nbsp;&nbsp; begin<br>\\n3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; select * from news limit n;<br>\\n4&nbsp;&nbsp;&nbsp;&nbsp; end//<br>\\n例子：获取某栏目下文章的条数。<br>\\n1 create procedure getNewsByType(in fid int,out num int)<br>\\n2&nbsp;&nbsp;&nbsp;&nbsp; begin<br>\\n3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; select count(*) into num from news where fcid=fid;<br>\\n4&nbsp;&nbsp;&nbsp;&nbsp; end//<br>\\n声明变量：<br>\\n1 declare 变量名 类型(长度) default 默认值;<br>\\n给变量赋值：<br>\\n1 set 变量名=值;<br>\\n说明：<br>\\n强类型。<br>\\n例子：</p>","autoDesc":true}');export{b as comp,d as data};
