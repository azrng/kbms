import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-DMmdIwn0.js";const p={},o=t(`<p>异步并发、设置代理、操作Cookie、Gzip页面加速。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name">CookieContainer</span> CookiesContainer <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token comment">//定义Cookie容器</span>

<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 异步创建爬虫</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uri<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>爬虫URL地址<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>proxy<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>代理服务器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span>网页源代码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">Start</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> proxy <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">await</span> Task<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> pageSource <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">;</span>
        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>OnStart <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OnStartEventArgs</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> watch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Stopwatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            watch<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> request <span class="token operator">=</span> <span class="token punctuation">(</span>HttpWebRequest<span class="token punctuation">)</span>WebRequest<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
            request<span class="token punctuation">.</span>Accept <span class="token operator">=</span> <span class="token string">&quot;*/*&quot;</span><span class="token punctuation">;</span>
            request<span class="token punctuation">.</span>ServicePoint<span class="token punctuation">.</span>Expect100Continue <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">//加快载入速度</span>
            request<span class="token punctuation">.</span>ServicePoint<span class="token punctuation">.</span>UseNagleAlgorithm <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">//禁止Nagle算法加快载入速度</span>
            request<span class="token punctuation">.</span>AllowWriteStreamBuffering <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">//禁止缓冲加快载入速度</span>
            request<span class="token punctuation">.</span>Headers<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>HttpRequestHeader<span class="token punctuation">.</span>AcceptEncoding<span class="token punctuation">,</span> <span class="token string">&quot;gzip,deflate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//定义gzip压缩页面支持</span>
            request<span class="token punctuation">.</span>ContentType <span class="token operator">=</span> <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">;</span><span class="token comment">//定义文档类型及编码</span>
            request<span class="token punctuation">.</span>AllowAutoRedirect <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">//禁止自动跳转</span>
            <span class="token comment">//设置User-Agent，伪装成Google Chrome浏览器</span>
            request<span class="token punctuation">.</span>UserAgent <span class="token operator">=</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36&quot;</span><span class="token punctuation">;</span>
            request<span class="token punctuation">.</span>Timeout <span class="token operator">=</span> <span class="token number">5000</span><span class="token punctuation">;</span><span class="token comment">//定义请求超时时间为5秒</span>
            request<span class="token punctuation">.</span>KeepAlive <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//启用长连接</span>
            request<span class="token punctuation">.</span>Method <span class="token operator">=</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">;</span><span class="token comment">//定义请求方式为GET              </span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>proxy <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> request<span class="token punctuation">.</span>Proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">WebProxy</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置代理服务器IP，伪装请求地址</span>
            request<span class="token punctuation">.</span>CookieContainer <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>CookiesContainer<span class="token punctuation">;</span><span class="token comment">//附加Cookie容器</span>
            request<span class="token punctuation">.</span>ServicePoint<span class="token punctuation">.</span>ConnectionLimit <span class="token operator">=</span> <span class="token keyword">int</span><span class="token punctuation">.</span>MaxValue<span class="token punctuation">;</span><span class="token comment">//定义最大连接数</span>

            <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token punctuation">(</span>HttpWebResponse<span class="token punctuation">)</span>request<span class="token punctuation">.</span><span class="token function">GetResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span><span class="token comment">//获取请求响应</span>

                <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">Cookie</span> cookie <span class="token keyword">in</span> response<span class="token punctuation">.</span>Cookies<span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>CookiesContainer<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将Cookie加入容器，保存登录状态</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>ContentEncoding<span class="token punctuation">.</span><span class="token function">ToLower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;gzip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//解压</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">GZipStream</span> stream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">GZipStream</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">GetResponseStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> CompressionMode<span class="token punctuation">.</span>Decompress<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">StreamReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamReader</span><span class="token punctuation">(</span>stream<span class="token punctuation">,</span> Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>
                            pageSource <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">ReadToEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>ContentEncoding<span class="token punctuation">.</span><span class="token function">ToLower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;deflate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//解压</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">DeflateStream</span> stream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DeflateStream</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">GetResponseStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> CompressionMode<span class="token punctuation">.</span>Decompress<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">StreamReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamReader</span><span class="token punctuation">(</span>stream<span class="token punctuation">,</span> Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>
                            pageSource <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">ReadToEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>

                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">Stream</span> stream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">GetResponseStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//原始</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">StreamReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamReader</span><span class="token punctuation">(</span>stream<span class="token punctuation">,</span> Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>

                            pageSource <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">ReadToEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            request<span class="token punctuation">.</span><span class="token function">Abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            watch<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> threadId <span class="token operator">=</span> System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Thread<span class="token punctuation">.</span>CurrentThread<span class="token punctuation">.</span>ManagedThreadId<span class="token punctuation">;</span><span class="token comment">//获取当前任务线程ID</span>
            <span class="token class-name"><span class="token keyword">var</span></span> milliseconds <span class="token operator">=</span> watch<span class="token punctuation">.</span>ElapsedMilliseconds<span class="token punctuation">;</span><span class="token comment">//获取请求执行时间</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>OnCompleted <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">OnCompleted</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OnCompletedEventArgs</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> threadId<span class="token punctuation">,</span> milliseconds<span class="token punctuation">,</span> pageSource<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>OnError <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">OnError</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OnErrorEventArgs</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> pageSource<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),e=[o];function c(u,l){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","shili.html.vue"]]),d=JSON.parse('{"path":"/middleware/pachong/shili.html","title":"示例","lang":"zh-CN","frontmatter":{"title":"示例","lang":"zh-CN","date":"2023-09-14T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"shili","slug":"wgoagv","docsId":"70056008","description":"异步并发、设置代理、操作Cookie、Gzip页面加速。","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/pachong/shili.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"示例"}],["meta",{"property":"og:description","content":"异步并发、设置代理、操作Cookie、Gzip页面加速。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"示例\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.5,"words":450},"filePathRelative":"middleware/pachong/shili.md","localizedDate":"2023年9月14日","excerpt":"<p>异步并发、设置代理、操作Cookie、Gzip页面加速。</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token return-type class-name\\">CookieContainer</span> CookiesContainer <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">get</span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">set</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span><span class=\\"token comment\\">//定义Cookie容器</span>\\n\\n<span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>summary</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"token doc-comment comment\\">/// 异步创建爬虫</span>\\n<span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>summary</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>param</span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>uri<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>爬虫URL地址<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>param</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>param</span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>proxy<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>代理服务器<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>param</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>returns</span><span class=\\"token punctuation\\">&gt;</span></span>网页源代码<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>returns</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">async</span> <span class=\\"token return-type class-name\\">Task<span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">Start</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Uri</span> uri<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\"><span class=\\"token keyword\\">string</span></span> proxy <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">await</span> Task<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Run</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> pageSource <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">.</span>Empty<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">try</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>OnStart <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">OnStart</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">OnStartEventArgs</span><span class=\\"token punctuation\\">(</span>uri<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> watch <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Stopwatch</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            watch<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Start</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> request <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>HttpWebRequest<span class=\\"token punctuation\\">)</span>WebRequest<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Create</span><span class=\\"token punctuation\\">(</span>uri<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            request<span class=\\"token punctuation\\">.</span>Accept <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"*/*\\"</span><span class=\\"token punctuation\\">;</span>\\n            request<span class=\\"token punctuation\\">.</span>ServicePoint<span class=\\"token punctuation\\">.</span>Expect100Continue <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//加快载入速度</span>\\n            request<span class=\\"token punctuation\\">.</span>ServicePoint<span class=\\"token punctuation\\">.</span>UseNagleAlgorithm <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//禁止Nagle算法加快载入速度</span>\\n            request<span class=\\"token punctuation\\">.</span>AllowWriteStreamBuffering <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//禁止缓冲加快载入速度</span>\\n            request<span class=\\"token punctuation\\">.</span>Headers<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Add</span><span class=\\"token punctuation\\">(</span>HttpRequestHeader<span class=\\"token punctuation\\">.</span>AcceptEncoding<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"gzip,deflate\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//定义gzip压缩页面支持</span>\\n            request<span class=\\"token punctuation\\">.</span>ContentType <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"application/x-www-form-urlencoded\\"</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//定义文档类型及编码</span>\\n            request<span class=\\"token punctuation\\">.</span>AllowAutoRedirect <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//禁止自动跳转</span>\\n            <span class=\\"token comment\\">//设置User-Agent，伪装成Google Chrome浏览器</span>\\n            request<span class=\\"token punctuation\\">.</span>UserAgent <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\\"</span><span class=\\"token punctuation\\">;</span>\\n            request<span class=\\"token punctuation\\">.</span>Timeout <span class=\\"token operator\\">=</span> <span class=\\"token number\\">5000</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//定义请求超时时间为5秒</span>\\n            request<span class=\\"token punctuation\\">.</span>KeepAlive <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//启用长连接</span>\\n            request<span class=\\"token punctuation\\">.</span>Method <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"GET\\"</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//定义请求方式为GET              </span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>proxy <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> request<span class=\\"token punctuation\\">.</span>Proxy <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">WebProxy</span><span class=\\"token punctuation\\">(</span>proxy<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//设置代理服务器IP，伪装请求地址</span>\\n            request<span class=\\"token punctuation\\">.</span>CookieContainer <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>CookiesContainer<span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//附加Cookie容器</span>\\n            request<span class=\\"token punctuation\\">.</span>ServicePoint<span class=\\"token punctuation\\">.</span>ConnectionLimit <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">.</span>MaxValue<span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//定义最大连接数</span>\\n\\n            <span class=\\"token keyword\\">using</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> response <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>HttpWebResponse<span class=\\"token punctuation\\">)</span>request<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetResponse</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">{</span><span class=\\"token comment\\">//获取请求响应</span>\\n\\n                <span class=\\"token keyword\\">foreach</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Cookie</span> cookie <span class=\\"token keyword\\">in</span> response<span class=\\"token punctuation\\">.</span>Cookies<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>CookiesContainer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Add</span><span class=\\"token punctuation\\">(</span>cookie<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//将Cookie加入容器，保存登录状态</span>\\n\\n                <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>response<span class=\\"token punctuation\\">.</span>ContentEncoding<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ToLower</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Contains</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"gzip\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token comment\\">//解压</span>\\n                <span class=\\"token punctuation\\">{</span>\\n                    <span class=\\"token keyword\\">using</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">GZipStream</span> stream <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">GZipStream</span><span class=\\"token punctuation\\">(</span>response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetResponseStream</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> CompressionMode<span class=\\"token punctuation\\">.</span>Decompress<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token punctuation\\">{</span>\\n                        <span class=\\"token keyword\\">using</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">StreamReader</span> reader <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">StreamReader</span><span class=\\"token punctuation\\">(</span>stream<span class=\\"token punctuation\\">,</span> Encoding<span class=\\"token punctuation\\">.</span>UTF8<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n                        <span class=\\"token punctuation\\">{</span>\\n                            pageSource <span class=\\"token operator\\">=</span> reader<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ReadToEnd</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                        <span class=\\"token punctuation\\">}</span>\\n                    <span class=\\"token punctuation\\">}</span>\\n                <span class=\\"token punctuation\\">}</span>\\n                <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>response<span class=\\"token punctuation\\">.</span>ContentEncoding<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ToLower</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Contains</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"deflate\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token comment\\">//解压</span>\\n                <span class=\\"token punctuation\\">{</span>\\n                    <span class=\\"token keyword\\">using</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">DeflateStream</span> stream <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">DeflateStream</span><span class=\\"token punctuation\\">(</span>response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetResponseStream</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> CompressionMode<span class=\\"token punctuation\\">.</span>Decompress<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token punctuation\\">{</span>\\n                        <span class=\\"token keyword\\">using</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">StreamReader</span> reader <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">StreamReader</span><span class=\\"token punctuation\\">(</span>stream<span class=\\"token punctuation\\">,</span> Encoding<span class=\\"token punctuation\\">.</span>UTF8<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n                        <span class=\\"token punctuation\\">{</span>\\n                            pageSource <span class=\\"token operator\\">=</span> reader<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ReadToEnd</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                        <span class=\\"token punctuation\\">}</span>\\n\\n                    <span class=\\"token punctuation\\">}</span>\\n                <span class=\\"token punctuation\\">}</span>\\n                <span class=\\"token keyword\\">else</span>\\n                <span class=\\"token punctuation\\">{</span>\\n                    <span class=\\"token keyword\\">using</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Stream</span> stream <span class=\\"token operator\\">=</span> response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetResponseStream</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token comment\\">//原始</span>\\n                    <span class=\\"token punctuation\\">{</span>\\n                        <span class=\\"token keyword\\">using</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">StreamReader</span> reader <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">StreamReader</span><span class=\\"token punctuation\\">(</span>stream<span class=\\"token punctuation\\">,</span> Encoding<span class=\\"token punctuation\\">.</span>UTF8<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n                        <span class=\\"token punctuation\\">{</span>\\n\\n                            pageSource <span class=\\"token operator\\">=</span> reader<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ReadToEnd</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                        <span class=\\"token punctuation\\">}</span>\\n                    <span class=\\"token punctuation\\">}</span>\\n                <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token punctuation\\">}</span>\\n            request<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Abort</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            watch<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Stop</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> threadId <span class=\\"token operator\\">=</span> System<span class=\\"token punctuation\\">.</span>Threading<span class=\\"token punctuation\\">.</span>Thread<span class=\\"token punctuation\\">.</span>CurrentThread<span class=\\"token punctuation\\">.</span>ManagedThreadId<span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//获取当前任务线程ID</span>\\n            <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> milliseconds <span class=\\"token operator\\">=</span> watch<span class=\\"token punctuation\\">.</span>ElapsedMilliseconds<span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//获取请求执行时间</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>OnCompleted <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">OnCompleted</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">OnCompletedEventArgs</span><span class=\\"token punctuation\\">(</span>uri<span class=\\"token punctuation\\">,</span> threadId<span class=\\"token punctuation\\">,</span> milliseconds<span class=\\"token punctuation\\">,</span> pageSource<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Exception</span> ex<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>OnError <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">OnError</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">OnErrorEventArgs</span><span class=\\"token punctuation\\">(</span>uri<span class=\\"token punctuation\\">,</span> ex<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">return</span> pageSource<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{r as comp,d as data};
