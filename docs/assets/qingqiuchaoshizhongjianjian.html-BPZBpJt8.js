import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as p,c as o,b as n,e as s,f as c,d as i}from"./app-Bfb6-vFH.js";const u={},l=i(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><blockquote><p>该中间件是框架自带的，但是需要.Net8版本</p></blockquote><p>使用RequestTimeoutsMiddleware更方便地实现 request 超时的处理</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="基础操作" tabindex="-1"><a class="header-anchor" href="#基础操作"><span>基础操作</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> WebApplication<span class="token punctuation">.</span><span class="token function">CreateBuilder</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddRequestTimeouts</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>DefaultPolicy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RequestTimeoutPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Timeout <span class="token operator">=</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> app <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">UseRequestTimeouts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">Map</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">RunAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义配置超时时间" tabindex="-1"><a class="header-anchor" href="#自定义配置超时时间"><span>自定义配置超时时间</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>app<span class="token punctuation">.</span><span class="token function">MapGet</span><span class="token punctuation">(</span><span class="token string">&quot;/timeout&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token class-name">CancellationToken</span> cancellationToken<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">await</span> Task<span class="token punctuation">.</span><span class="token function">Delay</span><span class="token punctuation">(</span>TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cancellationToken<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Results<span class="token punctuation">.</span><span class="token function">Content</span><span class="token punctuation">(</span><span class="token string">&quot;No timeout!&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="响应头处理" tabindex="-1"><a class="header-anchor" href="#响应头处理"><span>响应头处理</span></a></h3><p>默认的 response status code 是 504，我们也可以配置 response 的 statusCode 和 timeout 的 response</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddRequestTimeouts</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>DefaultPolicy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RequestTimeoutPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Timeout <span class="token operator">=</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token comment">// https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/408</span>
        TimeoutStatusCode <span class="token operator">=</span> <span class="token number">408</span><span class="token punctuation">,</span>
        WriteTimeoutResponse <span class="token operator">=</span> context <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> context<span class="token punctuation">.</span>Response<span class="token punctuation">.</span><span class="token function">WriteAsync</span><span class="token punctuation">(</span><span class="token string">&quot;timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,12),r={href:"https://mp.weixin.qq.com/s/2_Zlbo1BTMXfq0uSozMH_w",target:"_blank",rel:"noopener noreferrer"};function k(d,m){const a=e("ExternalLinkIcon");return p(),o("div",null,[l,n("p",null,[s("asp.net 8 中的 RequestTimeoutsMiddleware："),n("a",r,[s("https://mp.weixin.qq.com/s/2_Zlbo1BTMXfq0uSozMH_w"),c(a)])])])}const g=t(u,[["render",k],["__file","qingqiuchaoshizhongjianjian.html.vue"]]),b=JSON.parse('{"path":"/dotnet/base/pipeline/middleware/tazhan/qingqiuchaoshizhongjianjian.html","title":"请求超时中间件","lang":"zh-CN","frontmatter":{"title":"请求超时中间件","lang":"zh-CN","date":"2023-09-17T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"qingqiuchaoshizhongjianjian","slug":"afymugn0pw0qh2p2","docsId":"140126579","description":"概述 该中间件是框架自带的，但是需要.Net8版本 使用RequestTimeoutsMiddleware更方便地实现 request 超时的处理 操作 基础操作 自定义配置超时时间 响应头处理 默认的 response status code 是 504，我们也可以配置 response 的 statusCode 和 timeout 的 respon...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/base/pipeline/middleware/tazhan/qingqiuchaoshizhongjianjian.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"请求超时中间件"}],["meta",{"property":"og:description","content":"概述 该中间件是框架自带的，但是需要.Net8版本 使用RequestTimeoutsMiddleware更方便地实现 request 超时的处理 操作 基础操作 自定义配置超时时间 响应头处理 默认的 response status code 是 504，我们也可以配置 response 的 statusCode 和 timeout 的 respon..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-06T14:20:50.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-06T14:20:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"请求超时中间件\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-17T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-06T14:20:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"基础操作","slug":"基础操作","link":"#基础操作","children":[]},{"level":3,"title":"自定义配置超时时间","slug":"自定义配置超时时间","link":"#自定义配置超时时间","children":[]},{"level":3,"title":"响应头处理","slug":"响应头处理","link":"#响应头处理","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1715005250000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.59,"words":177},"filePathRelative":"dotnet/base/pipeline/middleware/tazhan/qingqiuchaoshizhongjianjian.md","localizedDate":"2023年9月17日","excerpt":"<h2>概述</h2>\\n<blockquote>\\n<p>该中间件是框架自带的，但是需要.Net8版本</p>\\n</blockquote>\\n<p>使用RequestTimeoutsMiddleware更方便地实现 request 超时的处理</p>\\n<h2>操作</h2>\\n<h3>基础操作</h3>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> builder <span class=\\"token operator\\">=</span> WebApplication<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">CreateBuilder</span><span class=\\"token punctuation\\">(</span>args<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nbuilder<span class=\\"token punctuation\\">.</span>Services<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AddRequestTimeouts</span><span class=\\"token punctuation\\">(</span>options <span class=\\"token operator\\">=&gt;</span>\\n<span class=\\"token punctuation\\">{</span>\\n    options<span class=\\"token punctuation\\">.</span>DefaultPolicy <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">RequestTimeoutPolicy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        Timeout <span class=\\"token operator\\">=</span> TimeSpan<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">FromSeconds</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> app <span class=\\"token operator\\">=</span> builder<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Build</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\napp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">UseRequestTimeouts</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\napp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Map</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token string\\">\\"Hello world\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">await</span> app<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">RunAsync</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{g as comp,b as data};
