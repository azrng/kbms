import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,b as n,e as s,f as p,d as t}from"./app-D8HBJYTp.js";const r={},i=n("h2",{id:"概述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#概述"},[n("span",null,"概述")])],-1),u={href:"https://k6.io/open-source/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://k6.io/docs/get-started/installation/",target:"_blank",rel:"noopener noreferrer"},d=t(`<h2 id="关键词解释" tabindex="-1"><a class="header-anchor" href="#关键词解释"><span>关键词解释</span></a></h2><p>在 K6 中，通过一些参数配置可以模拟上述的测试场景。常见的参数如下所示：</p><table><thead><tr><th>释意</th><th>--</th></tr></thead><tbody><tr><td>vus</td><td>当前并发数(虚拟用户数)</td></tr><tr><td>vus_max</td><td>最大并发数(虚拟用户的最大数量)</td></tr><tr><td>rps</td><td>每秒并发请求数</td></tr><tr><td>duration</td><td>持续运行时间</td></tr><tr><td>checks</td><td>断言成功率</td></tr><tr><td>data_sent</td><td>发送的数据量</td></tr><tr><td>data_received</td><td>接收到的数据量</td></tr><tr><td>iterations</td><td>测试中的 vu 执行 js 脚本（default 函数）的总次数</td></tr><tr><td>iteration_duration</td><td>完成默认/主函数的完整迭代所花费的时间</td></tr></tbody></table><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p>windows安装</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>winget install k6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),m={href:"https://dl.k6.io/msi/k6-latest-amd64.msi",target:"_blank",rel:"noopener noreferrer"},v=t(`<h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>k6 help <span class="token punctuation">[</span>command<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">flags</span></span><span class="token punctuation">]</span>

<span class="token preprocessor property">## 将测试在 K6 的云端服务执行，需要提前注册 K6 账号并登录</span>
k6 login <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>
k6 cloud <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>

<span class="token preprocessor property">## 检查脚本</span>
k6 inspect <span class="token punctuation">[</span>file<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">flags</span></span><span class="token punctuation">]</span>

<span class="token preprocessor property">## 执行 load test（本地）</span>
k6 run <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>

<span class="token preprocessor property">## 暂停测试</span>
k6 pause <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>

<span class="token preprocessor property">## 恢复测试</span>
k6 resume <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>

<span class="token preprocessor property">## 扩展测试</span>
k6 scale <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>

<span class="token preprocessor property">## 显示测试状态</span>
k6 stats <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>

<span class="token preprocessor property">## 显示版本</span>
k6 version <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>

<span class="token preprocessor property">## 模拟10个虚拟用户(VU)，连续压测30秒：</span>
k6 run <span class="token operator">--</span>vus <span class="token number">10</span> <span class="token operator">--</span>duration 30s script<span class="token punctuation">.</span>js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="快速上手" tabindex="-1"><a class="header-anchor" href="#快速上手"><span>快速上手</span></a></h3><p>新建simple.js文件，对get接口进行负载测试</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>import <span class="token punctuation">{</span> check<span class="token punctuation">,</span> sleep <span class="token punctuation">}</span> from &#39;k6&#39;<span class="token punctuation">;</span>
import http from &#39;k6<span class="token operator">/</span>http&#39;

<span class="token comment">// export const options = {</span>
<span class="token comment">//     insecureSkipTLSVerify: true, // 跳过TLS验证</span>
<span class="token comment">//     noConnectionReuse: false, // 禁用保持连接</span>
<span class="token comment">//     vus: 1, // 1个用户循环10秒</span>
<span class="token comment">//     duration: &quot;10s&quot;,</span>
<span class="token comment">// };</span>

<span class="token keyword">const</span> Base_Url <span class="token operator">=</span> <span class="token string">&quot;http://localhost:5129/&quot;</span><span class="token punctuation">;</span>

export <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token type-expression class-name"></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> url <span class="token operator">=</span> \`$<span class="token punctuation">{</span>Base_Url<span class="token punctuation">}</span><span class="token operator">/</span>WeatherForecast\`<span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token keyword">params</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
        headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> resp <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token keyword">params</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">check</span><span class="token punctuation">(</span>resp<span class="token punctuation">,</span> <span class="token punctuation">{</span> &#39;success&#39;<span class="token punctuation">:</span> resp<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 在指定的时间内暂停VU的执行。</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行命令</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>k6 run simple<span class="token punctuation">.</span>js
k6 run <span class="token operator">--</span>vus <span class="token number">10</span> <span class="token operator">--</span>duration 30s simple<span class="token punctuation">.</span>js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>  scenarios<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">100.00</span><span class="token operator">%</span><span class="token punctuation">)</span> <span class="token number">1</span> scenario<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token class-name">max</span> VUs<span class="token punctuation">,</span> 10m30s <span class="token return-type class-name">max</span> duration <span class="token punctuation">(</span><span class="token class-name">incl<span class="token punctuation">.</span> graceful</span> stop<span class="token punctuation">)</span><span class="token punctuation">:</span>
           <span class="token operator">*</span> <span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token number">1</span> iterations <span class="token keyword">for</span> each of <span class="token number">1</span> VUs <span class="token punctuation">(</span><span class="token named-parameter punctuation">maxDuration</span><span class="token punctuation">:</span> 10m0s<span class="token punctuation">,</span> <span class="token named-parameter punctuation">gracefulStop</span><span class="token punctuation">:</span> 30s<span class="token punctuation">)</span>


     data_received<span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token punctuation">:</span> <span class="token number">99</span> B    <span class="token number">95</span> B<span class="token operator">/</span>s
     data_sent<span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token punctuation">:</span> <span class="token number">96</span> B    <span class="token number">92</span> B<span class="token operator">/</span>s
     http_req_blocked<span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">:</span> avg<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">.</span>99ms  min<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">.</span>99ms  med<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">.</span>99ms  max<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">.</span>99ms  <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">.</span>99ms  <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">95</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">.</span>99ms
     http_req_connecting<span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token punctuation">:</span> avg<span class="token operator">=</span>0s      min<span class="token operator">=</span>0s      med<span class="token operator">=</span>0s      max<span class="token operator">=</span>0s      <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token operator">=</span>0s      <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">95</span><span class="token punctuation">)</span><span class="token operator">=</span>0s
     http_req_duration<span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token punctuation">:</span> avg<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">.</span>44ms min<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">.</span>44ms med<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">.</span>44ms max<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">.</span>44ms <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">.</span>44ms <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">95</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">.</span>44ms
     http_req_failed<span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token punctuation">:</span> <span class="token number">100.00</span><span class="token operator">%</span> ✓ <span class="token number">1</span>        ✗ <span class="token number">0</span>
     http_req_receiving<span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">:</span> avg<span class="token operator">=</span><span class="token number">448.2</span>µ<span class="token class-name">s</span> min<span class="token operator">=</span><span class="token number">448.2</span>µ<span class="token class-name">s</span> med<span class="token operator">=</span><span class="token number">448.2</span>µ<span class="token class-name">s</span> max<span class="token operator">=</span><span class="token number">448.2</span>µ<span class="token return-type class-name">s</span> <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">448.2</span>µ<span class="token return-type class-name">s</span> <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">95</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">448.2</span>µs
     http_req_sending<span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">:</span> avg<span class="token operator">=</span>0s      min<span class="token operator">=</span>0s      med<span class="token operator">=</span>0s      max<span class="token operator">=</span>0s      <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token operator">=</span>0s      <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">95</span><span class="token punctuation">)</span><span class="token operator">=</span>0s
     http_req_tls_handshaking<span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">:</span> avg<span class="token operator">=</span>0s      min<span class="token operator">=</span>0s      med<span class="token operator">=</span>0s      max<span class="token operator">=</span>0s      <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token operator">=</span>0s      <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">95</span><span class="token punctuation">)</span><span class="token operator">=</span>0s
     http_req_waiting<span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">:</span> avg<span class="token operator">=</span><span class="token number">19</span><span class="token punctuation">.</span>99ms min<span class="token operator">=</span><span class="token number">19</span><span class="token punctuation">.</span>99ms med<span class="token operator">=</span><span class="token number">19</span><span class="token punctuation">.</span>99ms max<span class="token operator">=</span><span class="token number">19</span><span class="token punctuation">.</span>99ms <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">19</span><span class="token punctuation">.</span>99ms <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">95</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">19</span><span class="token punctuation">.</span>99ms
     http_reqs<span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token punctuation">:</span> <span class="token number">1</span>       <span class="token number">0.958649</span><span class="token operator">/</span>s
     iteration_duration<span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">:</span> avg<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">.</span>04s   min<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">.</span>04s   med<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">.</span>04s   max<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">.</span>04s   <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">.</span>04s   <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">95</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">.</span>04s
     iterations<span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">:</span> <span class="token number">1</span>       <span class="token number">0.958649</span><span class="token operator">/</span>s
     vus<span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token punctuation">:</span> <span class="token number">1</span>       min<span class="token operator">=</span><span class="token number">1</span>      max<span class="token operator">=</span><span class="token number">1</span>
     vus_max<span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token range operator">..</span><span class="token punctuation">:</span> <span class="token number">1</span>       min<span class="token operator">=</span><span class="token number">1</span>      max<span class="token operator">=</span><span class="token number">1</span>


running <span class="token punctuation">(</span>00m01<span class="token punctuation">.</span>0s<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token operator">/</span><span class="token number">1</span> VUs<span class="token punctuation">,</span> <span class="token number">1</span> complete <span class="token keyword">and</span> <span class="token number">0</span> interrupted iterations
<span class="token keyword">default</span> ✓ <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token punctuation">]</span> <span class="token number">1</span> VUs  00m01<span class="token punctuation">.</span>0s<span class="token operator">/</span>10m0s  <span class="token number">1</span><span class="token operator">/</span><span class="token number">1</span> iters<span class="token punctuation">,</span> <span class="token number">1</span> per VU
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="请求示例汇总" tabindex="-1"><a class="header-anchor" href="#请求示例汇总"><span>请求示例汇总</span></a></h3><h4 id="get" tabindex="-1"><a class="header-anchor" href="#get"><span>Get</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> http <span class="token keyword">from</span> <span class="token string">&#39;k6/http&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">let</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">vus</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token comment">// 指定要同时运行的虚拟用户数量</span>
  <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token string">&#39;10s&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 指定测试运行的总持续时间</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// default 默认函数</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 标头</span>
  <span class="token keyword">const</span> params <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> res<span class="token operator">=</span>http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;https://test.k6.io&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="post" tabindex="-1"><a class="header-anchor" href="#post"><span>Post</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> http <span class="token keyword">from</span> <span class="token string">&#39;k6/http&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">&#39;https://httpbin.test.k6.io/post&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> logoBin <span class="token operator">=</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;./logo.png&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Bert&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// 使用JSON字符串作为body</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Bert</span>

  <span class="token comment">// 使用 Object 作为 body,会自动包含&#39;Content-Type: application/x-www-form-urlencoded&#39;</span>
  res <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>form<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Bert</span>

  <span class="token comment">// Using a binary array as body. Make sure to open() the file as binary</span>
  <span class="token comment">// (with the &#39;b&#39; argument).</span>
  http<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> logoBin<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;image/png&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Using an ArrayBuffer as body. Make sure to pass the underlying ArrayBuffer</span>
  <span class="token comment">// instance to http.post(), and not the TypedArray view.</span>
  data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">104</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  http<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token punctuation">.</span>buffer<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;image/png&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="delete" tabindex="-1"><a class="header-anchor" href="#delete"><span>Delete</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> http <span class="token keyword">from</span> <span class="token string">&#39;k6/http&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">&#39;https://httpbin.test.k6.io/delete/{id}&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> params <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;X-MyHeader&#39;</span><span class="token operator">:</span> <span class="token string">&#39;k6test&#39;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  http<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><p>使用 K6 为接口进行压力测试：https://mp.weixin.qq.com/s/dbk__lnAfo2nwypKcLulNQ</p>`,19);function b(g,h){const a=o("ExternalLinkIcon");return c(),l("div",null,[i,n("p",null,[s("k6 是一个负载测试工具，可用于测量API 应用程序的性能和可扩展性。它支持用 JavaScript 编写测试，可用于模拟大量虚拟用户向您的 API 发出请求。k6 最适合您想要模拟大量并发用户并测量 API 在负载下的性能的负载测试场景。为开发人员的幸福而构建的现代负载测试工具。 官网："),n("a",u,[s("https://k6.io/open-source/"),p(a)]),s(" 文档："),n("a",k,[s("https://k6.io/docs/get-started/installation/"),p(a)])]),d,n("p",null,[s("如果如果错误(0x8a15000f : Data required by the source is missing)，那么就直接下载msi文件吧，地址为："),n("a",m,[s("https://dl.k6.io/msi/k6-latest-amd64.msi"),p(a)])]),v])}const _=e(r,[["render",b],["__file","k6.html.vue"]]),w=JSON.parse('{"path":"/middleware/testMange/fuzaiceshi/k6.html","title":"K6","lang":"zh-CN","frontmatter":{"title":"K6","lang":"zh-CN","date":"2023-06-27T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"k6","slug":"lqkax72t5q8ci90k","docsId":"105102908","description":"概述 k6 是一个负载测试工具，可用于测量API 应用程序的性能和可扩展性。它支持用 JavaScript 编写测试，可用于模拟大量虚拟用户向您的 API 发出请求。k6 最适合您想要模拟大量并发用户并测量 API 在负载下的性能的负载测试场景。为开发人员的幸福而构建的现代负载测试工具。 官网：https://k6.io/open-source/ 文档...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/testMange/fuzaiceshi/k6.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"K6"}],["meta",{"property":"og:description","content":"概述 k6 是一个负载测试工具，可用于测量API 应用程序的性能和可扩展性。它支持用 JavaScript 编写测试，可用于模拟大量虚拟用户向您的 API 发出请求。k6 最适合您想要模拟大量并发用户并测量 API 在负载下的性能的负载测试场景。为开发人员的幸福而构建的现代负载测试工具。 官网：https://k6.io/open-source/ 文档..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-27T10:17:16.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-06-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-27T10:17:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"K6\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-27T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-27T10:17:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"关键词解释","slug":"关键词解释","link":"#关键词解释","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[]},{"level":3,"title":"快速上手","slug":"快速上手","link":"#快速上手","children":[]},{"level":3,"title":"请求示例汇总","slug":"请求示例汇总","link":"#请求示例汇总","children":[{"level":4,"title":"Get","slug":"get","link":"#get","children":[]},{"level":4,"title":"Post","slug":"post","link":"#post","children":[]},{"level":4,"title":"Delete","slug":"delete","link":"#delete","children":[]}]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1709029036000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2},{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":3.46,"words":1038},"filePathRelative":"middleware/testMange/fuzaiceshi/k6.md","localizedDate":"2023年6月27日","excerpt":"<h2>概述</h2>\\n<p>k6 是一个负载测试工具，可用于测量API 应用程序的性能和可扩展性。它支持用 JavaScript 编写测试，可用于模拟大量虚拟用户向您的 API 发出请求。k6 最适合您想要模拟大量并发用户并测量 API 在负载下的性能的负载测试场景。为开发人员的幸福而构建的现代负载测试工具。\\n官网：<a href=\\"https://k6.io/open-source/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://k6.io/open-source/</a>\\n文档：<a href=\\"https://k6.io/docs/get-started/installation/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://k6.io/docs/get-started/installation/</a></p>","autoDesc":true}');export{_ as comp,w as data};
