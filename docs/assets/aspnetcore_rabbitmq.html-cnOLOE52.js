import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-DMmdIwn0.js";const e={},o=t(`<h3 id="_1-日志记录" tabindex="-1"><a class="header-anchor" href="#_1-日志记录"><span>1.日志记录</span></a></h3><p>生产者</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token function">AddRabbitLogger</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span> <span class="token comment">//添加日志相关的服务，数据以json形式发送到rabbitmq中</span>
        <span class="token punctuation">{</span>
            options<span class="token punctuation">.</span>Hosts <span class="token operator">=</span> hosts<span class="token punctuation">;</span>
            options<span class="token punctuation">.</span>Password <span class="token operator">=</span> password<span class="token punctuation">;</span>
            options<span class="token punctuation">.</span>Port <span class="token operator">=</span> port<span class="token punctuation">;</span>
            options<span class="token punctuation">.</span>UserName <span class="token operator">=</span> userName<span class="token punctuation">;</span>
            options<span class="token punctuation">.</span>VirtualHost <span class="token operator">=</span> virtualHost<span class="token punctuation">;</span>

            options<span class="token punctuation">.</span>Arguments <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
            options<span class="token punctuation">.</span>Durable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            options<span class="token punctuation">.</span>AutoDelete <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

            options<span class="token punctuation">.</span>Category <span class="token operator">=</span> <span class="token string">&quot;Home&quot;</span><span class="token punctuation">;</span>
            options<span class="token punctuation">.</span>MinLevel <span class="token operator">=</span> LogLevel<span class="token punctuation">.</span>Warning<span class="token punctuation">;</span>

            <span class="token comment">//队列模式</span>
            options<span class="token punctuation">.</span>Queue <span class="token operator">=</span> <span class="token string">&quot;queue.logger&quot;</span><span class="token punctuation">;</span>

            <span class="token comment">//交换机模式</span>
            <span class="token comment">//options.Exchange = &quot;exchange.logger&quot;; </span>
            <span class="token comment">//options.RouteQueues = new RouteQueue[] { new RouteQueue() { Queue = &quot;queue.logger&quot;, Route = &quot;#&quot; } };</span>
            <span class="token comment">//options.Type = RabbitExchangeType.Topic;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>消费者</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>            services<span class="token punctuation">.</span><span class="token function">AddRabbitConsumer</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
            <span class="token punctuation">{</span>
                options<span class="token punctuation">.</span>Hosts <span class="token operator">=</span> hosts<span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>Password <span class="token operator">=</span> password<span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>Port <span class="token operator">=</span> port<span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>UserName <span class="token operator">=</span> userName<span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>VirtualHost <span class="token operator">=</span> virtualHost<span class="token punctuation">;</span>

                options<span class="token punctuation">.</span>Arguments <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>Durable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>AutoDelete <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

                <span class="token comment">//options.AutoAck = true;</span>
                <span class="token comment">//options.FetchCount = 10;</span>
                <span class="token comment">//options.RouteQueues = new RouteQueue[] { new RouteQueue() { Queue = &quot;queue.logger&quot;, Route = &quot;#&quot; } };//交换机模式</span>
                <span class="token comment">//options.Type = RabbitExchangeType.Topic;//交换机模式</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>

            <span class="token comment">//.AddListener(&quot;queue.logger&quot;, result =&gt;</span>
            <span class="token comment">//{</span>
            <span class="token comment">//    Console.WriteLine(&quot;Message From queue.logger:&quot; + result.Body);</span>
            <span class="token comment">//});</span>

            <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddListener</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>RabbitConsumerListener<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;queue.logger&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-普通模式" tabindex="-1"><a class="header-anchor" href="#_2-普通模式"><span>2.普通模式</span></a></h3><p>生产者</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>           services<span class="token punctuation">.</span><span class="token function">AddRabbitProducer</span><span class="token punctuation">(</span><span class="token string">&quot;SimplePattern&quot;</span><span class="token punctuation">,</span> options <span class="token operator">=&gt;</span>
            <span class="token punctuation">{</span>
                options<span class="token punctuation">.</span>Hosts <span class="token operator">=</span> hosts<span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>Password <span class="token operator">=</span> password<span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>Port <span class="token operator">=</span> port<span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>UserName <span class="token operator">=</span> userName<span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>VirtualHost <span class="token operator">=</span> virtualHost<span class="token punctuation">;</span>

                options<span class="token punctuation">.</span>Arguments <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>Durable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>AutoDelete <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

                options<span class="token punctuation">.</span>InitializeCount <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>Queues <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> <span class="token string">&quot;queue.simple&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>消费者</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>            services<span class="token punctuation">.</span><span class="token function">AddRabbitConsumer</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
            <span class="token punctuation">{</span>
                options<span class="token punctuation">.</span>Hosts <span class="token operator">=</span> hosts<span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>Password <span class="token operator">=</span> password<span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>Port <span class="token operator">=</span> port<span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>UserName <span class="token operator">=</span> userName<span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>VirtualHost <span class="token operator">=</span> virtualHost<span class="token punctuation">;</span>

                options<span class="token punctuation">.</span>Arguments <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>Durable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                options<span class="token punctuation">.</span>AutoDelete <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

                <span class="token comment">//options.FetchCount = 1;</span>
                options<span class="token punctuation">.</span>AutoAck <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddListener</span><span class="token punctuation">(</span><span class="token string">&quot;queue.simple&quot;</span><span class="token punctuation">,</span> result <span class="token operator">=&gt;</span>
            <span class="token punctuation">{</span>
                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Message From queue.simple:&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span>Body<span class="token punctuation">)</span><span class="token punctuation">;</span>
                result<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),p=[o];function i(c,u){return s(),a("div",null,p)}const d=n(e,[["render",i],["__file","aspnetcore_rabbitmq.html.vue"]]),k=JSON.parse('{"path":"/middleware/xiaoxiduilie/rabbitmq/aspnetcore_rabbitmq.html","title":"AspNetCore.Rabbitmq","lang":"zh-CN","frontmatter":{"title":"AspNetCore.Rabbitmq","lang":"zh-CN","date":"2023-08-27T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"aspnetcore_rabbitmq","slug":"wlmu4m","docsId":"30115247","description":"1.日志记录 生产者 消费者 2.普通模式 生产者 消费者","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/xiaoxiduilie/rabbitmq/aspnetcore_rabbitmq.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"AspNetCore.Rabbitmq"}],["meta",{"property":"og:description","content":"1.日志记录 生产者 消费者 2.普通模式 生产者 消费者"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-08-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AspNetCore.Rabbitmq\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":3,"title":"1.日志记录","slug":"_1-日志记录","link":"#_1-日志记录","children":[]},{"level":3,"title":"2.普通模式","slug":"_2-普通模式","link":"#_2-普通模式","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.78,"words":233},"filePathRelative":"middleware/xiaoxiduilie/rabbitmq/aspnetcore_rabbitmq.md","localizedDate":"2023年8月27日","excerpt":"<h3>1.日志记录</h3>\\n<p>生产者</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code>services<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AddRabbitLogger</span><span class=\\"token punctuation\\">(</span>options <span class=\\"token operator\\">=&gt;</span> <span class=\\"token comment\\">//添加日志相关的服务，数据以json形式发送到rabbitmq中</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            options<span class=\\"token punctuation\\">.</span>Hosts <span class=\\"token operator\\">=</span> hosts<span class=\\"token punctuation\\">;</span>\\n            options<span class=\\"token punctuation\\">.</span>Password <span class=\\"token operator\\">=</span> password<span class=\\"token punctuation\\">;</span>\\n            options<span class=\\"token punctuation\\">.</span>Port <span class=\\"token operator\\">=</span> port<span class=\\"token punctuation\\">;</span>\\n            options<span class=\\"token punctuation\\">.</span>UserName <span class=\\"token operator\\">=</span> userName<span class=\\"token punctuation\\">;</span>\\n            options<span class=\\"token punctuation\\">.</span>VirtualHost <span class=\\"token operator\\">=</span> virtualHost<span class=\\"token punctuation\\">;</span>\\n\\n            options<span class=\\"token punctuation\\">.</span>Arguments <span class=\\"token operator\\">=</span> arguments<span class=\\"token punctuation\\">;</span>\\n            options<span class=\\"token punctuation\\">.</span>Durable <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n            options<span class=\\"token punctuation\\">.</span>AutoDelete <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n\\n            options<span class=\\"token punctuation\\">.</span>Category <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"Home\\"</span><span class=\\"token punctuation\\">;</span>\\n            options<span class=\\"token punctuation\\">.</span>MinLevel <span class=\\"token operator\\">=</span> LogLevel<span class=\\"token punctuation\\">.</span>Warning<span class=\\"token punctuation\\">;</span>\\n\\n            <span class=\\"token comment\\">//队列模式</span>\\n            options<span class=\\"token punctuation\\">.</span>Queue <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"queue.logger\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n            <span class=\\"token comment\\">//交换机模式</span>\\n            <span class=\\"token comment\\">//options.Exchange = \\"exchange.logger\\"; </span>\\n            <span class=\\"token comment\\">//options.RouteQueues = new RouteQueue[] { new RouteQueue() { Queue = \\"queue.logger\\", Route = \\"#\\" } };</span>\\n            <span class=\\"token comment\\">//options.Type = RabbitExchangeType.Topic;</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,k as data};
