import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as r,c as t,b as a}from"./app-qB9_Bjjp.js";const n={},p=a(`<h2 id="dapper-aot" tabindex="-1"><a class="header-anchor" href="#dapper-aot"><span>Dapper.AOT</span></a></h2><p>将Dapper进行AOT的组件</p><h2 id="dapperquerybuilder" tabindex="-1"><a class="header-anchor" href="#dapperquerybuilder"><span>DapperQueryBuilder</span></a></h2><p>DapperQueryBuilder是扩展库，它增强了Dapper的功能，特别是关于动态SQL查询和命令的构建。它提供了字符串插值和Fluent API的操作方式，让我们构建复杂的动态查询变得更加直观和简单，并且没有SQL注入的风险。</p><p>仓库地址：https://github.com/Drizin/DapperQueryBuilder</p><p>示例</p><div class="language-c# line-numbers-mode" data-ext="c#" data-title="c#"><pre class="language-c#"><code>//Dapper代码量：需要定义SQL语句、参数列表对象
var dynamicParams = new DynamicParameters();
string sql = &quot;SELECT * FROM Product WHERE 1=1&quot;;
sql += &quot; AND Name LIKE @productName&quot;; 
dynamicParams.Add(&quot;productName&quot;, productName);
sql += &quot; AND ProductSubcategoryID = @subCategoryId&quot;; 
dynamicParams.Add(&quot;subCategoryId&quot;, subCategoryId);
var products = cn.Query&lt;Product&gt;(sql, dynamicParams);


//DapperQueryBuilder：字符串插值的方式，更加直观而且代码量更少
var query = cn.QueryBuilder($&quot;SELECT * FROM Product WHERE 1=1&quot;);
query += $&quot;AND Name LIKE {productName}&quot;; 
query += $&quot;AND ProductSubcategoryID = {subCategoryId}&quot;; 
var products = query.Query&lt;Product&gt;();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例资料：https://mp.weixin.qq.com/s/m0NsFAJORqHipWk7mo0fRA</p>`,8),d=[p];function i(o,u){return r(),t("div",null,d)}const s=e(n,[["render",i],["__file","component.html.vue"]]),m=JSON.parse('{"path":"/orm/dapper/component.html","title":"组件","lang":"zh-CN","frontmatter":{"title":"组件","lang":"zh-CN","date":"2024-03-09T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["orm"],"tag":["compoent"],"description":"Dapper.AOT 将Dapper进行AOT的组件 DapperQueryBuilder DapperQueryBuilder是扩展库，它增强了Dapper的功能，特别是关于动态SQL查询和命令的构建。它提供了字符串插值和Fluent API的操作方式，让我们构建复杂的动态查询变得更加直观和简单，并且没有SQL注入的风险。 仓库地址：https://...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/orm/dapper/component.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"组件"}],["meta",{"property":"og:description","content":"Dapper.AOT 将Dapper进行AOT的组件 DapperQueryBuilder DapperQueryBuilder是扩展库，它增强了Dapper的功能，特别是关于动态SQL查询和命令的构建。它提供了字符串插值和Fluent API的操作方式，让我们构建复杂的动态查询变得更加直观和简单，并且没有SQL注入的风险。 仓库地址：https://..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-09T15:09:06.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"compoent"}],["meta",{"property":"article:published_time","content":"2024-03-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-09T15:09:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"组件\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-09T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-09T15:09:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"Dapper.AOT","slug":"dapper-aot","link":"#dapper-aot","children":[]},{"level":2,"title":"DapperQueryBuilder","slug":"dapperquerybuilder","link":"#dapperquerybuilder","children":[]}],"git":{"createdTime":1709996946000,"updatedTime":1709996946000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.71,"words":214},"filePathRelative":"orm/dapper/component.md","localizedDate":"2024年3月9日","excerpt":"<h2>Dapper.AOT</h2>\\n<p>将Dapper进行AOT的组件</p>\\n<h2>DapperQueryBuilder</h2>\\n<p>DapperQueryBuilder是扩展库，它增强了Dapper的功能，特别是关于动态SQL查询和命令的构建。它提供了字符串插值和Fluent API的操作方式，让我们构建复杂的动态查询变得更加直观和简单，并且没有SQL注入的风险。</p>\\n<p>仓库地址：https://github.com/Drizin/DapperQueryBuilder</p>\\n<p>示例</p>\\n<div class=\\"language-c#\\" data-ext=\\"c#\\" data-title=\\"c#\\"><pre class=\\"language-c#\\"><code>//Dapper代码量：需要定义SQL语句、参数列表对象\\nvar dynamicParams = new DynamicParameters();\\nstring sql = \\"SELECT * FROM Product WHERE 1=1\\";\\nsql += \\" AND Name LIKE @productName\\"; \\ndynamicParams.Add(\\"productName\\", productName);\\nsql += \\" AND ProductSubcategoryID = @subCategoryId\\"; \\ndynamicParams.Add(\\"subCategoryId\\", subCategoryId);\\nvar products = cn.Query&lt;Product&gt;(sql, dynamicParams);\\n\\n\\n//DapperQueryBuilder：字符串插值的方式，更加直观而且代码量更少\\nvar query = cn.QueryBuilder($\\"SELECT * FROM Product WHERE 1=1\\");\\nquery += $\\"AND Name LIKE {productName}\\"; \\nquery += $\\"AND ProductSubcategoryID = {subCategoryId}\\"; \\nvar products = query.Query&lt;Product&gt;();\\n</code></pre></div>","autoDesc":true}');export{s as comp,m as data};
