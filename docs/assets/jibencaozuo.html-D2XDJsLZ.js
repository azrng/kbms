import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as e,c,b as n,e as s,f as u,d as a}from"./app-D8HBJYTp.js";const l={},i=a(`<h3 id="连接" tabindex="-1"><a class="header-anchor" href="#连接"><span>连接</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">--</span> 不需要账号密码的连接字符串
mongodb<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">27017</span>

<span class="token operator">--</span> 需要账号密码的连接字符串
mongodb<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>root<span class="token punctuation">:</span><span class="token number">123456</span>@localhost<span class="token operator">/</span>spark<span class="token punctuation">?</span>authSource<span class="token operator">=</span>admin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>mongodb://：这是指明使用 MongoDB 协议的标识符。</li><li>root:123456@：这部分表示用户名和密码，其中root是用户名，123456是密码。提示：在实际应用中应该使用更强大和安全的密码。</li><li>localhost：这是 MongoDB 服务器的主机名或 IP 地址。在这种情况下，它是指在本地主机上运行的 MongoDB 实例。</li><li>/spark：这是数据库的名称，它指定要连接到的具体数据库。</li><li>?authSource=admin：这是可选的连接参数，指定要进行身份验证的数据库。在这里，它指定使用admin数据库进行身份验证。</li></ul>`,3),k={href:"https://www.mongodb.com/docs/drivers/csharp/current/fundamentals/connection/connect/",target:"_blank",rel:"noopener noreferrer"},r=a(`<h3 id="创建集合" tabindex="-1"><a class="header-anchor" href="#创建集合"><span>创建集合</span></a></h3><p>使用 db.createCollection() 命令创建一个新的集合。指定集合的名称作为参数。例如，创建名为 mycollection 的集合：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>db<span class="token punctuation">.</span><span class="token function">createCollection</span><span class="token punctuation">(</span><span class="token string">&quot;mycollection&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>集合创建成功后，可以使用db.collectionName.insertMany() 命令或其他适当的方法导入数据。下面是使用 insertMany() 导入数据的示例：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>db<span class="token punctuation">.</span>mycollection<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">age</span><span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">city</span><span class="token punctuation">:</span> <span class="token string">&quot;New York&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">&quot;Emma&quot;</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">age</span><span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">city</span><span class="token punctuation">:</span> <span class="token string">&quot;London&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">&quot;Michael&quot;</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">age</span><span class="token punctuation">:</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">city</span><span class="token punctuation">:</span> <span class="token string">&quot;Paris&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询" tabindex="-1"><a class="header-anchor" href="#查询"><span>查询</span></a></h3><ul><li>查询总数：db.getCollection(&quot;QrcodeRecord&quot;).count();</li><li>查询全部：db.getCollection(&quot;bar&quot;).find()</li><li>带条件查询：</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">where</span> <span class="token class-name">in</span> 操作
 db<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span>&#39;shelf_core_inventory&#39;<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
   <span class="token string">&quot;location.locationCode&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;CKGB16&quot;</span><span class="token punctuation">,</span>
   <span class="token string">&quot;shelf.shelfTypeEnum&quot;</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">&quot;$in&quot;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&quot;C0&quot;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token string">&quot;shelf.shelfCode&quot;</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">&quot;$in&quot;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&quot;C0.001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;C1.001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;C1.002&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;C1.003&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">--</span> 查询集合所有
db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users

<span class="token operator">--</span> 根据id查询
db<span class="token punctuation">.</span>Accounts<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;_id&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;62a3e6aad25715026d1a2938&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>


db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span> <span class="token punctuation">:</span> <span class="token number">27</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> <span class="token class-name">age</span> <span class="token operator">=</span> <span class="token number">27</span>

db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;username&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;joe&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span> <span class="token punctuation">:</span> <span class="token number">27</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> <span class="token string">&quot;username&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;joe&quot;</span> <span class="token keyword">and</span> age <span class="token operator">=</span> <span class="token number">27</span>

db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;username&quot;</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;email&quot;</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">select</span> username<span class="token punctuation">,</span> email <span class="token keyword">from</span> <span class="token return-type class-name">users</span>

db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;username&quot;</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;_id&quot;</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// no case  // 即时加上了列筛选，_id也会返回；必须显式的阻止_id返回</span>

db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;$gte&quot;</span> <span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&quot;$lte&quot;</span> <span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> <span class="token class-name">age</span> <span class="token operator">&gt;=</span><span class="token number">18</span> <span class="token keyword">and</span> age <span class="token operator">&lt;=</span> <span class="token number">30</span> <span class="token comment">// $lt(&lt;) $lte(&lt;=) $gt(&gt;) $gte(&gt;=)</span>

db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;username&quot;</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;$ne&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;joe&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> <span class="token class-name">username</span> <span class="token operator">&lt;</span><span class="token operator">&gt;</span> <span class="token string">&quot;joe&quot;</span>

db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;ticket_no&quot;</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;$in&quot;</span> <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">725</span><span class="token punctuation">,</span> <span class="token number">542</span><span class="token punctuation">,</span> <span class="token number">390</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> <span class="token class-name">ticket_no</span> <span class="token keyword">in</span> <span class="token return-type class-name"><span class="token punctuation">(</span>725<span class="token punctuation">,</span> 542<span class="token punctuation">,</span> 390<span class="token punctuation">)</span></span>

db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;ticket_no&quot;</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;$nin&quot;</span> <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">725</span><span class="token punctuation">,</span> <span class="token number">542</span><span class="token punctuation">,</span> <span class="token number">390</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> <span class="token class-name">ticket_no</span> <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token return-type class-name"><span class="token punctuation">(</span>725<span class="token punctuation">,</span> 542<span class="token punctuation">,</span> 390<span class="token punctuation">)</span></span>

db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;$or&quot;</span> <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;ticket_no&quot;</span> <span class="token punctuation">:</span> <span class="token number">725</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;winner&quot;</span> <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">select</span> <span class="token operator">*</span> form users <span class="token keyword">where</span> <span class="token class-name">ticket_no</span> <span class="token operator">=</span> <span class="token number">725</span> <span class="token keyword">or</span> winner <span class="token operator">=</span> <span class="token return-type class-name">true</span>

db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;id_num&quot;</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;$mod&quot;</span> <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> <span class="token punctuation">(</span>id_num mod <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span>

db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;$not&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span> <span class="token punctuation">:</span> <span class="token number">27</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> <span class="token class-name">not</span> <span class="token punctuation">(</span>age <span class="token operator">=</span> <span class="token number">27</span><span class="token punctuation">)</span>

db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;username&quot;</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;$in&quot;</span> <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">null</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;$exists&quot;</span> <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> <span class="token class-name">username</span> <span class="token keyword">is</span> <span class="token keyword">null</span> <span class="token comment">// 如果直接通过find({&quot;username&quot; : null})进行查询，那么连带&quot;没有username&quot;的纪录一并筛选出来</span>

db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span> <span class="token punctuation">:</span> <span class="token operator">/</span>joey<span class="token punctuation">?</span><span class="token operator">/</span>i<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 正则查询，value是符合PCRE的表达式</span>

db<span class="token punctuation">.</span>food<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>fruit <span class="token punctuation">:</span> <span class="token punctuation">{</span>$all <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;banana&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 对数组的查询, 字段fruit中，既包含&quot;apple&quot;,又包含&quot;banana&quot;的纪录</span>

db<span class="token punctuation">.</span>food<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;fruit.2&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;peach&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 对数组的查询, 字段fruit中，第3个(从0开始)元素是peach的纪录</span>

db<span class="token punctuation">.</span>food<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;fruit&quot;</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;$size&quot;</span> <span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 对数组的查询, 查询数组元素个数是3的记录，$size前面无法和其他的操作符复合使用</span>

db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>criteria<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;comments&quot;</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;$slice&quot;</span> <span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 对数组的查询，只返回数组comments中的前十条，还可以{&quot;$slice&quot; : -10}， {&quot;$slice&quot; : [23, 10]}; 分别返回最后10条，和中间10条</span>

db<span class="token punctuation">.</span>people<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;name.first&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;Joe&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name.last&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;Schmoe&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// 嵌套查询</span>

db<span class="token punctuation">.</span>blog<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;comments&quot;</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;$elemMatch&quot;</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;author&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;joe&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;score&quot;</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;$gte&quot;</span> <span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 嵌套查询，仅当嵌套的元素是数组时使用,</span>

db<span class="token punctuation">.</span>foo<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;$where&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;this.x + this.y == 10&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 复杂的查询，$where当然是非常方便的，但效率低下。对于复杂查询，考虑的顺序应当是 正则 -&gt; MapReduce -&gt; $where</span>

db<span class="token punctuation">.</span>foo<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;$where&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;function() { return this.x + this.y == 10; }&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// $where可以支持javascript函数作为查询条件</span>

db<span class="token punctuation">.</span>foo<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;x&quot;</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回第(10, 11]条，按&quot;x&quot;进行排序; 三个limit的顺序是任意的，应该尽量避免skip中使用large-number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加" tabindex="-1"><a class="header-anchor" href="#添加"><span>添加</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>插入带当前时间的数据：db<span class="token punctuation">.</span>QrcodeRecord<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">{</span>CourseId<span class="token punctuation">:</span>&#39;<span class="token number">222</span>&#39;<span class="token punctuation">,</span><span class="token named-parameter punctuation">UserId</span><span class="token punctuation">:</span>&#39;<span class="token number">222</span>&#39;<span class="token punctuation">,</span><span class="token named-parameter punctuation">CreateTime</span><span class="token punctuation">:</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p></p><h4 id="导入报错" tabindex="-1"><a class="header-anchor" href="#导入报错"><span>导入报错</span></a></h4><p>将json文档导入集合报错：mongodb $oid is not valid for storage</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>db<span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token string">&quot;_id&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
      <span class="token string">&quot;$oid&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;62a39d27025ca1ba8f1f1c1e&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Groceries&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要将其修改为下面的样子</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>db<span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token string">&quot;_id&quot;</span><span class="token punctuation">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;62a39d27025ca1ba8f1f1c1e&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Groceries&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="导入数据库" tabindex="-1"><a class="header-anchor" href="#导入数据库"><span>导入数据库</span></a></h3><p>/**  * 导入到数据库  * mongoimport: 导入,  * --db: 数据库database,  * demo: 数据库的名称,  * --collection: 集合collections,  * goods: 集合的名称,  * --file: 文件，后面是要导入的文件路径  */   mongoimport --db demo --collection goods --file E:\\nodeJs\\goods.json</p><p>mongoimport --host localhost --port 27017 --username ezsonaruser --password 123456 --db ezsonar_25 --collection host_locations_test --file /root/shaql/host_locations.json</p>`,19);function d(m,b){const t=o("ExternalLinkIcon");return e(),c("div",null,[i,n("p",null,[s("连接字符串文档："),n("a",k,[s("https://www.mongodb.com/docs/drivers/csharp/current/fundamentals/connection/connect/"),u(t)])]),r])}const q=p(l,[["render",d],["__file","jibencaozuo.html.vue"]]),h=JSON.parse('{"path":"/dataBase/mongodb/jibencaozuo.html","title":"基本操作","lang":"zh-CN","frontmatter":{"title":"基本操作","lang":"zh-CN","date":"2023-07-14T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"filename":"jibencaozuo","slug":"lwgm45","docsId":"30252338","description":"连接 mongodb://：这是指明使用 MongoDB 协议的标识符。 root:123456@：这部分表示用户名和密码，其中root是用户名，123456是密码。提示：在实际应用中应该使用更强大和安全的密码。 localhost：这是 MongoDB 服务器的主机名或 IP 地址。在这种情况下，它是指在本地主机上运行的 MongoDB 实例。 /s...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/mongodb/jibencaozuo.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"基本操作"}],["meta",{"property":"og:description","content":"连接 mongodb://：这是指明使用 MongoDB 协议的标识符。 root:123456@：这部分表示用户名和密码，其中root是用户名，123456是密码。提示：在实际应用中应该使用更强大和安全的密码。 localhost：这是 MongoDB 服务器的主机名或 IP 地址。在这种情况下，它是指在本地主机上运行的 MongoDB 实例。 /s..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-23T15:53:24.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-07-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-23T15:53:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基本操作\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-23T15:53:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":3,"title":"连接","slug":"连接","link":"#连接","children":[]},{"level":3,"title":"创建集合","slug":"创建集合","link":"#创建集合","children":[]},{"level":3,"title":"查询","slug":"查询","link":"#查询","children":[]},{"level":3,"title":"添加","slug":"添加","link":"#添加","children":[{"level":4,"title":"导入报错","slug":"导入报错","link":"#导入报错","children":[]}]},{"level":3,"title":"导入数据库","slug":"导入数据库","link":"#导入数据库","children":[]}],"git":{"createdTime":1695484404000,"updatedTime":1695484404000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":3.49,"words":1047},"filePathRelative":"dataBase/mongodb/jibencaozuo.md","localizedDate":"2023年7月14日","excerpt":"<h3>连接</h3>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token operator\\">--</span> 不需要账号密码的连接字符串\\nmongodb<span class=\\"token punctuation\\">:</span><span class=\\"token operator\\">/</span><span class=\\"token operator\\">/</span>localhost<span class=\\"token punctuation\\">:</span><span class=\\"token number\\">27017</span>\\n\\n<span class=\\"token operator\\">--</span> 需要账号密码的连接字符串\\nmongodb<span class=\\"token punctuation\\">:</span><span class=\\"token operator\\">/</span><span class=\\"token operator\\">/</span>root<span class=\\"token punctuation\\">:</span><span class=\\"token number\\">123456</span>@localhost<span class=\\"token operator\\">/</span>spark<span class=\\"token punctuation\\">?</span>authSource<span class=\\"token operator\\">=</span>admin\\n</code></pre></div>","autoDesc":true}');export{q as comp,h as data};
