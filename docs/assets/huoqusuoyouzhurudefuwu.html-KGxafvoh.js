import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as e,c as p,b as n,e as o,f as c,d as i}from"./app-CBxp4zeL.js";const l={},u=i(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>通过手动编写中间件输出所有的服务以及对应的生命周期，或者直接使用nuget包Ardalis.ListStartupServices</p><h2 id="netcore-3-1" tabindex="-1"><a class="header-anchor" href="#netcore-3-1"><span>.NetCore 3.1</span></a></h2><p>在strartup中注入服务IServiceCollection</p><div class="language-plsql line-numbers-mode" data-ext="plsql" data-title="plsql"><pre class="language-plsql"><code><span class="token keyword">private</span> IServiceCollection _services<span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> ConfigureServices<span class="token punctuation">(</span>IServiceCollection services<span class="token punctuation">)</span>
{
    _services <span class="token operator">=</span> services<span class="token punctuation">;</span>
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="输出到日志" tabindex="-1"><a class="header-anchor" href="#输出到日志"><span>输出到日志</span></a></h3><div class="language-plsql line-numbers-mode" data-ext="plsql" data-title="plsql"><pre class="language-plsql"><code><span class="token keyword">public</span> <span class="token keyword">void</span> Configure<span class="token punctuation">(</span>IApplicationBuilder app<span class="token punctuation">,</span> IWebHostEnvironment env<span class="token punctuation">,</span> ILoggerFactory loggerFactory<span class="token punctuation">)</span>
{
    var _logger <span class="token operator">=</span> loggerFactory<span class="token punctuation">.</span>CreateLogger<span class="token punctuation">(</span><span class="token string">&quot;Services&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _logger<span class="token punctuation">.</span>LogInformation<span class="token punctuation">(</span>$<span class="token string">&quot;Total Services Registered: {_services.Count}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    foreach <span class="token punctuation">(</span>var service <span class="token keyword">in</span> _services<span class="token punctuation">)</span>
    {
        _logger<span class="token punctuation">.</span>LogInformation<span class="token punctuation">(</span>$<span class="token string">&quot;Service: {service.ServiceType.FullName}\\n      Lifetime: {service.Lifetime}\\n      Instance: {service.ImplementationType?.FullName}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    }

    <span class="token keyword">if</span> <span class="token punctuation">(</span>env<span class="token punctuation">.</span>IsDevelopment<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    {
        app<span class="token punctuation">.</span>UseDeveloperExceptionPage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    }

    app<span class="token punctuation">.</span>Run<span class="token punctuation">(</span>async <span class="token punctuation">(</span><span class="token keyword">context</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    {
        await <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>WriteAsync<span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    }<span class="token punctuation">)</span><span class="token punctuation">;</span>
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出为页面</p><div class="language-plsql line-numbers-mode" data-ext="plsql" data-title="plsql"><pre class="language-plsql"><code><span class="token keyword">public</span> <span class="token keyword">void</span> Configure<span class="token punctuation">(</span>IApplicationBuilder app<span class="token punctuation">,</span> IWebHostEnvironment env<span class="token punctuation">,</span> ILoggerFactory loggerFactory<span class="token punctuation">)</span>
{
    var _logger <span class="token operator">=</span> loggerFactory<span class="token punctuation">.</span>CreateLogger<span class="token punctuation">(</span><span class="token string">&quot;Services&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _logger<span class="token punctuation">.</span>LogInformation<span class="token punctuation">(</span>$<span class="token string">&quot;Total Services Registered: {_services.Count}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    foreach <span class="token punctuation">(</span>var service <span class="token keyword">in</span> _services<span class="token punctuation">)</span>
    {
        _logger<span class="token punctuation">.</span>LogInformation<span class="token punctuation">(</span>$<span class="token string">&quot;Service: {service.ServiceType.FullName}\\n      Lifetime: {service.Lifetime}\\n      Instance: {service.ImplementationType?.FullName}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    }

    <span class="token keyword">if</span> <span class="token punctuation">(</span>env<span class="token punctuation">.</span>IsDevelopment<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    {
        app<span class="token punctuation">.</span><span class="token keyword">Map</span><span class="token punctuation">(</span><span class="token string">&quot;/allservices&quot;</span><span class="token punctuation">,</span> builder <span class="token operator">=&gt;</span> builder<span class="token punctuation">.</span>Run<span class="token punctuation">(</span>async <span class="token keyword">context</span> <span class="token operator">=&gt;</span>
        {
            <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>ContentType <span class="token operator">=</span> <span class="token string">&quot;text/html; charset=utf-8&quot;</span><span class="token punctuation">;</span>
            await <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>WriteAsync<span class="token punctuation">(</span>$<span class="token string">&quot;&lt;h1&gt;所有服务{_services.Count}个&lt;/h1&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;类型&lt;/th&gt;&lt;th&gt;生命周期&lt;/th&gt;&lt;th&gt;Instance&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            foreach <span class="token punctuation">(</span>var svc <span class="token keyword">in</span> _services<span class="token punctuation">)</span>
            {
                await <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>WriteAsync<span class="token punctuation">(</span><span class="token string">&quot;&lt;tr&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                await <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>WriteAsync<span class="token punctuation">(</span>$<span class="token string">&quot;&lt;td&gt;{svc.ServiceType.FullName}&lt;/td&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                await <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>WriteAsync<span class="token punctuation">(</span>$<span class="token string">&quot;&lt;td&gt;{svc.Lifetime}&lt;/td&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                await <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>WriteAsync<span class="token punctuation">(</span>$<span class="token string">&quot;&lt;td&gt;{svc.ImplementationType?.FullName}&lt;/td&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                await <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>WriteAsync<span class="token punctuation">(</span><span class="token string">&quot;&lt;/tr&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            }
            await <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>WriteAsync<span class="token punctuation">(</span><span class="token string">&quot;&lt;/tbody&gt;&lt;/table&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        }<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        app<span class="token punctuation">.</span>UseDeveloperExceptionPage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    }

    app<span class="token punctuation">.</span>Run<span class="token punctuation">(</span>async <span class="token punctuation">(</span><span class="token keyword">context</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    {
        await <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>WriteAsync<span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    }<span class="token punctuation">)</span><span class="token punctuation">;</span>
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="net-6-0" tabindex="-1"><a class="header-anchor" href="#net-6-0"><span>.Net 6.0+</span></a></h2><p>在开发环境启用该中间件</p><div class="language-plsql line-numbers-mode" data-ext="plsql" data-title="plsql"><pre class="language-plsql"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>app<span class="token punctuation">.</span>Environment<span class="token punctuation">.</span>IsDevelopment<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
{
    app<span class="token punctuation">.</span><span class="token keyword">Map</span><span class="token punctuation">(</span><span class="token string">&quot;/allservices&quot;</span><span class="token punctuation">,</span> config <span class="token operator">=&gt;</span> config<span class="token punctuation">.</span>Run<span class="token punctuation">(</span>async <span class="token punctuation">(</span><span class="token keyword">context</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    {
        <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>ContentType <span class="token operator">=</span> <span class="token string">&quot;text/html; charset=utf-8&quot;</span><span class="token punctuation">;</span>
        await <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>WriteAsync<span class="token punctuation">(</span>$<span class="token string">&quot;&lt;h1&gt;所有服务{builder.Services.Count}个&lt;/h1&gt;&lt;table  border=\\&quot;1px solid #ccc\\&quot; cellspacing=\\&quot;0\\&quot; cellpadding=\\&quot;0\\&quot; &gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;类型&lt;/th&gt;&lt;th&gt;生命周期&lt;/th&gt;&lt;th&gt;实现&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        foreach <span class="token punctuation">(</span>var svc <span class="token keyword">in</span> builder<span class="token punctuation">.</span>Services<span class="token punctuation">)</span>
        {
            await <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>WriteAsync<span class="token punctuation">(</span><span class="token string">&quot;&lt;tr&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            await <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>WriteAsync<span class="token punctuation">(</span>$<span class="token string">&quot;&lt;td&gt;{svc.ServiceType.FullName}&lt;/td&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            await <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>WriteAsync<span class="token punctuation">(</span>$<span class="token string">&quot;&lt;td&gt;{svc.Lifetime}&lt;/td&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            await <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>WriteAsync<span class="token punctuation">(</span>$<span class="token string">&quot;&lt;td&gt;{svc.ImplementationType?.FullName}&lt;/td&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            await <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>WriteAsync<span class="token punctuation">(</span><span class="token string">&quot;&lt;/tr&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        await <span class="token keyword">context</span><span class="token punctuation">.</span>Response<span class="token punctuation">.</span>WriteAsync<span class="token punctuation">(</span><span class="token string">&quot;&lt;/tbody&gt;&lt;/table&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    }<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者使用下面的写法</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServiceConfig</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Path <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token string">&quot;/listallservices&quot;</span><span class="token punctuation">;</span>


    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>ServiceDescriptor<span class="token punctuation">&gt;</span></span> Services <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>ServiceDescriptor<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ShowAllServicesMiddleware</span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ServiceConfig</span> _config<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">RequestDelegate</span> _next<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">ShowAllServicesMiddleware</span><span class="token punctuation">(</span><span class="token class-name">RequestDelegate</span> next<span class="token punctuation">,</span> <span class="token class-name">IOptions<span class="token punctuation">&lt;</span>ServiceConfig<span class="token punctuation">&gt;</span></span> config<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _config <span class="token operator">=</span> config<span class="token punctuation">.</span>Value<span class="token punctuation">;</span>
        _next <span class="token operator">=</span> next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token class-name">HttpContext</span> httpContext<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>httpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Path <span class="token operator">==</span> _config<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">StringBuilder</span> stringBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            stringBuilder<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h1&gt;All Services&lt;/h1&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            stringBuilder<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;table&gt;&lt;thead&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            stringBuilder<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th&gt;Lifetime&lt;/th&gt;&lt;th&gt;Instance&lt;/th&gt;&lt;/tr&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            stringBuilder<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/thead&gt;&lt;tbody&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">ServiceDescriptor</span> service <span class="token keyword">in</span> _config<span class="token punctuation">.</span>Services<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                stringBuilder<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;tr&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                stringBuilder<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;td&gt;&quot;</span> <span class="token operator">+</span> service<span class="token punctuation">.</span>ServiceType<span class="token punctuation">.</span>FullName <span class="token operator">+</span> <span class="token string">&quot;&lt;/td&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                stringBuilder<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;&lt;td&gt;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">service<span class="token punctuation">.</span>Lifetime</span><span class="token punctuation">}</span></span><span class="token string">&lt;/td&gt;&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                stringBuilder<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;td&gt;&quot;</span> <span class="token operator">+</span> service<span class="token punctuation">.</span>ImplementationType<span class="token punctuation">?.</span>FullName <span class="token operator">+</span> <span class="token string">&quot;&lt;/td&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                stringBuilder<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/tr&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            stringBuilder<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/tbody&gt;&lt;/table&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">await</span> httpContext<span class="token punctuation">.</span>Response<span class="token punctuation">.</span><span class="token function">WriteAsync</span><span class="token punctuation">(</span>stringBuilder<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">await</span> <span class="token function">_next</span><span class="token punctuation">(</span>httpContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用方法</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Configure</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ServiceConfig<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>config <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    config<span class="token punctuation">.</span>Services <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>ServiceDescriptor<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span>Services<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// optional - default path to view services is /listallservices - recommended to choose your own path</span>
    config<span class="token punctuation">.</span>Path <span class="token operator">=</span> <span class="token string">&quot;/listservices&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,17),r={href:"https://www.cnblogs.com/linezero/p/5739944.html",target:"_blank",rel:"noopener noreferrer"};function k(d,v){const s=t("ExternalLinkIcon");return e(),p("div",null,[u,n("p",null,[n("a",r,[o("https://www.cnblogs.com/linezero/p/5739944.html"),c(s)])])])}const b=a(l,[["render",k],["__file","huoqusuoyouzhurudefuwu.html.vue"]]),y=JSON.parse('{"path":"/dotnet/base/yilaizhuru/huoqusuoyouzhurudefuwu.html","title":"获取所有注入的服务","lang":"zh-CN","frontmatter":{"title":"获取所有注入的服务","lang":"zh-CN","date":"2023-10-06T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"huoqusuoyouzhurudefuwu","slug":"bp0cge","docsId":"96020204","description":"概述 通过手动编写中间件输出所有的服务以及对应的生命周期，或者直接使用nuget包Ardalis.ListStartupServices .NetCore 3.1 在strartup中注入服务IServiceCollection 输出到日志 输出为页面 .Net 6.0+ 在开发环境启用该中间件 或者使用下面的写法 使用方法 资料 https://ww...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/base/yilaizhuru/huoqusuoyouzhurudefuwu.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"获取所有注入的服务"}],["meta",{"property":"og:description","content":"概述 通过手动编写中间件输出所有的服务以及对应的生命周期，或者直接使用nuget包Ardalis.ListStartupServices .NetCore 3.1 在strartup中注入服务IServiceCollection 输出到日志 输出为页面 .Net 6.0+ 在开发环境启用该中间件 或者使用下面的写法 使用方法 资料 https://ww..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-25T13:23:37.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-25T13:23:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"获取所有注入的服务\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-06T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-25T13:23:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":".NetCore 3.1","slug":"netcore-3-1","link":"#netcore-3-1","children":[{"level":3,"title":"输出到日志","slug":"输出到日志","link":"#输出到日志","children":[]}]},{"level":2,"title":".Net 6.0+","slug":"net-6-0","link":"#net-6-0","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1698240217000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.7,"words":509},"filePathRelative":"dotnet/base/yilaizhuru/huoqusuoyouzhurudefuwu.md","localizedDate":"2023年10月6日","excerpt":"<h2>概述</h2>\\n<p>通过手动编写中间件输出所有的服务以及对应的生命周期，或者直接使用nuget包Ardalis.ListStartupServices</p>\\n<h2>.NetCore 3.1</h2>\\n<p>在strartup中注入服务IServiceCollection</p>\\n<div class=\\"language-plsql\\" data-ext=\\"plsql\\" data-title=\\"plsql\\"><pre class=\\"language-plsql\\"><code><span class=\\"token keyword\\">private</span> IServiceCollection _services<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> ConfigureServices<span class=\\"token punctuation\\">(</span>IServiceCollection services<span class=\\"token punctuation\\">)</span>\\n{\\n    _services <span class=\\"token operator\\">=</span> services<span class=\\"token punctuation\\">;</span>\\n}\\n</code></pre></div>","autoDesc":true}');export{b as comp,y as data};
