import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as p,c as e,a as n,d as o,e as c,b as l}from"./app-DMmdIwn0.js";const i={},u=l(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>引用组件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;itextsharp.pdfa&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;5.5.13.3&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="创建一个显示指定图片的pdf" tabindex="-1"><a class="header-anchor" href="#创建一个显示指定图片的pdf"><span>创建一个显示指定图片的pdf</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 创建一个显示指定图片的pdf</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>picPdfPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>picPath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">CreatePDFByPic</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> picPdfPath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> picPath<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//新建一个文档</span>
    <span class="token class-name">Document</span> doc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Document</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//建立一个书写器(Writer)与document对象关联</span>
        PdfWriter<span class="token punctuation">.</span><span class="token function">GetInstance</span><span class="token punctuation">(</span>doc<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileStream</span><span class="token punctuation">(</span>picPdfPath<span class="token punctuation">,</span> FileMode<span class="token punctuation">.</span>Create<span class="token punctuation">,</span> FileAccess<span class="token punctuation">.</span>ReadWrite<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//打开一个文档</span>
        doc<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//向文档中添加内容</span>
        <span class="token class-name">Image</span> img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token function">GetInstance</span><span class="token punctuation">(</span>picPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//img.SetAbsolutePosition();</span>
        doc<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">finally</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>doc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            doc<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="为pdf文档添加图片水印" tabindex="-1"><a class="header-anchor" href="#为pdf文档添加图片水印"><span>为PDF文档添加图片水印</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 加图片水印</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputfilepath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>outputfilepath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ModelPicName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>top<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>left<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">PDFWatermark</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> inputfilepath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> outputfilepath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> ModelPicName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">float</span></span> top<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">float</span></span> left<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//throw new NotImplementedException();</span>
    <span class="token class-name">PdfReader</span> pdfReader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">PdfStamper</span> pdfStamper <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        pdfReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PdfReader</span><span class="token punctuation">(</span>inputfilepath<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">int</span></span> numberOfPages <span class="token operator">=</span> pdfReader<span class="token punctuation">.</span>NumberOfPages<span class="token punctuation">;</span>

        <span class="token class-name">iTextSharp<span class="token punctuation">.</span>text<span class="token punctuation">.</span>Rectangle</span> psize <span class="token operator">=</span> pdfReader<span class="token punctuation">.</span><span class="token function">GetPageSize</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">float</span></span> width <span class="token operator">=</span> psize<span class="token punctuation">.</span>Width<span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">float</span></span> height <span class="token operator">=</span> psize<span class="token punctuation">.</span>Height<span class="token punctuation">;</span>

        pdfStamper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PdfStamper</span><span class="token punctuation">(</span>pdfReader<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileStream</span><span class="token punctuation">(</span>outputfilepath<span class="token punctuation">,</span> FileMode<span class="token punctuation">.</span>Create<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">PdfContentByte</span> waterMarkContent<span class="token punctuation">;</span>

        <span class="token class-name">iTextSharp<span class="token punctuation">.</span>text<span class="token punctuation">.</span>Image</span> image <span class="token operator">=</span> iTextSharp<span class="token punctuation">.</span>text<span class="token punctuation">.</span>Image<span class="token punctuation">.</span><span class="token function">GetInstance</span><span class="token punctuation">(</span>ModelPicName<span class="token punctuation">)</span><span class="token punctuation">;</span>

        image<span class="token punctuation">.</span>GrayFill <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span><span class="token comment">//透明度，灰色填充</span>
                            <span class="token comment">//image.Rotation//旋转</span>
                            <span class="token comment">//image.RotationDegrees//旋转角度</span>
                            <span class="token comment">//水印的位置</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            left <span class="token operator">=</span> width <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> image<span class="token punctuation">.</span>Width <span class="token operator">+</span> left<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//image.SetAbsolutePosition(left, (height - image.Height) - top);</span>
        image<span class="token punctuation">.</span><span class="token function">SetAbsolutePosition</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> <span class="token punctuation">(</span>height <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> image<span class="token punctuation">.</span>Height<span class="token punctuation">)</span> <span class="token operator">-</span> top<span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token comment">//每一页加水印,也可以设置某一页加水印</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> numberOfPages<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//waterMarkContent = pdfStamper.GetUnderContent(i);//内容下层加水印</span>
            waterMarkContent <span class="token operator">=</span> pdfStamper<span class="token punctuation">.</span><span class="token function">GetOverContent</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//内容上层加水印</span>

            waterMarkContent<span class="token punctuation">.</span><span class="token function">AddImage</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//strMsg = &quot;success&quot;;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
    <span class="token keyword">finally</span>
    <span class="token punctuation">{</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>pdfStamper <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            pdfStamper<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>pdfReader <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            pdfReader<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加普通偏转角度文字水印" tabindex="-1"><a class="header-anchor" href="#添加普通偏转角度文字水印"><span>添加普通偏转角度文字水印</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 添加普通偏转角度文字水印</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputfilepath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>outputfilepath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>waterMarkName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>permission<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">setWatermark</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> inputfilepath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> outputfilepath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> waterMarkName<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">PdfReader</span> pdfReader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">PdfStamper</span> pdfStamper <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        pdfReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PdfReader</span><span class="token punctuation">(</span>inputfilepath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pdfStamper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PdfStamper</span><span class="token punctuation">(</span>pdfReader<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileStream</span><span class="token punctuation">(</span>outputfilepath<span class="token punctuation">,</span> FileMode<span class="token punctuation">.</span>Create<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">int</span></span> total <span class="token operator">=</span> pdfReader<span class="token punctuation">.</span>NumberOfPages <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">iTextSharp<span class="token punctuation">.</span>text<span class="token punctuation">.</span>Rectangle</span> psize <span class="token operator">=</span> pdfReader<span class="token punctuation">.</span><span class="token function">GetPageSize</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">float</span></span> width <span class="token operator">=</span> psize<span class="token punctuation">.</span>Width<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">float</span></span> height <span class="token operator">=</span> psize<span class="token punctuation">.</span>Height<span class="token punctuation">;</span>
        <span class="token class-name">PdfContentByte</span> content<span class="token punctuation">;</span>
        <span class="token class-name">BaseFont</span> font <span class="token operator">=</span> BaseFont<span class="token punctuation">.</span><span class="token function">CreateFont</span><span class="token punctuation">(</span><span class="token string">@&quot;C:\\WINDOWS\\Fonts\\SIMFANG.TTF&quot;</span><span class="token punctuation">,</span> BaseFont<span class="token punctuation">.</span>IDENTITY_H<span class="token punctuation">,</span> BaseFont<span class="token punctuation">.</span>EMBEDDED<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">PdfGState</span> gs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PdfGState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> total<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            content <span class="token operator">=</span> pdfStamper<span class="token punctuation">.</span><span class="token function">GetOverContent</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//在内容上方加水印</span>
                                                   <span class="token comment">//content = pdfStamper.GetUnderContent(i);//在内容下方加水印</span>
                                                   <span class="token comment">//透明度</span>
            gs<span class="token punctuation">.</span>FillOpacity <span class="token operator">=</span> <span class="token number">0.3f</span><span class="token punctuation">;</span>
            content<span class="token punctuation">.</span><span class="token function">SetGState</span><span class="token punctuation">(</span>gs<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//content.SetGrayFill(0.3f);</span>
            <span class="token comment">//开始写入文本</span>
            content<span class="token punctuation">.</span><span class="token function">BeginText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            content<span class="token punctuation">.</span><span class="token function">SetColorFill</span><span class="token punctuation">(</span>BaseColor<span class="token punctuation">.</span>LIGHT_GRAY<span class="token punctuation">)</span><span class="token punctuation">;</span>
            content<span class="token punctuation">.</span><span class="token function">SetFontAndSize</span><span class="token punctuation">(</span>font<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            content<span class="token punctuation">.</span><span class="token function">SetTextMatrix</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            content<span class="token punctuation">.</span><span class="token function">ShowTextAligned</span><span class="token punctuation">(</span>Element<span class="token punctuation">.</span>ALIGN_CENTER<span class="token punctuation">,</span> waterMarkName<span class="token punctuation">,</span> width <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">50</span><span class="token punctuation">,</span> height <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//content.SetColorFill(BaseColor.BLACK);</span>
            <span class="token comment">//content.SetFontAndSize(font, 8);</span>
            <span class="token comment">//content.ShowTextAligned(Element.ALIGN_CENTER, waterMarkName, 0, 0, 0);</span>
            content<span class="token punctuation">.</span><span class="token function">EndText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">finally</span>
    <span class="token punctuation">{</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>pdfStamper <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            pdfStamper<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>pdfReader <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            pdfReader<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加倾斜水印" tabindex="-1"><a class="header-anchor" href="#添加倾斜水印"><span>添加倾斜水印</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 添加倾斜水印</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputfilepath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>outputfilepath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>waterMarkName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userPassWord<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ownerPassWord<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>permission<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">setWatermark</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> inputfilepath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> outputfilepath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> waterMarkName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> userPassWord<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> ownerPassWord<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> permission<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">PdfReader</span> pdfReader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">PdfStamper</span> pdfStamper <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        pdfReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PdfReader</span><span class="token punctuation">(</span>inputfilepath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pdfStamper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PdfStamper</span><span class="token punctuation">(</span>pdfReader<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileStream</span><span class="token punctuation">(</span>outputfilepath<span class="token punctuation">,</span> FileMode<span class="token punctuation">.</span>Create<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置密码 </span>
        <span class="token comment">//pdfStamper.SetEncryption(false,userPassWord, ownerPassWord, permission);</span>

        <span class="token class-name"><span class="token keyword">int</span></span> total <span class="token operator">=</span> pdfReader<span class="token punctuation">.</span>NumberOfPages <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">PdfContentByte</span> content<span class="token punctuation">;</span>
        <span class="token class-name">BaseFont</span> font <span class="token operator">=</span> BaseFont<span class="token punctuation">.</span><span class="token function">CreateFont</span><span class="token punctuation">(</span><span class="token string">@&quot;C:\\WINDOWS\\Fonts\\SIMFANG.TTF&quot;</span><span class="token punctuation">,</span> BaseFont<span class="token punctuation">.</span>IDENTITY_H<span class="token punctuation">,</span> BaseFont<span class="token punctuation">.</span>EMBEDDED<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">PdfGState</span> gs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PdfGState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        gs<span class="token punctuation">.</span>FillOpacity <span class="token operator">=</span> <span class="token number">0.2f</span><span class="token punctuation">;</span><span class="token comment">//透明度</span>

        <span class="token class-name"><span class="token keyword">int</span></span> j <span class="token operator">=</span> waterMarkName<span class="token punctuation">.</span>Length<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">char</span></span> c<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">int</span></span> rise <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> total<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            rise <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>
            content <span class="token operator">=</span> pdfStamper<span class="token punctuation">.</span><span class="token function">GetOverContent</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//在内容上方加水印</span>
                                                   <span class="token comment">//content = pdfStamper.GetUnderContent(i);//在内容下方加水印</span>

            content<span class="token punctuation">.</span><span class="token function">BeginText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            content<span class="token punctuation">.</span><span class="token function">SetColorFill</span><span class="token punctuation">(</span>BaseColor<span class="token punctuation">.</span>DARK_GRAY<span class="token punctuation">)</span><span class="token punctuation">;</span>
            content<span class="token punctuation">.</span><span class="token function">SetFontAndSize</span><span class="token punctuation">(</span>font<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 设置水印文字字体倾斜 开始</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;=</span> <span class="token number">15</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                content<span class="token punctuation">.</span><span class="token function">SetTextMatrix</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> j<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    content<span class="token punctuation">.</span><span class="token function">SetTextRise</span><span class="token punctuation">(</span>rise<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    c <span class="token operator">=</span> waterMarkName<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    content<span class="token punctuation">.</span><span class="token function">ShowText</span><span class="token punctuation">(</span>c <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    rise <span class="token operator">-=</span> <span class="token number">20</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                content<span class="token punctuation">.</span><span class="token function">SetTextMatrix</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> j<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    content<span class="token punctuation">.</span><span class="token function">SetTextRise</span><span class="token punctuation">(</span>rise<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    c <span class="token operator">=</span> waterMarkName<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    content<span class="token punctuation">.</span><span class="token function">ShowText</span><span class="token punctuation">(</span>c <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    rise <span class="token operator">-=</span> <span class="token number">18</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 字体设置结束</span>
            content<span class="token punctuation">.</span><span class="token function">EndText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 画一个圆</span>
            <span class="token comment">//content.Ellipse(250, 450, 350, 550);</span>
            <span class="token comment">//content.SetLineWidth(1f);</span>
            <span class="token comment">//content.Stroke();</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">finally</span>
    <span class="token punctuation">{</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>pdfStamper <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            pdfStamper<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>pdfReader <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            pdfReader<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,13),k={href:"https://mp.weixin.qq.com/s/l70qlHR9AX6oN-y_nHCYeg",target:"_blank",rel:"noopener noreferrer"};function r(d,m){const s=t("ExternalLinkIcon");return p(),e("div",null,[u,n("p",null,[n("a",k,[o("https://mp.weixin.qq.com/s/l70qlHR9AX6oN-y_nHCYeg"),c(s)])])])}const g=a(i,[["render",r],["__file","itextsharp.html.vue"]]),f=JSON.parse('{"path":"/middleware/office/pdf/itextsharp.html","title":"iTextSharp","lang":"zh-CN","frontmatter":{"title":"iTextSharp","lang":"zh-CN","date":"2023-06-24T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"itextsharp","slug":"gihf2w","docsId":"67698860","description":"概述 操作 引用组件 创建一个显示指定图片的pdf 为PDF文档添加图片水印 添加普通偏转角度文字水印 添加倾斜水印 资料 https://mp.weixin.qq.com/s/l70qlHR9AX6oN-y_nHCYeg","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/office/pdf/itextsharp.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"iTextSharp"}],["meta",{"property":"og:description","content":"概述 操作 引用组件 创建一个显示指定图片的pdf 为PDF文档添加图片水印 添加普通偏转角度文字水印 添加倾斜水印 资料 https://mp.weixin.qq.com/s/l70qlHR9AX6oN-y_nHCYeg"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-06-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"iTextSharp\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-24T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"创建一个显示指定图片的pdf","slug":"创建一个显示指定图片的pdf","link":"#创建一个显示指定图片的pdf","children":[]},{"level":3,"title":"为PDF文档添加图片水印","slug":"为pdf文档添加图片水印","link":"#为pdf文档添加图片水印","children":[]},{"level":3,"title":"添加普通偏转角度文字水印","slug":"添加普通偏转角度文字水印","link":"#添加普通偏转角度文字水印","children":[]},{"level":3,"title":"添加倾斜水印","slug":"添加倾斜水印","link":"#添加倾斜水印","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":2.82,"words":847},"filePathRelative":"middleware/office/pdf/itextsharp.md","localizedDate":"2023年6月24日","excerpt":"<h2>概述</h2>\\n<h2>操作</h2>\\n<p>引用组件</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">PackageReference</span> Include<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"itextsharp.pdfa\\"</span> Version<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"5.5.13.3\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n</code></pre></div>","autoDesc":true}');export{g as comp,f as data};
