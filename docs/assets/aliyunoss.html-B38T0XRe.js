import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as p,c as e,a as n,d as o,e as c,b as l}from"./app-DMmdIwn0.js";const i={},u=l(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>图片上传功能是web开发必不可少的功能。图片上传到哪里其实都是一个非常头疼的事情，多个文件源各种地址组合，经常会出现图片地址错误问题。自从前后端分离、小程序、app成为流行后，大家一般都会将文件、图片等静态资源存储在独立的一个源，公司可以自己搭建一个文件中心，更多的是将这些静态资源存放在像阿里云oss，七牛云等专业的文件资源存储。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="开发和配置" tabindex="-1"><a class="header-anchor" href="#开发和配置"><span>开发和配置</span></a></h3><ul><li>开发环境：.NetCore3.1,Net5</li><li>提前申请好阿里云OSS，拿到endpoint，AccessKeyID，AccessKeySecret，Bucket和Domain这些配置参数。</li><li>项目Nuget添加包：Aliyun.OSS</li></ul><h3 id="封装底层代码" tabindex="-1"><a class="header-anchor" href="#封装底层代码"><span>封装底层代码</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IO</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Aliyun<span class="token punctuation">.</span>OSS</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>AspNetCore<span class="token punctuation">.</span>Http</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 沐雪多租宝SaaS多租户商城系统，阿里云上传帮助类。</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AliYunOSSHelper</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">ILogger</span> _logger<span class="token punctuation">;</span>
       

        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 阿里云帮助类</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>configHelper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token function">AliYunOSSHelper</span><span class="token punctuation">(</span><span class="token class-name">ILogger<span class="token punctuation">&lt;</span>AliYunOSSHelper<span class="token punctuation">&gt;</span></span> logger<span class="token punctuation">,</span> <span class="token class-name">MuXueConfigHelper</span> configHelper<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>

            _logger <span class="token operator">=</span> logger<span class="token punctuation">;</span>
             
        <span class="token punctuation">}</span>


        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 阿里云上传底层方法，文件为base64</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fileList<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>Result<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span>UplpadPictureResp<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">AliYunUpLoad</span><span class="token punctuation">(</span><span class="token class-name">List<span class="token punctuation">&lt;</span>AliyunUploadModel<span class="token punctuation">&gt;</span></span> fileList<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>

            <span class="token class-name">Result<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span>UplpadPictureResp<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Result<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span>UplpadPictureResp<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List<span class="token punctuation">&lt;</span>UplpadPictureResp<span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>UplpadPictureResp<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span>
            <span class="token punctuation">{</span>

                <span class="token comment">//阿里云oss相关参数,请自行补齐 </span>
                <span class="token class-name"><span class="token keyword">var</span></span> endpoint <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> accessKeyId <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> accessKeySecret <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> bucket <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> imageUrl <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
                
                <span class="token class-name"><span class="token keyword">var</span></span> write_client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OssClient</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">,</span> accessKeyId<span class="token punctuation">,</span> accessKeySecret<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> read_client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OssClient</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">,</span> accessKeyId<span class="token punctuation">,</span> accessKeySecret<span class="token punctuation">)</span><span class="token punctuation">;</span>
                  
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fileList<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>

                    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> stream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MemoryStream</span><span class="token punctuation">(</span>fileList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>bytes<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        write_client<span class="token punctuation">.</span><span class="token function">PutObject</span><span class="token punctuation">(</span>bucket<span class="token punctuation">,</span> fileList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>ossFileName<span class="token punctuation">,</span> stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token class-name">DateTime</span> expiration <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">AddYears</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> url <span class="token operator">=</span> read_client<span class="token punctuation">.</span><span class="token function">GeneratePresignedUri</span><span class="token punctuation">(</span>bucket<span class="token punctuation">,</span> fileList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>ossFileName<span class="token punctuation">,</span> expiration<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">string</span></span> urlstring <span class="token operator">=</span> imageUrl <span class="token operator">+</span> url<span class="token punctuation">.</span>AbsolutePath<span class="token punctuation">;</span>

                    list<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">UplpadPictureResp</span> <span class="token punctuation">{</span> 
                        imageuri <span class="token operator">=</span> urlstring<span class="token punctuation">,</span>
                        imageuri_name <span class="token operator">=</span> fileList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fileName<span class="token punctuation">,</span> 
                        image_bytes <span class="token operator">=</span> fileList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>bytes<span class="token punctuation">.</span>Length <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">,</span> 
                        group_id <span class="token operator">=</span> fileList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>g_id<span class="token punctuation">,</span>
                        imageuri_chicun<span class="token operator">=</span> fileList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>imageuri_chicun
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> list<span class="token punctuation">.</span>Count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    result<span class="token punctuation">.</span>code <span class="token operator">=</span> StatusCodeEnum<span class="token punctuation">.</span>Success<span class="token punctuation">;</span>
                    result<span class="token punctuation">.</span>data <span class="token operator">=</span> list<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span>
                <span class="token punctuation">{</span>
                    _logger<span class="token punctuation">.</span><span class="token function">LogError</span><span class="token punctuation">(</span><span class="token string">&quot;阿里云图片上传失败,请联系管理员（110-1）。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    result<span class="token punctuation">.</span>code <span class="token operator">=</span> StatusCodeEnum<span class="token punctuation">.</span>Error<span class="token punctuation">;</span>
                    result<span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">&quot;阿里云上传失败&quot;</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                result<span class="token punctuation">.</span>code <span class="token operator">=</span> StatusCodeEnum<span class="token punctuation">.</span>Error<span class="token punctuation">;</span>
                result<span class="token punctuation">.</span>msg <span class="token operator">=</span> ex<span class="token punctuation">.</span>Message<span class="token punctuation">;</span>
                _logger<span class="token punctuation">.</span><span class="token function">LogError</span><span class="token punctuation">(</span>ex<span class="token punctuation">,</span> <span class="token string">&quot;阿里云图片上传失败,ex=&quot;</span> <span class="token operator">+</span> ex<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">throw</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> result<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 阿里云上传底层方法，文件为IFormFile</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>shop_code<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>files<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">AliYunUpLoad</span><span class="token punctuation">(</span>  <span class="token class-name">List<span class="token punctuation">&lt;</span>IFormFile<span class="token punctuation">&gt;</span></span> files<span class="token punctuation">)</span>
        <span class="token punctuation">{</span> 
            <span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> ossfilesNameList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span>
            <span class="token punctuation">{</span>

                <span class="token comment">//阿里云oss相关参数,请自行补齐 </span>
                <span class="token class-name"><span class="token keyword">var</span></span> endpoint <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> accessKeyId <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> accessKeySecret <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> bucket <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> imageUrl <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

                <span class="token class-name"><span class="token keyword">var</span></span> write_client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OssClient</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">,</span> accessKeyId<span class="token punctuation">,</span> accessKeySecret<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">var</span></span> read_client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OssClient</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">,</span> accessKeyId<span class="token punctuation">,</span> accessKeySecret<span class="token punctuation">)</span><span class="token punctuation">;</span>
               
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> files<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> file <span class="token operator">=</span> files<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> fname <span class="token operator">=</span>  DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token string">&quot;yyyyMMddHHmmssffffff&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> i <span class="token operator">+</span> Path<span class="token punctuation">.</span><span class="token function">GetExtension</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>FileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> stream <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">OpenReadStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        write_client<span class="token punctuation">.</span><span class="token function">PutObject</span><span class="token punctuation">(</span>bucket<span class="token punctuation">,</span> fname<span class="token punctuation">,</span> stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token class-name">DateTime</span> expiration <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">AddYears</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> url <span class="token operator">=</span> read_client<span class="token punctuation">.</span><span class="token function">GeneratePresignedUri</span><span class="token punctuation">(</span>bucket<span class="token punctuation">,</span> fname<span class="token punctuation">,</span> expiration<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">string</span></span> urlstring <span class="token operator">=</span> imageUrl <span class="token operator">+</span> url<span class="token punctuation">.</span>AbsolutePath<span class="token punctuation">;</span>
                    ossfilesNameList<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>urlstring<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                
            <span class="token punctuation">}</span>
            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
               
                _logger<span class="token punctuation">.</span><span class="token function">LogError</span><span class="token punctuation">(</span>ex<span class="token punctuation">,</span> <span class="token string">&quot;阿里云图片上传失败,ex=&quot;</span> <span class="token operator">+</span> ex<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">throw</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> ossfilesNameList<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一个的入参的文件为base64，一个为IFormFile，这2种基本上足够用了。文件的有限期设置为20年。</p><h3 id="依赖注入" tabindex="-1"><a class="header-anchor" href="#依赖注入"><span>依赖注入</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>  services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddScoped</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>AliYunOSSHelper<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>
 <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ILogger<span class="token punctuation">&lt;</span>TenantCommonController<span class="token punctuation">&gt;</span></span> _logger<span class="token punctuation">;</span>
       
        <span class="token keyword">private</span> <span class="token class-name">AliYunOSSHelper</span> _oSSHelper<span class="token punctuation">;</span>
          
        <span class="token keyword">public</span> <span class="token function">TenantCommonController</span><span class="token punctuation">(</span><span class="token class-name">ILogger<span class="token punctuation">&lt;</span>TenantCommonController<span class="token punctuation">&gt;</span></span> logger<span class="token punctuation">,</span>   <span class="token class-name">AliYunOSSHelper</span> oSSHelper <span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            _logger <span class="token operator">=</span> logger<span class="token punctuation">;</span>
            
            _oSSHelper <span class="token operator">=</span> oSSHelper<span class="token punctuation">;</span> 

        <span class="token punctuation">}</span>

<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 通用的图片上传,支持多图片上传 </span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>files<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token punctuation">[</span>HttpPost<span class="token punctuation">]</span>
        <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>ActionResult<span class="token punctuation">&gt;</span></span> <span class="token function">UploadPic</span><span class="token punctuation">(</span><span class="token class-name">List<span class="token punctuation">&lt;</span>IFormFile<span class="token punctuation">&gt;</span></span> files<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//15M</span>
            <span class="token class-name"><span class="token keyword">var</span></span> maxRequestLength <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">15</span><span class="token punctuation">;</span>
            <span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> filesName <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>files<span class="token punctuation">.</span>Count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">Content</span><span class="token punctuation">(</span><span class="token string">&quot;NoFile&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                <span class="token class-name">List<span class="token punctuation">&lt;</span>AliyunUploadModel<span class="token punctuation">&gt;</span></span> fileList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>AliyunUploadModel<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> files<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> file <span class="token operator">=</span> files<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> file <span class="token operator">||</span> file<span class="token punctuation">.</span>Length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">Content</span><span class="token punctuation">(</span><span class="token string">&quot;格式不正确！&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>Length <span class="token operator">&gt;</span> maxRequestLength<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token function">Content</span><span class="token punctuation">(</span><span class="token string">&quot;文件大小超出限制！&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token class-name"><span class="token keyword">var</span></span> fname <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token string">&quot;yyyyMMddHHmmssffffff&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> i <span class="token operator">+</span> Path<span class="token punctuation">.</span><span class="token function">GetExtension</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>FileName<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>FileExtensionFun<span class="token punctuation">.</span><span class="token function">CheckImageFileType</span><span class="token punctuation">(</span>fname<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token function">Content</span><span class="token punctuation">(</span><span class="token string">&quot;上传的图片格式不正确&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                <span class="token punctuation">}</span>
                filesName <span class="token operator">=</span> <span class="token keyword">await</span> _oSSHelper<span class="token punctuation">.</span><span class="token function">AliYunUpLoad</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token function">Content</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> filesName<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2>`,13),k={href:"https://mp.weixin.qq.com/s/QDzsf81NuuIwJADyZUgOFg",target:"_blank",rel:"noopener noreferrer"};function r(d,m){const s=t("ExternalLinkIcon");return p(),e("div",null,[u,n("blockquote",null,[n("p",null,[n("a",k,[o("https://mp.weixin.qq.com/s/QDzsf81NuuIwJADyZUgOFg"),c(s)])])])])}const b=a(i,[["render",r],["__file","aliyunoss.html.vue"]]),y=JSON.parse('{"path":"/middleware/oss/aliyunoss.html","title":"阿里云OSS","lang":"zh-CN","frontmatter":{"title":"阿里云OSS","lang":"zh-CN","date":"2022-04-24T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"aliyunoss","slug":"sf93yp","docsId":"49602143","description":"介绍 图片上传功能是web开发必不可少的功能。图片上传到哪里其实都是一个非常头疼的事情，多个文件源各种地址组合，经常会出现图片地址错误问题。自从前后端分离、小程序、app成为流行后，大家一般都会将文件、图片等静态资源存储在独立的一个源，公司可以自己搭建一个文件中心，更多的是将这些静态资源存放在像阿里云oss，七牛云等专业的文件资源存储。 操作 开发和配...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/oss/aliyunoss.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"阿里云OSS"}],["meta",{"property":"og:description","content":"介绍 图片上传功能是web开发必不可少的功能。图片上传到哪里其实都是一个非常头疼的事情，多个文件源各种地址组合，经常会出现图片地址错误问题。自从前后端分离、小程序、app成为流行后，大家一般都会将文件、图片等静态资源存储在独立的一个源，公司可以自己搭建一个文件中心，更多的是将这些静态资源存放在像阿里云oss，七牛云等专业的文件资源存储。 操作 开发和配..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-13T14:11:27.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-04-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-13T14:11:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"阿里云OSS\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-24T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-13T14:11:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"开发和配置","slug":"开发和配置","link":"#开发和配置","children":[]},{"level":3,"title":"封装底层代码","slug":"封装底层代码","link":"#封装底层代码","children":[]},{"level":3,"title":"依赖注入","slug":"依赖注入","link":"#依赖注入","children":[]},{"level":3,"title":"使用","slug":"使用","link":"#使用","children":[]}]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1710339087000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":2.88,"words":864},"filePathRelative":"middleware/oss/aliyunoss.md","localizedDate":"2022年4月24日","excerpt":"<h2>介绍</h2>\\n<p>图片上传功能是web开发必不可少的功能。图片上传到哪里其实都是一个非常头疼的事情，多个文件源各种地址组合，经常会出现图片地址错误问题。自从前后端分离、小程序、app成为流行后，大家一般都会将文件、图片等静态资源存储在独立的一个源，公司可以自己搭建一个文件中心，更多的是将这些静态资源存放在像阿里云oss，七牛云等专业的文件资源存储。</p>\\n<h2>操作</h2>\\n<h3>开发和配置</h3>\\n<ul>\\n<li>开发环境：.NetCore3.1,Net5</li>\\n<li>提前申请好阿里云OSS，拿到endpoint，AccessKeyID，AccessKeySecret，Bucket和Domain这些配置参数。</li>\\n<li>项目Nuget添加包：Aliyun.OSS</li>\\n</ul>","autoDesc":true}');export{b as comp,y as data};
