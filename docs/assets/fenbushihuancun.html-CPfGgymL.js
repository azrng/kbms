import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as c,c as o,a as n,d as s,e,b as i}from"./app-DMmdIwn0.js";const l={},r=i(`<h2 id="说明" tabindex="-1"><a class="header-anchor" href="#说明"><span>说明</span></a></h2><p>分布式缓存用于提高应用程序的性能和可伸缩性，通常分布式缓存被多个应用服务器共享，在分布式缓存中，缓存的数据不会存储在个别的web服务器内存找那个，这些缓存采用集中化存储的，这样子多个应用服务器都可以直接使用。好处在于，如果任意一个服务器宕机或者停止响应，其他的应用服务器仍然能够检索缓存的数据。另一个优点是存储的数据在服务器重启后仍然存在。</p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><p>通过实现微软官方的Microsoft.Extensions.Caching里面的IDistributedCache接口实现缓存集成到ASPNETCore中。 IDistributedCache骨架代码</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">namespace</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>Caching<span class="token punctuation">.</span>Distributed</span>
<span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IDistributedCache</span>
        <span class="token punctuation">{</span>
            <span class="token return-type class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token function">Get</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Refresh</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Remove</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Set</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> key<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token keyword">value</span><span class="token punctuation">,</span>
            <span class="token class-name">DistributedCacheEntryOptions</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="redis" tabindex="-1"><a class="header-anchor" href="#redis"><span>Redis</span></a></h3><p>微软给netcore的缓存提供了Redis和Sqlserver的实现，通过Sqlserver来缓存的场景比较少，这里我们简单看一下官方提供的Redis缓存用法。</p><h4 id="caching-redis-不更新了" tabindex="-1"><a class="header-anchor" href="#caching-redis-不更新了"><span>Caching.Redis(不更新了)</span></a></h4><blockquote><p>安装组件：Microsoft.Extensions.Caching.Redis</p></blockquote><h5 id="webapi" tabindex="-1"><a class="header-anchor" href="#webapi"><span>WebAPI</span></a></h5><p>ConfigureServices中使用</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token function">AddDistributedRedisCache</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
	options<span class="token punctuation">.</span>Configuration <span class="token operator">=</span> <span class="token string">&quot;xxxx:6379,password=xxxx,defaultdatabase=10&quot;</span><span class="token punctuation">;</span>
	options<span class="token punctuation">.</span>InstanceName <span class="token operator">=</span> <span class="token string">&quot;AZRNG&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制器中使用</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ILogger<span class="token punctuation">&lt;</span>WeatherForecastController<span class="token punctuation">&gt;</span></span> _logger<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IDistributedCache</span> _cache<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token function">WeatherForecastController</span><span class="token punctuation">(</span><span class="token class-name">ILogger<span class="token punctuation">&lt;</span>WeatherForecastController<span class="token punctuation">&gt;</span></span> logger<span class="token punctuation">,</span>
	<span class="token class-name">IDistributedCache</span> cache<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	_logger <span class="token operator">=</span> logger<span class="token punctuation">;</span>
	_cache <span class="token operator">=</span> cache<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token class-name"><span class="token keyword">var</span></span> data <span class="token operator">=</span> _cache<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">&quot;login&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrWhiteSpace</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
		_cache<span class="token punctuation">.</span><span class="token function">SetString</span><span class="token punctuation">(</span><span class="token string">&quot;login&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;你好世界&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> _cache<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">&quot;login&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>还可以借助其他方式实现分布式缓存，比如SqlServer</p></blockquote><h4 id="caching-stackexchangeredis" tabindex="-1"><a class="header-anchor" href="#caching-stackexchangeredis"><span>Caching.StackExchangeRedis</span></a></h4><h5 id="控制台程序" tabindex="-1"><a class="header-anchor" href="#控制台程序"><span>控制台程序</span></a></h5><p>添加Nuget包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.Extensions.Caching.StackExchangeRedis&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;5.0.1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>写一个简单的控制台程序实现一下netcore中的分布式缓存redis实现</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">//获取RedisCache实例</span>
	<span class="token class-name">RedisCache</span> redisCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RedisCache</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">RedisCacheOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		Configuration <span class="token operator">=</span> <span class="token string">&quot;localhost:6379,password=123456&quot;</span><span class="token punctuation">,</span>
		InstanceName <span class="token operator">=</span> <span class="token string">&quot;MyData&quot;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//在redis中是以hash表的模式存放的</span>
	redisCache<span class="token punctuation">.</span><span class="token function">SetString</span><span class="token punctuation">(</span><span class="token string">&quot;Name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	redisCache<span class="token punctuation">.</span><span class="token function">SetString</span><span class="token punctuation">(</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;20&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	redisCache<span class="token punctuation">.</span><span class="token function">SetString</span><span class="token punctuation">(</span><span class="token string">&quot;Address&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;上海&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DistributedCacheEntryOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token comment">//SlidingExpiration = TimeSpan.FromSeconds(3)</span>
		AbsoluteExpiration <span class="token operator">=</span> DateTimeOffset<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">AddDays</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//过期时间</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//获取缓存</span>
	Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>redisCache<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">&quot;Name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="web-api" tabindex="-1"><a class="header-anchor" href="#web-api"><span>Web API</span></a></h5><p>新建一个net5 Web API应用程序添加Nuget包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.Extensions.Caching.StackExchangeRedis&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;5.0.1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注入服务</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConfigureServices</span><span class="token punctuation">(</span><span class="token class-name">IServiceCollection</span> services<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	services<span class="token punctuation">.</span><span class="token function">AddControllers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	services<span class="token punctuation">.</span><span class="token function">AddStackExchangeRedisCache</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
	<span class="token punctuation">{</span>
		options<span class="token punctuation">.</span>Configuration <span class="token operator">=</span> <span class="token string">&quot;localhost:6379,password=123456,defaultdatabase=1&quot;</span><span class="token punctuation">;</span>
		options<span class="token punctuation">.</span>InstanceName <span class="token operator">=</span> <span class="token string">&quot;MyData&quot;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>依赖注入使用</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IDistributedCache</span> _cache<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token function">WeatherForecastController</span><span class="token punctuation">(</span><span class="token class-name">IDistributedCache</span> cache<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	_cache <span class="token operator">=</span> cache<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">TestAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">//永不过期</span>
	<span class="token keyword">await</span> _cache<span class="token punctuation">.</span><span class="token function">SetAsync</span><span class="token punctuation">(</span><span class="token string">&quot;add&quot;</span><span class="token punctuation">,</span> Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span><span class="token string">&quot;北京&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name"><span class="token keyword">var</span></span> <span class="token keyword">add</span> <span class="token operator">=</span> <span class="token keyword">await</span> _cache<span class="token punctuation">.</span><span class="token function">GetStringAsync</span><span class="token punctuation">(</span><span class="token string">&quot;add&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//北京</span>

	<span class="token comment">//配置过期时间</span>
	<span class="token keyword">await</span> _cache<span class="token punctuation">.</span><span class="token function">SetStringAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Address&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;上海&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DistributedCacheEntryOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token comment">//SlidingExpiration = TimeSpan.FromSeconds(3)</span>
		AbsoluteExpiration <span class="token operator">=</span> DateTimeOffset<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">AddDays</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name"><span class="token keyword">var</span></span> address <span class="token operator">=</span> <span class="token keyword">await</span> _cache<span class="token punctuation">.</span><span class="token function">GetStringAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Address&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//上海</span>

	<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="caching-csredis" tabindex="-1"><a class="header-anchor" href="#caching-csredis"><span>Caching.CSRedis</span></a></h4><p>分布式缓存 CSRedisCore 实现 Microsoft.Extensions.Caching</p><h4 id="freeredis" tabindex="-1"><a class="header-anchor" href="#freeredis"><span>FreeRedis</span></a></h4><p>分布式缓存nuget包</p><h3 id="garnet" tabindex="-1"><a class="header-anchor" href="#garnet"><span>Garnet</span></a></h3><p>Garnet 是 Microsoft Research 推出的一个新的远程缓存存储,旨在实现极快、可扩展和低延迟.Garnet 可在单个节点内进行线程扩展.它还支持分片集群执行,包括复制、检查点、故障转移和事务.它可以在主内存以及分层存储（例如 SSD 和 Azure 存储）上运行.Garnet 支持丰富的 API 图面和强大的扩展性模型。</p><p>仓库地址：https://github.com/joesdu/GarnetServer</p><h4 id="部署" tabindex="-1"><a class="header-anchor" href="#部署"><span>部署</span></a></h4><div class="language-docker line-numbers-mode" data-ext="docker" data-title="docker"><pre class="language-docker"><code><span class="token comment">#See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.</span>

<span class="token instruction"><span class="token keyword">FROM</span> mcr.microsoft.com/dotnet/runtime:9.0-preview <span class="token keyword">AS</span> base</span>
<span class="token instruction"><span class="token keyword">USER</span> app</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>
<span class="token instruction"><span class="token keyword">EXPOSE</span> 3278</span>

<span class="token instruction"><span class="token keyword">FROM</span> mcr.microsoft.com/dotnet/sdk:9.0-preview <span class="token keyword">AS</span> build</span>
<span class="token instruction"><span class="token keyword">ARG</span> BUILD_CONFIGURATION=Release</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /src</span>
<span class="token instruction"><span class="token keyword">RUN</span> mkdir GarnetServer</span>
<span class="token instruction"><span class="token keyword">RUN</span> dotnet new console -n GarnetServer</span>
<span class="token instruction"><span class="token keyword">RUN</span> dotnet add <span class="token string">&quot;./GarnetServer/GarnetServer.csproj&quot;</span> package Microsoft.Garnet</span>
<span class="token instruction"><span class="token keyword">RUN</span> printf <span class="token string">&#39;using Garnet;try{using var server = new GarnetServer(args);server.Start();Thread.Sleep(Timeout.Infinite);}catch (Exception ex){Console.WriteLine($&quot;Unable to initialize server due to exception: {ex.Message}&quot;);}&#39;</span> &gt; ./GarnetServer/Program.cs</span>
<span class="token instruction"><span class="token keyword">RUN</span> dotnet restore <span class="token string">&quot;./GarnetServer/GarnetServer.csproj&quot;</span></span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token string">&quot;/src/GarnetServer&quot;</span></span>
<span class="token instruction"><span class="token keyword">RUN</span> dotnet build <span class="token string">&quot;./GarnetServer.csproj&quot;</span> -c <span class="token variable">$BUILD_CONFIGURATION</span> -o /app/build</span>

<span class="token instruction"><span class="token keyword">FROM</span> build <span class="token keyword">AS</span> publish</span>
<span class="token instruction"><span class="token keyword">ARG</span> BUILD_CONFIGURATION=Release</span>
<span class="token instruction"><span class="token keyword">RUN</span> dotnet publish <span class="token string">&quot;./GarnetServer.csproj&quot;</span> -c <span class="token variable">$BUILD_CONFIGURATION</span> -o /app/publish /p:UseAppHost=false</span>

<span class="token instruction"><span class="token keyword">FROM</span> base <span class="token keyword">AS</span> final</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>
<span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">publish</span></span> /app/publish .</span>
<span class="token instruction"><span class="token keyword">ENTRYPOINT</span> [<span class="token string">&quot;dotnet&quot;</span>, <span class="token string">&quot;GarnetServer.dll&quot;</span>]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> build <span class="token parameter variable">-f</span> ./Dockerfile <span class="token parameter variable">-t</span> garnet:latest <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h4><p>使用.NET自托管 Garnet 服务：https://mp.weixin.qq.com/s/AiHxkt86v5li0erPnZ51gQ</p><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2>`,42),u={href:"https://www.cnblogs.com/wyy1234/p/10519681.html",target:"_blank",rel:"noopener noreferrer"},d={href:"https://docs.microsoft.com/zh-cn/aspnet/core/performance/caching/memory?view=aspnetcore-5.0",target:"_blank",rel:"noopener noreferrer"};function k(v,m){const a=p("ExternalLinkIcon");return c(),o("div",null,[r,n("blockquote",null,[n("p",null,[s("作者：捞月亮的猴子 "),n("a",u,[s("https://www.cnblogs.com/wyy1234/p/10519681.html"),e(a)]),s(" 官方教程："),n("a",d,[s("https://docs.microsoft.com/zh-cn/aspnet/core/performance/caching/memory?view=aspnetcore-5.0"),e(a)])])])])}const g=t(l,[["render",k],["__file","fenbushihuancun.html.vue"]]),y=JSON.parse('{"path":"/dotnet/base/huancun/fenbushihuancun.html","title":"分布式缓存","lang":"zh-CN","frontmatter":{"title":"分布式缓存","lang":"zh-CN","date":"2023-08-20T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"fenbushihuancun","slug":"su11b7","docsId":"30871436","description":"说明 分布式缓存用于提高应用程序的性能和可伸缩性，通常分布式缓存被多个应用服务器共享，在分布式缓存中，缓存的数据不会存储在个别的web服务器内存找那个，这些缓存采用集中化存储的，这样子多个应用服务器都可以直接使用。好处在于，如果任意一个服务器宕机或者停止响应，其他的应用服务器仍然能够检索缓存的数据。另一个优点是存储的数据在服务器重启后仍然存在。 使用 ...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/base/huancun/fenbushihuancun.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"分布式缓存"}],["meta",{"property":"og:description","content":"说明 分布式缓存用于提高应用程序的性能和可伸缩性，通常分布式缓存被多个应用服务器共享，在分布式缓存中，缓存的数据不会存储在个别的web服务器内存找那个，这些缓存采用集中化存储的，这样子多个应用服务器都可以直接使用。好处在于，如果任意一个服务器宕机或者停止响应，其他的应用服务器仍然能够检索缓存的数据。另一个优点是存储的数据在服务器重启后仍然存在。 使用 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-23T07:39:42.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-08-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-23T07:39:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分布式缓存\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-23T07:39:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"说明","slug":"说明","link":"#说明","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[{"level":3,"title":"Redis","slug":"redis","link":"#redis","children":[{"level":4,"title":"Caching.Redis(不更新了)","slug":"caching-redis-不更新了","link":"#caching-redis-不更新了","children":[{"level":5,"title":"WebAPI","slug":"webapi","link":"#webapi","children":[]}]},{"level":4,"title":"Caching.StackExchangeRedis","slug":"caching-stackexchangeredis","link":"#caching-stackexchangeredis","children":[{"level":5,"title":"控制台程序","slug":"控制台程序","link":"#控制台程序","children":[]},{"level":5,"title":"Web API","slug":"web-api","link":"#web-api","children":[]}]},{"level":4,"title":"Caching.CSRedis","slug":"caching-csredis","link":"#caching-csredis","children":[]},{"level":4,"title":"FreeRedis","slug":"freeredis","link":"#freeredis","children":[]}]},{"level":3,"title":"Garnet","slug":"garnet","link":"#garnet","children":[{"level":4,"title":"部署","slug":"部署","link":"#部署","children":[]},{"level":4,"title":"资料","slug":"资料","link":"#资料","children":[]}]}]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1711179582000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":3.17,"words":952},"filePathRelative":"dotnet/base/huancun/fenbushihuancun.md","localizedDate":"2023年8月20日","excerpt":"<h2>说明</h2>\\n<p>分布式缓存用于提高应用程序的性能和可伸缩性，通常分布式缓存被多个应用服务器共享，在分布式缓存中，缓存的数据不会存储在个别的web服务器内存找那个，这些缓存采用集中化存储的，这样子多个应用服务器都可以直接使用。好处在于，如果任意一个服务器宕机或者停止响应，其他的应用服务器仍然能够检索缓存的数据。另一个优点是存储的数据在服务器重启后仍然存在。</p>\\n<h2>使用</h2>\\n<p>通过实现微软官方的Microsoft.Extensions.Caching里面的IDistributedCache接口实现缓存集成到ASPNETCore中。\\nIDistributedCache骨架代码</p>","autoDesc":true}');export{g as comp,y as data};
