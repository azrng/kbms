import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as t,e,o as r}from"./app-pTjtTAfI.js";const i={};function p(s,n){return r(),a("div",null,n[0]||(n[0]=[t("h2",{id:"命名规则",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#命名规则"},[t("span",null,"命名规则")])],-1),t("p",null,'通常使用"Get"前缀用于获取属性或值，而使用"To"前缀用于将对象转换为不同的类型或形式。',-1),t("p",null,'1、使用"Get"前缀：',-1),t("p",null,[e('当你的扩展方法返回对象的某个属性或字段的值时，可以使用"Get"前缀。例如，GetLength、GetCount等。'),t("br"),e(' 当你的扩展方法返回对象的某种状态或信息时，可以使用"Get"前缀。例如，GetStatus、GetState等。')],-1),t("p",null,'2、使用"To"前缀：',-1),t("p",null,[e('当你的扩展方法将对象转换为不同的类型时，可以使用"To"前缀。例如，ToDictionary、ToList等。'),t("br"),e(' 当你的扩展方法将对象转换为特定的格式或表示形式时，可以使用"To"前缀。例如，ToCsv、ToJson等。')],-1)]))}const m=o(i,[["render",p],["__file","extension.html.vue"]]),d=JSON.parse('{"path":"/dotnet/csharp/objectAndType/extension.html","title":"扩展方法","lang":"zh-CN","frontmatter":{"title":"扩展方法","lang":"zh-CN","date":"2023-10-25T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["csharp"],"tag":["无"],"filename":"kuozhanfangfa","slug":"qv7qg91mh74mrb9i","docsId":"144667320","description":"命名规则 通常使用\\"Get\\"前缀用于获取属性或值，而使用\\"To\\"前缀用于将对象转换为不同的类型或形式。 1、使用\\"Get\\"前缀： 当你的扩展方法返回对象的某个属性或字段的值时，可以使用\\"Get\\"前缀。例如，GetLength、GetCount等。 当你的扩展方法返回对象的某种状态或信息时，可以使用\\"Get\\"前缀。例如，GetStatus、GetStat...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/csharp/objectAndType/extension.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"扩展方法"}],["meta",{"property":"og:description","content":"命名规则 通常使用\\"Get\\"前缀用于获取属性或值，而使用\\"To\\"前缀用于将对象转换为不同的类型或形式。 1、使用\\"Get\\"前缀： 当你的扩展方法返回对象的某个属性或字段的值时，可以使用\\"Get\\"前缀。例如，GetLength、GetCount等。 当你的扩展方法返回对象的某种状态或信息时，可以使用\\"Get\\"前缀。例如，GetStatus、GetStat..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-15T09:55:13.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-15T09:55:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"扩展方法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-25T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-15T09:55:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"命名规则","slug":"命名规则","link":"#命名规则","children":[]}],"git":{"createdTime":1739613313000,"updatedTime":1739613313000,"contributors":[{"name":"azrng","username":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.71,"words":214},"filePathRelative":"dotnet/csharp/objectAndType/extension.md","localizedDate":"2023年10月25日","excerpt":"<h2>命名规则</h2>\\n<p>通常使用\\"Get\\"前缀用于获取属性或值，而使用\\"To\\"前缀用于将对象转换为不同的类型或形式。</p>\\n<p>1、使用\\"Get\\"前缀：</p>\\n<p>当你的扩展方法返回对象的某个属性或字段的值时，可以使用\\"Get\\"前缀。例如，GetLength、GetCount等。<br>\\n当你的扩展方法返回对象的某种状态或信息时，可以使用\\"Get\\"前缀。例如，GetStatus、GetState等。</p>\\n<p>2、使用\\"To\\"前缀：</p>\\n<p>当你的扩展方法将对象转换为不同的类型时，可以使用\\"To\\"前缀。例如，ToDictionary、ToList等。<br>\\n当你的扩展方法将对象转换为特定的格式或表示形式时，可以使用\\"To\\"前缀。例如，ToCsv、ToJson等。</p>","autoDesc":true}');export{m as comp,d as data};
