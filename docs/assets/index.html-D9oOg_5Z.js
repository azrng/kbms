import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o,c as l,b as n,e,f as i,d as s}from"./app-D8HBJYTp.js";const p={},c=s(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>Jenkins 是一款流行的开源持续集成（CI）与持续部署（CD）工具，用于自动化各种任务，包括构建、测试和部署软件。</p><h2 id="构建任务" tabindex="-1"><a class="header-anchor" href="#构建任务"><span>构建任务</span></a></h2><h4 id="流水线pipeline" tabindex="-1"><a class="header-anchor" href="#流水线pipeline"><span>流水线Pipeline</span></a></h4><p>一套运行于Jenkins上的工作流框架，将原本独立运行于单个或者多个节点的任务连接起来，实现单个任务难以完成的<strong>复杂流程编排与可视化</strong>。</p><ul><li><em><strong>Stage</strong></em>: 阶段，一个Pipeline可以划分为若干个Stage，每个Stage代表一组操作。注意，Stage是一个逻辑分组的概念，可以跨多个Node。如上图所示，Build，Test和Deploy就是Stage，代表了三个不同的阶段：编译、测试和部署。</li><li><em><strong>Node</strong></em>: 节点，一个Node就是一个Jenkins节点，或者是Master，或者是Slave，是执行Step的具体运行期环境。</li><li><em><strong>Step</strong></em>: 步骤，Step是最基本的操作单元，小到创建一个目录，大到构建一个Docker镜像，由各类Jenkins Plugin提供。</li></ul><h2 id="部署服务" tabindex="-1"><a class="header-anchor" href="#部署服务"><span>部署服务</span></a></h2><p>在Linux下，SSH服务默认会安装，而在Windows Server下，需要单独安装，可以借助FreeSSHD这个免费工具来实现。由于我的物理机都是Windows Server，物理机上的VM是Linux（Docker运行环境），所以需要给物理机配置FreeSSHD，用来实现从CI服务器发布Release到物理服务器中的VM。</p><h3 id="变量的使用方法" tabindex="-1"><a class="header-anchor" href="#变量的使用方法"><span>变量的使用方法</span></a></h3><p>下面的环境变量可以在配置Jenkins Job的时候用得到，可以用在Execute shell、Execute Windows batch command、文本框 上加上编辑好的的shell脚本</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Windows：%BUILD_NUMBER%        %变量名%
Linux：\${BUILD_NUMBER} ，也可以直接使用$BUILD_NUMBER
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>倘若是自己定义的参数化（Parameter）在调用时可以直接 用 $参数名，比如调用这个时直接 $endPoint</p><h3 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h3>`,13),d={href:"https://www.cnblogs.com/edisonchou/p/edc_aspnetcore_jenkins_pipeline_introduction.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.cnblogs.com/shawhe/p/11313633.html",target:"_blank",rel:"noopener noreferrer"};function m(g,u){const t=r("ExternalLinkIcon");return o(),l("div",null,[c,n("p",null,[e("使用教程："),n("a",d,[e("https://www.cnblogs.com/edisonchou/p/edc_aspnetcore_jenkins_pipeline_introduction.html"),i(t)]),e(" k8s+Jenkins+GitLab-自动化部署项目："),n("a",h,[e("https://www.cnblogs.com/shawhe/p/11313633.html"),i(t)])])])}const S=a(p,[["render",m],["__file","index.html.vue"]]),b=JSON.parse('{"path":"/cloud/ciAndCd/jenkins/","title":"说明","lang":"zh-CN","frontmatter":{"title":"说明","lang":"zh-CN","date":"2023-09-24T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["cloud"],"tag":["无"],"filename":"jenkins","slug":"fca8wd","docsId":"30338401","description":"概述 Jenkins 是一款流行的开源持续集成（CI）与持续部署（CD）工具，用于自动化各种任务，包括构建、测试和部署软件。 构建任务 流水线Pipeline 一套运行于Jenkins上的工作流框架，将原本独立运行于单个或者多个节点的任务连接起来，实现单个任务难以完成的复杂流程编排与可视化。 Stage: 阶段，一个Pipeline可以划分为若干个St...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/cloud/ciAndCd/jenkins/"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"说明"}],["meta",{"property":"og:description","content":"概述 Jenkins 是一款流行的开源持续集成（CI）与持续部署（CD）工具，用于自动化各种任务，包括构建、测试和部署软件。 构建任务 流水线Pipeline 一套运行于Jenkins上的工作流框架，将原本独立运行于单个或者多个节点的任务连接起来，实现单个任务难以完成的复杂流程编排与可视化。 Stage: 阶段，一个Pipeline可以划分为若干个St..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-24T08:50:00.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-24T08:50:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"说明\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-24T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-24T08:50:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"构建任务","slug":"构建任务","link":"#构建任务","children":[{"level":4,"title":"流水线Pipeline","slug":"流水线pipeline","link":"#流水线pipeline","children":[]}]},{"level":2,"title":"部署服务","slug":"部署服务","link":"#部署服务","children":[{"level":3,"title":"变量的使用方法","slug":"变量的使用方法","link":"#变量的使用方法","children":[]},{"level":3,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}]}],"git":{"createdTime":1695541854000,"updatedTime":1695545400000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.68,"words":505},"filePathRelative":"cloud/ciAndCd/jenkins/readme.md","localizedDate":"2023年9月24日","excerpt":"<h2>概述</h2>\\n<p>Jenkins 是一款流行的开源持续集成（CI）与持续部署（CD）工具，用于自动化各种任务，包括构建、测试和部署软件。</p>\\n<h2>构建任务</h2>\\n<h4>流水线Pipeline</h4>\\n<p>一套运行于Jenkins上的工作流框架，将原本独立运行于单个或者多个节点的任务连接起来，实现单个任务难以完成的<strong>复杂流程编排与可视化</strong>。</p>\\n<ul>\\n<li><em><strong>Stage</strong></em>: 阶段，一个Pipeline可以划分为若干个Stage，每个Stage代表一组操作。注意，Stage是一个逻辑分组的概念，可以跨多个Node。如上图所示，Build，Test和Deploy就是Stage，代表了三个不同的阶段：编译、测试和部署。</li>\\n<li><em><strong>Node</strong></em>: 节点，一个Node就是一个Jenkins节点，或者是Master，或者是Slave，是执行Step的具体运行期环境。</li>\\n<li><em><strong>Step</strong></em>: 步骤，Step是最基本的操作单元，小到创建一个目录，大到构建一个Docker镜像，由各类Jenkins Plugin提供。</li>\\n</ul>","autoDesc":true}');export{S as comp,b as data};
