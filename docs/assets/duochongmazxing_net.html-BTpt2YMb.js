import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as t}from"./app-CBxp4zeL.js";const p={},e=t(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>支持解码和生成图像中的条形码（如 QR 码、PDF 417、EAN、UPC、Aztec、Data Matrix、Codabar）的库。不支持跨平台。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><blockquote><p>本文示例环境：vs2022、.Net6</p></blockquote><p>引用组件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;System.Drawing.Common&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;6.0.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;ZXing.Net&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;0.16.6&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>如果依赖System.Drawing.Common，那么就只能在windows系统使用。</p></blockquote><h3 id="生成条形码" tabindex="-1"><a class="header-anchor" href="#生成条形码"><span>生成条形码</span></a></h3><p>代码</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 使用ZXing创建条形码</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>barCode<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>条码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>height<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>高度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>宽度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span>Bitmap图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">Bitmap</span> <span class="token function">GenerateBarCodeByZXing</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> barCode<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> height <span class="token operator">=</span> <span class="token number">310</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> width <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> encoding <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">EncodingOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        GS1Format <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        Height <span class="token operator">=</span> height<span class="token punctuation">,</span><span class="token comment">//设置一维码宽高</span>
        Width <span class="token operator">=</span> width<span class="token punctuation">,</span>
        Margin <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment">//图片空白边距</span>
        PureBarcode <span class="token operator">=</span> <span class="token boolean">false</span><span class="token comment">//在条码下显示条码，true则不显示</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">//生成条形码的图片</span>
    <span class="token class-name"><span class="token keyword">var</span></span> wr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BarcodeWriter<span class="token punctuation">&lt;</span>Bitmap<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//进行指定规格</span>
        Options <span class="token operator">=</span> encoding<span class="token punctuation">,</span>
        Format <span class="token operator">=</span> BarcodeFormat<span class="token punctuation">.</span>EAN_13<span class="token punctuation">,</span><span class="token comment">// BarcodeFormat.CODE_128//</span>
        Renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ZXing<span class="token punctuation">.</span>Rendering<span class="token punctuation">.</span>BitmapRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token class-name">Bitmap</span> img <span class="token operator">=</span> wr<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>barCode<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//生成一维码图片</span>
    <span class="token keyword">return</span> img<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> aa <span class="token operator">=</span> Test<span class="token punctuation">.</span><span class="token function">GenerateBarCodeByZXing</span><span class="token punctuation">(</span><span class="token string">&quot;123456123456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
aa<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span><span class="token string">&quot;d://1.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="生成二维码" tabindex="-1"><a class="header-anchor" href="#生成二维码"><span>生成二维码</span></a></h3><p>实现</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 生成二维码</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>宽度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>height<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>高度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">Bitmap</span> <span class="token function">GenerateQR</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> text<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> width<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> height<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BarcodeWriter</span>
    <span class="token punctuation">{</span>
        Format <span class="token operator">=</span> BarcodeFormat<span class="token punctuation">.</span>QR_CODE<span class="token punctuation">,</span>
        Options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">QrCodeEncodingOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            DisableECI <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//设置内容编码</span>
            CharacterSet <span class="token operator">=</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">,</span>  <span class="token comment">//设置二维码的宽度和高度</span>
            Width <span class="token operator">=</span> width<span class="token punctuation">,</span>
            Height <span class="token operator">=</span> height<span class="token punctuation">,</span>
            Margin <span class="token operator">=</span> <span class="token number">1</span><span class="token comment">//设置二维码的边距,单位不是固定像素</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name">Bitmap</span> map <span class="token operator">=</span> writer<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> map<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> aa <span class="token operator">=</span> Test<span class="token punctuation">.</span><span class="token function">GenerateQR</span><span class="token punctuation">(</span><span class="token string">&quot;123456123456&quot;</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
aa<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span><span class="token string">&quot;d://1.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="识别二维码" tabindex="-1"><a class="header-anchor" href="#识别二维码"><span>识别二维码</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BitmapLuminanceSource</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">BaseLuminanceSource</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token function">BitmapLuminanceSource</span><span class="token punctuation">(</span><span class="token class-name">Bitmap</span> bitmap<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">.</span>Width<span class="token punctuation">,</span> bitmap<span class="token punctuation">.</span>Height<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> lockData <span class="token operator">=</span> bitmap<span class="token punctuation">.</span><span class="token function">LockBits</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Rectangle</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Width<span class="token punctuation">,</span> Height<span class="token punctuation">)</span><span class="token punctuation">,</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Imaging<span class="token punctuation">.</span>ImageLockMode<span class="token punctuation">.</span>ReadOnly<span class="token punctuation">,</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Imaging<span class="token punctuation">.</span>PixelFormat<span class="token punctuation">.</span>Format32bppArgb<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> stride <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">Abs</span><span class="token punctuation">(</span>lockData<span class="token punctuation">.</span>Stride<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> pixelCount <span class="token operator">=</span> stride <span class="token operator">*</span> Height<span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> pixels <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">byte</span></span><span class="token punctuation">[</span>pixelCount<span class="token punctuation">]</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices<span class="token punctuation">.</span>Marshal<span class="token punctuation">.</span><span class="token function">Copy</span><span class="token punctuation">(</span>lockData<span class="token punctuation">.</span>Scan0<span class="token punctuation">,</span> pixels<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pixelCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
            bitmap<span class="token punctuation">.</span><span class="token function">UnlockBits</span><span class="token punctuation">(</span>lockData<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> Height<span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">var</span></span> offset <span class="token operator">=</span> y <span class="token operator">*</span> stride<span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> Width<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> idx <span class="token operator">=</span> offset <span class="token operator">+</span> x <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> luminance <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>pixels<span class="token punctuation">[</span>idx <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0.3</span> <span class="token operator">+</span> pixels<span class="token punctuation">[</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0.59</span> <span class="token operator">+</span> pixels<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0.11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    luminances<span class="token punctuation">[</span>y <span class="token operator">*</span> Width <span class="token operator">+</span> x<span class="token punctuation">]</span> <span class="token operator">=</span> luminance<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">LuminanceSource</span> <span class="token function">CreateLuminanceSource</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> newLuminances<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> width<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> height<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NotImplementedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再新建一个使用XZING.NET识别二维码的方法做测试：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>
<span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">DecodeQRCodeByZXing</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> imagePath<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>

            <span class="token class-name"><span class="token keyword">var</span></span> barcodeReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BarcodeReader<span class="token punctuation">&lt;</span>Bitmap<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>bitmap <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BitmapLuminanceSource</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> barcodeReader<span class="token punctuation">.</span><span class="token function">Decode</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Bitmap</span><span class="token punctuation">(</span>imagePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> result<span class="token punctuation">.</span>Text<span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;没得码.&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","duochongmazxing_net.html.vue"]]),d=JSON.parse('{"path":"/middleware/tuxiangchuli/duochongmazxing_net.html","title":"多种码ZXing.Net","lang":"zh-CN","frontmatter":{"title":"多种码ZXing.Net","lang":"zh-CN","date":"2023-09-02T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"duochongmazxing_net","slug":"lfz3no","docsId":"68056728","description":"介绍 支持解码和生成图像中的条形码（如 QR 码、PDF 417、EAN、UPC、Aztec、Data Matrix、Codabar）的库。不支持跨平台。 操作 本文示例环境：vs2022、.Net6 引用组件 如果依赖System.Drawing.Common，那么就只能在windows系统使用。 生成条形码 代码 示例 生成二维码 实现 示例 识别...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/tuxiangchuli/duochongmazxing_net.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"多种码ZXing.Net"}],["meta",{"property":"og:description","content":"介绍 支持解码和生成图像中的条形码（如 QR 码、PDF 417、EAN、UPC、Aztec、Data Matrix、Codabar）的库。不支持跨平台。 操作 本文示例环境：vs2022、.Net6 引用组件 如果依赖System.Drawing.Common，那么就只能在windows系统使用。 生成条形码 代码 示例 生成二维码 实现 示例 识别..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"多种码ZXing.Net\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"生成条形码","slug":"生成条形码","link":"#生成条形码","children":[]},{"level":3,"title":"生成二维码","slug":"生成二维码","link":"#生成二维码","children":[]},{"level":3,"title":"识别二维码","slug":"识别二维码","link":"#识别二维码","children":[]}]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.8,"words":540},"filePathRelative":"middleware/tuxiangchuli/duochongmazxing_net.md","localizedDate":"2023年9月2日","excerpt":"<h2>介绍</h2>\\n<p>支持解码和生成图像中的条形码（如 QR 码、PDF 417、EAN、UPC、Aztec、Data Matrix、Codabar）的库。不支持跨平台。</p>\\n<h2>操作</h2>\\n<blockquote>\\n<p>本文示例环境：vs2022、.Net6</p>\\n</blockquote>\\n<p>引用组件</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">PackageReference</span> Include<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"System.Drawing.Common\\"</span> Version<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"6.0.0\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token operator\\">&lt;</span><span class=\\"token class-name\\">PackageReference</span> Include<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"ZXing.Net\\"</span> Version<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"0.16.6\\"</span> <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
