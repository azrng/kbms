import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o,c,a as n,d as s,e as t,b as i}from"./app-DMmdIwn0.js";const l={},u=n("h2",{id:"_1-介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-介绍"},[n("span",null,"1. 介绍")])],-1),r=n("p",null,"CSRedis 是 redis.io 官方推荐库，支持 redis-trib集群、哨兵、私有分区与连接池管理技术，简易 RedisHelper 静态类, 它主要又两个程序集。",-1),k=n("ol",null,[n("li",null,"CSRedisCore：主库,实现对接redis各种功能"),n("li",null,"Caching.CSRedis：分布式缓存 CSRedisCore 实现 Microsoft.Extensions.Caching，通过IDistributedCache进行操作")],-1),d={href:"https://github.com/2881099/csredis",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.cnblogs.com/tuyile006/p/14051569.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.cnblogs.com/yaopengfei/p/14211883.html",target:"_blank",rel:"noopener noreferrer"},g=i(`<p>最新更新：2022年末</p><h2 id="_2-idistributedcache" tabindex="-1"><a class="header-anchor" href="#_2-idistributedcache"><span>2. IDistributedCache</span></a></h2><p>实现 Microsoft.Extensions.Caching</p><h3 id="_2-1-引用包" tabindex="-1"><a class="header-anchor" href="#_2-1-引用包"><span>2.1 引用包</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>    <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Caching.CSRedis&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;3.6.60&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;CSRedisCore&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;3.6.6&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.Extensions.DependencyInjection.Abstractions&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;5.0.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-注册方式" tabindex="-1"><a class="header-anchor" href="#_2-2-注册方式"><span>2.2 注册方式</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 添加redis缓存配置</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>services<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">AddRedisCacheService</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IServiceCollection</span> services<span class="token punctuation">,</span> <span class="token class-name">Func<span class="token punctuation">&lt;</span>RedisConfig<span class="token punctuation">&gt;</span></span> func<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>services <span class="token keyword">is</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArgumentNullException</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>services<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddTransient</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IRedisCacheManager<span class="token punctuation">,</span> RedisCacheManager<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//封装的类</span>
    <span class="token class-name"><span class="token keyword">var</span></span> config <span class="token operator">=</span> func<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    RedisHelper<span class="token punctuation">.</span><span class="token function">Initialization</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CSRedisClient</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">config<span class="token punctuation">.</span>ConnectionString</span><span class="token punctuation">}</span></span><span class="token string">,prefix=</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">config<span class="token punctuation">.</span>InstanceName</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IDistributedCache<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CSRedisCache</span><span class="token punctuation">(</span>RedisHelper<span class="token punctuation">.</span>Instance<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-封装类" tabindex="-1"><a class="header-anchor" href="#_2-3-封装类"><span>2.3 封装类</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>        <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IDistributedCache</span> _cache<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">RedisCacheManager</span><span class="token punctuation">(</span><span class="token class-name">IDistributedCache</span> cache<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            _cache <span class="token operator">=</span> cache<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token generic-method"><span class="token function">SetAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> key<span class="token punctuation">,</span> <span class="token class-name">T</span> <span class="token keyword">value</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> timeoutSeconds<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">.</span><span class="token function">GetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>IsClass<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">await</span> _cache<span class="token punctuation">.</span><span class="token function">SetAsync</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>
                    JsonConvert<span class="token punctuation">.</span><span class="token function">SerializeObject</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">JsonSerializerSettings</span>
                    <span class="token punctuation">{</span>
                        ReferenceLoopHandling <span class="token operator">=</span> ReferenceLoopHandling<span class="token punctuation">.</span>Ignore
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DistributedCacheEntryOptions</span>
                    <span class="token punctuation">{</span>
                        AbsoluteExpirationRelativeToNow <span class="token operator">=</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span>timeoutSeconds<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">await</span> _cache<span class="token punctuation">.</span><span class="token function">SetAsync</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DistributedCacheEntryOptions</span>
                <span class="token punctuation">{</span>
                    AbsoluteExpirationRelativeToNow <span class="token operator">=</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span>timeoutSeconds<span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-redishelper" tabindex="-1"><a class="header-anchor" href="#_3-redishelper"><span>3. RedisHelper</span></a></h2><h3 id="_3-1-引用包" tabindex="-1"><a class="header-anchor" href="#_3-1-引用包"><span>3.1 引用包</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>    <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;CSRedisCore&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;3.6.6&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.Extensions.DependencyInjection.Abstractions&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;5.0.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-注册方式" tabindex="-1"><a class="header-anchor" href="#_3-2-注册方式"><span>3.2 注册方式</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// 添加redis缓存配置</span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>services<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">AddRedisCacheService</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IServiceCollection</span> services<span class="token punctuation">,</span> <span class="token class-name">Func<span class="token punctuation">&lt;</span>RedisConfig<span class="token punctuation">&gt;</span></span> func<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>services <span class="token keyword">is</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArgumentNullException</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>services<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddTransient</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IRedisCache<span class="token punctuation">,</span> RedisCache<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//封装类</span>
            <span class="token class-name"><span class="token keyword">var</span></span> config <span class="token operator">=</span> func<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            RedisHelper<span class="token punctuation">.</span><span class="token function">Initialization</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CSRedisClient</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">config<span class="token punctuation">.</span>ConnectionString</span><span class="token punctuation">}</span></span><span class="token string">,prefix=</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">config<span class="token punctuation">.</span>InstanceName</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-封装类" tabindex="-1"><a class="header-anchor" href="#_3-3-封装类"><span>3.3 封装类</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>        <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>TEntity<span class="token punctuation">&gt;</span></span> <span class="token generic-method"><span class="token function">GetAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TEntity<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> key<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">await</span> RedisHelper<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">HGetAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TEntity<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&quot;data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token generic-method"><span class="token function">SetAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> key<span class="token punctuation">,</span> <span class="token class-name">T</span> <span class="token keyword">value</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">double</span><span class="token punctuation">?</span></span> second<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">await</span> RedisHelper<span class="token punctuation">.</span><span class="token function">HSetAsync</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> JsonConvert<span class="token punctuation">.</span><span class="token function">SerializeObject</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">await</span> RedisHelper<span class="token punctuation">.</span><span class="token function">ExpireAsync</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromMinutes</span><span class="token punctuation">(</span>second <span class="token operator">??</span> <span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16);function h(b,y){const a=p("ExternalLinkIcon");return o(),c("div",null,[u,r,k,n("blockquote",null,[n("p",null,[s("GitHub地址："),n("a",d,[s("https://github.com/2881099/csredis"),t(a)]),s(" GitHub地址翻译中文版本："),n("a",m,[s("https://www.cnblogs.com/tuyile006/p/14051569.html"),t(a)]),s(" 操作说明文档："),n("a",v,[s("https://www.cnblogs.com/yaopengfei/p/14211883.html"),t(a)])])]),g])}const _=e(l,[["render",h],["__file","csredis.html.vue"]]),C=JSON.parse('{"path":"/dataBase/redis/zujian/csredis.html","title":"CSRedis","lang":"zh-CN","frontmatter":{"title":"CSRedis","lang":"zh-CN","date":"2023-07-01T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"filename":"csredis","slug":"lmlmgv","docsId":"32064765","description":"1. 介绍 CSRedis 是 redis.io 官方推荐库，支持 redis-trib集群、哨兵、私有分区与连接池管理技术，简易 RedisHelper 静态类, 它主要又两个程序集。 CSRedisCore：主库,实现对接redis各种功能 Caching.CSRedis：分布式缓存 CSRedisCore 实现 Microsoft.Extensi...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/redis/zujian/csredis.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"CSRedis"}],["meta",{"property":"og:description","content":"1. 介绍 CSRedis 是 redis.io 官方推荐库，支持 redis-trib集群、哨兵、私有分区与连接池管理技术，简易 RedisHelper 静态类, 它主要又两个程序集。 CSRedisCore：主库,实现对接redis各种功能 Caching.CSRedis：分布式缓存 CSRedisCore 实现 Microsoft.Extensi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-23T15:53:24.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-07-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-23T15:53:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSRedis\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-01T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-23T15:53:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"1. 介绍","slug":"_1-介绍","link":"#_1-介绍","children":[]},{"level":2,"title":"2. IDistributedCache","slug":"_2-idistributedcache","link":"#_2-idistributedcache","children":[{"level":3,"title":"2.1 引用包","slug":"_2-1-引用包","link":"#_2-1-引用包","children":[]},{"level":3,"title":"2.2 注册方式","slug":"_2-2-注册方式","link":"#_2-2-注册方式","children":[]},{"level":3,"title":"2.3 封装类","slug":"_2-3-封装类","link":"#_2-3-封装类","children":[]}]},{"level":2,"title":"3. RedisHelper","slug":"_3-redishelper","link":"#_3-redishelper","children":[{"level":3,"title":"3.1 引用包","slug":"_3-1-引用包","link":"#_3-1-引用包","children":[]},{"level":3,"title":"3.2 注册方式","slug":"_3-2-注册方式","link":"#_3-2-注册方式","children":[]},{"level":3,"title":"3.3 封装类","slug":"_3-3-封装类","link":"#_3-3-封装类","children":[]}]}],"git":{"createdTime":1695484404000,"updatedTime":1695484404000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.35,"words":405},"filePathRelative":"dataBase/redis/zujian/csredis.md","localizedDate":"2023年7月1日","excerpt":"<h2>1. 介绍</h2>\\n<p>CSRedis 是 redis.io 官方推荐库，支持 redis-trib集群、哨兵、私有分区与连接池管理技术，简易 RedisHelper 静态类, 它主要又两个程序集。</p>\\n<ol>\\n<li>CSRedisCore：主库,实现对接redis各种功能</li>\\n<li>Caching.CSRedis：分布式缓存 CSRedisCore 实现 Microsoft.Extensions.Caching，通过IDistributedCache进行操作</li>\\n</ol>\\n<blockquote>\\n<p>GitHub地址：<a href=\\"https://github.com/2881099/csredis\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/2881099/csredis</a>\\nGitHub地址翻译中文版本：<a href=\\"https://www.cnblogs.com/tuyile006/p/14051569.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.cnblogs.com/tuyile006/p/14051569.html</a>\\n操作说明文档：<a href=\\"https://www.cnblogs.com/yaopengfei/p/14211883.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.cnblogs.com/yaopengfei/p/14211883.html</a></p>\\n</blockquote>","autoDesc":true}');export{_ as comp,C as data};
