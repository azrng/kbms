import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,b as n,e as s,f as t,d as p}from"./app-Bfb6-vFH.js";const u={},i=p(`<h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>安装nuget包</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>DocumentFormat<span class="token punctuation">.</span>OpenXml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="导出ppt文件中图片" tabindex="-1"><a class="header-anchor" href="#导出ppt文件中图片"><span>导出PPT文件中图片</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 导出PPT文件中所有图片</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sourcePath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>源文件路径<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>targetDir<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>目标文件存放目录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ExportPPTImages</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> sourcePath<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">string</span></span> targetDir<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">PresentationDocument</span> presentationDocument <span class="token operator">=</span> PresentationDocument<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>sourcePath<span class="token punctuation">,</span> <span class="token named-parameter punctuation">isEditable</span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">PresentationPart</span> presentationPart <span class="token operator">=</span> presentationDocument<span class="token punctuation">.</span>PresentationPart<span class="token punctuation">;</span>
        <span class="token class-name">DocumentFormat<span class="token punctuation">.</span>OpenXml<span class="token punctuation">.</span>Presentation<span class="token punctuation">.</span>Presentation</span> presentation <span class="token operator">=</span> presentationPart<span class="token punctuation">.</span>Presentation<span class="token punctuation">;</span>
        <span class="token class-name">List<span class="token punctuation">&lt;</span>ImagePart<span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>ImagePart<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">DocumentFormat<span class="token punctuation">.</span>OpenXml<span class="token punctuation">.</span>Presentation<span class="token punctuation">.</span>SlideId</span> item <span class="token keyword">in</span> presentation<span class="token punctuation">.</span>SlideIdList<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">OfType</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>DocumentFormat<span class="token punctuation">.</span>OpenXml<span class="token punctuation">.</span>Presentation<span class="token punctuation">.</span>SlideId<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">SlidePart</span> slidePart <span class="token operator">=</span> presentationPart<span class="token punctuation">.</span><span class="token function">GetPartById</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>RelationshipId<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name">SlidePart</span><span class="token punctuation">;</span>
            list<span class="token punctuation">.</span><span class="token function">AddRange</span><span class="token punctuation">(</span>slidePart<span class="token punctuation">.</span>ImageParts<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">List<span class="token punctuation">&lt;</span>IGrouping<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> ImagePart<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> list2 <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">GroupBy</span><span class="token punctuation">(</span>d <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>Uri<span class="token punctuation">.</span>OriginalString<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//导出PPT所有的图片</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list2<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">ImagePart</span> imagePart <span class="token operator">=</span> list2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">string</span></span> tempFileName <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>targetDir<span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">$&quot;image_</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">i</span><span class="token punctuation">}</span></span><span class="token string">.jpg&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">Stream</span> stream <span class="token operator">=</span> imagePart<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span>FileMode<span class="token punctuation">.</span>Open<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">Bitmap</span> bitmap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Bitmap</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    bitmap<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>tempFileName<span class="token punctuation">,</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Imaging<span class="token punctuation">.</span>ImageFormat<span class="token punctuation">.</span>Jpeg<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//presentation.Save();</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),k={href:"https://www.cnblogs.com/cplemom/p/12198618.html",target:"_blank",rel:"noopener noreferrer"},r=p(`<h3 id="导出word文件中图片" tabindex="-1"><a class="header-anchor" href="#导出word文件中图片"><span>导出Word文件中图片</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 导出Word文件中所有图片</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sourcePath<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>源文件路径<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>targetDir<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>目标文件存放目录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ExportWordImages</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> sourcePath<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">string</span></span> targetDir<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">WordprocessingDocument</span> wordDocument <span class="token operator">=</span> WordprocessingDocument<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>sourcePath<span class="token punctuation">,</span> <span class="token named-parameter punctuation">isEditable</span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> list2 <span class="token operator">=</span> wordDocument<span class="token punctuation">.</span>MainDocumentPart<span class="token punctuation">.</span>ImageParts<span class="token punctuation">.</span><span class="token function">GroupBy</span><span class="token punctuation">(</span>d <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>Uri<span class="token punctuation">.</span>OriginalString<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list2<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">ImagePart</span> imagePart <span class="token operator">=</span> list2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">string</span></span> tempFileName <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>targetDir<span class="token punctuation">,</span> <span class="token interpolation-string"><span class="token string">$&quot;image_</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">i</span><span class="token punctuation">}</span></span><span class="token string">.jpg&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">Stream</span> stream <span class="token operator">=</span> imagePart<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span>FileMode<span class="token punctuation">.</span>Open<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">Bitmap</span> bitmap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Bitmap</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    bitmap<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>tempFileName<span class="token punctuation">,</span> System<span class="token punctuation">.</span>Drawing<span class="token punctuation">.</span>Imaging<span class="token punctuation">.</span>ImageFormat<span class="token punctuation">.</span>Jpeg<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),m={href:"https://www.cnblogs.com/cplemom/p/12198618.html",target:"_blank",rel:"noopener noreferrer"};function d(g,v){const a=o("ExternalLinkIcon");return c(),l("div",null,[i,n("p",null,[s("资料："),n("a",k,[s("https://www.cnblogs.com/cplemom/p/12198618.html"),t(a)])]),r,n("p",null,[s("资料："),n("a",m,[s("https://www.cnblogs.com/cplemom/p/12198618.html"),t(a)])])])}const P=e(u,[["render",d],["__file","openxml.html.vue"]]),w=JSON.parse('{"path":"/middleware/office/openxml.html","title":"OpenXml","lang":"zh-CN","frontmatter":{"title":"OpenXml","lang":"zh-CN","date":"2023-10-18T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"openxml","slug":"mt42voud4czs47o7","docsId":"123329078","description":"操作 安装nuget包 导出PPT文件中图片 资料：https://www.cnblogs.com/cplemom/p/12198618.html 导出Word文件中图片 资料：https://www.cnblogs.com/cplemom/p/12198618.html","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/office/openxml.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"OpenXml"}],["meta",{"property":"og:description","content":"操作 安装nuget包 导出PPT文件中图片 资料：https://www.cnblogs.com/cplemom/p/12198618.html 导出Word文件中图片 资料：https://www.cnblogs.com/cplemom/p/12198618.html"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"OpenXml\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-18T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"导出PPT文件中图片","slug":"导出ppt文件中图片","link":"#导出ppt文件中图片","children":[]},{"level":3,"title":"导出Word文件中图片","slug":"导出word文件中图片","link":"#导出word文件中图片","children":[]}]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.97,"words":292},"filePathRelative":"middleware/office/openxml.md","localizedDate":"2023年10月18日","excerpt":"<h2>操作</h2>\\n<p>安装nuget包</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code>DocumentFormat<span class=\\"token punctuation\\">.</span>OpenXml\\n</code></pre></div><h3>导出PPT文件中图片</h3>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>summary</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"token doc-comment comment\\">/// 导出PPT文件中所有图片</span>\\n<span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>summary</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>param</span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>sourcePath<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>源文件路径<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>param</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>param</span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>targetDir<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>目标文件存放目录<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>param</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"token doc-comment comment\\">/// <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>returns</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>returns</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">void</span></span> <span class=\\"token function\\">ExportPPTImages</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">string</span></span> sourcePath<span class=\\"token punctuation\\">,</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">string</span></span> targetDir<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">using</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">PresentationDocument</span> presentationDocument <span class=\\"token operator\\">=</span> PresentationDocument<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Open</span><span class=\\"token punctuation\\">(</span>sourcePath<span class=\\"token punctuation\\">,</span> <span class=\\"token named-parameter punctuation\\">isEditable</span><span class=\\"token punctuation\\">:</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">PresentationPart</span> presentationPart <span class=\\"token operator\\">=</span> presentationDocument<span class=\\"token punctuation\\">.</span>PresentationPart<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">DocumentFormat<span class=\\"token punctuation\\">.</span>OpenXml<span class=\\"token punctuation\\">.</span>Presentation<span class=\\"token punctuation\\">.</span>Presentation</span> presentation <span class=\\"token operator\\">=</span> presentationPart<span class=\\"token punctuation\\">.</span>Presentation<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">List<span class=\\"token punctuation\\">&lt;</span>ImagePart<span class=\\"token punctuation\\">&gt;</span></span> list <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">List<span class=\\"token punctuation\\">&lt;</span>ImagePart<span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">foreach</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">DocumentFormat<span class=\\"token punctuation\\">.</span>OpenXml<span class=\\"token punctuation\\">.</span>Presentation<span class=\\"token punctuation\\">.</span>SlideId</span> item <span class=\\"token keyword\\">in</span> presentation<span class=\\"token punctuation\\">.</span>SlideIdList<span class=\\"token punctuation\\">.</span><span class=\\"token generic-method\\"><span class=\\"token function\\">OfType</span><span class=\\"token generic class-name\\"><span class=\\"token punctuation\\">&lt;</span>DocumentFormat<span class=\\"token punctuation\\">.</span>OpenXml<span class=\\"token punctuation\\">.</span>Presentation<span class=\\"token punctuation\\">.</span>SlideId<span class=\\"token punctuation\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token class-name\\">SlidePart</span> slidePart <span class=\\"token operator\\">=</span> presentationPart<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetPartById</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">.</span>RelationshipId<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> <span class=\\"token class-name\\">SlidePart</span><span class=\\"token punctuation\\">;</span>\\n            list<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AddRange</span><span class=\\"token punctuation\\">(</span>slidePart<span class=\\"token punctuation\\">.</span>ImageParts<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token class-name\\">List<span class=\\"token punctuation\\">&lt;</span>IGrouping<span class=\\"token punctuation\\">&lt;</span><span class=\\"token keyword\\">string</span><span class=\\"token punctuation\\">,</span> ImagePart<span class=\\"token punctuation\\">&gt;</span><span class=\\"token punctuation\\">&gt;</span></span> list2 <span class=\\"token operator\\">=</span> list<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GroupBy</span><span class=\\"token punctuation\\">(</span>d <span class=\\"token operator\\">=&gt;</span> d<span class=\\"token punctuation\\">.</span>Uri<span class=\\"token punctuation\\">.</span>OriginalString<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ToList</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token comment\\">//导出PPT所有的图片</span>\\n        <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">int</span></span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> list2<span class=\\"token punctuation\\">.</span>Count<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token class-name\\">ImagePart</span> imagePart <span class=\\"token operator\\">=</span> list2<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">FirstOrDefault</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token class-name\\"><span class=\\"token keyword\\">string</span></span> tempFileName <span class=\\"token operator\\">=</span> Path<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Combine</span><span class=\\"token punctuation\\">(</span>targetDir<span class=\\"token punctuation\\">,</span> <span class=\\"token interpolation-string\\"><span class=\\"token string\\">$\\"image_</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span><span class=\\"token expression language-csharp\\">i</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">.jpg\\"</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">using</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Stream</span> stream <span class=\\"token operator\\">=</span> imagePart<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetStream</span><span class=\\"token punctuation\\">(</span>FileMode<span class=\\"token punctuation\\">.</span>Open<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">using</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Bitmap</span> bitmap <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Bitmap</span><span class=\\"token punctuation\\">(</span>stream<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token punctuation\\">{</span>\\n                    bitmap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Save</span><span class=\\"token punctuation\\">(</span>tempFileName<span class=\\"token punctuation\\">,</span> System<span class=\\"token punctuation\\">.</span>Drawing<span class=\\"token punctuation\\">.</span>Imaging<span class=\\"token punctuation\\">.</span>ImageFormat<span class=\\"token punctuation\\">.</span>Jpeg<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token comment\\">//presentation.Save();</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{P as comp,w as data};
