import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as p,c as o,a as n,d as a,e as c,b as i}from"./app-Bw62I61B.js";const u={},l=i(`<p>MongoDB 查询分析可以确保我们所建立的索引是否有效，是查询语句性能分析的重要工具。 MongoDB 查询分析常用函数有：explain() 和 hint()。 explain 操作提供了查询信息，使用索引及查询统计等。有利于我们对索引的优化。 接下来我们在 users 集合中创建 gender 和 user_name 的索引：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">ensureIndex</span><span class="token punctuation">(</span><span class="token punctuation">{</span>gender<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token named-parameter punctuation">user_name</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> 现在在查询语句中使用 explain ：

db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>gender<span class="token punctuation">:</span><span class="token string">&quot;M&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>user_name<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token named-parameter punctuation">_id</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">explain</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="stage-分类" tabindex="-1"><a class="header-anchor" href="#stage-分类"><span>Stage 分类</span></a></h4><p>COLLSCAN：扫描整个集合 IXSCAN：索引扫描 FETCH：根据索引去检索选择document SHARD_MERGE：将各个分片返回数据进行merge SORT：表明在内存中进行了排序（与老版本的scanAndOrder:true一致） LIMIT：使用limit限制返回数 SKIP：使用skip进行跳过 IDHACK：针对_id进行查 SHARDING_FILTER：通过mongos对分片数据进行查询 COUNT：利用db.coll.explain().count()之类进行count COUNTSCAN：count不使用用Index进行count时的stage返回 COUNT_SCAN：count使用了Index进行count时的stage返回 SUBPLA：未使用到索引的$or查询的stage返回 TEXT：使用全文索引进行查询时候的stage返回 PROJECTION：限定返回字段时候stage的返回</p><h4 id="查看执行计划" tabindex="-1"><a class="header-anchor" href="#查看执行计划"><span>查看执行计划</span></a></h4><p>db.collection_name.find({}).explain(true) find{} 里面要设置具体的查询条件，才可以查到精确的执行计划 MongoDB 查看执行计划时，最理想状态：--20180604 nReturned=totalDocsExamined=totalKeysExamined</p><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,7),r={href:"https://mp.weixin.qq.com/s/Oz9LmjsudDHJL__Aup5VOw",target:"_blank",rel:"noopener noreferrer"};function d(m,g){const s=e("ExternalLinkIcon");return p(),o("div",null,[l,n("p",null,[a("公众号后端Q："),n("a",r,[a("https://mp.weixin.qq.com/s/Oz9LmjsudDHJL__Aup5VOw"),c(s)])])])}const _=t(u,[["render",d],["__file","zhihangjihua.html.vue"]]),x=JSON.parse('{"path":"/dataBase/mongodb/zhihangjihua.html","title":"执行计划","lang":"zh-CN","frontmatter":{"title":"执行计划","lang":"zh-CN","date":"2021-10-21T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dataBase"],"tag":["无"],"filename":"zhihangjihua","slug":"lihyh3","docsId":"55673759","description":"MongoDB 查询分析可以确保我们所建立的索引是否有效，是查询语句性能分析的重要工具。 MongoDB 查询分析常用函数有：explain() 和 hint()。 explain 操作提供了查询信息，使用索引及查询统计等。有利于我们对索引的优化。 接下来我们在 users 集合中创建 gender 和 user_name 的索引： Stage 分类 ...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dataBase/mongodb/zhihangjihua.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"执行计划"}],["meta",{"property":"og:description","content":"MongoDB 查询分析可以确保我们所建立的索引是否有效，是查询语句性能分析的重要工具。 MongoDB 查询分析常用函数有：explain() 和 hint()。 explain 操作提供了查询信息，使用索引及查询统计等。有利于我们对索引的优化。 接下来我们在 users 集合中创建 gender 和 user_name 的索引： Stage 分类 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-23T15:53:24.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2021-10-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-23T15:53:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"执行计划\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-10-21T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-23T15:53:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":4,"title":"Stage 分类","slug":"stage-分类","link":"#stage-分类","children":[]},{"level":4,"title":"查看执行计划","slug":"查看执行计划","link":"#查看执行计划","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1695484404000,"updatedTime":1695484404000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.31,"words":394},"filePathRelative":"dataBase/mongodb/zhihangjihua.md","localizedDate":"2021年10月21日","excerpt":"<p>MongoDB 查询分析可以确保我们所建立的索引是否有效，是查询语句性能分析的重要工具。\\nMongoDB 查询分析常用函数有：explain() 和 hint()。\\nexplain 操作提供了查询信息，使用索引及查询统计等。有利于我们对索引的优化。\\n接下来我们在 users 集合中创建 gender 和 user_name 的索引：</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code>db<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ensureIndex</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>gender<span class=\\"token punctuation\\">:</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span><span class=\\"token named-parameter punctuation\\">user_name</span><span class=\\"token punctuation\\">:</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span> 现在在查询语句中使用 explain ：\\n\\ndb<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">find</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>gender<span class=\\"token punctuation\\">:</span><span class=\\"token string\\">\\"M\\"</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">{</span>user_name<span class=\\"token punctuation\\">:</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span><span class=\\"token named-parameter punctuation\\">_id</span><span class=\\"token punctuation\\">:</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">explain</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</code></pre></div>","autoDesc":true}');export{_ as comp,x as data};
