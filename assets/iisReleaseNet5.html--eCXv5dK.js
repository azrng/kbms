import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as s,o as n}from"./app-B3EhLA94.js";const r="/kbms/common/1621430404995-81a66bf0-d43f-432c-931d-c9da9239912d.png",i="/kbms/common/1621432192325-6321b024-3a82-47d8-8b2b-cd8d4fbe2e13.png",o="/kbms/common/1621431500383-f3718698-75cb-4cc1-971f-a94987fd728a.png",l="/kbms/common/1621432479264-a4ad0599-9c44-48f8-9f60-66e4b2e92c6f.png",p="/kbms/common/1621432762660-7cbee968-8fb8-4506-a44c-86f91c08eca9.png",c="/kbms/common/1621418975218-e1cf8916-d1b1-4478-ab06-27d68955f2cd.png",h="/kbms/common/1621419731758-573dae98-6398-4ff8-b74e-3bed05092e05.png",d="/kbms/common/1621434077105-2e447da1-5082-4ac9-87c2-a22c7bcf825c.png",g="/kbms/common/1621434518735-f09c0f97-ea01-490a-be38-dbf59d5ab886.png",m="/kbms/common/1621434688002-1abc9d39-c4a4-435c-88e8-5ff52ece4db7.png",b="/kbms/common/1621434770504-dcf4f9c6-7481-496d-8cd1-0a02094edde8.png",k="/kbms/common/1621434890333-450eab2d-434a-491d-9b95-d68d1648662a.png",f={};function u(y,e){return n(),a("div",null,e[0]||(e[0]=[s('<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>Internet Information Services (IIS) 是一种灵活、安全且可管理的 Web 服务器，用于托管 Web 应用（包括 <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core）。虽然我们的程序可以跨平台了，不过还是有些服务是部署在windows服务器下的，下面我们就从头开始部署下我们的程序到IIS.</p><blockquote><p>本次示例环境：Windows Server 2012 R2 、vs2019、MySQL、.net5</p></blockquote><h2 id="安装环境" tabindex="-1"><a class="header-anchor" href="#安装环境"><span>安装环境</span></a></h2><h3 id="支持平台" tabindex="-1"><a class="header-anchor" href="#支持平台"><span>支持平台</span></a></h3><ul><li>Windows 7 或更高版本</li><li>Windows Server 2012 R2 或更高版本</li></ul><blockquote><p>本次代码将安装在Windows Server 2012 R2 版本上，感觉这个版本使用的公司还不少。</p></blockquote><h3 id="安装asp-net-core托管捆绑包" tabindex="-1"><a class="header-anchor" href="#安装asp-net-core托管捆绑包"><span><a href="http://xn--ASP-pd0fq01r.NET" target="_blank" rel="noopener noreferrer">安装ASP.NET</a> Core托管捆绑包</span></a></h3><p>安装的文件应该和项目对应的版本相同，现在我项目使用的.net版本是5，那么我应该也用5的，下载地址是：<a href="https://dotnet.microsoft.com/download/dotnet/thank-you/runtime-aspnetcore-5.0.6-windows-hosting-bundle-installer" target="_blank" rel="noopener noreferrer">此处</a><br> 安装其他版本的请参考官网地址：<a href="https://docs.microsoft.com/zh-cn/aspnet/core/host-and-deploy/iis/hosting-bundle?view=aspnetcore-5.0" target="_blank" rel="noopener noreferrer">.NET Core托管捆绑包</a></p><blockquote><p>捆绑包可安装 .NET Core 运行时、.NET Core 库和 <a href="https://docs.microsoft.com/zh-cn/aspnet/core/host-and-deploy/aspnet-core-module?view=aspnetcore-5.0" target="_blank" rel="noopener noreferrer">ASP.NET Core 模块</a>。 该模块允许 <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core 应用在 IIS 运行。</p></blockquote><p><img src="'+r+'" alt="image.png" loading="lazy"><br> 安装后查看应用程序目录<br><img src="'+i+'" alt="image.png" loading="lazy"></p><h2 id="发布项目" tabindex="-1"><a class="header-anchor" href="#发布项目"><span>发布项目</span></a></h2><p>新建一个net5 WebAPI程序，当前程序主要包含一个用户控制器(包含用户信息的增删改查)并且连接MySQL数据库。<br> 项目结构如下<br><img src="'+o+'" alt="image.png" loading="lazy"></p><blockquote><p>源码地址：<a href="https://gitee.com/AZRNG/my-example" target="_blank" rel="noopener noreferrer">https://gitee.com/AZRNG/my-example</a> 需要自取</p></blockquote><p>通过vs2019发布我们的项目，然后将发布后的项目拷贝到要部署的服务器上面。<br><img src="'+l+'" alt="image.png" loading="lazy"><br> 发布后如下<br><img src="'+p+'" alt="image.png" loading="lazy"></p><blockquote><p>为了正确设置 <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core 模块，web.config 文件必须存在于已部署应用的根路径中。里面可以设置一些环境、日志等配置。</p></blockquote><h2 id="托管方式" tabindex="-1"><a class="header-anchor" href="#托管方式"><span>托管方式</span></a></h2><h3 id="进程内托管-iis-http-服务器" tabindex="-1"><a class="header-anchor" href="#进程内托管-iis-http-服务器"><span>进程内托管(IIS HTTP 服务器)</span></a></h3><blockquote><p>自 <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core 3.0 起，默认情况下已为部署到 IIS 的所有应用启用进程内托管。</p></blockquote><p>进程内托管在与其 IIS 工作进程相同的进程中运行 <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core 应用。 进程内承载相较进程外承载提供更优的性能，因为请求并不通过环回适配器进行代理，环回适配器是一个网络接口，用于将传出的网络流量返回给同一计算机。<br><img src="'+c+`" alt="" loading="lazy"></p><blockquote><p>该图说明了 IIS、<a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core 模块和进程内托管的应用之间的关系</p></blockquote><p>显式配置进行内托管，需要在项目文件(.csproj)中增加如下配置</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">PropertyGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">  &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">AspNetCoreHostingModel</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">InProcess</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">AspNetCoreHostingModel</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">PropertyGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="进程外托管-kestrel服务器" tabindex="-1"><a class="header-anchor" href="#进程外托管-kestrel服务器"><span>进程外托管(Kestrel服务器)</span></a></h3><p>由于运行 <a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core 进程与 IIS 工作进程分开，<a href="http://xn--ASP-vs9dw89f.NET" target="_blank" rel="noopener noreferrer">所以ASP.NET</a> Core 模块会负责进程管理。<br><img src="`+h+`" alt="" loading="lazy"></p><blockquote><p>该图说明了 IIS、<a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core 模块和进程外托管的应用之间的关系</p></blockquote><p>进程外托管配置，在项目文件 ( .csproj) 中将 <code>&lt;AspNetCoreHostingModel&gt;</code> 属性的值设置为 OutOfProcess</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">PropertyGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">  &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">AspNetCoreHostingModel</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">OutOfProcess</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">AspNetCoreHostingModel</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">PropertyGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关于两种托管方式的差异：<a href="https://docs.microsoft.com/zh-cn/aspnet/core/host-and-deploy/iis/in-process-hosting?view=aspnetcore-5.0#differences-between-in-process-and-out-of-process-hosting" target="_blank" rel="noopener noreferrer">此处</a></p><h2 id="部署项目" tabindex="-1"><a class="header-anchor" href="#部署项目"><span>部署项目</span></a></h2><p>将项目进行发布，然后拷贝到我们的服务器一个文件夹内。<br> 打开IIS添加网站，选择物理路径为我们项目文件<br><img src="`+d+'" alt="image.png" loading="lazy"><br> 修改应用程序池为无托管模式<br><img src="'+g+'" alt="image.png" loading="lazy"><br> 启动程序转到swagger页面<br><img src="'+m+'" alt="image.png" loading="lazy"><br> 因为当前我并没有连接数据库，直接调用接口应该报错，我们看下错误日志。启动输出日志<br><img src="'+b+'" alt="image.png" loading="lazy"><br> 说明我们项目已经部署成功了<br><img src="'+k+'" alt="image.png" loading="lazy"><br> 如果出现了错误可以查看点此处查看常见错误解决方案：<a href="https://docs.microsoft.com/zh-cn/aspnet/core/test/troubleshoot-azure-iis?view=aspnetcore-5.0" target="_blank" rel="noopener noreferrer">此处</a></p><p>题外话：当初部署2.1版本时候，windows server 2012r2需要打好几个补丁，并且需要重启多次，没想到这次安装net5这么顺利(服务器是从朋友那借的，我自己的是linux)，<a href="http://xn--6qqt3c53chze7wdyxsm8i5w3ce6sp3qizp.net" target="_blank" rel="noopener noreferrer">如果你所在公司需要部署.net</a>，还是推荐linux进行部署。</p><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2><blockquote><p><a href="https://docs.microsoft.com/zh-cn/aspnet/core/host-and-deploy/iis/?view=aspnetcore-5.0" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/zh-cn/aspnet/core/host-and-deploy/iis/?view=aspnetcore-5.0</a></p></blockquote>',34)]))}const _=t(f,[["render",u],["__file","iisReleaseNet5.html.vue"]]),v=JSON.parse('{"path":"/dotnet/buildAndRelease/release/iis/iisReleaseNet5.html","title":"IIS部署.Net5","lang":"zh-CN","frontmatter":{"title":"IIS部署.Net5","lang":"zh-CN","date":"2023-04-22T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"iisbushu_net5","slug":"avyu27","docsId":"29455093","description":"介绍 Internet Information Services (IIS) 是一种灵活、安全且可管理的 Web 服务器，用于托管 Web 应用（包括 ASP.NET Core）。虽然我们的程序可以跨平台了，不过还是有些服务是部署在windows服务器下的，下面我们就从头开始部署下我们的程序到IIS. 本次示例环境：Windows Server 201...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/buildAndRelease/release/iis/iisReleaseNet5.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"IIS部署.Net5"}],["meta",{"property":"og:description","content":"介绍 Internet Information Services (IIS) 是一种灵活、安全且可管理的 Web 服务器，用于托管 Web 应用（包括 ASP.NET Core）。虽然我们的程序可以跨平台了，不过还是有些服务是部署在windows服务器下的，下面我们就从头开始部署下我们的程序到IIS. 本次示例环境：Windows Server 201..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1621430404995-81a66bf0-d43f-432c-931d-c9da9239912d.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-25T15:31:40.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-04-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-25T15:31:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"IIS部署.Net5\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1621430404995-81a66bf0-d43f-432c-931d-c9da9239912d.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621432192325-6321b024-3a82-47d8-8b2b-cd8d4fbe2e13.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621431500383-f3718698-75cb-4cc1-971f-a94987fd728a.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621432479264-a4ad0599-9c44-48f8-9f60-66e4b2e92c6f.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621432762660-7cbee968-8fb8-4506-a44c-86f91c08eca9.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621418975218-e1cf8916-d1b1-4478-ab06-27d68955f2cd.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621419731758-573dae98-6398-4ff8-b74e-3bed05092e05.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621434077105-2e447da1-5082-4ac9-87c2-a22c7bcf825c.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621434518735-f09c0f97-ea01-490a-be38-dbf59d5ab886.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621434688002-1abc9d39-c4a4-435c-88e8-5ff52ece4db7.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621434770504-dcf4f9c6-7481-496d-8cd1-0a02094edde8.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1621434890333-450eab2d-434a-491d-9b95-d68d1648662a.png\\"],\\"datePublished\\":\\"2023-04-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-25T15:31:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"安装环境","slug":"安装环境","link":"#安装环境","children":[{"level":3,"title":"支持平台","slug":"支持平台","link":"#支持平台","children":[]},{"level":3,"title":"安装ASP.NET Core托管捆绑包","slug":"安装asp-net-core托管捆绑包","link":"#安装asp-net-core托管捆绑包","children":[]}]},{"level":2,"title":"发布项目","slug":"发布项目","link":"#发布项目","children":[]},{"level":2,"title":"托管方式","slug":"托管方式","link":"#托管方式","children":[{"level":3,"title":"进程内托管(IIS HTTP 服务器)","slug":"进程内托管-iis-http-服务器","link":"#进程内托管-iis-http-服务器","children":[]},{"level":3,"title":"进程外托管(Kestrel服务器)","slug":"进程外托管-kestrel服务器","link":"#进程外托管-kestrel服务器","children":[]}]},{"level":2,"title":"部署项目","slug":"部署项目","link":"#部署项目","children":[]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1708875100000,"contributors":[{"name":"azrng","username":"azrng","email":"itzhangyunpeng@163.com","commits":4}]},"readingTime":{"minutes":3.72,"words":1116},"filePathRelative":"dotnet/buildAndRelease/release/iis/iisReleaseNet5.md","localizedDate":"2023年4月22日","excerpt":"<h2>介绍</h2>\\n<p>Internet Information Services (IIS) 是一种灵活、安全且可管理的 Web 服务器，用于托管 Web 应用（包括 <a href=\\"http://ASP.NET\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ASP.NET</a> Core）。虽然我们的程序可以跨平台了，不过还是有些服务是部署在windows服务器下的，下面我们就从头开始部署下我们的程序到IIS.</p>\\n<blockquote>\\n<p>本次示例环境：Windows Server 2012 R2 、vs2019、MySQL、.net5</p>\\n</blockquote>","autoDesc":true}');export{_ as comp,v as data};
