import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,o as r,b as e}from"./app-41nmD-Ik.js";const i={},n=e("h2",{id:"为什么grpc-支持流",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#为什么grpc-支持流"},[e("span",null,"为什么gRPC 支持流")])],-1),a=e("p",null,"gRPC 通信是基于 HTTP/2 实现的，它的双向流映射到 HTTP/2 流。HTTP/2 具有流的概念，流是为了实现HTTP/2的多路复用。流是服务器和客户端在HTTP/2连接内用于交换帧数据的独立双向序列，逻辑上可看做一个较为完整的交互处理单元，即表达一次完整的资源请求、响应数据交换流程；一个业务处理单元，在一个流内进行处理完毕，这个流生命周期完结。 特点如下：",-1),o=e("ul",null,[e("li",null,"一个HTTP/2连接可同时保持多个打开的流，任一端点交换帧"),e("li",null,"流可被客户端或服务器单独或共享创建和使用"),e("li",null,"流可被任一端关闭"),e("li",null,"在流内发送和接收数据都要按照顺序"),e("li",null,"流的标识符自然数表示，1~2^31-1区间，有创建流的终端分配"),e("li",null,"流与流之间逻辑上是并行、独立存在")],-1),c=[n,a,o];function p(g,T){return r(),l("div",null,c)}const s=t(i,[["render",p],["__file","grpcliu.html.vue"]]),u=JSON.parse('{"path":"/middleware/grpc/grpcliu.html","title":"gRPC 流","lang":"zh-CN","frontmatter":{"title":"gRPC 流","lang":"zh-CN","date":"2023-09-12T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"grpcliu","slug":"kvrcdk","docsId":"29772641","description":"为什么gRPC 支持流 gRPC 通信是基于 HTTP/2 实现的，它的双向流映射到 HTTP/2 流。HTTP/2 具有流的概念，流是为了实现HTTP/2的多路复用。流是服务器和客户端在HTTP/2连接内用于交换帧数据的独立双向序列，逻辑上可看做一个较为完整的交互处理单元，即表达一次完整的资源请求、响应数据交换流程；一个业务处理单元，在一个流内进行处...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/grpc/grpcliu.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"gRPC 流"}],["meta",{"property":"og:description","content":"为什么gRPC 支持流 gRPC 通信是基于 HTTP/2 实现的，它的双向流映射到 HTTP/2 流。HTTP/2 具有流的概念，流是为了实现HTTP/2的多路复用。流是服务器和客户端在HTTP/2连接内用于交换帧数据的独立双向序列，逻辑上可看做一个较为完整的交互处理单元，即表达一次完整的资源请求、响应数据交换流程；一个业务处理单元，在一个流内进行处..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"gRPC 流\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"为什么gRPC 支持流","slug":"为什么grpc-支持流","link":"#为什么grpc-支持流","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.93,"words":278},"filePathRelative":"middleware/grpc/grpcliu.md","localizedDate":"2023年9月12日","excerpt":"<h2>为什么gRPC 支持流</h2>\\n<p>gRPC 通信是基于 HTTP/2 实现的，它的双向流映射到 HTTP/2 流。HTTP/2 具有流的概念，流是为了实现HTTP/2的多路复用。流是服务器和客户端在HTTP/2连接内用于交换帧数据的独立双向序列，逻辑上可看做一个较为完整的交互处理单元，即表达一次完整的资源请求、响应数据交换流程；一个业务处理单元，在一个流内进行处理完毕，这个流生命周期完结。\\n特点如下：</p>\\n<ul>\\n<li>一个HTTP/2连接可同时保持多个打开的流，任一端点交换帧</li>\\n<li>流可被客户端或服务器单独或共享创建和使用</li>\\n<li>流可被任一端关闭</li>\\n<li>在流内发送和接收数据都要按照顺序</li>\\n<li>流的标识符自然数表示，1~2^31-1区间，有创建流的终端分配</li>\\n<li>流与流之间逻辑上是并行、独立存在</li>\\n</ul>","autoDesc":true}');export{s as comp,u as data};
