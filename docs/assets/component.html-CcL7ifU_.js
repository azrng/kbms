import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as r,d as n}from"./app-CVCmcd0Y.js";const o={},a=n('<h2 id="模板组件" tabindex="-1"><a class="header-anchor" href="#模板组件"><span>模板组件</span></a></h2><p>模板组件可跨多个应用重复使用，为 UI 元素自定义提供经过尝试和测试的布局和逻辑的基础。 模板组件定义常见元素并将其应用于所有页面，从而跨 Web 应用应用标准化设计。 模板可以简化更新（例如品牌重塑），因为只需在中心模板位置进行修改。</p><h3 id="renderfragment-类型" tabindex="-1"><a class="header-anchor" href="#renderfragment-类型"><span>RenderFragment 类型</span></a></h3><p>模板组件为一个或多个 HTML 标记片段提供布局和逻辑。 HTML 使用模板组件提供的上下文呈现。 模板组件使用 <a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.aspnetcore.components.renderfragment" target="_blank" rel="noopener noreferrer">RenderFragment</a> 对象作为占位符，在运行时将标记插入其中。</p><p>模板只是一个普通的 Razor 组件。 若要使用模板，使用组件会像引用任何其他组件一样引用模板。 名称 <code>ChildContent</code> 是 <code>RenderFragment</code> 参数的默认名称。 可以为参数指定不同的名称。</p><h3 id="泛型-renderfragment-t-参数" tabindex="-1"><a class="header-anchor" href="#泛型-renderfragment-t-参数"><span>泛型 <code>RenderFragment&lt;T&gt;</code> 参数</span></a></h3><p>默认情况下，<code>RenderFragment</code> 类充当 HTML 标记块的占位符。 但是，你可以使用泛型类型 <a href="https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.aspnetcore.components.renderfragment-1" target="_blank" rel="noopener noreferrer">RenderFragment</a> 通过类型参数呈现其他类型的内容，并提供逻辑来处理模板组件中的指定类型。</p><p>例如，假设你要创建一个模板来显示集合中的项。 可以使用 C# <code>foreach</code> 循环来循环访问集合并显示找到的项目。 但是该集合可能包含任何类型的数据，因此需要一种呈现每个项的通用方法。</p><p>若要编写泛型类型模板组件，需要在模板组件本身和模板的使用组件中指定类型参数。 以下列表表示泛型类型模板组件的常见特征。</p><ul><li>模板组件中的类型参数是使用 <code>@typeparam</code> 指令引入的。 如有必要，一个模板组件可以有多个类型参数。</li><li>模板可能会定义一个参数，该参数包含由类型参数所指定类型的可枚举对象集合。</li><li>模板还根据采用相同类型参数的泛型 <code>RenderFragment</code> 类型定义 <code>ChildContent</code> 参数。</li></ul><p>有关详细信息，请参阅 <a href="https://learn.microsoft.com/zh-cn/aspnet/core/blazor/components/templated-components" target="_blank" rel="noopener noreferrer">ASP.NET Core Blazor 模板化组件</a>。</p>',11),c=[a];function p(m,d){return r(),t("div",null,c)}const s=e(o,[["render",p],["__file","component.html.vue"]]),h=JSON.parse('{"path":"/web/blazor/baseOperator/component.html","title":"组件","lang":"zh-CN","frontmatter":{"title":"组件","lang":"zh-CN","date":"2023-12-14T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":false,"category":["dotNET"],"tag":["blazor","component"],"description":"模板组件 模板组件可跨多个应用重复使用，为 UI 元素自定义提供经过尝试和测试的布局和逻辑的基础。 模板组件定义常见元素并将其应用于所有页面，从而跨 Web 应用应用标准化设计。 模板可以简化更新（例如品牌重塑），因为只需在中心模板位置进行修改。 RenderFragment 类型 模板组件为一个或多个 HTML 标记片段提供布局和逻辑。 HTML 使...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/web/blazor/baseOperator/component.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"组件"}],["meta",{"property":"og:description","content":"模板组件 模板组件可跨多个应用重复使用，为 UI 元素自定义提供经过尝试和测试的布局和逻辑的基础。 模板组件定义常见元素并将其应用于所有页面，从而跨 Web 应用应用标准化设计。 模板可以简化更新（例如品牌重塑），因为只需在中心模板位置进行修改。 RenderFragment 类型 模板组件为一个或多个 HTML 标记片段提供布局和逻辑。 HTML 使..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-14T15:21:58.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"blazor"}],["meta",{"property":"article:tag","content":"component"}],["meta",{"property":"article:published_time","content":"2023-12-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-14T15:21:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"组件\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-14T15:21:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"模板组件","slug":"模板组件","link":"#模板组件","children":[{"level":3,"title":"RenderFragment 类型","slug":"renderfragment-类型","link":"#renderfragment-类型","children":[]},{"level":3,"title":"泛型 RenderFragment<T> 参数","slug":"泛型-renderfragment-t-参数","link":"#泛型-renderfragment-t-参数","children":[]}]}],"git":{"createdTime":1702567318000,"updatedTime":1702567318000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.92,"words":575},"filePathRelative":"web/blazor/baseOperator/component.md","localizedDate":"2023年12月14日","excerpt":"<h2>模板组件</h2>\\n<p>模板组件可跨多个应用重复使用，为 UI 元素自定义提供经过尝试和测试的布局和逻辑的基础。 模板组件定义常见元素并将其应用于所有页面，从而跨 Web 应用应用标准化设计。 模板可以简化更新（例如品牌重塑），因为只需在中心模板位置进行修改。</p>\\n<h3>RenderFragment 类型</h3>\\n<p>模板组件为一个或多个 HTML 标记片段提供布局和逻辑。 HTML 使用模板组件提供的上下文呈现。 模板组件使用 <a href=\\"https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.aspnetcore.components.renderfragment\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">RenderFragment</a> 对象作为占位符，在运行时将标记插入其中。</p>","autoDesc":true}');export{s as comp,h as data};
