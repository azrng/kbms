import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as e,d as s}from"./app-CF6xeyXt.js";const i="/kbms/common/1614391773548-22ed7b2d-b418-435d-aae7-869f758788ea.png",t="/kbms/common/1614391773546-005b786b-9868-41a6-8c8b-888682d943ea.png",l="/kbms/common/1614391773557-d1bbbcb7-7a90-428c-b22a-cb60c024277c.png",c="/kbms/common/1614391773548-a73efcfc-6865-48ab-85ed-4f35b964f4a4.png",o="/kbms/common/1614391773546-2840406d-3c79-45c0-862a-64d08f60a502.png",m="/kbms/common/1614391773566-3aa148a5-2cb5-4af5-951f-ad22de23fc2f.png",g="/kbms/common/1614391797355-50bc7202-eb28-4d57-85e0-014f7ea5c49c.png",r="/kbms/common/1614391797353-a5c7dd32-100a-42af-9311-351b43ed5204.png",p="/kbms/common/1614391797355-ec66fd0c-7805-441f-8963-bc353cb06c66.png",d="/kbms/common/1614391797346-6cc9f8f1-cb7f-4cc6-94f5-689c90784982.png",h="/kbms/common/1614391797349-745ea01d-2ed4-48da-b58d-2b86e9795887.png",b="/kbms/common/1614391797355-8ddba0e0-8a37-4eef-a057-8bf749378524.png",k="/kbms/common/1614391823555-624ed0f0-c89c-4a58-b43a-f4f0cb94c722.png",f="/kbms/common/1614391823530-4ba75428-d893-4ee5-9252-a8d02476431c.png",y="/kbms/common/1614391823523-aa242057-fd46-42f1-a350-7cbf5fa7eb0c.png",u={},_=s('<p>首先要安装好netcore运行环境 现在我们已经发布好了项目，并且压缩为tar格式 <img src="'+i+'" alt="image.png" loading="lazy"> 创建netcore文件夹 命令：mkdir netcore 上传到netcore目录下，使用rz <img src="'+t+'" alt="image.png" loading="lazy"> 然后解压到当前目录 命令：tar -xvf TestNetcore3.tar <img src="'+l+'" alt="image.png" loading="lazy"> 查看目录 <img src="'+c+'" alt="image.png" loading="lazy"> 现在我们进入到TestNetcore3文件夹里面去运行项目 <img src="'+o+'" alt="image.png" loading="lazy"> 或者是 没有错误，但是也没有上面监听的东西 然后去内部访问一下这个端口 <img src="'+m+'" alt="image.png" loading="lazy"> 是我们刚才创建的项目，那么我们外部访问下 访问不同，这个时候我们应该使用Nginx 安装步骤： 第一步：sudo yum install epel-release 第二步：sudo yum install nginx 第三步：启动 sudo systemctl start nginx 设置nginx开始启动：systemctl enable nginx 第一步：sudo yum install epel-release 第二步：sudo yum install nginx 第三步：启动 sudo systemctl start nginx 设置nginx开始启动：systemctl enable nginx 其他命令： systemctl disable nginx   #禁止开机启动 systemctl status nginx     #查看运行状态 systemctl restart nginx    #重启服务 在浏览器上输入Nginx所在服务器的IP地址，可以看到欢迎页表示安装成功，如果无法访问可以检查下安装Nginx步骤或者防火墙之类的。 If you are running a firewall, run the following commands to allow HTTP and HTTPS traffic: 如果有运行防火墙，那需要允许http和https的通道访问，运行下面三个命令： sudo firewall-cmd --permanent --zone=public --add-service=http  sudo firewall-cmd --permanent --zone=public --add-service=https sudo firewall-cmd --reload <img src="'+g+'" alt="image.png" loading="lazy"> 下一步我们需要去监听5000端口 当前我们是在root文件夹下，我们需要进入etc/nginx目录，所以我们需要先访问上层 <img src="'+r+'" alt="image.png" loading="lazy"> 然后进入指定的目录文件夹中 命令：cd  /etc/nginx <img src="'+p+'" alt="image.png" loading="lazy"> 进入conf.d 命令：cd conf.d/ <img src="'+d+'" alt="image.png" loading="lazy"> Netcore.conf是我们的第一个网站，现在我们需要重新创建一个 <img src="'+h+'" alt="image.png" loading="lazy"> 然后编辑netcore2.conf，使用vim编辑，可能需要安装（yum -y install vim） <img src="'+b+`" alt="image.png" loading="lazy"> 在里面加入：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">	listen</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 9090</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">	location</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">	proxy_pass</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> http</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//localhost:5000;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">	proxy_http_version</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">	proxy_set_header</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">http_upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">	proxy_set_header</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Connection</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> keep</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">alive</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">	proxy_set_header</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Host</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">host</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">	proxy_cache_bypass</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">http_upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">	} </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后查看下 <img src="`+k+'" alt="image.png" loading="lazy"> 然后修改为立即生效nginx -s reload 或者systemctl restart nginx #重启服务 <img src="'+f+'" alt="image.png" loading="lazy"> 然后再次访问 <img src="'+y+'" alt="image.png" loading="lazy"> 但是那个命令nginx -s reload有时候不生效，需要systemctl restart nginx或者杀死进程重新启用 杀死进程:     设置程序后台运行：nohup  dotnet QuartzWeb.dll  &amp;       资料来源：<a href="https://www.cnblogs.com/waynechan/p/9437934.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/waynechan/p/9437934.html</a>   错误解决：<a href="https://blog.csdn.net/quanqxj/article/details/89375436" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/quanqxj/article/details/89375436</a></p>',3),x=[_];function z(E,v){return e(),a("div",null,x)}const w=n(u,[["render",z],["__file","centosbushuwebxiangmu.html.vue"]]),T=JSON.parse('{"path":"/dotnet/buildAndRelease/release/linux/centosbushuwebxiangmu.html","title":"Centos部署web项目","lang":"zh-CN","frontmatter":{"title":"Centos部署web项目","lang":"zh-CN","date":"2022-08-15T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"centosbushuwebxiangmu","slug":"vblksx","docsId":"32029582","description":"首先要安装好netcore运行环境 现在我们已经发布好了项目，并且压缩为tar格式 image.png 创建netcore文件夹 命令：mkdir netcore 上传到netcore目录下，使用rz image.png 然后解压到当前目录 命令：tar -xvf TestNetcore3.tar image.png 查看目录 image.png 现在...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/buildAndRelease/release/linux/centosbushuwebxiangmu.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Centos部署web项目"}],["meta",{"property":"og:description","content":"首先要安装好netcore运行环境 现在我们已经发布好了项目，并且压缩为tar格式 image.png 创建netcore文件夹 命令：mkdir netcore 上传到netcore目录下，使用rz image.png 然后解压到当前目录 命令：tar -xvf TestNetcore3.tar image.png 查看目录 image.png 现在..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1614391773548-22ed7b2d-b418-435d-aae7-869f758788ea.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-25T15:31:40.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-08-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-25T15:31:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Centos部署web项目\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1614391773548-22ed7b2d-b418-435d-aae7-869f758788ea.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1614391773546-005b786b-9868-41a6-8c8b-888682d943ea.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1614391773557-d1bbbcb7-7a90-428c-b22a-cb60c024277c.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1614391773548-a73efcfc-6865-48ab-85ed-4f35b964f4a4.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1614391773546-2840406d-3c79-45c0-862a-64d08f60a502.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1614391773566-3aa148a5-2cb5-4af5-951f-ad22de23fc2f.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1614391797355-50bc7202-eb28-4d57-85e0-014f7ea5c49c.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1614391797353-a5c7dd32-100a-42af-9311-351b43ed5204.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1614391797355-ec66fd0c-7805-441f-8963-bc353cb06c66.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1614391797346-6cc9f8f1-cb7f-4cc6-94f5-689c90784982.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1614391797349-745ea01d-2ed4-48da-b58d-2b86e9795887.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1614391797355-8ddba0e0-8a37-4eef-a057-8bf749378524.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1614391823555-624ed0f0-c89c-4a58-b43a-f4f0cb94c722.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1614391823530-4ba75428-d893-4ee5-9252-a8d02476431c.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1614391823523-aa242057-fd46-42f1-a350-7cbf5fa7eb0c.png\\"],\\"datePublished\\":\\"2022-08-15T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-25T15:31:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[],"git":{"createdTime":1697962303000,"updatedTime":1708875100000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":2.47,"words":742},"filePathRelative":"dotnet/buildAndRelease/release/linux/centosbushuwebxiangmu.md","localizedDate":"2022年8月15日","excerpt":"<p>首先要安装好netcore运行环境\\n现在我们已经发布好了项目，并且压缩为tar格式\\n<img src=\\"/common/1614391773548-22ed7b2d-b418-435d-aae7-869f758788ea.png\\" alt=\\"image.png\\" loading=\\"lazy\\">\\n创建netcore文件夹\\n命令：mkdir netcore\\n上传到netcore目录下，使用rz\\n<img src=\\"/common/1614391773546-005b786b-9868-41a6-8c8b-888682d943ea.png\\" alt=\\"image.png\\" loading=\\"lazy\\">\\n然后解压到当前目录\\n命令：tar -xvf TestNetcore3.tar\\n<img src=\\"/common/1614391773557-d1bbbcb7-7a90-428c-b22a-cb60c024277c.png\\" alt=\\"image.png\\" loading=\\"lazy\\">\\n查看目录\\n<img src=\\"/common/1614391773548-a73efcfc-6865-48ab-85ed-4f35b964f4a4.png\\" alt=\\"image.png\\" loading=\\"lazy\\">\\n现在我们进入到TestNetcore3文件夹里面去运行项目\\n<img src=\\"/common/1614391773546-2840406d-3c79-45c0-862a-64d08f60a502.png\\" alt=\\"image.png\\" loading=\\"lazy\\">\\n或者是\\n没有错误，但是也没有上面监听的东西\\n然后去内部访问一下这个端口\\n<img src=\\"/common/1614391773566-3aa148a5-2cb5-4af5-951f-ad22de23fc2f.png\\" alt=\\"image.png\\" loading=\\"lazy\\">\\n是我们刚才创建的项目，那么我们外部访问下\\n访问不同，这个时候我们应该使用Nginx\\n安装步骤：\\n第一步：sudo yum install epel-release\\n第二步：sudo yum install nginx\\n第三步：启动 sudo systemctl start nginx\\n设置nginx开始启动：systemctl enable nginx\\n第一步：sudo yum install epel-release\\n第二步：sudo yum install nginx\\n第三步：启动 sudo systemctl start nginx\\n设置nginx开始启动：systemctl enable nginx\\n其他命令：\\nsystemctl disable nginx&nbsp;&nbsp; #禁止开机启动\\nsystemctl status nginx&nbsp;&nbsp;&nbsp;&nbsp; #查看运行状态\\nsystemctl restart nginx&nbsp;&nbsp;&nbsp; #重启服务\\n在浏览器上输入Nginx所在服务器的IP地址，可以看到欢迎页表示安装成功，如果无法访问可以检查下安装Nginx步骤或者防火墙之类的。\\nIf you are running a firewall, run the following commands to allow HTTP and HTTPS traffic:\\n如果有运行防火墙，那需要允许http和https的通道访问，运行下面三个命令：\\nsudo firewall-cmd --permanent --zone=public --add-service=http&nbsp;\\nsudo firewall-cmd --permanent --zone=public --add-service=https\\nsudo firewall-cmd --reload\\n<img src=\\"/common/1614391797355-50bc7202-eb28-4d57-85e0-014f7ea5c49c.png\\" alt=\\"image.png\\" loading=\\"lazy\\">\\n下一步我们需要去监听5000端口\\n当前我们是在root文件夹下，我们需要进入etc/nginx目录，所以我们需要先访问上层\\n<img src=\\"/common/1614391797353-a5c7dd32-100a-42af-9311-351b43ed5204.png\\" alt=\\"image.png\\" loading=\\"lazy\\">\\n然后进入指定的目录文件夹中\\n命令：cd&nbsp; /etc/nginx\\n<img src=\\"/common/1614391797355-ec66fd0c-7805-441f-8963-bc353cb06c66.png\\" alt=\\"image.png\\" loading=\\"lazy\\">\\n进入conf.d\\n命令：cd conf.d/\\n<img src=\\"/common/1614391797346-6cc9f8f1-cb7f-4cc6-94f5-689c90784982.png\\" alt=\\"image.png\\" loading=\\"lazy\\">\\nNetcore.conf是我们的第一个网站，现在我们需要重新创建一个\\n<img src=\\"/common/1614391797349-745ea01d-2ed4-48da-b58d-2b86e9795887.png\\" alt=\\"image.png\\" loading=\\"lazy\\">\\n然后编辑netcore2.conf，使用vim编辑，可能需要安装（yum -y install vim）\\n<img src=\\"/common/1614391797355-8ddba0e0-8a37-4eef-a057-8bf749378524.png\\" alt=\\"image.png\\" loading=\\"lazy\\">\\n在里面加入：</p>","autoDesc":true}');export{w as comp,T as data};
