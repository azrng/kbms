import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as a,c as r,a as e,d as t,e as o,b as i}from"./app-Bw62I61B.js";const p="/kbms/common/202307192041571.png",m="/kbms/common/202307192114367.png",c="/kbms/common/202307192116189.png",d="/kbms/common/202307192046676.png",u="/kbms/common/202307192046043.png",g="/kbms/common/202307192047446.png",_="/kbms/common/202307192102974.png",h="/kbms/common/202307192104434.png",b="/kbms/common/202307192106691.png",f="/kbms/common/202307192108396.png",v="/kbms/common/202307192109869.png",k="/kbms/common/202307192109933.png",S="/kbms/common/202307192120414.png",y="/kbms/common/202307192124443.png",I="/kbms/common/202307192127058.png",z="/kbms/common/202307192129566.png",x="/kbms/common/202307192130712.png",q="/kbms/common/202307192143785.png",N="/kbms/common/202307192145387.png",A={},T=e("h2",{id:"摘要",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#摘要"},[e("span",null,"摘要")])],-1),D=e("p",null,"很多C/S开发领域的同学或多或少都可能会遇到需要制作安装包的场景，打包的工具也是五花八门，例如有NSIS、InstallShield、Wix Toolset、ClickOnce等等，这里以Inno Setup为例简单演示下如何构建安装包，以及在Visual Studio中编译程序时自动去构建这个安装包。",-1),C=e("h2",{id:"操作演示",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#操作演示"},[e("span",null,"操作演示")])],-1),M=e("p",null,"Tips：如果是想自动化构建，建议先从文章尾部开始看起，前面只是简单演示如何手动构建",-1),V={href:"https://jrsoftware.org/isdl.php",target:"_blank",rel:"noopener noreferrer"},w={href:"/common/202307192041571.png",target:"_blank",rel:"noopener noreferrer"},E=e("img",{src:p,alt:"image-20230719204144401",tabindex:"0",loading:"lazy"},null,-1),O=e("figcaption",null,"image-20230719204144401",-1),F={href:"https://jrsoftware.org/files/istrans/",target:"_blank",rel:"noopener noreferrer"},R={href:"/common/202307192114367.png",target:"_blank",rel:"noopener noreferrer"},L=e("img",{src:m,alt:"image-20230719211435241",tabindex:"0",loading:"lazy"},null,-1),P=e("figcaption",null,"image-20230719211435241",-1),U=e("p",null,"下载完手动放进Inno Setup安装目录下的Languages下即可",-1),B={href:"/common/202307192116189.png",target:"_blank",rel:"noopener noreferrer"},j=e("img",{src:c,alt:"image-20230719211634130",tabindex:"0",loading:"lazy"},null,-1),G=e("figcaption",null,"image-20230719211634130",-1),W=e("p",null,"2、创建打包项目",-1),Z={href:"/common/202307192046676.png",target:"_blank",rel:"noopener noreferrer"},$=e("img",{src:d,alt:"image-20230719204600561",tabindex:"0",loading:"lazy"},null,-1),J=e("figcaption",null,"image-20230719204600561",-1),K=e("p",null,"3、填写应用基本信息",-1),H={href:"/common/202307192046043.png",target:"_blank",rel:"noopener noreferrer"},Q=e("img",{src:u,alt:"image-20230719204650988",tabindex:"0",loading:"lazy"},null,-1),X=e("figcaption",null,"image-20230719204650988",-1),Y=e("p",null,"4、填写应用安装目录",-1),ee={href:"/common/202307192047446.png",target:"_blank",rel:"noopener noreferrer"},ne=e("img",{src:g,alt:"image-20230719204733394",tabindex:"0",loading:"lazy"},null,-1),oe=e("figcaption",null,"image-20230719204733394",-1),te=e("p",null,"5、在VS中右键项目属性，更改项目输出路径，有多个项目则都改为同一个",-1),ie={href:"/common/202307192102974.png",target:"_blank",rel:"noopener noreferrer"},se=e("img",{src:_,alt:"image-20230719210202893",tabindex:"0",loading:"lazy"},null,-1),le=e("figcaption",null,"image-20230719210202893",-1),ae=e("p",null,"6、选择应用需要打包的文件",-1),re={href:"/common/202307192104434.png",target:"_blank",rel:"noopener noreferrer"},pe=e("img",{src:h,alt:"image-20230719210432376",tabindex:"0",loading:"lazy"},null,-1),me=e("figcaption",null,"image-20230719210432376",-1),ce=e("p",null,"Application main executable file:应用程序主程序",-1),de=e("p",null,"Other application files:主程序所依赖的项目或第三方依赖等，这里建议直接选择输出目录",-1),ue=e("p",null,"7、应用文件类型关联",-1),ge={href:"/common/202307192106691.png",target:"_blank",rel:"noopener noreferrer"},_e=e("img",{src:b,alt:"image-20230719210650630",tabindex:"0",loading:"lazy"},null,-1),he=e("figcaption",null,"image-20230719210650630",-1),be=e("p",null,"若你程序用不上这个功能一般不用勾选",-1),fe=e("p",null,"8、应用程序快捷方式创建",-1),ve={href:"/common/202307192108396.png",target:"_blank",rel:"noopener noreferrer"},ke=e("img",{src:f,alt:"image-20230719210828337",tabindex:"0",loading:"lazy"},null,-1),Se=e("figcaption",null,"image-20230719210828337",-1),ye=e("p",null,"9、应用协议许可文件",-1),Ie={href:"/common/202307192109869.png",target:"_blank",rel:"noopener noreferrer"},ze=e("img",{src:v,alt:"image-20230719210924816",tabindex:"0",loading:"lazy"},null,-1),xe=e("figcaption",null,"image-20230719210924816",-1),qe=e("p",null,"10、安装模式选择",-1),Ne={href:"/common/202307192109933.png",target:"_blank",rel:"noopener noreferrer"},Ae=e("img",{src:k,alt:"image-20230719210939884",tabindex:"0",loading:"lazy"},null,-1),Te=e("figcaption",null,"image-20230719210939884",-1),De=e("p",null,"11、安装包语言选择",-1),Ce={href:"/common/202307192120414.png",target:"_blank",rel:"noopener noreferrer"},Me=e("img",{src:S,alt:"image-20230719212029357",tabindex:"0",loading:"lazy"},null,-1),Ve=e("figcaption",null,"image-20230719212029357",-1),we={href:"https://jrsoftware.org/files/istrans/",target:"_blank",rel:"noopener noreferrer"},Ee=e("p",null,"12、安装包设置",-1),Oe={href:"/common/202307192124443.png",target:"_blank",rel:"noopener noreferrer"},Fe=e("img",{src:y,alt:"image-20230719212442389",tabindex:"0",loading:"lazy"},null,-1),Re=e("figcaption",null,"image-20230719212442389",-1),Le=e("p",null,"13、设置完了就会生成一个脚本",-1),Pe={href:"/common/202307192127058.png",target:"_blank",rel:"noopener noreferrer"},Ue=e("img",{src:I,alt:"image-20230719212730969",tabindex:"0",loading:"lazy"},null,-1),Be=e("figcaption",null,"image-20230719212730969",-1),je=e("p",null,"14、编译完成，则会在目录生成一个exe文件，双击就可以进行安装",-1),Ge={href:"/common/202307192129566.png",target:"_blank",rel:"noopener noreferrer"},We=e("img",{src:z,alt:"image-20230719212951486",tabindex:"0",loading:"lazy"},null,-1),Ze=e("figcaption",null,"image-20230719212951486",-1),$e=e("p",null,"15、安装效果",-1),Je={href:"/common/202307192130712.png",target:"_blank",rel:"noopener noreferrer"},Ke=e("img",{src:x,alt:"image-20230719213038649",tabindex:"0",loading:"lazy"},null,-1),He=e("figcaption",null,"image-20230719213038649",-1),Qe=i(`<p>至此，一个简易的安装包制作完成。</p><p>但....这并不是本篇的主题。显而易见，如果每次程序有改动，就需要去Inno Setup的编辑器手动执行编译一下生成安装包，有些繁琐。</p><h2 id="自动化构建安装包" tabindex="-1"><a class="header-anchor" href="#自动化构建安装包"><span>自动化构建安装包</span></a></h2><p>1、修改刚才创建安装包时生成的脚本文件，主要是将绝对路径改为相对路径以及自动获取主程序文件版本等，避免其它同事/电脑编译时报错，可以参考下我的脚本</p><div class="language-c# line-numbers-mode" data-ext="c#" data-title="c#"><pre class="language-c#"><code>; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName &quot;傲慢与偏见&quot;
#define MyAppPublisher &quot;版权信息&quot;
#define MyAppURL &quot;https://www.cnblogs.com/chonglu&quot;
#define MyAppExeName &quot;InnoStepSample.exe&quot;
#define MyAppVersion GetVersionNumbersString(&quot;..\\output\\InnoStepSample.exe&quot;)

[Setup]
; #define MyAppVersion GetVersionNumbersString(&quot;..\\output\\InnoStepSample.exe&quot;)
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{72EC6D66-B10E-4E61-920F-86852D3FFA91}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\\KJT
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename=KJTStep
SetupIconFile=AppICon.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern
OutputDir=..\\Publish

[Languages]
Name: &quot;Chinese&quot;; MessagesFile: &quot;compiler:Languages\\中文简体.isl&quot;

[Files]
Source: &quot;..\\bin\\{#MyAppExeName}&quot;; DestDir: &quot;{app}&quot;; Flags: ignoreversion
Source: &quot;..\\bin\\*&quot;; DestDir: &quot;{app}&quot;; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don&#39;t use &quot;Flags: ignoreversion&quot; on any shared system files

[Icons]
Name: &quot;{group}\\{#MyAppName}&quot;; Filename: &quot;{app}\\{#MyAppExeName}&quot;

[Run]
Filename: &quot;{app}\\{#MyAppExeName}&quot;; Description: &quot;{cm:LaunchProgram,{#StringChange(MyAppName, &#39;&amp;&#39;, &#39;&amp;&amp;&#39;)}}&quot;; Flags: nowait postinstall skipifsilent
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、把InnoStep的安装目录拷贝一下放到工程目录，里面有些无用的可以删掉，减小体积，可以参考以下</p>`,6),Xe={href:"/common/202307192143785.png",target:"_blank",rel:"noopener noreferrer"},Ye=e("img",{src:q,alt:"image-20230719214313689",tabindex:"0",loading:"lazy"},null,-1),en=e("figcaption",null,"image-20230719214313689",-1),nn=e("p",null,"3、设置项目主程序生成后事件",-1),on={href:"/common/202307192145387.png",target:"_blank",rel:"noopener noreferrer"},tn=e("img",{src:N,alt:"image-20230719214534299",tabindex:"0",loading:"lazy"},null,-1),sn=e("figcaption",null,"image-20230719214534299",-1),ln=i(`<p>参考命令：</p><div class="language-c# line-numbers-mode" data-ext="c#" data-title="c#"><pre class="language-c#"><code>IF &quot;$(ConfigurationName)&quot; == &quot;Release&quot; (
    &quot;$(SolutionDir)DevOps\\InnoSetup\\ISCC.exe&quot; &quot;$(SolutionDir)DevOps\\InnoSetup\\InnoStepSample.iss&quot;
    start explorer /select,&quot;$(SolutionDir)DevOps\\Publish\\&quot;
)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为防止影响调试，可以加个判断，只有Release模式编译项目则执行命令，该命令的意思就是通过调用解决方案下的ISCC程序传入安装包脚本从而构建编译出一个最新的安装包，最后再调起文件资源管理器打开安装包目录</p><h2 id="效果演示" tabindex="-1"><a class="header-anchor" href="#效果演示"><span>效果演示</span></a></h2><p>每次需要发布新版本时，将解决方案切换为Release模式编译，F6 Build一下，安装包就自动生成出来了，这里只是抛砖引玉给个思路，可以多阅读下官方文档实现出更为完美的安装包。</p><p>Tips：为避免编写代码调试时编译速度过慢，最好还是要在生成后事件中加上Release模式的判断，当解决方案中有很多个项目时，或编译目录依赖文件过多的情况下，InnoStep构建的会有点慢。</p><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语"><span>结语</span></a></h2><p>Visual Studio中的生成事件其实是一个很实用的东西，可以在编译前编译后自动化执行一些经常需要人为手工操作的事，比如还可以利用生成后事件进行代码混淆，本篇文章就暂时不展开细说了。</p><p>如果在实际操作中遇到错误或有疑问以及更好的建议可以在评论中交流..</p><h2 id="附录" tabindex="-1"><a class="header-anchor" href="#附录"><span>附录</span></a></h2><p>InnoStep官网：https://jrsoftware.org/</p><p>InnoStep编辑器：https://jrsoftware.org/isdl.php</p><p>InnoStep语言包：https://jrsoftware.org/files/istrans/</p><p>InnoStep文档：https://jrsoftware.org/ishelp/</p><h2 id="作者信息" tabindex="-1"><a class="header-anchor" href="#作者信息"><span>作者信息</span></a></h2><p>作者：傲慢与偏见</p><p>出处：https://www.cnblogs.com/chonglu/p/17566940.html</p>`,17),an={href:"https://creativecommons.org/licenses/by-nc-sa/4.0/",target:"_blank",rel:"noopener noreferrer"};function rn(pn,mn){const n=l("ExternalLinkIcon");return a(),r("div",null,[T,D,C,M,e("p",null,[t("1、去官网下载Inno Setup打包工具 "),e("a",V,[t("Inno Setup Downloads"),o(n)])]),e("figure",null,[e("a",w,[E,o(n)]),O]),e("p",null,[t("如果有中文需求，则需下载个中文包，下载地址："),e("a",F,[t("Inno Setup Translations"),o(n)])]),e("figure",null,[e("a",R,[L,o(n)]),P]),U,e("figure",null,[e("a",B,[j,o(n)]),G]),W,e("figure",null,[e("a",Z,[$,o(n)]),J]),K,e("figure",null,[e("a",H,[Q,o(n)]),X]),Y,e("figure",null,[e("a",ee,[ne,o(n)]),oe]),te,e("figure",null,[e("a",ie,[se,o(n)]),le]),ae,e("figure",null,[e("a",re,[pe,o(n)]),me]),ce,de,ue,e("figure",null,[e("a",ge,[_e,o(n)]),he]),be,fe,e("figure",null,[e("a",ve,[ke,o(n)]),Se]),ye,e("figure",null,[e("a",Ie,[ze,o(n)]),xe]),qe,e("figure",null,[e("a",Ne,[Ae,o(n)]),Te]),De,e("figure",null,[e("a",Ce,[Me,o(n)]),Ve]),e("p",null,[t("官方默认是不提供中文语言包的，但官网上有第三方用户提供和维护了中文包，有需要的可以在 "),e("a",we,[t("Inno Setup Translations"),o(n)]),t("下载，然后手动放进InnoSetup安装目录下的Languages下即可")]),Ee,e("figure",null,[e("a",Oe,[Fe,o(n)]),Re]),Le,e("figure",null,[e("a",Pe,[Ue,o(n)]),Be]),je,e("figure",null,[e("a",Ge,[We,o(n)]),Ze]),$e,e("figure",null,[e("a",Je,[Ke,o(n)]),He]),Qe,e("figure",null,[e("a",Xe,[Ye,o(n)]),en]),nn,e("figure",null,[e("a",on,[tn,o(n)]),sn]),ln,e("p",null,[t("版权：本作品采用「"),e("a",an,[t("署名-非商业性使用-相同方式共享 4.0 国际"),o(n)]),t("」许可协议进行许可。")])])}const un=s(A,[["render",rn],["__file","InnoSetupBuild.html.vue"]]),gn=JSON.parse('{"path":"/dotnet/zhuomianchengxu/dabaobushu/InnoSetupBuild.html","title":"利用InnoSetup在VS编译时自动构建安装包","lang":"zh-CN","frontmatter":{"title":"利用InnoSetup在VS编译时自动构建安装包","lang":"zh-CN","date":"2023-08-01T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNet"],"tag":["InnoSetup","打包"],"filename":"InnoSetupBuild","docsId":"ea48081d-190d-4661-8d7e-2493f7ffda1d","description":"摘要 很多C/S开发领域的同学或多或少都可能会遇到需要制作安装包的场景，打包的工具也是五花八门，例如有NSIS、InstallShield、Wix Toolset、ClickOnce等等，这里以Inno Setup为例简单演示下如何构建安装包，以及在Visual Studio中编译程序时自动去构建这个安装包。 操作演示 Tips：如果是想自动化构建，建...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/zhuomianchengxu/dabaobushu/InnoSetupBuild.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"利用InnoSetup在VS编译时自动构建安装包"}],["meta",{"property":"og:description","content":"摘要 很多C/S开发领域的同学或多或少都可能会遇到需要制作安装包的场景，打包的工具也是五花八门，例如有NSIS、InstallShield、Wix Toolset、ClickOnce等等，这里以Inno Setup为例简单演示下如何构建安装包，以及在Visual Studio中编译程序时自动去构建这个安装包。 操作演示 Tips：如果是想自动化构建，建..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/202307192041571.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-29T03:06:47.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"InnoSetup"}],["meta",{"property":"article:tag","content":"打包"}],["meta",{"property":"article:published_time","content":"2023-08-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-29T03:06:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"利用InnoSetup在VS编译时自动构建安装包\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/202307192041571.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192114367.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192116189.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192046676.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192046043.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192047446.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192102974.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192104434.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192106691.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192108396.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192109869.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192109933.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192120414.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192124443.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192127058.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192129566.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192130712.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192143785.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/202307192145387.png\\"],\\"datePublished\\":\\"2023-08-01T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-29T03:06:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"摘要","slug":"摘要","link":"#摘要","children":[]},{"level":2,"title":"操作演示","slug":"操作演示","link":"#操作演示","children":[]},{"level":2,"title":"自动化构建安装包","slug":"自动化构建安装包","link":"#自动化构建安装包","children":[]},{"level":2,"title":"效果演示","slug":"效果演示","link":"#效果演示","children":[]},{"level":2,"title":"结语","slug":"结语","link":"#结语","children":[]},{"level":2,"title":"附录","slug":"附录","link":"#附录","children":[]},{"level":2,"title":"作者信息","slug":"作者信息","link":"#作者信息","children":[]}],"git":{"createdTime":1690882168000,"updatedTime":1698548807000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":4.8,"words":1441},"filePathRelative":"dotnet/zhuomianchengxu/dabaobushu/InnoSetupBuild.md","localizedDate":"2023年8月1日","excerpt":"<h2>摘要</h2>\\n<p>很多C/S开发领域的同学或多或少都可能会遇到需要制作安装包的场景，打包的工具也是五花八门，例如有NSIS、InstallShield、Wix Toolset、ClickOnce等等，这里以Inno Setup为例简单演示下如何构建安装包，以及在Visual Studio中编译程序时自动去构建这个安装包。</p>\\n<h2>操作演示</h2>\\n<p>Tips：如果是想自动化构建，建议先从文章尾部开始看起，前面只是简单演示如何手动构建</p>\\n<p>1、去官网下载Inno Setup打包工具 <a href=\\"https://jrsoftware.org/isdl.php\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Inno Setup Downloads</a></p>","autoDesc":true}');export{un as comp,gn as data};
