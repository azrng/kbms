import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as t}from"./app-D8HBJYTp.js";const p="/kbms/common/1610521152548-ddfda290-bdb6-4804-bb65-dc95af1029c8.png",e={},o=t(`<h2 id="连接数据库" tabindex="-1"><a class="header-anchor" href="#连接数据库"><span>连接数据库</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>oracle连接数据库方式
Data Source=192.168.1.102/ORANEWLE;User ID=DYZHCSLEAPP;Password=NYEKTLEAPP;

mysql连接数据库方式
server=192.168.120.59;Port=3306; Database=yisheng;Uid=read_user;Pwd=12341234;SslMode=None;

SQL Server连接数据库方式
server=192.168.1.101;uid=sa;pwd=123456; database =TicketPlatform
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-查询" tabindex="-1"><a class="header-anchor" href="#_1-查询"><span>1. 查询</span></a></h2><h3 id="_1-1-分页查询" tabindex="-1"><a class="header-anchor" href="#_1-1-分页查询"><span>1.1 分页查询</span></a></h3><h4 id="_1-1-1-没有条件" tabindex="-1"><a class="header-anchor" href="#_1-1-1-没有条件"><span>1.1.1 没有条件</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>Db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Queryable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>sugModel<span class="token punctuation">.</span>table1<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>id <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>id<span class="token punctuation">,</span> OrderByType<span class="token punctuation">.</span>Desc<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToPageList</span><span class="token punctuation">(</span>pageIndex<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> <span class="token keyword">ref</span> totalCount<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_1-1-2-动态表达式" tabindex="-1"><a class="header-anchor" href="#_1-1-2-动态表达式"><span>1.1.2 动态表达式</span></a></h4><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>  			<span class="token class-name"><span class="token keyword">var</span></span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PageModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> PageIndex <span class="token operator">=</span> pageIndex<span class="token punctuation">,</span>PageSize <span class="token operator">=</span> pageSize  <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> exp <span class="token operator">=</span> Expressionable<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Create</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>table1<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                       <span class="token punctuation">.</span><span class="token function">AndIF</span><span class="token punctuation">(</span>model<span class="token punctuation">.</span>id<span class="token operator">!=</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> model<span class="token punctuation">.</span>id<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>it<span class="token operator">=&gt;</span>it<span class="token punctuation">.</span>id<span class="token operator">==</span>model<span class="token punctuation">.</span>id<span class="token punctuation">)</span>
                       <span class="token punctuation">.</span><span class="token function">AndIF</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrWhiteSpace</span><span class="token punctuation">(</span>model<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span>it<span class="token operator">=&gt;</span>it<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>model<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>
                       <span class="token punctuation">.</span><span class="token function">AndIF</span><span class="token punctuation">(</span>model<span class="token punctuation">.</span>age<span class="token operator">!=</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> model<span class="token punctuation">.</span>age<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>it<span class="token operator">=&gt;</span>it<span class="token punctuation">.</span>age<span class="token operator">==</span>model<span class="token punctuation">.</span>age<span class="token punctuation">)</span>
                       <span class="token punctuation">.</span><span class="token function">ToExpression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//拼接表达式</span>
            <span class="token class-name">List<span class="token punctuation">&lt;</span>table1<span class="token punctuation">&gt;</span></span> table1s <span class="token operator">=</span> table1Db<span class="token punctuation">.</span><span class="token function">GetPageList</span><span class="token punctuation">(</span>exp<span class="token punctuation">,</span> p<span class="token punctuation">,</span> it <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>id<span class="token punctuation">,</span> OrderByType<span class="token punctuation">.</span>Desc<span class="token punctuation">)</span><span class="token punctuation">;</span>
            totalCount <span class="token operator">=</span> p<span class="token punctuation">.</span>PageCount<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-联合查询" tabindex="-1"><a class="header-anchor" href="#_1-2-联合查询"><span>1.2 联合查询</span></a></h3><p>SQL语句</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> CustomerTravelCard a left <span class="token keyword">join</span> TravelCardType b <span class="token keyword">on</span>  a<span class="token punctuation">.</span>Code<span class="token operator">=</span>b<span class="token punctuation">.</span>Code <span class="token keyword">and</span>   a<span class="token punctuation">.</span>Status<span class="token operator">=</span><span class="token number">206</span> <span class="token keyword">and</span> a<span class="token punctuation">.</span>EndTime<span class="token operator">&gt;</span><span class="token function">getdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> WHERE  b<span class="token punctuation">.</span>CardType<span class="token operator">=</span><span class="token number">100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用sqlsugar</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> list <span class="token operator">=</span> dbnkfw<span class="token punctuation">.</span>Db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Queryable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>CustomerTravelCard<span class="token punctuation">,</span> TravelCardType<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">object</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span>
			 JoinType<span class="token punctuation">.</span>Left<span class="token punctuation">,</span>a<span class="token punctuation">.</span>Code<span class="token operator">==</span>b<span class="token punctuation">.</span>Code
			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>CardType <span class="token operator">==</span> <span class="token number">100</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>Status <span class="token operator">==</span> <span class="token number">206</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>EndTime <span class="token operator">&gt;</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">Select</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> a<span class="token punctuation">.</span>CustomerName<span class="token punctuation">,</span> a<span class="token punctuation">.</span>PhoneNumber <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="聚合查询" tabindex="-1"><a class="header-anchor" href="#聚合查询"><span>聚合查询</span></a></h3><h4 id="分组查询" tabindex="-1"><a class="header-anchor" href="#分组查询"><span>分组查询</span></a></h4><p>根据用户名称分组，然后找出来重复的用户名</p><div class="language-c# line-numbers-mode" data-ext="c#" data-title="c#"><pre class="language-c#"><code>var sheetList = await _db.Queryable&lt;sheet&gt;().Where(t =&gt; t.State == 0).GroupBy(t =&gt; t.Name).Select(t =&gt; new
{
	t.Name,
	count = SqlFunc.AggregateCount(t)
}).MergeTable().Having(t =&gt; t.count &gt;= 2).Select(t =&gt; new
{
	t.Name,
	t.count
}).ToListAsync();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-增加" tabindex="-1"><a class="header-anchor" href="#_2-增加"><span>2. 增加</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">try</span>
<span class="token punctuation">{</span>
	_db<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span><span class="token function">BeginTran</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//d.新集合中剩下的授权信息新增到数据库。</span>
	listNewPerIds<span class="token punctuation">.</span><span class="token function">ForEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>perId<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
	<span class="token punctuation">{</span>
		_db<span class="token punctuation">.</span><span class="token function">Insertable</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SysRoleMenuMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			RoleId <span class="token operator">=</span> roleId<span class="token punctuation">,</span>
			MenuId <span class="token operator">=</span> perId<span class="token punctuation">,</span>
			Id <span class="token operator">=</span> Guid<span class="token punctuation">.</span><span class="token function">NewGuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecuteCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//e.旧集合中剩下的授权信息从数据库中删除。</span>
	listOldPers<span class="token punctuation">.</span><span class="token function">ForEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>perObj<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
	<span class="token punctuation">{</span>
		_db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Deleteable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>SysRoleMenuMapping<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>perObj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecuteCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	_db<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span><span class="token function">CommitTran</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	_db<span class="token punctuation">.</span>Ado<span class="token punctuation">.</span><span class="token function">RollbackTran</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-修改" tabindex="-1"><a class="header-anchor" href="#_3-修改"><span>3. 修改</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//根据实体更新</span>
<span class="token class-name"><span class="token keyword">var</span></span> t1 <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">Updateable</span><span class="token punctuation">(</span>updateObj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecuteCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//这种方式会以主键为条件</span>
<span class="token comment">//根据指定列去更新</span>
<span class="token class-name"><span class="token keyword">var</span></span> t1 <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">Updateable</span><span class="token punctuation">(</span>updateObj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WhereColumns</span><span class="token punctuation">(</span>it<span class="token operator">=&gt;</span><span class="token keyword">new</span><span class="token punctuation">{</span>it<span class="token punctuation">.</span>XId<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecuteCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//单列可以用 it=&gt;it.XId</span>
<span class="token comment">//只更新指定列</span>
<span class="token class-name"><span class="token keyword">var</span></span> t3 <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">Updateable</span><span class="token punctuation">(</span>updateObj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">UpdateColumns</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> it<span class="token punctuation">.</span>Name <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecuteCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//更新指定列以外的列</span>
<span class="token class-name"><span class="token keyword">var</span></span> t4 <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">Updateable</span><span class="token punctuation">(</span>updateObj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">IgnoreColumns</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> it<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> it<span class="token punctuation">.</span>TestId <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecuteCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//批量更新，主键是更新条件</span>
<span class="token class-name">List<span class="token punctuation">&lt;</span>Students<span class="token punctuation">&gt;</span></span> list<span class="token operator">=</span><span class="token function">GetList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> t7 <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">Updateable</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecuteCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 根据字段类型去更新</span>
<span class="token class-name"><span class="token keyword">var</span></span> dt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
dt<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
dt<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> t66 <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">Updateable</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AS</span><span class="token punctuation">(</span><span class="token string">&quot;student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WhereColumns</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">With</span><span class="token punctuation">(</span>SqlWith<span class="token punctuation">.</span>UpdLock<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecuteCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="选择项修改" tabindex="-1"><a class="header-anchor" href="#选择项修改"><span>选择项修改</span></a></h3><p>如果根据实体修改，实体中没有给值的字段会被直接清空，如果修改实体中有值的那些，如果int类型没有赋值，会自动默认给0覆盖原来的数据库数据</p><p></p><figure><img src="`+p+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>动态表达式</p><div class="language-c# line-numbers-mode" data-ext="c#" data-title="c#"><pre class="language-c#"><code>var exp = Expressionable.Create&lt;Student&gt;()
                          .OrIF(1 == 1, it =&gt; it.Id == 11)
                          .And(it =&gt; it.Id == 1)
                          .AndIF(2 == 2, it =&gt; it.Id == 1)
                          .Or(it =&gt; it.Name == &quot;a1&quot;).ToExpression();//拼接表达式
 var data311 = StudentDb.GetList(exp);  // 动态表达式查询     &lt;==用处
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-删除" tabindex="-1"><a class="header-anchor" href="#_4-删除"><span>4. 删除</span></a></h2>`,28),c=[o];function l(i,u){return s(),a("div",null,c)}const d=n(e,[["render",l],["__file","operation.html.vue"]]),m=JSON.parse('{"path":"/orm/sqlsugar/operation.html","title":"操作","lang":"zh-CN","frontmatter":{"title":"操作","lang":"zh-CN","date":"2023-03-23T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["orm"],"tag":["无"],"filename":"caozuo","slug":"mk10p2","docsId":"32068351","description":"连接数据库 1. 查询 1.1 分页查询 1.1.1 没有条件 1.1.2 动态表达式 1.2 联合查询 SQL语句 使用sqlsugar 聚合查询 分组查询 根据用户名称分组，然后找出来重复的用户名 2. 增加 3. 修改 选择项修改 如果根据实体修改，实体中没有给值的字段会被直接清空，如果修改实体中有值的那些，如果int类型没有赋值，会自动默认给0...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/orm/sqlsugar/operation.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"操作"}],["meta",{"property":"og:description","content":"连接数据库 1. 查询 1.1 分页查询 1.1.1 没有条件 1.1.2 动态表达式 1.2 联合查询 SQL语句 使用sqlsugar 聚合查询 分组查询 根据用户名称分组，然后找出来重复的用户名 2. 增加 3. 修改 选择项修改 如果根据实体修改，实体中没有给值的字段会被直接清空，如果修改实体中有值的那些，如果int类型没有赋值，会自动默认给0..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1610521152548-ddfda290-bdb6-4804-bb65-dc95af1029c8.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-10T01:25:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-03-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-10T01:25:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"操作\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1610521152548-ddfda290-bdb6-4804-bb65-dc95af1029c8.png\\"],\\"datePublished\\":\\"2023-03-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-10T01:25:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"连接数据库","slug":"连接数据库","link":"#连接数据库","children":[]},{"level":2,"title":"1. 查询","slug":"_1-查询","link":"#_1-查询","children":[{"level":3,"title":"1.1 分页查询","slug":"_1-1-分页查询","link":"#_1-1-分页查询","children":[{"level":4,"title":"1.1.1 没有条件","slug":"_1-1-1-没有条件","link":"#_1-1-1-没有条件","children":[]},{"level":4,"title":"1.1.2 动态表达式","slug":"_1-1-2-动态表达式","link":"#_1-1-2-动态表达式","children":[]}]},{"level":3,"title":"1.2 联合查询","slug":"_1-2-联合查询","link":"#_1-2-联合查询","children":[]},{"level":3,"title":"聚合查询","slug":"聚合查询","link":"#聚合查询","children":[{"level":4,"title":"分组查询","slug":"分组查询","link":"#分组查询","children":[]}]}]},{"level":2,"title":"2. 增加","slug":"_2-增加","link":"#_2-增加","children":[]},{"level":2,"title":"3. 修改","slug":"_3-修改","link":"#_3-修改","children":[{"level":3,"title":"选择项修改","slug":"选择项修改","link":"#选择项修改","children":[]}]},{"level":2,"title":"4. 删除","slug":"_4-删除","link":"#_4-删除","children":[]}],"git":{"createdTime":1696901143000,"updatedTime":1696901143000,"contributors":[{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":2.09,"words":627},"filePathRelative":"orm/sqlsugar/operation.md","localizedDate":"2023年3月23日","excerpt":"<h2>连接数据库</h2>\\n<div class=\\"language-text\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"language-text\\"><code>oracle连接数据库方式\\nData Source=192.168.1.102/ORANEWLE;User ID=DYZHCSLEAPP;Password=NYEKTLEAPP;\\n\\nmysql连接数据库方式\\nserver=192.168.120.59;Port=3306; Database=yisheng;Uid=read_user;Pwd=12341234;SslMode=None;\\n\\nSQL Server连接数据库方式\\nserver=192.168.1.101;uid=sa;pwd=123456; database =TicketPlatform\\n</code></pre></div>","autoDesc":true}');export{d as comp,m as data};
