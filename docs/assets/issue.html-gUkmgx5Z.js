import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as n,d as i}from"./app-CBxp4zeL.js";const a={},l=i(`<h2 id="未使用fluent主题导致的不能预览" tabindex="-1"><a class="header-anchor" href="#未使用fluent主题导致的不能预览"><span>未使用Fluent主题导致的不能预览</span></a></h2><p>新创建的项目会自动应用一个名为 Fluent 的主题，对应的 Nuget 是：Avalonia.Themes.Fluent 。不过当你不使用这个主题，使用其他主题的时候，会导致无法预览，比如 Visual Studio 错误信息为</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Unable to resolve type Avalonia.Data.RelativeSource
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最终的解决方案是恢复对 Fluent 主题的引用，并确保 Application.Styles 节点中有 FluentTheme 标签：</p><div class="language-xaml line-numbers-mode" data-ext="xaml" data-title="xaml"><pre class="language-xaml"><code>&lt;Application.Styles&gt;
  &lt;FluentTheme /&gt;
   
   &lt;!--引用其他的主题--&gt; 
  &lt;StyleInclude Source=&quot;avares://Semi.Avalonia/Themes/Index.axaml&quot; /&gt;
&lt;/Application.Styles&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="browser-项目不能展示中文的问题" tabindex="-1"><a class="header-anchor" href="#browser-项目不能展示中文的问题"><span>Browser 项目不能展示中文的问题</span></a></h2><p>基于 wasm 的 Browser 项目在启动后所有的中文字符都变成方框，无法正常显示。推测是字体的问题，于是找到了另一个库 Quick-AvaloniaFonts ：https://github.com/Quick-AvaloniaFonts</p><p>该库在 Nuget 上有多个包，其中两个是：</p><ol><li>Quick.AvaloniaFonts.SourceHanSansCN</li><li>Quick.AvaloniaFonts.SourceHanSansCN.Slim</li></ol><p>Source Han Sans （思源黑体），是由 Google 和 Adobe 合作开发的开源字体，使用 Apache 2.0 许可。第一个包内嵌了完整的字体文件，有将近 60 MB。第二个包只含一个 Normal 字体粗细，不到 10MB。</p><p>使用方是把 Programe.cs 文件中的 .WithInterFont() 替换为 .WithFont_SourceHanSansCN() 即可。</p><div class="language-c# line-numbers-mode" data-ext="c#" data-title="c#"><pre class="language-c#"><code>
using Avalonia;
using System;

namespace TestApp;

class Program
{
    // Initialization code. Don&#39;t use any Avalonia, third-party APIs or any
    // SynchronizationContext-reliant code before AppMain is called: things aren&#39;t initialized
    // yet and stuff might break.
    [STAThread]
    public static void Main(string[] args) =&gt; BuildAvaloniaApp()
        .StartWithClassicDesktopLifetime(args);

    // Avalonia configuration, don&#39;t remove; also used by visual designer.
    public static AppBuilder BuildAvaloniaApp()
        =&gt; AppBuilder.Configure&lt;App&gt;()
            .UsePlatformDetect()
            //.WithInterFont()()
            .WithFont_SourceHanSansCN()
            .LogToTrace();
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),s=[l];function r(o,d){return t(),n("div",null,s)}const m=e(a,[["render",r],["__file","issue.html.vue"]]),p=JSON.parse('{"path":"/dotnet/avalonia/issue.html","title":"问题","lang":"zh-CN","frontmatter":{"title":"问题","lang":"zh-CN","date":"2024-03-13T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["avalonia","issue"],"description":"未使用Fluent主题导致的不能预览 新创建的项目会自动应用一个名为 Fluent 的主题，对应的 Nuget 是：Avalonia.Themes.Fluent 。不过当你不使用这个主题，使用其他主题的时候，会导致无法预览，比如 Visual Studio 错误信息为 最终的解决方案是恢复对 Fluent 主题的引用，并确保 Application.S...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/avalonia/issue.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"问题"}],["meta",{"property":"og:description","content":"未使用Fluent主题导致的不能预览 新创建的项目会自动应用一个名为 Fluent 的主题，对应的 Nuget 是：Avalonia.Themes.Fluent 。不过当你不使用这个主题，使用其他主题的时候，会导致无法预览，比如 Visual Studio 错误信息为 最终的解决方案是恢复对 Fluent 主题的引用，并确保 Application.S..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-13T15:00:26.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"avalonia"}],["meta",{"property":"article:tag","content":"issue"}],["meta",{"property":"article:published_time","content":"2024-03-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-13T15:00:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"问题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-13T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-13T15:00:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"未使用Fluent主题导致的不能预览","slug":"未使用fluent主题导致的不能预览","link":"#未使用fluent主题导致的不能预览","children":[]},{"level":2,"title":"Browser 项目不能展示中文的问题","slug":"browser-项目不能展示中文的问题","link":"#browser-项目不能展示中文的问题","children":[]}],"git":{"createdTime":1710342026000,"updatedTime":1710342026000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.25,"words":376},"filePathRelative":"dotnet/avalonia/issue.md","localizedDate":"2024年3月13日","excerpt":"<h2>未使用Fluent主题导致的不能预览</h2>\\n<p>新创建的项目会自动应用一个名为 Fluent 的主题，对应的 Nuget 是：Avalonia.Themes.Fluent 。不过当你不使用这个主题，使用其他主题的时候，会导致无法预览，比如 Visual Studio 错误信息为</p>\\n<div class=\\"language-text\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"language-text\\"><code>Unable to resolve type Avalonia.Data.RelativeSource\\n</code></pre></div>","autoDesc":true}');export{m as comp,p as data};
