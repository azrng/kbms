import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as i,c,a as n,b as a,d as e,e as t}from"./app-vSdX8vi3.js";const l={},r=t('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>请求头链路传播</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="headerpropagation" tabindex="-1"><a class="header-anchor" href="#headerpropagation"><span>HeaderPropagation</span></a></h3>',4),u={href:"https://github.com/dotnet/aspnetcore/tree/main/src/Middleware/HeaderPropagation",target:"_blank",rel:"noopener noreferrer"},d=t(`<h4 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用"><span>基本使用</span></a></h4><p>引用nuget包</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>Microsoft<span class="token punctuation">.</span>AspNetCore<span class="token punctuation">.</span>HeaderPropagation
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>基本使用</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>services<span class="token punctuation">.</span>AddHeaderPropagation<span class="token punctuation">(</span>options =&gt;
<span class="token punctuation">{</span>
    <span class="token operator">/</span><span class="token operator">/</span> 如果请求头中含 X-BetaFeatures 字段，则传播该字段对应的值
    options<span class="token punctuation">.</span>Headers<span class="token punctuation">.</span>Add<span class="token punctuation">(</span><span class="token string">&quot;X-RequestId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token operator">/</span><span class="token operator">/</span><span class="token operator">/</span><span class="token operator">/</span> 如果请求头中不含 X-BetaFeatures 字段，则生成一个新的值并进行传播
    <span class="token operator">/</span><span class="token operator">/</span>options<span class="token punctuation">.</span>Headers<span class="token punctuation">.</span>Add<span class="token punctuation">(</span><span class="token string">&quot;X-BetaFeatures&quot;</span><span class="token punctuation">,</span> context =&gt;
    <span class="token operator">/</span><span class="token operator">/</span><span class="token punctuation">{</span>
    <span class="token operator">/</span><span class="token operator">/</span>    <span class="token keyword">return</span> Guid<span class="token punctuation">.</span>NewGuid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ToString<span class="token punctuation">(</span><span class="token string">&quot;N&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">/</span><span class="token operator">/</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">/</span><span class="token operator">/</span> 正确使用 传播所有注册过的请求头，也可以传播部分请求头
services<span class="token punctuation">.</span>AddHttpClient<span class="token punctuation">(</span><span class="token string">&quot;ServiceB&quot;</span><span class="token punctuation">,</span> options =&gt;
<span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>BaseAddress = new Uri<span class="token punctuation">(</span><span class="token string">&quot;http://localhost:5001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>AddHeaderPropagation<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">/</span><span class="token operator">/</span> 错误示例
<span class="token operator">/</span><span class="token operator">/</span>services<span class="token punctuation">.</span>AddHttpClient<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>AddHeaderPropagation<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还需要使用中间件</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code><span class="token operator">/</span><span class="token operator">/</span> 需要在UseRouting之前
app<span class="token punctuation">.</span>UseHeaderPropagation<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就可以正常请求并传播请求头的数据了</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code><span class="token punctuation">[</span>Route<span class="token punctuation">(</span><span class="token string">&quot;api/[controller]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token namespace">[ApiController]</span>
public <span class="token keyword">class</span> HeaderForwarderController : ControllerBase
<span class="token punctuation">{</span>
    private readonly IHttpClientFactory _httpClientFactory<span class="token punctuation">;</span>
    private readonly ILogger&lt;HeaderForwarderController&gt; _logger<span class="token punctuation">;</span>

    public HeaderForwarderController<span class="token punctuation">(</span>IHttpClientFactory httpClientFactory<span class="token punctuation">,</span>
        ILogger&lt;HeaderForwarderController&gt; logger<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _httpClientFactory = httpClientFactory<span class="token punctuation">;</span>
        _logger = logger<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token namespace">[HttpGet]</span>
    public async Task&lt;ActionResult&gt; TestRequestAsync<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">var</span> headers = Request<span class="token punctuation">.</span>Headers<span class="token punctuation">;</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token keyword">var</span> kv in headers<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            _logger<span class="token punctuation">.</span>LogInformation<span class="token punctuation">(</span>$<span class="token string">&quot;{kv.Key}:{kv.Value}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">var</span> client = _httpClientFactory<span class="token punctuation">.</span>CreateClient<span class="token punctuation">(</span><span class="token string">&quot;ServiceB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> result = await client<span class="token punctuation">.</span>GetAsync<span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Ok<span class="token punctuation">(</span>result<span class="token punctuation">.</span>StatusCode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="源码简述" tabindex="-1"><a class="header-anchor" href="#源码简述"><span>源码简述</span></a></h4><p>内部维护了一个HeaderPropagationValues的对象示例，生命周期是单例的，然后每次请求的时候，将读取请求头保存到该示例中，当我们注入HttpClient的时候，中间件会创建HeaderPropagationMessageHandler，它继承自DelegatingHandler，通过这个handler来实现，将保存的请求头添加到对应的httpclient实例上，然后就可以传递了。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span><span class="token function">AddHttpMessageHandler</span><span class="token punctuation">(</span>services <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HeaderPropagationMessageHandlerOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> middlewareOptions <span class="token operator">=</span> services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRequiredService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IOptions<span class="token punctuation">&lt;</span>HeaderPropagationOptions<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> middlewareOptions<span class="token punctuation">.</span>Value<span class="token punctuation">.</span>Headers<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> header <span class="token operator">=</span> middlewareOptions<span class="token punctuation">.</span>Value<span class="token punctuation">.</span>Headers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        options<span class="token punctuation">.</span>Headers<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span>CapturedHeaderName<span class="token punctuation">,</span> header<span class="token punctuation">.</span>CapturedHeaderName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HeaderPropagationMessageHandler</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRequiredService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>HeaderPropagationValues<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h4>`,13),k={href:"https://blog.yuanpei.me/posts/asp-net-core-using-headerpropagation-for-distributed-tracking/",target:"_blank",rel:"noopener noreferrer"},h=n("h3",{id:"headerforwarder",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#headerforwarder"},[n("span",null,"HeaderForwarder")])],-1),v={href:"https://kgithub.com/jiangjinnan/HeaderForwarder",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.cnblogs.com/artech/p/HeaderForwarder.html",target:"_blank",rel:"noopener noreferrer"},g=n("h3",{id:"后台服务请求标识",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#后台服务请求标识"},[n("span",null,"后台服务请求标识")])],-1),b={href:"https://github.com/WeihanLi/SamplesInPractice/blob/master/BalabalaSample/CorrelationIdSample.cs",target:"_blank",rel:"noopener noreferrer"},w={href:"https://mp.weixin.qq.com/s/mbPAwY0BX4-ISlOaZ0c2Wg",target:"_blank",rel:"noopener noreferrer"};function H(_,f){const s=o("ExternalLinkIcon");return i(),c("div",null,[r,n("p",null,[a("源码地址："),n("a",u,[a("https://github.com/dotnet/aspnetcore/tree/main/src/Middleware/HeaderPropagation"),e(s)])]),d,n("p",null,[a("标头传播实现分布式链路追踪："),n("a",k,[a("https://blog.yuanpei.me/posts/asp-net-core-using-headerpropagation-for-distributed-tracking/"),e(s)])]),h,n("p",null,[a("将老师写的自动转发接收的请求报头代码 仓库地址："),n("a",v,[a("https://kgithub.com/jiangjinnan/HeaderForwarder"),e(s)]),a(" 文档地址："),n("a",m,[a("https://www.cnblogs.com/artech/p/HeaderForwarder.html"),e(s)])]),g,n("p",null,[a("给服务增加一个请求标识让服务的调用串联起来。 correlationId 仓库地址："),n("a",b,[a("https://github.com/WeihanLi/SamplesInPractice/blob/master/BalabalaSample/CorrelationIdSample.cs"),e(s)]),a(" 参考资料："),n("a",w,[a("https://mp.weixin.qq.com/s/mbPAwY0BX4-ISlOaZ0c2Wg"),e(s)])])])}const C=p(l,[["render",H],["__file","qingqiubiaoshichuandi.html.vue"]]),P=JSON.parse('{"path":"/dotnet/api/qingqiubiaoshichuandi.html","title":"请求标识传递","lang":"zh-CN","frontmatter":{"title":"请求标识传递","lang":"zh-CN","date":"2023-07-06T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"qingqiubiaoshichuandi","slug":"uspwz7plvkt2qgzp","docsId":"131763887","description":"概述 请求头链路传播 操作 HeaderPropagation 源码地址：https://github.com/dotnet/aspnetcore/tree/main/src/Middleware/HeaderPropagation 基本使用 引用nuget包 基本使用 还需要使用中间件 然后就可以正常请求并传播请求头的数据了 源码简述 内部维护了一个...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/api/qingqiubiaoshichuandi.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"请求标识传递"}],["meta",{"property":"og:description","content":"概述 请求头链路传播 操作 HeaderPropagation 源码地址：https://github.com/dotnet/aspnetcore/tree/main/src/Middleware/HeaderPropagation 基本使用 引用nuget包 基本使用 还需要使用中间件 然后就可以正常请求并传播请求头的数据了 源码简述 内部维护了一个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-07-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"请求标识传递\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-06T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"HeaderPropagation","slug":"headerpropagation","link":"#headerpropagation","children":[{"level":4,"title":"基本使用","slug":"基本使用","link":"#基本使用","children":[]},{"level":4,"title":"源码简述","slug":"源码简述","link":"#源码简述","children":[]},{"level":4,"title":"资料","slug":"资料","link":"#资料","children":[]}]},{"level":3,"title":"HeaderForwarder","slug":"headerforwarder","link":"#headerforwarder","children":[]},{"level":3,"title":"后台服务请求标识","slug":"后台服务请求标识","link":"#后台服务请求标识","children":[]}]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":1.72,"words":515},"filePathRelative":"dotnet/api/qingqiubiaoshichuandi.md","localizedDate":"2023年7月6日","excerpt":"<h2>概述</h2>\\n<p>请求头链路传播</p>\\n<h2>操作</h2>\\n<h3>HeaderPropagation</h3>\\n<p>源码地址：<a href=\\"https://github.com/dotnet/aspnetcore/tree/main/src/Middleware/HeaderPropagation\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/dotnet/aspnetcore/tree/main/src/Middleware/HeaderPropagation</a></p>\\n<h4>基本使用</h4>","autoDesc":true}');export{C as comp,P as data};
