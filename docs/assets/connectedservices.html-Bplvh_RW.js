import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,o,c,a as e,d as n,e as p,b as i}from"./app-DMmdIwn0.js";const r={},l=e("h2",{id:"生成api调用代码",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#生成api调用代码"},[e("span",null,"生成API调用代码")])],-1),u={href:"https://marketplace.visualstudio.com/items?itemName=Unchase.unchaseopenapiconnectedservice",target:"_blank",rel:"noopener noreferrer"},d=i(`<p>右键项目然后添加=&gt;连接的服务，然后配置生成的代码，选择你想生成调用代码的API的 swagger.json文件地址，然后就可以生成调用代码，比如我们将生辰的代码提供类名称设置为TestClient，那么调用示例就是</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name">HttpClient</span> httpClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TestClient</span><span class="token punctuation">(</span><span class="token string">&quot;http://192.168.2.49:7000/&quot;</span><span class="token punctuation">,</span> httpClient<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> enums <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">ExecAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ProcedureInDto</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
enums<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>JsonConvert<span class="token punctuation">.</span><span class="token function">SerializeObject</span><span class="token punctuation">(</span>enums<span class="token punctuation">.</span>Result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function m(k,h){const t=s("ExternalLinkIcon");return o(),c("div",null,[l,e("p",null,[n("生成的代码将和接口对应的参数、返回值一一对应，本文底层使用的工具为NSwag.exe，其他可替代的方案还有AutoSet.exe。 本文中生成的代码将在编译过程中自动编译，类似grpc生成代码的模式，如果使用AutoSet则需要手动引入代码。 另外也可以使用NSwag对应的vs插件("),e("a",u,[n("https://marketplace.visualstudio.com/items?itemName=Unchase.unchaseopenapiconnectedservice"),p(t)]),n(")")]),d])}const _=a(r,[["render",m],["__file","connectedservices.html.vue"]]),y=JSON.parse('{"path":"/dotnet/api/connectedservices.html","title":"Connected Services","lang":"zh-CN","frontmatter":{"title":"Connected Services","lang":"zh-CN","date":"2023-05-29T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"connectedservices","slug":"lsv2wgvgabsd6pi1","docsId":"126104582","description":"生成API调用代码 生成的代码将和接口对应的参数、返回值一一对应，本文底层使用的工具为NSwag.exe，其他可替代的方案还有AutoSet.exe。 本文中生成的代码将在编译过程中自动编译，类似grpc生成代码的模式，如果使用AutoSet则需要手动引入代码。 另外也可以使用NSwag对应的vs插件(https://marketplace.visua...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/api/connectedservices.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Connected Services"}],["meta",{"property":"og:description","content":"生成API调用代码 生成的代码将和接口对应的参数、返回值一一对应，本文底层使用的工具为NSwag.exe，其他可替代的方案还有AutoSet.exe。 本文中生成的代码将在编译过程中自动编译，类似grpc生成代码的模式，如果使用AutoSet则需要手动引入代码。 另外也可以使用NSwag对应的vs插件(https://marketplace.visua..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-05-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Connected Services\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-29T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"生成API调用代码","slug":"生成api调用代码","link":"#生成api调用代码","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.8,"words":241},"filePathRelative":"dotnet/api/connectedservices.md","localizedDate":"2023年5月29日","excerpt":"<h2>生成API调用代码</h2>\\n<p>生成的代码将和接口对应的参数、返回值一一对应，本文底层使用的工具为NSwag.exe，其他可替代的方案还有AutoSet.exe。\\n本文中生成的代码将在编译过程中自动编译，类似grpc生成代码的模式，如果使用AutoSet则需要手动引入代码。\\n另外也可以使用NSwag对应的vs插件(<a href=\\"https://marketplace.visualstudio.com/items?itemName=Unchase.unchaseopenapiconnectedservice\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://marketplace.visualstudio.com/items?itemName=Unchase.unchaseopenapiconnectedservice</a>)</p>","autoDesc":true}');export{_ as comp,y as data};
