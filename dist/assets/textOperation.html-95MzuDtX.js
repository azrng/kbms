import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,d as a,o as n}from"./app-Bg64E3Xi.js";const t={};function l(h,i){return n(),e("div",null,i[0]||(i[0]=[a(`<h2 id="chinese" tabindex="-1"><a class="header-anchor" href="#chinese"><span>Chinese</span></a></h2><p>一个功能强大的中文处理库，Chinese 是一个中文解析通用工具，基于 C# 开发，包括拼音，简繁转换，数字读法，货币读法。和其他工具不一样的是，Chinese 可以在本地离线使用，而不需要对接到其他的第三方平台。</p><p>仓库地址：<a href="https://github.com/zmjack/Chinese" target="_blank" rel="noopener noreferrer">https://github.com/zmjack/Chinese</a></p><h2 id="slugify可读性强的url" tabindex="-1"><a class="header-anchor" href="#slugify可读性强的url"><span>Slugify可读性强的URL</span></a></h2><p>Microsoft .NET 的简单 Slug / Clean URL 生成器帮助程序。可以实现任何字符串的连字符、小写字符、字母数字版本，删除变音符号，折叠空格和破折号以及修建空格。</p><p>Nuget：<a href="https://www.nuget.org/packages/Slugify.Core" target="_blank" rel="noopener noreferrer">https://www.nuget.org/packages/Slugify.Core</a></p><p>简单示例，安装nuget包</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>PM&gt; Install-Package Slugify.Core</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将字符串添加连字符</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> config</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">SlugHelperConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">	config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">ForceLowerCase</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">	SlugHelper</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> helper</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">SlugHelper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">	String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> title</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Helllo World!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">	String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> slug</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> helper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GenerateSlug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">	Console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WriteLine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">slug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// helllo-world</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="yamldotnet" tabindex="-1"><a class="header-anchor" href="#yamldotnet"><span>YamlDotNet</span></a></h2><p>在 .NET 中，YamlDotNet 库是处理 YAML 文件的常用选择。该库非常易于使用，并为大多数 YAML 文件提供了非常好的支持。处理 YAML 文件时，提供两种不同的选项：通过字典访问键值或反序列化为类。这两种方法都有其优点和缺点，但在大多数情况下，反序列化为类是更方便、更好的选择。YamlDotNet从 YAML 反序列化。</p><p>文档：<a href="https://mp.weixin.qq.com/s/0MieuyqUIEmDoxTNwCT85w" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/0MieuyqUIEmDoxTNwCT85w</a></p>`,13)]))}const k=s(t,[["render",l]]),o=JSON.parse('{"path":"/dotnet/commonNuget/textOperation.html","title":"文本处理","lang":"zh-CN","frontmatter":{"title":"文本处理","lang":"zh-CN","date":"2024-02-15T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["text"],"description":"Chinese 一个功能强大的中文处理库，Chinese 是一个中文解析通用工具，基于 C# 开发，包括拼音，简繁转换，数字读法，货币读法。和其他工具不一样的是，Chinese 可以在本地离线使用，而不需要对接到其他的第三方平台。 仓库地址：https://github.com/zmjack/Chinese Slugify可读性强的URL Micros...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文本处理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-15T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-27T14:52:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"],["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/commonNuget/textOperation.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"文本处理"}],["meta",{"property":"og:description","content":"Chinese 一个功能强大的中文处理库，Chinese 是一个中文解析通用工具，基于 C# 开发，包括拼音，简繁转换，数字读法，货币读法。和其他工具不一样的是，Chinese 可以在本地离线使用，而不需要对接到其他的第三方平台。 仓库地址：https://github.com/zmjack/Chinese Slugify可读性强的URL Micros..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-27T14:52:30.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"text"}],["meta",{"property":"article:published_time","content":"2024-02-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-27T14:52:30.000Z"}]]},"git":{"createdTime":1707989731000,"updatedTime":1745765550000,"contributors":[{"name":"azrng","username":"","email":"itzhangyunpeng@163.com","commits":5},{"name":"zhangyunpeng","username":"","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":1.16,"words":349},"filePathRelative":"dotnet/commonNuget/textOperation.md","excerpt":"<h2>Chinese</h2>\\n<p>一个功能强大的中文处理库，Chinese 是一个中文解析通用工具，基于 C# 开发，包括拼音，简繁转换，数字读法，货币读法。和其他工具不一样的是，Chinese 可以在本地离线使用，而不需要对接到其他的第三方平台。</p>\\n<p>仓库地址：<a href=\\"https://github.com/zmjack/Chinese\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/zmjack/Chinese</a></p>\\n<h2>Slugify可读性强的URL</h2>\\n<p>Microsoft .NET 的简单 Slug / Clean URL 生成器帮助程序。可以实现任何字符串的连字符、小写字符、字母数字版本，删除变音符号，折叠空格和破折号以及修建空格。</p>","autoDesc":true}');export{k as comp,o as data};
