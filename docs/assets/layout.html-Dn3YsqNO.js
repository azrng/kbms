import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as s,d as t}from"./app-Bfb6-vFH.js";const e={},p=t(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>在大多数网站中，UI排列的方式在多个页面共享，这个时候我们需要将相同的代码复制粘贴到所有其他页面中，并且如果后期更改了，还需要所有页面都进行重复的更改，所以这个时候就该使用布局组件来简化和重用通用UI元素。</p><h2 id="blazor中的布局" tabindex="-1"><a class="header-anchor" href="#blazor中的布局"><span>Blazor中的布局</span></a></h2><p>布局文件扩展名为<code>.razor</code>，文件通常存放在<code>Shared</code>文件夹中，但是也可以放在其他使用它的文件可以访问的任何位置。</p><p>布局组件有两个要求：</p><ul><li>必须继承 <code>LayoutComponentBase</code> 类。</li><li>必须在要呈现发起引用的组件内容的位置包含 <code>@Body</code> 指令</li></ul><p>在Shared下新建<code>BlazingPizzasMainLayout</code>布局文件，内容如下</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code>@inherits LayoutComponentBase

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>披萨网站<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Pizzas<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Browse Pizzas<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Toppings<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Browse Extra Toppings<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FavoritePizzas<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Tell us your favorite<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Orders<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Track Your Order<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">&gt;</span></span>

@Body

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">&gt;</span></span>
    @TrademarkMessage
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">&gt;</span></span>

@code
{
    public string TrademarkMessage { get; set; } = &quot;All content is <span class="token entity named-entity" title="©">&amp;copy;</span> Blazing Pizzas 2021&quot;;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>布局组件不包括 <code>@page</code> 指令，因为它们不直接处理请求，不应为它们创建路由。 引用组件使用 <code>@page</code> 指令。</p></blockquote><p>使用布局文件，那么就需要再应用布局文件中使用<code>@layout</code>指令。组件的Html将在<code>@Body</code>指令的位置呈现</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code>@page &quot;/FavoritePizzas/{favorite}&quot;
@layout BlazingPizzasMainLayout

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>选择披萨<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Your favorite pizza is: @Favorite<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

@code {
	[Parameter]
	public string Favorite { get; set; }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果要将模板应用于文件夹中的所有 Blazor 组件，可以使用 _Imports.razor 文件作为快捷方式。 Blazor 编译器找到此文件时，会自动在文件夹中的所有组件中包含其指令。 使用此方法，无需再将 <code>@layout</code> 指令添加到每个组件，适用于 _Imports.razor 文件所在文件夹及其所有子文件夹中的组件。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>请勿向项目的根文件夹中的 _Imports.razor 文件添加 <code>@layout</code> 指令，因为这会导致布局的无限循环。</p></div><p>如果要将默认布局应用于 Web 应用的所有文件夹中的所有组件，可以在 App.razor 组件中执行此操作，在该组件中配置 Router 组件。 在 <code>&lt;RouteView&gt;</code> 标记中，使用 <code>DefaultLayout</code> 属性。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Router</span> <span class="token attr-name">AppAssembly</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@typeof(Program).Assembly<span class="token punctuation">&quot;</span></span> <span class="token attr-name">PreferExactMatches</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Found</span> <span class="token attr-name">Context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>routeData<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RouteView</span> <span class="token attr-name">RouteData</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@routeData<span class="token punctuation">&quot;</span></span> <span class="token attr-name">DefaultLayout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@typeof(BlazingPizzasMainLayout)<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Found</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NotFound</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LayoutView</span> <span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>对不起，页面走丢了<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LayoutView</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NotFound</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Router</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),o=[p];function l(c,i){return n(),s("div",null,o)}const d=a(e,[["render",l],["__file","layout.html.vue"]]),k=JSON.parse('{"path":"/web/blazor/baseOperator/layout.html","title":"布局","lang":"zh-CN","frontmatter":{"title":"布局","lang":"zh-CN","date":"2023-12-11T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":false,"category":["dotNET","web"],"tag":["blazor","layout"],"description":"概述 在大多数网站中，UI排列的方式在多个页面共享，这个时候我们需要将相同的代码复制粘贴到所有其他页面中，并且如果后期更改了，还需要所有页面都进行重复的更改，所以这个时候就该使用布局组件来简化和重用通用UI元素。 Blazor中的布局 布局文件扩展名为.razor，文件通常存放在Shared文件夹中，但是也可以放在其他使用它的文件可以访问的任何位置。 ...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/web/blazor/baseOperator/layout.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"布局"}],["meta",{"property":"og:description","content":"概述 在大多数网站中，UI排列的方式在多个页面共享，这个时候我们需要将相同的代码复制粘贴到所有其他页面中，并且如果后期更改了，还需要所有页面都进行重复的更改，所以这个时候就该使用布局组件来简化和重用通用UI元素。 Blazor中的布局 布局文件扩展名为.razor，文件通常存放在Shared文件夹中，但是也可以放在其他使用它的文件可以访问的任何位置。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-14T12:02:46.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"blazor"}],["meta",{"property":"article:tag","content":"layout"}],["meta",{"property":"article:published_time","content":"2023-12-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-14T12:02:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"布局\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-11T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-14T12:02:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"Blazor中的布局","slug":"blazor中的布局","link":"#blazor中的布局","children":[]}],"git":{"createdTime":1702344920000,"updatedTime":1702555366000,"contributors":[{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":2}]},"readingTime":{"minutes":2.04,"words":611},"filePathRelative":"web/blazor/baseOperator/layout.md","localizedDate":"2023年12月11日","excerpt":"<h2>概述</h2>\\n<p>在大多数网站中，UI排列的方式在多个页面共享，这个时候我们需要将相同的代码复制粘贴到所有其他页面中，并且如果后期更改了，还需要所有页面都进行重复的更改，所以这个时候就该使用布局组件来简化和重用通用UI元素。</p>\\n<h2>Blazor中的布局</h2>\\n<p>布局文件扩展名为<code>.razor</code>，文件通常存放在<code>Shared</code>文件夹中，但是也可以放在其他使用它的文件可以访问的任何位置。</p>\\n<p>布局组件有两个要求：</p>\\n<ul>\\n<li>必须继承 <code>LayoutComponentBase</code> 类。</li>\\n<li>必须在要呈现发起引用的组件内容的位置包含 <code>@Body</code> 指令</li>\\n</ul>","autoDesc":true}');export{d as comp,k as data};
