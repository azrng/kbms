import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as e,e as a}from"./app-BY9DQv5u.js";const n="/kbms/common/1639837601437-af4681dd-58da-4739-be7e-9a05630036c8.png",l="/kbms/common/1639838714063-ca4bcfd5-e672-49bb-a67d-86e1aa5dcef4.png",h="/kbms/common/1639838883334-b95ed568-b7d6-4dcc-a7eb-c89429fcb625.png",t="/kbms/common/1639839517557-0185a35b-75fc-4668-8a07-fbfad677a478.png",r="/kbms/common/1639839870336-c6af2519-1900-447d-ae14-f8c790be6184.png",p="/kbms/common/1639839993592-75c15580-52e2-4775-be8a-3b37ada75b91.png",k="/kbms/common/1639840341305-0ed8a04f-cfdc-449d-8cac-bfa6230fa582.png",d="/kbms/common/1639840583319-9a8f5b55-6681-4346-81f9-d402e2e5f5ab.png",g="/kbms/common/1639842283164-8d978e96-7b3e-4f62-bdbb-271f3f91c57d.png",c="/kbms/common/1639842571210-a353dbff-9aa7-44e7-9b84-f9590b38ac14.png",o="/kbms/common/1639842579510-cf93e6ad-d240-437e-8087-4f6d6678ae05.png",m="/kbms/common/1639842607219-c852aca1-3e1e-46a0-bd56-4e0205f6ff26.png",b="/kbms/common/1639842875816-164cd6a0-3795-4dfd-be75-45b8c58f3dff.png",u="/kbms/common/1639843298624-2ad20db7-bea1-44cc-82eb-8ce878e61611.png",B="/kbms/common/1641138498600-44f76f54-1e86-4f9c-9d09-ed131f303ff4.png",y="/kbms/common/1641177125062-c3e7ab00-cf3e-40ff-97e1-baf99a014105.png",v="/kbms/common/1641177803533-fefc2c6a-15ce-449b-a264-0af8e60c568f.png",f="/kbms/common/1641177944269-611b9b73-74dd-47c6-8c24-80ce91cf1c65.png",A="/kbms/common/1641177966985-0da4a920-89cd-416e-9303-cfd9c9d1643f.png",F="/kbms/common/1641178964141-d6805e66-032f-4a22-abd6-8307db896b69.png",E={},C=a(`<h2 id="_1-前言" tabindex="-1"><a class="header-anchor" href="#_1-前言"><span>1. 前言</span></a></h2><p>本文是一个在centos系统部署.Net6的文章，本来内容基本上来源于作者艾三元，目的是对部署流程的一次熟悉以及对守护进程的一次学习。</p><blockquote><p>本文示例环境：centos7、VS2022、.Net6</p></blockquote><h2 id="_2-准备" tabindex="-1"><a class="header-anchor" href="#_2-准备"><span>2. 准备</span></a></h2><p>Linux服务器：通过Hyper-v启动的虚拟机(已经写有教程了)，系统使用CentOS-7-x86_64-Minimal-2009.iso dotNet6程序：<a href="https://gitee.com/AZRNG/my-example" target="_blank" rel="noopener noreferrer">https://gitee.com/AZRNG/my-example</a> master分支 因为我这是一台新的centos7服务器，所以我先手动将 Microsoft 包签名密钥添加到受信任密钥列表，并添加 Microsoft 包存储库。</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">rpm</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">Uvh</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> https</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//packages.microsoft.com/config/centos/7/packages-microsoft-prod.rpm</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>升级所有包同时也升级软件和系统内核</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">yum</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> update</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_3-开始" tabindex="-1"><a class="header-anchor" href="#_3-开始"><span>3. 开始</span></a></h2><h3 id="_3-1-安装环境" tabindex="-1"><a class="header-anchor" href="#_3-1-安装环境"><span>3.1 安装环境</span></a></h3><p>如果已经安装SDK或者运行时，那么使用以下命令来查看安装了哪些版本</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">dotnet</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --list-sdks</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">dotnet</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --list-runtimes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>我是新系统，所以直接就是命令找不到，如果你已经存在需要的版本就不用再安装了 <img src="`+n+'" alt="image.png" loading="lazy"> 安装.Net6 SDK</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> dotnet-sdk-6.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="'+l+'" alt="image.png" loading="lazy"> 过程中会有两个“y”的原因是，命令执行的中途停顿了，让你确认下是否进行安装，你要输入“y”确认安装才会执行安装，安装完后，我们输入如下命令看下是否安装成功 <img src="'+h+'" alt="image.png" loading="lazy"></p><h3 id="_3-2-拷贝项目" tabindex="-1"><a class="header-anchor" href="#_3-2-拷贝项目"><span>3.2 拷贝项目</span></a></h3><p>环境已经装好，下面我们开始部署项目，需要先将项目拷贝到服务器上，可以直接拷贝发布好的项目到服务器 使用编译器打开项目，然后右键项目发布，然后选择发布到文件夹、发布地址等 <img src="'+t+'" alt="image.png" loading="lazy"> 查看发布后的目录 <img src="'+r+'" alt="image.png" loading="lazy"> 然后通过MobaXTerm工具将文件拷贝到服务器上</p><h3 id="_3-3-部署项目" tabindex="-1"><a class="header-anchor" href="#_3-3-部署项目"><span>3.3 部署项目</span></a></h3><p>查看我们的项目 <img src="'+p+'" alt="image.png" loading="lazy"> 运行命令启动文件</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> xxx.dll</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="'+k+'" alt="image.png" loading="lazy"> 因为发布方式是Release，并且我配置的该模式不显示swagger，那么只能通过调用接口来测试是否发布成功。 在服务器直接调用示例</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> localhost:5000/api/Grade/GetGradeList</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+d+`" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="_3-4-配置nginx托管" tabindex="-1"><a class="header-anchor" href="#_3-4-配置nginx托管"><span>3.4 配置Nginx托管</span></a></h3><p>安装nginx</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  nginx.rpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">rpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -ivh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> nginx.rpm</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">yum</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> nginx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 启动nginx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> nginx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">--置开机启动（linux宕机、重启会自动运行nginx不需要连上去输入命令）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+g+'" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="_3-5-配置防火墙" tabindex="-1"><a class="header-anchor" href="#_3-5-配置防火墙"><span>3.5 配置防火墙</span></a></h3><p>开放80端口</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">  --permanent</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">  --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --add-port=80/tcp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="'+c+'" alt="image.png" loading="lazy"> 重启防火墙以使配置即时生效：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> firewalld</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="'+o+'" alt="image.png" loading="lazy"> 测试nginx是否可以访问 <img src="'+m+'" alt="image.png" loading="lazy"> 到这里我们的nginx已经安装好了</p><h3 id="_3-6-配置nginx对程序的转发" tabindex="-1"><a class="header-anchor" href="#_3-6-配置nginx对程序的转发"><span>3.6 配置Nginx对程序的转发</span></a></h3><p>修改nginx的default.conf文件</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /etc/nginx/conf.d/default.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>文件内容如下 <img src="'+b+`" alt="image.png" loading="lazy"> 需要修改server内容为</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">server</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    listen</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 80</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    location</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">        proxy_pass</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> http://localhost:5000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">        proxy_http_version</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">        proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $http_upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">        proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Connection</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> keep-alive</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">        proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Host</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $host</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">        proxy_cache_bypass</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $http_upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存并退出，重新加载配置</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> reload</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>再次运行ASP.NET Core应用程序 <img src="`+u+'" alt="image.png" loading="lazy"> 重新通过本地访问服务器地址 <img src="'+B+'" alt="image.png" loading="lazy"></p><blockquote><p>注意：如果这个时候提供502错误，这个问题是由于 SELinux 保护机制所导致，我们需要将 Nginx 添加至 SELinux 的白名单或者直接关闭SELinux 。</p></blockquote><p>到这里基本完成了部署，但是还存在着其他问题：</p><ul><li>ASP.NETCore应用程序运行在shell之中，如果关闭shell则会发现ASP.NET Core应用被关闭，从而导致应用无法访问，这种情况当然是我们不想遇到的，而且生产环境对这种情况是零容忍的。</li><li>如果ASP.NET Core进程意外终止那么需要人为连进shell进行再次启动，往往这种操作都不够及时。</li><li>如果服务器宕机或需要重启我们则还是需要连入shell进行启动。</li></ul><p>为了解决这些问题，我们需要有一个程序来监听ASP.NET Core 应用程序的状况。那么要解决这些问题，我们就必须要实现这么一个功能：如果ASP.NET Core 意外终止，那么我们要自动重启；如果服务器服务器重启后，我们要有个类似脚本命令一样，自动执行 dotnet 命令。现在正好有个基于 Python 开发的工具 Supervisor 可以解决我们上述问题。</p><h3 id="_3-7-配置supervisor守护服务" tabindex="-1"><a class="header-anchor" href="#_3-7-配置supervisor守护服务"><span>3.7 配置Supervisor守护服务</span></a></h3><p>在应用程序停止运行的时候立即重新启动。这边我们用到了Supervisor这个工具，它是用 Python 开发的 Linux/Unix 系统下的一个进程管理工具。它可以使进程脱离终端，变为后台守护进程（daemon）。实时监控进程状态，异常退出时能自动重启。Supervisor 不支持任何版本的 Window 系统；</p><h4 id="_3-7-1-安装supervisor" tabindex="-1"><a class="header-anchor" href="#_3-7-1-安装supervisor"><span>3.7.1 安装Supervisor</span></a></h4><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">yum </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">y install supervisor</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="'+y+`" alt="image.png" loading="lazy"> 原文的安装方式我可能是因为网络问题没有成功</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">yum install python</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">setuptools</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">easy_install supervisor</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-7-2-配置supervisor" tabindex="-1"><a class="header-anchor" href="#_3-7-2-配置supervisor"><span>3.7.2 配置Supervisor</span></a></h4><ul><li>运行supervisord 服务的时候，需要指定 Supervisor 配置文件，所以，先通过如下命令创建目录，以便让 supervisor 成功加载默认配置：</li></ul><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">mkdir </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">etc</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">supervisor</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>目录创建成功后, 通过 echo_supervisord_conf 程序（用来生成初始配置文件,文件名可以自定义）来初始化一个配置文件：</li></ul><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">echo_supervisord_conf </span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">etc</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">supervisor</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">supervisord.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>通过vim命令修改创建好的supervisord.conf配置信息：</li></ul><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">vi </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">etc</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">supervisor</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">supervisord.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>最下面找到如下文本片段</li></ul><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;[</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">include</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;files </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> relative</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">directory</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/*</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.ini</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>修改为</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">include</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">files </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">etc</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">supervisor</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">conf.d</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/*</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.ini</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-7-3-为我们部署的-net-core添加进程配置文件" tabindex="-1"><a class="header-anchor" href="#_3-7-3-为我们部署的-net-core添加进程配置文件"><span>3.7.3 为我们部署的.NET Core添加进程配置文件</span></a></h4><ul><li>创建配置文件NetByDocker.ini(文件名自定义)</li></ul><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">program</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">NetByDocker</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">command</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">dotnet </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">root</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">publish</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">NetByDocker.dll</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">directory</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">root</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">publish</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">autostart</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">autorestart</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stderr_logfile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=/</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">log</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">NetByDocker.err.log</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stdout_logfile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=/</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">log</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">NetByDocker.out.log</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">environment</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ASPNETCORE_ENVIRONMENT</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">Production</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">user</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">root</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stopsignal</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">INT</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在/etc/supervisor/目录下创建一个文件夹conf.d</li></ul><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">mkdir </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">etc</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">supervisor</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">conf.d</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将刚创建的配置文件NetByDocker.ini移到conf.d文件夹下 <img src="`+v+'" alt="image.png" loading="lazy"> 如果服务已经启动，则需要使用 supervisorctl reload 命令来使新的配置生效，当然，我们这里并没有启动，所以不需要这一步。</p><h4 id="_3-7-4-启动-supervisor-服务" tabindex="-1"><a class="header-anchor" href="#_3-7-4-启动-supervisor-服务"><span>3.7.4 启动 Supervisor 服务</span></a></h4><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">supervisord </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">c </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">etc</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">supervisor</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">supervisord.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>启动服务后，我们可以检测看一下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -ef</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> NetByDocker.dll</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="'+f+'" alt="image.png" loading="lazy"> 这个时候, 我们已经不需要使用dotnet命令运行程序, 同样可以访问我们部署的.NET Core程序了。 <img src="'+A+`" alt="image.png" loading="lazy"></p><h3 id="_3-8-配置supervisor开机启动" tabindex="-1"><a class="header-anchor" href="#_3-8-配置supervisor开机启动"><span>3.8 配置Supervisor开机启动</span></a></h3><ul><li>进入/usr/lib/systemd/system/目录，并创建supervisord.service文件</li></ul><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">vi </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">usr</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">lib</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">systemd</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">system</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">supervisord.service</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>修改文件</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">Unit</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">Description</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">Supervisor daemon</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">Service</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">Type</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">forking</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ExecStart</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">usr</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">bin</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">supervisord </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">c</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">etc</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">supervisor</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">supervisord.conf</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ExecStop</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">usr</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">bin</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">supervisorctl </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$OPTIONS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> shutdown</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ExecReload</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">usr</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">bin</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">supervisorctl </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$OPTIONS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> reload</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">KillMode</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">process</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">Restart</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">on</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">failure</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">RestartSec</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">42s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>设置开机启动</li></ul><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">systemctl enable supervisord.service</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>启动supervisor进程</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">systemctl start supervisord.service</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">systemctl daemon</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">reload</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>验证一下是否为开机启动</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">systemctl is</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">enabled supervisord</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="`+F+'" alt="image.png" loading="lazy"> 重启，测试是否可以开机自启</p><blockquote><p>总结：这个supervisord牵涉到的知识还挺多，如果后续使用该方式部署生产环境的东西，那么还是需要深入学习一下关于它的知识。</p></blockquote><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><p>原文作者：艾三元 地址：<a href="https://mp.weixin.qq.com/s/1x4cStEX3AIgsL9HvJHyCw" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/1x4cStEX3AIgsL9HvJHyCw</a></p><p>centos安装.Net：<a href="https://docs.microsoft.com/zh-cn/dotnet/core/install/linux-centos" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/zh-cn/dotnet/core/install/linux-centos</a> Supervisor echo_supervisord_conf配置详解：<a href="https://www.cnblogs.com/toutou/p/supervisor.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/toutou/p/supervisor.html</a></p>',89),_=[C];function D(x,w){return e(),s("div",null,_)}const S=i(E,[["render",D],["__file","bushuliuchengheshouhujincheng.html.vue"]]),T=JSON.parse('{"path":"/dotnet/buildAndRelease/release/linux/bushuliuchengheshouhujincheng.html","title":"部署流程和守护进程","lang":"zh-CN","frontmatter":{"title":"部署流程和守护进程","lang":"zh-CN","date":"2023-04-01T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"bushuliuchengheshouhujincheng","slug":"gxz1nk","docsId":"60885879","description":"1. 前言 本文是一个在centos系统部署.Net6的文章，本来内容基本上来源于作者艾三元，目的是对部署流程的一次熟悉以及对守护进程的一次学习。 本文示例环境：centos7、VS2022、.Net6 2. 准备 Linux服务器：通过Hyper-v启动的虚拟机(已经写有教程了)，系统使用CentOS-7-x86_64-Minimal-2009.is...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/buildAndRelease/release/linux/bushuliuchengheshouhujincheng.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"部署流程和守护进程"}],["meta",{"property":"og:description","content":"1. 前言 本文是一个在centos系统部署.Net6的文章，本来内容基本上来源于作者艾三元，目的是对部署流程的一次熟悉以及对守护进程的一次学习。 本文示例环境：centos7、VS2022、.Net6 2. 准备 Linux服务器：通过Hyper-v启动的虚拟机(已经写有教程了)，系统使用CentOS-7-x86_64-Minimal-2009.is..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1639837601437-af4681dd-58da-4739-be7e-9a05630036c8.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-25T15:31:40.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-04-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-25T15:31:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"部署流程和守护进程\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1639837601437-af4681dd-58da-4739-be7e-9a05630036c8.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1639838714063-ca4bcfd5-e672-49bb-a67d-86e1aa5dcef4.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1639838883334-b95ed568-b7d6-4dcc-a7eb-c89429fcb625.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1639839517557-0185a35b-75fc-4668-8a07-fbfad677a478.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1639839870336-c6af2519-1900-447d-ae14-f8c790be6184.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1639839993592-75c15580-52e2-4775-be8a-3b37ada75b91.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1639840341305-0ed8a04f-cfdc-449d-8cac-bfa6230fa582.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1639840583319-9a8f5b55-6681-4346-81f9-d402e2e5f5ab.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1639842283164-8d978e96-7b3e-4f62-bdbb-271f3f91c57d.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1639842571210-a353dbff-9aa7-44e7-9b84-f9590b38ac14.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1639842579510-cf93e6ad-d240-437e-8087-4f6d6678ae05.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1639842607219-c852aca1-3e1e-46a0-bd56-4e0205f6ff26.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1639842875816-164cd6a0-3795-4dfd-be75-45b8c58f3dff.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1639843298624-2ad20db7-bea1-44cc-82eb-8ce878e61611.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1641138498600-44f76f54-1e86-4f9c-9d09-ed131f303ff4.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1641177125062-c3e7ab00-cf3e-40ff-97e1-baf99a014105.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1641177803533-fefc2c6a-15ce-449b-a264-0af8e60c568f.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1641177944269-611b9b73-74dd-47c6-8c24-80ce91cf1c65.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1641177966985-0da4a920-89cd-416e-9303-cfd9c9d1643f.png\\",\\"https://azrng.gitee.io/kbms/kbms/common/1641178964141-d6805e66-032f-4a22-abd6-8307db896b69.png\\"],\\"datePublished\\":\\"2023-04-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-25T15:31:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"1. 前言","slug":"_1-前言","link":"#_1-前言","children":[]},{"level":2,"title":"2. 准备","slug":"_2-准备","link":"#_2-准备","children":[]},{"level":2,"title":"3. 开始","slug":"_3-开始","link":"#_3-开始","children":[{"level":3,"title":"3.1 安装环境","slug":"_3-1-安装环境","link":"#_3-1-安装环境","children":[]},{"level":3,"title":"3.2 拷贝项目","slug":"_3-2-拷贝项目","link":"#_3-2-拷贝项目","children":[]},{"level":3,"title":"3.3 部署项目","slug":"_3-3-部署项目","link":"#_3-3-部署项目","children":[]},{"level":3,"title":"3.4 配置Nginx托管","slug":"_3-4-配置nginx托管","link":"#_3-4-配置nginx托管","children":[]},{"level":3,"title":"3.5 配置防火墙","slug":"_3-5-配置防火墙","link":"#_3-5-配置防火墙","children":[]},{"level":3,"title":"3.6 配置Nginx对程序的转发","slug":"_3-6-配置nginx对程序的转发","link":"#_3-6-配置nginx对程序的转发","children":[]},{"level":3,"title":"3.7 配置Supervisor守护服务","slug":"_3-7-配置supervisor守护服务","link":"#_3-7-配置supervisor守护服务","children":[{"level":4,"title":"3.7.1 安装Supervisor","slug":"_3-7-1-安装supervisor","link":"#_3-7-1-安装supervisor","children":[]},{"level":4,"title":"3.7.2 配置Supervisor","slug":"_3-7-2-配置supervisor","link":"#_3-7-2-配置supervisor","children":[]},{"level":4,"title":"3.7.3 为我们部署的.NET Core添加进程配置文件","slug":"_3-7-3-为我们部署的-net-core添加进程配置文件","link":"#_3-7-3-为我们部署的-net-core添加进程配置文件","children":[]},{"level":4,"title":"3.7.4   启动 Supervisor 服务","slug":"_3-7-4-启动-supervisor-服务","link":"#_3-7-4-启动-supervisor-服务","children":[]}]},{"level":3,"title":"3.8 配置Supervisor开机启动","slug":"_3-8-配置supervisor开机启动","link":"#_3-8-配置supervisor开机启动","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1708875100000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":6.33,"words":1900},"filePathRelative":"dotnet/buildAndRelease/release/linux/bushuliuchengheshouhujincheng.md","localizedDate":"2023年4月1日","excerpt":"<h2>1. 前言</h2>\\n<p>本文是一个在centos系统部署.Net6的文章，本来内容基本上来源于作者艾三元，目的是对部署流程的一次熟悉以及对守护进程的一次学习。</p>\\n<blockquote>\\n<p>本文示例环境：centos7、VS2022、.Net6</p>\\n</blockquote>\\n<h2>2. 准备</h2>\\n<p>Linux服务器：通过Hyper-v启动的虚拟机(已经写有教程了)，系统使用CentOS-7-x86_64-Minimal-2009.iso\\ndotNet6程序：<a href=\\"https://gitee.com/AZRNG/my-example\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://gitee.com/AZRNG/my-example</a>  master分支\\n因为我这是一台新的centos7服务器，所以我先手动将 Microsoft 包签名密钥添加到受信任密钥列表，并添加 Microsoft 包存储库。</p>","autoDesc":true}');export{S as comp,T as data};
