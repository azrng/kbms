import{_ as i}from"./image-20231124182003534-NSgzGDMT.js";import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as e,o as l}from"./app-DhDWGI3C.js";const t={};function p(r,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h2 id="odbc是什么" tabindex="-1"><a class="header-anchor" href="#odbc是什么"><span>ODBC是什么？</span></a></h2><p>ODBC是什么？我也不知道，用摘抄一个互联网上的话来解释：ODBC英文全称为：Open Database Connectivity。用于在不同的操作系统和数据库管理系统之间进行数据访问的标准化接口。它提供了一组函数和API，使得应用程序可以通过统一的方式访问不同类型的数据源。 大多数数据源都有适用的 ODBC 驱动程序。</p><p>那么ODBC和ADO.NET以及JDBC的关系是什么？让GPT来回答一下吧：</p><p>ODBC（Open Database Connectivity）和<code>ADO.NET</code>（ActiveX Data Objects .NET）是 Microsoft 开发的数据库访问接口。而 JDBC（Java Database Connectivity）则是由 Sun Microsystems 开发的 Java 数据库访问标准。</p><p>ODBC 和 JDBC 都提供了一种通用的方式来访问数据库，允许开发人员使用标准 SQL 语句来操作各种不同类型的数据库。ADO.NET则是微软针对 .NET 平台开发的数据库访问接口，提供了与 ODBC 类似的功能，但更加面向对象，具有更好的性能和可扩展性。</p><h2 id="为什么要使用odbc而不使用efcore" tabindex="-1"><a class="header-anchor" href="#为什么要使用odbc而不使用efcore"><span>为什么要使用ODBC而不使用EFCore？</span></a></h2><p>我也想使用EFCore或者其他的ORM框架，但是走不通！首先场景是这样子的，我们业务中有一个地方需要去连接甲方的数据库，然后查询数据，这个时候我们是使用的System.Data.SqlClient+Dapper来执行SQL查询的，可是一直报错，大概信息就是类似下面这些</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// 因为修改了好几次，所以信息我已经对不上了，大概出现了下面的这些</span></span>
<span class="line"><span>Connection Timeout Expired. The timeout period elapsed during the post-login phase. The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections. The duration spent while attempting to connect to this server was - [Pre-Login] initialization=3; handshake=10; [Login] initialization=0; authentication=0; [Post-Login] complete=14074;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>或者</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the pre-login handshake.</span></span>
<span class="line"><span>(provider: SSL Provider, error: 31 - Encryption(ssl/tls) handshake failed)</span></span>
<span class="line"><span>System.IO.EndOfStreamException: End of stream reached</span></span>
<span class="line"><span></span></span>
<span class="line"><span>或者</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SSL Handshake failed with OpenSSL error - SSL_ERROR_SSL。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>遇到这个问题，我们首先想在连接字符串上操作去修复解决这个问题，但是最后没有解决，我们想在公司复现，首先直接在我自己电脑本地连接sqlserver2019是没有问题的，然后没办法又在服务器安装了sqlserver2008也没有问题(这里我还傻不拉几想着使用容器部署一个sqlserver2008快，然后信了一个博客老哥的鬼话去拉取他的镜像，结果拉取下来是2019版本的，后来查阅资料才知道sqlserver2008哪里有什么镜像)，然后又模拟正式环境容器化部署，然后终于复现了上面的错误，然后就开始尝试，我们也在网络上查阅了资料，终于在一个文章上看到sqlserver2008不支持TLS1.2，然后按照那个文档的方法去降低容器TSL版本，比如dockerfile增加</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>RUN sed -i &#39;s/MinProtocol = TLSv1.2/MinProtocol = TLSv1/g&#39; /etc/ssl/openssl.cnf</span></span>
<span class="line"><span>RUN sed -i &#39;s/MinProtocol = TLSv1.2/MinProtocol = TLSv1/g&#39; /usr/lib/ssl/openssl.cnf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>结果还是不行，错误变了，继续查阅文章，然后终于找到【嘿dotNet】公众号老哥的一个博客，他在2019年遇到了这个问题，我将他总结性的那部分摘抄出来</p><blockquote><p>.net core 的System.Data.SqlClient支持的最低SqlServer版本是2008 r2 SP3,小于这个版本的就会报这个错。</p><p>来源：<a href="https://github.com/dotnet/corefx/issues/9719" target="_blank" rel="noopener noreferrer">https://github.com/dotnet/corefx/issues/9719</a></p><p>结论：.netcore 连接使用sqlserver遇到以上报错1、报错2的同学,需注意：<strong>.net core 的System.Data.SqlClient支持的最低SqlServer版本是2008 r2 SP3</strong>请先检查数据库版本。</p><p>呼~这个鬼问题浪费了我整整两天+（3个熬夜）</p><p>文章地址：<a href="https://www.cnblogs.com/xiaxiaolu/p/10309064.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/xiaxiaolu/p/10309064.html</a></p></blockquote><p>虽然这个文章的评论中也提到了升级数据库版本可以解决，但是？甲方那边升级数据库肯定不现实的，那只好考虑换个组件什么的？我也尝试了EFCore依赖的包Microsoft.Data.SqlClient也是不行，所以这个时候就咨询其他部门(java)那边连接正常不？他们回复没有问题，然后就产生了要不再搞个java服务去连接的念头？？？这多尴尬，连接微软家的数据库还需要去麻烦其他语言？？？</p><p>领导说再找找资料 。。。然后就找到了Microsoft ODBC Driver for SQL Server</p><h2 id="开始操作" tabindex="-1"><a class="header-anchor" href="#开始操作"><span>开始操作</span></a></h2><p>在Nuget上搜索odbc，排名第一个的一个包是微软和dotnetframework维护的，最近一次更新在几天前，还是8.0.0版本怪新，那就根据文档去操作吧，这里需要注意的是使用ODBC去操作数据库是需要手动安装驱动的，比如我本地调试需要去<a href="https://learn.microsoft.com/zh-cn/sql/connect/odbc/download-odbc-driver-for-sql-server?view=sql-server-ver16" target="_blank" rel="noopener noreferrer">下载</a>驱动安装</p><p>下面来演示一个连接的小示例，新建一个控制台项目名字叫做MsSqlNetCoreOdbc(这里我直接创建.Net6的控制台项目)，然后安装nuget包</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PackageReference</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;System.Data.Odbc&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;6.0.1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写如下代码</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">using</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Odbc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">try</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Server=xxxx;Database=dbName;Uid=sa;Pwd=123xxxx;Encrypt=no;driver=ODBC Driver 18 for SQL Server&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    await </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">using</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> connection</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">OdbcConnection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    connection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    string</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> sqlQuery</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Select @@version&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> command</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">OdbcCommand</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">sqlQuery</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">connection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> reader</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ExecuteScalar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    Console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WriteLine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">reader</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ToString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    Console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WriteLine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;conn success&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    Console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WriteLine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;over&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> ex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    Console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WriteLine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">$&quot;message:{</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">ex</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Message</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">} stackTrace:{</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">ex</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">StackTrace</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ReadLine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里光看这个示例的话，和之前使用System.Data.SqlClient的改动确实不大，换了一个包，使用OdbcConnection创建DbConnection（需要注意的是如果你要使用到参数化等就需要注意了，它的参数化不是@key，而是?key? 我😵）</p><p>这里在安装好驱动的情况下直接运行代码启动调试，会输出下面的信息</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Microsoft SQL Server 2008 R2 (RTM) - 10.50.1600.1 (X64)                                </span></span>
<span class="line"><span>        Apr  2 2010 15:48:46                                                           </span></span>
<span class="line"><span>        Copyright (c) Microsoft Corporation                                            </span></span>
<span class="line"><span>        Enterprise Edition (64-bit) on Windows NT 6.2 &lt;X64&gt; (Build 9200: ) (Hypervisor)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>conn success</span></span>
<span class="line"><span>over</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就要容器化部署测试是否可行了，那么按照官网的文章以及互联网上的资料去拼凑尝试给容器安装驱动，官网文章地址：<a href="https://learn.microsoft.com/zh-cn/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-ver16&amp;tabs=alpine18-install%2Calpine17-install%2Cdebian8-install%2Credhat7-13-install%2Crhel7-offline" target="_blank" rel="noopener noreferrer">此处</a> ，比如看他Ubuntu的示例</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>if ! [[ &quot;18.04 20.04 22.04 23.04&quot; == *&quot;$(lsb_release -rs)&quot;* ]];</span></span>
<span class="line"><span>then</span></span>
<span class="line"><span>    echo &quot;Ubuntu $(lsb_release -rs) is not currently supported.&quot;;</span></span>
<span class="line"><span>    exit;</span></span>
<span class="line"><span>fi</span></span>
<span class="line"><span></span></span>
<span class="line"><span>curl https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc</span></span>
<span class="line"><span></span></span>
<span class="line"><span>curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sudo apt-get update</span></span>
<span class="line"><span>sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18</span></span>
<span class="line"><span># optional: for bcp and sqlcmd</span></span>
<span class="line"><span>sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18</span></span>
<span class="line"><span>echo &#39;export PATH=&quot;$PATH:/opt/mssql-tools18/bin&quot;&#39; &gt;&gt; ~/.bashrc</span></span>
<span class="line"><span>source ~/.bashrc</span></span>
<span class="line"><span># optional: for unixODBC development headers</span></span>
<span class="line"><span>sudo apt-get install -y unixodbc-dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>尝试去容器化部署吧，选中控制台项目右键添加dockerfile文件，并且做下面的修改</p><ul><li>降低容器tls版本</li><li>安装odbc操作驱动</li></ul><p>最后dockerfile需要增加以下内容</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>RUN sed -i &#39;s/deb.debian.org/mirrors.aliyun.com/g&#39; /etc/apt/sources.list &amp;&amp; apt-get update  &amp;&amp; \\</span></span>
<span class="line"><span>    apt-get install -y unixodbc unixodbc-dev curl</span></span>
<span class="line"><span>RUN curl https://packages.microsoft.com/keys/microsoft.asc |  tee /etc/apt/trusted.gpg.d/microsoft.asc &amp;&amp; curl https://packages.microsoft.com/config/debian/11/prod.list &gt; /etc/apt/sources.list.d/mssql-release.list &amp;&amp; \\</span></span>
<span class="line"><span>    apt-get update &amp;&amp; \\</span></span>
<span class="line"><span>    ACCEPT_EULA=Y apt-get install -y msodbcsql18 &amp;&amp; \\</span></span>
<span class="line"><span>    apt-get clean -y &amp;&amp; \\</span></span>
<span class="line"><span>    rm -rf /var/lib/apt/lists/*</span></span>
<span class="line"><span>COPY ./MSSQL_NetCore_Odbc/odbcinst.ini /etc/odbcinst.ini</span></span>
<span class="line"><span></span></span>
<span class="line"><span>RUN sed -i &#39;s/MinProtocol = TLSv1.2/MinProtocol = TLSv1/g&#39; /etc/ssl/openssl.cnf</span></span>
<span class="line"><span>RUN sed -i &#39;s/MinProtocol = TLSv1.2/MinProtocol = TLSv1/g&#39; /usr/lib/ssl/openssl.cnf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中odbcinst.ini内容为</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[ODBC Driver 18 for SQL Server]</span></span>
<span class="line"><span>Description=Microsoft ODBC Driver 18 for SQL Server</span></span>
<span class="line"><span>Driver=/opt/microsoft/msodbcsql18/lib64/libmsodbcsql-18.3.so.2.1</span></span>
<span class="line"><span>UsageCount=1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后重新启动生成容器，发现已经连接成功，输出信息如下</p><figure><img src="`+i+'" alt="image-20231124182003534" tabindex="0" loading="lazy"><figcaption>image-20231124182003534</figcaption></figure><p>连接成功，结束</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><p>Microsoft ODBC Driver for SQL Server：<a href="https://learn.microsoft.com/zh-cn/sql/connect/odbc/microsoft-odbc-driver-for-sql-server?view=sql-server-ver16" target="_blank" rel="noopener noreferrer">https://learn.microsoft.com/zh-cn/sql/connect/odbc/microsoft-odbc-driver-for-sql-server?view=sql-server-ver16</a></p><p>SSL Handshake failed with OpenSSL error - SSL_ERROR_SSL：<a href="https://www.cnblogs.com/printertool/p/14084385.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/printertool/p/14084385.html</a></p><p><a href="https://www.cnblogs.com/yuanzhongkui/p/4022557.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/yuanzhongkui/p/4022557.html</a> 连接sqlsever</p><p><a href="https://www.cnblogs.com/xiaxiaolu/p/10309064.html" target="_blank" rel="noopener noreferrer">Connection open error . Connection Timeout Expired. The timeout period elapsed during the post-login phase.</a></p>',39)]))}const c=n(t,[["render",p]]),k=JSON.parse('{"path":"/orm/odbc/odbcSqlServer.html","title":"为什么要使用ODBC连接SqlServer","lang":"zh-CN","frontmatter":{"title":"为什么要使用ODBC连接SqlServer","lang":"zh-CN","date":"2023-07-19T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["orm"],"tag":["odbc"],"description":"ODBC是什么？ ODBC是什么？我也不知道，用摘抄一个互联网上的话来解释：ODBC英文全称为：Open Database Connectivity。用于在不同的操作系统和数据库管理系统之间进行数据访问的标准化接口。它提供了一组函数和API，使得应用程序可以通过统一的方式访问不同类型的数据源。 大多数数据源都有适用的 ODBC 驱动程序。 那么ODBC...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"为什么要使用ODBC连接SqlServer\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/image-20231124182003534.png\\"],\\"datePublished\\":\\"2023-07-19T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-12T14:34:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"],["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/orm/odbc/odbcSqlServer.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"为什么要使用ODBC连接SqlServer"}],["meta",{"property":"og:description","content":"ODBC是什么？ ODBC是什么？我也不知道，用摘抄一个互联网上的话来解释：ODBC英文全称为：Open Database Connectivity。用于在不同的操作系统和数据库管理系统之间进行数据访问的标准化接口。它提供了一组函数和API，使得应用程序可以通过统一的方式访问不同类型的数据源。 大多数数据源都有适用的 ODBC 驱动程序。 那么ODBC..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/image-20231124182003534.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-12T14:34:46.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"odbc"}],["meta",{"property":"article:published_time","content":"2023-07-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-12T14:34:46.000Z"}]]},"git":{"createdTime":1700841728000,"updatedTime":1710254086000,"contributors":[{"name":"azrng","username":"","email":"itzhangyunpeng@163.com","commits":3}]},"readingTime":{"minutes":6.31,"words":1894},"filePathRelative":"orm/odbc/odbcSqlServer.md","excerpt":"<h2>ODBC是什么？</h2>\\n<p>ODBC是什么？我也不知道，用摘抄一个互联网上的话来解释：ODBC英文全称为：Open Database Connectivity。用于在不同的操作系统和数据库管理系统之间进行数据访问的标准化接口。它提供了一组函数和API，使得应用程序可以通过统一的方式访问不同类型的数据源。 大多数数据源都有适用的 ODBC 驱动程序。</p>\\n<p>那么ODBC和ADO.NET以及JDBC的关系是什么？让GPT来回答一下吧：</p>\\n<p>ODBC（Open Database Connectivity）和<code>ADO.NET</code>（ActiveX Data Objects .NET）是 Microsoft 开发的数据库访问接口。而 JDBC（Java Database Connectivity）则是由 Sun Microsystems 开发的 Java 数据库访问标准。</p>","autoDesc":true}');export{c as comp,k as data};
