import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o as r}from"./app-B8CExjn9.js";const l={};function i(o,e){return r(),a("div",null,e[0]||(e[0]=[n('<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>熔断器如同电力过载保护器。它可以实现快速失败,如果它在一段时间内侦测到许多类似的错误,会强迫其以后的多个调用快速失败,不再访问远程服务器,从而防止应用程序不断地尝试执行可能会失败的操作,使得应用程序继续执行而不用等待修正错误,或者浪费时间去等到长时间的超时产生。</p><p>降级的目的是当某个服务提供者发生故障的时候,向调用方返回一个错误响应或者替代响应。举例子:如视频播放器请求playsafe的替代方案;加载内容评论时如果出错,则以缓存中加载或者显示&quot;评论暂时不可用&quot; 。</p><h2 id="resilience" tabindex="-1"><a class="header-anchor" href="#resilience"><span>Resilience</span></a></h2><p><a href="https://mp.weixin.qq.com/s/CaR-SC_hmlgAtjS97mzRvg" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/CaR-SC_hmlgAtjS97mzRvg</a> | .NET 8 中的 Microsoft.Extensions.Http.Resilience库</p><h2 id="polly" tabindex="-1"><a class="header-anchor" href="#polly"><span>Polly</span></a></h2><p>.Net Core中有一个被.Net基金会认可的库Polly,可以用来简化熔断降级的处理。主要功能：重试(Retry) ；断路器(Circuit-breaker) ；超时检测(Timeout) ；缓存(Cache) ；失败处理(FallBack) ；<br> 官网: <a href="https://github.com/App-vNext/Polly" target="_blank" rel="noopener noreferrer">https://github.com/App-vNext/Polly</a></p><h3 id="重试" tabindex="-1"><a class="header-anchor" href="#重试"><span>重试</span></a></h3><p>出现故障自动重试，常见单场景</p><h3 id="断路" tabindex="-1"><a class="header-anchor" href="#断路"><span>断路</span></a></h3><p>当系统遇到严重问题是还，限制系统出错单消耗，有助于系统恢复。比如限制系统出现两次某个异常就停下来，等待一分钟后再继续，还可以在断路时定义中断单回调和重启单回调。</p><h3 id="超时" tabindex="-1"><a class="header-anchor" href="#超时"><span>超时</span></a></h3><p>当系统超过一定时间的等待，就可以判断不可能会有成功单结果。</p><h3 id="隔离" tabindex="-1"><a class="header-anchor" href="#隔离"><span>隔离</span></a></h3><p>当系统的一处出现故障时，可能触发多个失败的调用，对资源有较大的消耗，下游系统出现故障可能导致上游的故障的调用，甚至可能蔓延到导致系统崩溃，所以要将可控的操作限制在一个固定大小的资源池中，以隔离有潜在可能相互影响的操作；</p><h3 id="回退" tabindex="-1"><a class="header-anchor" href="#回退"><span>回退</span></a></h3><p>有些错误无法避免，就要有备用单方案，当无法避免单错误发生时，我们要有一个合理单返回来代替失败。</p><h3 id="缓存" tabindex="-1"><a class="header-anchor" href="#缓存"><span>缓存</span></a></h3><p>把频繁使用并且不怎么变化的资源缓存起来，以提高系统的响应速度。</p><p>参考文章：<a href="https://www.cnblogs.com/edisonchou/p/9159644.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/edisonchou/p/9159644.html</a><br> 介绍文章: <a href="https://www.cnblogs.com/CreateMyself/p/7589397.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/CreateMyself/p/7589397.html</a></p><p></p><p></p>',22)]))}const h=t(l,[["render",i],["__file","rongduanjiangji.html.vue"]]),c=JSON.parse('{"path":"/middleware/smallService/rongduanjiangji.html","title":"熔断降级","lang":"zh-CN","frontmatter":{"title":"熔断降级","lang":"zh-CN","date":"2023-06-23T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"rongduanjiangji","slug":"kc2hsh","docsId":"32034341","description":"介绍 熔断器如同电力过载保护器。它可以实现快速失败,如果它在一段时间内侦测到许多类似的错误,会强迫其以后的多个调用快速失败,不再访问远程服务器,从而防止应用程序不断地尝试执行可能会失败的操作,使得应用程序继续执行而不用等待修正错误,或者浪费时间去等到长时间的超时产生。 降级的目的是当某个服务提供者发生故障的时候,向调用方返回一个错误响应或者替代响应。举...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/smallService/rongduanjiangji.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"熔断降级"}],["meta",{"property":"og:description","content":"介绍 熔断器如同电力过载保护器。它可以实现快速失败,如果它在一段时间内侦测到许多类似的错误,会强迫其以后的多个调用快速失败,不再访问远程服务器,从而防止应用程序不断地尝试执行可能会失败的操作,使得应用程序继续执行而不用等待修正错误,或者浪费时间去等到长时间的超时产生。 降级的目的是当某个服务提供者发生故障的时候,向调用方返回一个错误响应或者替代响应。举..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-07T14:59:04.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-06-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-07T14:59:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"熔断降级\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-23T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-07T14:59:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"Resilience","slug":"resilience","link":"#resilience","children":[]},{"level":2,"title":"Polly","slug":"polly","link":"#polly","children":[{"level":3,"title":"重试","slug":"重试","link":"#重试","children":[]},{"level":3,"title":"断路","slug":"断路","link":"#断路","children":[]},{"level":3,"title":"超时","slug":"超时","link":"#超时","children":[]},{"level":3,"title":"隔离","slug":"隔离","link":"#隔离","children":[]},{"level":3,"title":"回退","slug":"回退","link":"#回退","children":[]},{"level":3,"title":"缓存","slug":"缓存","link":"#缓存","children":[]}]}],"git":{"createdTime":1697724028000,"updatedTime":1715093944000,"contributors":[{"name":"azrng","username":"azrng","email":"itzhangyunpeng@163.com","commits":3}]},"readingTime":{"minutes":2.09,"words":627},"filePathRelative":"middleware/smallService/rongduanjiangji.md","localizedDate":"2023年6月23日","excerpt":"<h2>介绍</h2>\\n<p>熔断器如同电力过载保护器。它可以实现快速失败,如果它在一段时间内侦测到许多类似的错误,会强迫其以后的多个调用快速失败,不再访问远程服务器,从而防止应用程序不断地尝试执行可能会失败的操作,使得应用程序继续执行而不用等待修正错误,或者浪费时间去等到长时间的超时产生。</p>\\n<p>降级的目的是当某个服务提供者发生故障的时候,向调用方返回一个错误响应或者替代响应。举例子:如视频播放器请求playsafe的替代方案;加载内容评论时如果出错,则以缓存中加载或者显示\\"评论暂时不可用\\" 。</p>\\n<h2>Resilience</h2>\\n<p><a href=\\"https://mp.weixin.qq.com/s/CaR-SC_hmlgAtjS97mzRvg\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://mp.weixin.qq.com/s/CaR-SC_hmlgAtjS97mzRvg</a> | .NET 8 中的 Microsoft.Extensions.Http.Resilience库</p>","autoDesc":true}');export{h as comp,c as data};
