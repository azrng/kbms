import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,d as n,o as a}from"./app-Du2i1EF2.js";const o="/kbms/common/1614392596148-7270f71a-b34e-4f59-a3c2-5d9e788fc0fe.png",i={};function s(l,e){return a(),r("div",null,e[0]||(e[0]=[n('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>SinalR for <a href="http://ASP.Net" target="_blank" rel="noopener noreferrer">ASP.Net</a> Core 是 SignalR 的浴火重生版，允许你在 <a href="http://ASP.Net" target="_blank" rel="noopener noreferrer">ASP.Net</a> Core 中实现实时通讯，这里的 <code>实时</code> 意味着双方都能快速的感知对方发来的消息，比如：一旦 server 端有需要推送的内容将会直接 push 到 client，这和原始的 http 单向请求有着本质的区别。</p><p>官方文档：<a href="https://docs.microsoft.com/zh-cn/aspnet/core/signalr/introduction?view=aspnetcore-3.1" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/zh-cn/aspnet/core/signalr/introduction?view=aspnetcore-3.1</a><br> 中心文档：<a href="https://docs.microsoft.com/zh-cn/aspnet/core/signalr/hubs?view=aspnetcore-3.1" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/zh-cn/aspnet/core/signalr/hubs?view=aspnetcore-3.1 </a><br> 配置文件：<a href="https://docs.microsoft.com/zh-cn/aspnet/core/signalr/configuration?view=aspnetcore-3.1&amp;tabs=dotnet" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/zh-cn/aspnet/core/signalr/configuration?view=aspnetcore-3.1&amp;tabs=dotnet</a></p><h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景"><span>场景</span></a></h2><ul><li>需要从服务器进行高频率更新的应用。 示例包括游戏、社交网络、投票、拍卖、地图和 GPS 应用。</li><li>仪表板和监视应用。 示例包括公司仪表板、即时销售更新或旅行警报。</li><li>协作应用。 协作应用的示例包括白板应用和团队会议软件。</li><li>需要通知的应用。 社交网络、电子邮件、聊天、游戏、旅行警报和很多其他应用都需使用通知。</li></ul><h2 id="连接方式" tabindex="-1"><a class="header-anchor" href="#连接方式"><span>连接方式</span></a></h2><p>默认采用的回落机制来进行传输和连接，也可以禁用回落机制，只采用一种传输方式。<br> Long polling =&gt; Server Sent Events =&gt; Web Scoket，优先选择传输最好的<br><img src="'+o+'" alt="image.png" loading="lazy"></p><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h2><p>RPC：远程调用，优点就是可以像调用本地方法一样调用远程服务<br> signalr采用rpc范式来进行客户端与服务器端之间的通信。服务端调用客户端是利用底层传输实现的。</p><p>Hub<br> 是signalr的一个组件，运行在后台，是服务器端的一个类<br> Hub使用RPC接受从客户端发来的消息，也能将消息发送到客户端，所以它就是一个通信的中心。<br> signalr可以将参数序列化和反序列化，这个参数被序列化的格式叫做Hub协议，所以Hub协议就是一种用来序列化和反序列化的格式，这个协议默认是JSON，也可以是MessagePack(二进制，更紧凑，处理起来更快)，也可以扩展其他协议。</p><p>横向扩展<br> 如果后台服务要搭建负载均衡，使用web socket时候并没有什么问题，但是在长轮询的情况下，需要使用Sticky Sessions (粘性会话).</p><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><blockquote><p>系列博客推荐：<a href="https://www.cnblogs.com/qianxingmu/tag/SignalR/" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/qianxingmu/tag/SignalR/</a></p></blockquote>',13)]))}const h=t(i,[["render",s],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/dotnet/signalr/","title":"说明","lang":"zh-CN","frontmatter":{"title":"说明","lang":"zh-CN","date":"2023-10-17T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"signalr","slug":"kl3p1r","docsId":"32030064","description":"概述 SinalR for ASP.Net Core 是 SignalR 的浴火重生版，允许你在 ASP.Net Core 中实现实时通讯，这里的 实时 意味着双方都能快速的感知对方发来的消息，比如：一旦 server 端有需要推送的内容将会直接 push 到 client，这和原始的 http 单向请求有着本质的区别。 官方文档：https://do...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/signalr/"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"说明"}],["meta",{"property":"og:description","content":"概述 SinalR for ASP.Net Core 是 SignalR 的浴火重生版，允许你在 ASP.Net Core 中实现实时通讯，这里的 实时 意味着双方都能快速的感知对方发来的消息，比如：一旦 server 端有需要推送的内容将会直接 push 到 client，这和原始的 http 单向请求有着本质的区别。 官方文档：https://do..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://azrng.gitee.io/kbms/kbms/common/1614392596148-7270f71a-b34e-4f59-a3c2-5d9e788fc0fe.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-29T08:52:02.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-29T08:52:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"说明\\",\\"image\\":[\\"https://azrng.gitee.io/kbms/kbms/common/1614392596148-7270f71a-b34e-4f59-a3c2-5d9e788fc0fe.png\\"],\\"datePublished\\":\\"2023-10-17T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-29T08:52:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"场景","slug":"场景","link":"#场景","children":[]},{"level":2,"title":"连接方式","slug":"连接方式","link":"#连接方式","children":[]},{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1719651122000,"contributors":[{"name":"azrng","username":"azrng","email":"itzhangyunpeng@163.com","commits":3}]},"readingTime":{"minutes":2.11,"words":632},"filePathRelative":"dotnet/signalr/readme.md","localizedDate":"2023年10月17日","excerpt":"<h2>概述</h2>\\n<p>SinalR for <a href=\\"http://ASP.Net\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ASP.Net</a> Core 是 SignalR 的浴火重生版，允许你在 <a href=\\"http://ASP.Net\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ASP.Net</a> Core 中实现实时通讯，这里的&nbsp;<code>实时</code>&nbsp;意味着双方都能快速的感知对方发来的消息，比如：一旦 server 端有需要推送的内容将会直接 push 到 client，这和原始的 http 单向请求有着本质的区别。</p>","autoDesc":true}');export{h as comp,g as data};
