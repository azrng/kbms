import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as t,o as a}from"./app-DaCCUZLQ.js";const s={};function r(l,e){return a(),n("div",null,e[0]||(e[0]=[t(`<h2 id="部署" tabindex="-1"><a class="header-anchor" href="#部署"><span>部署</span></a></h2><p>docker部署</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">docker run --name nginxwebui -itd -v /root/nginxWebUI:/home/nginxWebUI -v /var/net:/home/nginxWebUI/data -e BOOT_OPTIONS=&quot;--server.port=9008&quot; --privileged=true --net=host  cym1102/nginxwebui:latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>/var/net:/home/nginxWebUI/data 代码挂载目录 --server.port=9008 是容器端口为9008 --net=host 外面所有端口都映射到内部</p></blockquote><p>如果nginx是通过容器启动的，那么我们在写映射路径的时候，要将部署的代码映射到容器内，这样子容器才能访问得到，比如var/net:/home/nginxWebUI/data，然后部署网站的时候反向代理的代理目标就变成了/home/nginxWebUI/data/kbms</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">server {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  listen 8013;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  location / {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    root /home/nginxWebUI/data/kbms;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    index index.html;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新生成文件后，最好按顺序执行：校验文件–》替换文件–》重新装载</p><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><p>Gitee：<a href="https://gitee.com/cym1102/nginxWebUI" target="_blank" rel="noopener noreferrer">https://gitee.com/cym1102/nginxWebUI</a></p>`,9)]))}const h=i(s,[["render",r],["__file","nginxwebui.html.vue"]]),p=JSON.parse('{"path":"/middleware/reverseProxy/nginx/webui/nginxwebui.html","title":"NginxWebUI","lang":"zh-CN","frontmatter":{"title":"NginxWebUI","lang":"zh-CN","date":"2023-10-01T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"nginxwebui","slug":"ychpws","docsId":"52490584","description":"部署 docker部署 /var/net:/home/nginxWebUI/data 代码挂载目录 --server.port=9008 是容器端口为9008 --net=host 外面所有端口都映射到内部 如果nginx是通过容器启动的，那么我们在写映射路径的时候，要将部署的代码映射到容器内，这样子容器才能访问得到，比如var/net:/home/n...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/reverseProxy/nginx/webui/nginxwebui.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"NginxWebUI"}],["meta",{"property":"og:description","content":"部署 docker部署 /var/net:/home/nginxWebUI/data 代码挂载目录 --server.port=9008 是容器端口为9008 --net=host 外面所有端口都映射到内部 如果nginx是通过容器启动的，那么我们在写映射路径的时候，要将部署的代码映射到容器内，这样子容器才能访问得到，比如var/net:/home/n..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-07T14:59:04.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-10-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-07T14:59:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"NginxWebUI\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-07T14:59:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"部署","slug":"部署","link":"#部署","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1715093944000,"contributors":[{"name":"azrng","username":"azrng","email":"itzhangyunpeng@163.com","commits":2}]},"readingTime":{"minutes":0.67,"words":200},"filePathRelative":"middleware/reverseProxy/nginx/webui/nginxwebui.md","localizedDate":"2023年10月1日","excerpt":"<h2>部署</h2>\\n<p>docker部署</p>\\n<div class=\\"language-yaml line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"yaml\\" data-title=\\"yaml\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">docker run --name nginxwebui -itd -v /root/nginxWebUI:/home/nginxWebUI -v /var/net:/home/nginxWebUI/data -e BOOT_OPTIONS=\\"--server.port=9008\\" --privileged=true --net=host  cym1102/nginxwebui:latest</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{h as comp,p as data};
