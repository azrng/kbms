import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-Bw62I61B.js";const e={},p=t(`<h2 id="目的" tabindex="-1"><a class="header-anchor" href="#目的"><span>目的</span></a></h2><p>通过cookie实现认证功能</p><blockquote><p>本文示例环境：.Net Framework 4.6</p></blockquote><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><p>流程： 一个检测用户是否已经登录的过滤器，如果用户已经登录，那么就跳转去登录，登录时候把用户的信息存储到HttpCookie中</p><h3 id="登录流程" tabindex="-1"><a class="header-anchor" href="#登录流程"><span>登录流程</span></a></h3><p>登录方法</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpPost</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name">ActionResult</span> <span class="token function">Login</span><span class="token punctuation">(</span><span class="token class-name">UserInfo</span> info<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>Account <span class="token operator">==</span> <span class="token string">&quot;admin&quot;</span> <span class="token operator">&amp;&amp;</span> info<span class="token punctuation">.</span>PassWord <span class="token operator">==</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">HttpCookie</span> username <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpCookie</span><span class="token punctuation">(</span><span class="token string">&quot;uname&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HttpCookie</span> pwd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpCookie</span><span class="token punctuation">(</span><span class="token string">&quot;pwd&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        System<span class="token punctuation">.</span>Web<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>Response<span class="token punctuation">.</span><span class="token function">SetCookie</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>Web<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>Response<span class="token punctuation">.</span><span class="token function">SetCookie</span><span class="token punctuation">(</span>pwd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> a <span class="token operator">=</span> System<span class="token punctuation">.</span>Web<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>Response<span class="token punctuation">.</span>Cookies<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">Redirect</span><span class="token punctuation">(</span><span class="token string">&quot;Index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">View</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>退出登录方法</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">CheckLogin</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name">ActionResult</span> <span class="token function">LogOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    FormsAuthentication<span class="token punctuation">.</span><span class="token function">SignOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">Redirect</span><span class="token punctuation">(</span><span class="token string">&quot;Login&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要认证的方法</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">CheckLogin</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name">ActionResult</span> <span class="token function">Index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">View</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>CheckLogin过滤器代码</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CheckLogin</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ActionFilterAttribute</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnActionExecuting</span><span class="token punctuation">(</span><span class="token class-name">ActionExecutingContext</span> filterContext<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">HttpCookieCollection</span> cookieCollection <span class="token operator">=</span> System<span class="token punctuation">.</span>Web<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Cookies<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cookieCollection<span class="token punctuation">[</span><span class="token string">&quot;uname&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> cookieCollection<span class="token punctuation">[</span><span class="token string">&quot;pwd&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            filterContext<span class="token punctuation">.</span>Result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RedirectResult</span><span class="token punctuation">(</span><span class="token string">&quot;/Home/Login&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//如果信息为空 那么就跳转到登录界面进行登录操作</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cookieCollection<span class="token punctuation">[</span><span class="token string">&quot;uname&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value <span class="token operator">!=</span> <span class="token string">&quot;admin&quot;</span> <span class="token operator">&amp;&amp;</span> cookieCollection<span class="token punctuation">[</span><span class="token string">&quot;pwd&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value <span class="token operator">!=</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                filterContext<span class="token punctuation">.</span>Result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RedirectResult</span><span class="token punctuation">(</span><span class="token string">&quot;/Home/Login&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>RegisterGlobalFilters中注册过滤器</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterGlobalFilters</span><span class="token punctuation">(</span><span class="token class-name">GlobalFilterCollection</span> filters<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    filters<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">HandleErrorAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    filters<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CheckLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>通过过滤器拦截实现认证功能。</p>`,18),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","netfcookie.html.vue"]]),d=JSON.parse('{"path":"/dotnet/anquanhebiaoshi/shenfenrenzhengheshouquan/cookieshenfenrenzheng/netfcookie.html","title":"NetFCookie","lang":"zh-CN","frontmatter":{"title":"NetFCookie","lang":"zh-CN","date":"2022-01-13T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"netfcookie","slug":"urtbga","docsId":"64697528","description":"目的 通过cookie实现认证功能 本文示例环境：.Net Framework 4.6 操作 流程： 一个检测用户是否已经登录的过滤器，如果用户已经登录，那么就跳转去登录，登录时候把用户的信息存储到HttpCookie中 登录流程 登录方法 退出登录方法 需要认证的方法 CheckLogin过滤器代码 RegisterGlobalFilters中注册过...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/anquanhebiaoshi/shenfenrenzhengheshouquan/cookieshenfenrenzheng/netfcookie.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"NetFCookie"}],["meta",{"property":"og:description","content":"目的 通过cookie实现认证功能 本文示例环境：.Net Framework 4.6 操作 流程： 一个检测用户是否已经登录的过滤器，如果用户已经登录，那么就跳转去登录，登录时候把用户的信息存储到HttpCookie中 登录流程 登录方法 退出登录方法 需要认证的方法 CheckLogin过滤器代码 RegisterGlobalFilters中注册过..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-01-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"NetFCookie\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-13T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"目的","slug":"目的","link":"#目的","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"登录流程","slug":"登录流程","link":"#登录流程","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.91,"words":272},"filePathRelative":"dotnet/anquanhebiaoshi/shenfenrenzhengheshouquan/cookieshenfenrenzheng/netfcookie.md","localizedDate":"2022年1月13日","excerpt":"<h2>目的</h2>\\n<p>通过cookie实现认证功能</p>\\n<blockquote>\\n<p>本文示例环境：.Net Framework 4.6</p>\\n</blockquote>\\n<h2>操作</h2>\\n<p>流程： 一个检测用户是否已经登录的过滤器，如果用户已经登录，那么就跳转去登录，登录时候把用户的信息存储到HttpCookie中</p>\\n<h3>登录流程</h3>\\n<p>登录方法</p>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token punctuation\\">[</span><span class=\\"token attribute\\"><span class=\\"token class-name\\">HttpPost</span></span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token return-type class-name\\">ActionResult</span> <span class=\\"token function\\">Login</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">UserInfo</span> info<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>info<span class=\\"token punctuation\\">.</span>Account <span class=\\"token operator\\">==</span> <span class=\\"token string\\">\\"admin\\"</span> <span class=\\"token operator\\">&amp;&amp;</span> info<span class=\\"token punctuation\\">.</span>PassWord <span class=\\"token operator\\">==</span> <span class=\\"token string\\">\\"123456\\"</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">HttpCookie</span> username <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">HttpCookie</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"uname\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"admin\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">HttpCookie</span> pwd <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">HttpCookie</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"pwd\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"123456\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        System<span class=\\"token punctuation\\">.</span>Web<span class=\\"token punctuation\\">.</span>HttpContext<span class=\\"token punctuation\\">.</span>Current<span class=\\"token punctuation\\">.</span>Response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">SetCookie</span><span class=\\"token punctuation\\">(</span>username<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        System<span class=\\"token punctuation\\">.</span>Web<span class=\\"token punctuation\\">.</span>HttpContext<span class=\\"token punctuation\\">.</span>Current<span class=\\"token punctuation\\">.</span>Response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">SetCookie</span><span class=\\"token punctuation\\">(</span>pwd<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> a <span class=\\"token operator\\">=</span> System<span class=\\"token punctuation\\">.</span>Web<span class=\\"token punctuation\\">.</span>HttpContext<span class=\\"token punctuation\\">.</span>Current<span class=\\"token punctuation\\">.</span>Response<span class=\\"token punctuation\\">.</span>Cookies<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">Redirect</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Index\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">View</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{r as comp,d as data};
