import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o,c,a as n,b as a,d as e,e as i}from"./app-vSdX8vi3.js";const l={},r=n("h2",{id:"概述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#概述"},[n("span",null,"概述")])],-1),u=n("ul",null,[n("li",null,"一个基于 SeetaFace6 的 .NET 人脸识别解决方案"),n("li",null,"本项目受到了 SeetaFaceEngine.Net 的启发"),n("li",null,"开源、免费、跨平台 (win/linux)")],-1),k={href:"https://github.com/ViewFaceCore/ViewFaceCore",target:"_blank",rel:"noopener noreferrer"},d=i(`<h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h2><h3 id="获取人脸信息" tabindex="-1"><a class="header-anchor" href="#获取人脸信息"><span>获取人脸信息</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">SkiaSharp</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">ViewFaceCore<span class="token punctuation">.</span>Core</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">ViewFaceCore<span class="token punctuation">.</span>Model</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">ViewFaceCore<span class="token punctuation">.</span>Demo<span class="token punctuation">.</span>ConsoleApp</span>
<span class="token punctuation">{</span>
    <span class="token keyword">internal</span> <span class="token keyword">class</span> <span class="token class-name">Program</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token keyword">static</span> <span class="token class-name"><span class="token keyword">string</span></span> imagePath <span class="token operator">=</span> <span class="token string">@&quot;images/Jay_3.jpg&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> bitmap <span class="token operator">=</span> SKBitmap<span class="token punctuation">.</span><span class="token function">Decode</span><span class="token punctuation">(</span>imagePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">using</span> <span class="token class-name">FaceDetector</span> faceDetector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FaceDetector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">FaceInfo<span class="token punctuation">[</span><span class="token punctuation">]</span></span> infos <span class="token operator">=</span> faceDetector<span class="token punctuation">.</span><span class="token function">Detect</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">)</span><span class="token punctuation">;</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;识别到的人脸数量：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">infos<span class="token punctuation">.</span>Length</span><span class="token punctuation">}</span></span><span class="token string"> 个人脸信息：\\n&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;No.\\t人脸置信度\\t位置信息&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> infos<span class="token punctuation">.</span>Length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">i</span><span class="token punctuation">}</span></span><span class="token string">\\t</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">infos<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>Score</span><span class="token format-string"><span class="token punctuation">:</span>f8</span><span class="token punctuation">}</span></span><span class="token string">\\t</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">infos<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>Location</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            Console<span class="token punctuation">.</span><span class="token function">ReadKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,4),m={href:"https://mp.weixin.qq.com/s/7qGcgDcIfuUNRFdauFi45Q",target:"_blank",rel:"noopener noreferrer"};function h(g,v){const s=p("ExternalLinkIcon");return o(),c("div",null,[r,u,n("p",null,[a("仓库地址："),n("a",k,[a("https://github.com/ViewFaceCore/ViewFaceCore"),e(s)])]),d,n("p",null,[n("a",m,[a("https://mp.weixin.qq.com/s/7qGcgDcIfuUNRFdauFi45Q"),e(s)]),a(" | C#开源跨平台使用简单的离线人脸识别库")])])}const f=t(l,[["render",h],["__file","viewfacecore.html.vue"]]),y=JSON.parse('{"path":"/middleware/tuxiangchuli/renlianshibie/viewfacecore.html","title":"ViewFaceCore","lang":"zh-CN","frontmatter":{"title":"ViewFaceCore","lang":"zh-CN","date":"2023-09-02T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["middleware"],"tag":["无"],"filename":"viewfacecore","slug":"ss2sawmzxybp1zxl","docsId":"138135178","description":"概述 一个基于 SeetaFace6 的 .NET 人脸识别解决方案 本项目受到了 SeetaFaceEngine.Net 的启发 开源、免费、跨平台 (win/linux) 仓库地址：https://github.com/ViewFaceCore/ViewFaceCore 操作 获取人脸信息 资料 https://mp.weixin.qq.com/s...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/middleware/tuxiangchuli/renlianshibie/viewfacecore.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"ViewFaceCore"}],["meta",{"property":"og:description","content":"概述 一个基于 SeetaFace6 的 .NET 人脸识别解决方案 本项目受到了 SeetaFaceEngine.Net 的启发 开源、免费、跨平台 (win/linux) 仓库地址：https://github.com/ViewFaceCore/ViewFaceCore 操作 获取人脸信息 资料 https://mp.weixin.qq.com/s..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:00:28.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2023-09-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:00:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ViewFaceCore\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-19T14:00:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"操作","slug":"操作","link":"#操作","children":[{"level":3,"title":"获取人脸信息","slug":"获取人脸信息","link":"#获取人脸信息","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697724028000,"updatedTime":1697724028000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.63,"words":188},"filePathRelative":"middleware/tuxiangchuli/renlianshibie/viewfacecore.md","localizedDate":"2023年9月2日","excerpt":"<h2>概述</h2>\\n<ul>\\n<li>一个基于 SeetaFace6 的 .NET 人脸识别解决方案</li>\\n<li>本项目受到了 SeetaFaceEngine.Net 的启发</li>\\n<li>开源、免费、跨平台 (win/linux)</li>\\n</ul>\\n<p>仓库地址：<a href=\\"https://github.com/ViewFaceCore/ViewFaceCore\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/ViewFaceCore/ViewFaceCore</a></p>\\n<h2>操作</h2>","autoDesc":true}');export{f as comp,y as data};
