import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as p,c as o,b as n,e as s,f as c,d as l}from"./app-D8HBJYTp.js";const i={},r=l(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><h2 id="源码解答" tabindex="-1"><a class="header-anchor" href="#源码解答"><span>源码解答</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>context<span class="token punctuation">.</span>User<span class="token punctuation">.</span><span class="token function">AddIdentities</span><span class="token punctuation">(</span>claimIdentiies<span class="token punctuation">)</span><span class="token punctuation">;</span>

context<span class="token punctuation">.</span>User <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ClaimsPrincipal</span><span class="token punctuation">(</span>claimsIdentity<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>HttpContext对象用来表示抽象的Http上下文，而HttpContext对象的核心又体现在用于描述请求的Request和描述响应的的Response的属性上。除此之外，它还包含一些与当前请求相关的其他上下文信息，比如描述当前HTTP连接的ConnectionInfo对象，控制器WebSocket的WebSockerManger，代表当前用户的ClaimsPrincipal对象的Session，等等。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">HttpContext</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name">IFeatureCollection</span> Features <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name">HttpRequest</span> Request <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name">HttpResponse</span> Response <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name">ConnectionInfo</span> Connection <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name">WebSocketManager</span> WebSockets <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name">ClaimsPrincipal</span> User <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name">IDictionary<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">,</span> <span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> Items <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name">IServiceProvider</span> RequestServices <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name">CancellationToken</span> RequestAborted <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> TraceIdentifier <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name">ISession</span> Session <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2>`,6),u={href:"https://www.cnblogs.com/RainingNight/p/httpcontext-in-asp-net-core.html",target:"_blank",rel:"noopener noreferrer"};function k(d,m){const a=e("ExternalLinkIcon");return p(),o("div",null,[r,n("blockquote",null,[n("p",null,[s("HttpContext解析："),n("a",u,[s("https://www.cnblogs.com/RainingNight/p/httpcontext-in-asp-net-core.html"),c(a)])])])])}const b=t(i,[["render",k],["__file","httpcontext.html.vue"]]),g=JSON.parse('{"path":"/dotnet/anquanhebiaoshi/shenfenrenzhengheshouquan/httpcontext.html","title":"HttpContext","lang":"zh-CN","frontmatter":{"title":"HttpContext","lang":"zh-CN","date":"2022-03-12T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNET"],"tag":["无"],"filename":"httpcontext","slug":"to3zp3","docsId":"45182640","description":"介绍 源码解答 HttpContext对象用来表示抽象的Http上下文，而HttpContext对象的核心又体现在用于描述请求的Request和描述响应的的Response的属性上。除此之外，它还包含一些与当前请求相关的其他上下文信息，比如描述当前HTTP连接的ConnectionInfo对象，控制器WebSocket的WebSockerManger，...","head":[["meta",{"property":"og:url","content":"https://azrng.gitee.io/kbms/kbms/dotnet/anquanhebiaoshi/shenfenrenzhengheshouquan/httpcontext.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"HttpContext"}],["meta",{"property":"og:description","content":"介绍 源码解答 HttpContext对象用来表示抽象的Http上下文，而HttpContext对象的核心又体现在用于描述请求的Request和描述响应的的Response的属性上。除此之外，它还包含一些与当前请求相关的其他上下文信息，比如描述当前HTTP连接的ConnectionInfo对象，控制器WebSocket的WebSockerManger，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-22T08:11:43.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"无"}],["meta",{"property":"article:published_time","content":"2022-03-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-22T08:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HttpContext\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-22T08:11:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"源码解答","slug":"源码解答","link":"#源码解答","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1697962303000,"updatedTime":1697962303000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":0.77,"words":230},"filePathRelative":"dotnet/anquanhebiaoshi/shenfenrenzhengheshouquan/httpcontext.md","localizedDate":"2022年3月12日","excerpt":"<h2>介绍</h2>\\n<h2>源码解答</h2>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code>context<span class=\\"token punctuation\\">.</span>User<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AddIdentities</span><span class=\\"token punctuation\\">(</span>claimIdentiies<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\ncontext<span class=\\"token punctuation\\">.</span>User <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">ClaimsPrincipal</span><span class=\\"token punctuation\\">(</span>claimsIdentity<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{b as comp,g as data};
